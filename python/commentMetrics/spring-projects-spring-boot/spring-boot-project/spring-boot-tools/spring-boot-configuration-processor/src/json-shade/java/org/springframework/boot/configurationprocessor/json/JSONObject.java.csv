# id;timestamp;commentText;codeText;commentWords;codeWords
JSONObject -> public int length();1515446271;Returns the number of name/value mappings in this object._@return the number of name/value mappings in this object;public int length() {_		return this.nameValuePairs.size()__	};returns,the,number,of,name,value,mappings,in,this,object,return,the,number,of,name,value,mappings,in,this,object;public,int,length,return,this,name,value,pairs,size
JSONObject -> public int length();1516008705;Returns the number of name/value mappings in this object._@return the number of name/value mappings in this object;public int length() {_		return this.nameValuePairs.size()__	};returns,the,number,of,name,value,mappings,in,this,object,return,the,number,of,name,value,mappings,in,this,object;public,int,length,return,this,name,value,pairs,size
JSONObject -> public int length();1516215803;Returns the number of name/value mappings in this object._@return the number of name/value mappings in this object;public int length() {_		return this.nameValuePairs.size()__	};returns,the,number,of,name,value,mappings,in,this,object,return,the,number,of,name,value,mappings,in,this,object;public,int,length,return,this,name,value,pairs,size
JSONObject -> public int length();1534432765;Returns the number of name/value mappings in this object._@return the number of name/value mappings in this object;public int length() {_		return this.nameValuePairs.size()__	};returns,the,number,of,name,value,mappings,in,this,object,return,the,number,of,name,value,mappings,in,this,object;public,int,length,return,this,name,value,pairs,size
JSONObject -> public int length();1536387643;Returns the number of name/value mappings in this object._@return the number of name/value mappings in this object;public int length() {_		return this.nameValuePairs.size()__	};returns,the,number,of,name,value,mappings,in,this,object,return,the,number,of,name,value,mappings,in,this,object;public,int,length,return,this,name,value,pairs,size
JSONObject -> public JSONObject optJSONObject(String name);1515446271;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONObject optJSONObject(String name) {_		Object object = opt(name)__		return object instanceof JSONObject ? (JSONObject) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonobject,opt,jsonobject,string,name,object,object,opt,name,return,object,instanceof,jsonobject,jsonobject,object,null
JSONObject -> public JSONObject optJSONObject(String name);1516008705;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONObject optJSONObject(String name) {_		Object object = opt(name)__		return object instanceof JSONObject ? (JSONObject) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonobject,opt,jsonobject,string,name,object,object,opt,name,return,object,instanceof,jsonobject,jsonobject,object,null
JSONObject -> public JSONObject optJSONObject(String name);1516215803;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONObject optJSONObject(String name) {_		Object object = opt(name)__		return object instanceof JSONObject ? (JSONObject) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonobject,opt,jsonobject,string,name,object,object,opt,name,return,object,instanceof,jsonobject,jsonobject,object,null
JSONObject -> public JSONObject optJSONObject(String name);1534432765;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONObject optJSONObject(String name) {_		Object object = opt(name)__		return object instanceof JSONObject ? (JSONObject) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonobject,opt,jsonobject,string,name,object,object,opt,name,return,object,instanceof,jsonobject,jsonobject,object,null
JSONObject -> public JSONObject optJSONObject(String name);1536387643;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONObject optJSONObject(String name) {_		Object object = opt(name)__		return object instanceof JSONObject ? (JSONObject) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonobject,opt,jsonobject,string,name,object,object,opt,name,return,object,instanceof,jsonobject,jsonobject,object,null
JSONObject -> public JSONArray getJSONArray(String name) throws JSONException;1515446271;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONArray}.;public JSONArray getJSONArray(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONArray) {_			return (JSONArray) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONArray")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonarray;public,jsonarray,get,jsonarray,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonarray,return,jsonarray,object,else,throw,json,type,mismatch,name,object,jsonarray
JSONObject -> public JSONArray getJSONArray(String name) throws JSONException;1516008705;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONArray}.;public JSONArray getJSONArray(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONArray) {_			return (JSONArray) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONArray")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonarray;public,jsonarray,get,jsonarray,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonarray,return,jsonarray,object,else,throw,json,type,mismatch,name,object,jsonarray
JSONObject -> public JSONArray getJSONArray(String name) throws JSONException;1516215803;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONArray}.;public JSONArray getJSONArray(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONArray) {_			return (JSONArray) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONArray")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonarray;public,jsonarray,get,jsonarray,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonarray,return,jsonarray,object,else,throw,json,type,mismatch,name,object,jsonarray
JSONObject -> public JSONArray getJSONArray(String name) throws JSONException;1534432765;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONArray}.;public JSONArray getJSONArray(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONArray) {_			return (JSONArray) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONArray")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonarray;public,jsonarray,get,jsonarray,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonarray,return,jsonarray,object,else,throw,json,type,mismatch,name,object,jsonarray
JSONObject -> public JSONArray getJSONArray(String name) throws JSONException;1536387643;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONArray}.;public JSONArray getJSONArray(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONArray) {_			return (JSONArray) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONArray")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonarray;public,jsonarray,get,jsonarray,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonarray,return,jsonarray,object,else,throw,json,type,mismatch,name,object,jsonarray
JSONObject -> public String optString(String name);1515446271;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns the empty string if no such mapping exists._@param name the name of the property_@return the value or an empty string;public String optString(String name) {_		return optString(name, "")__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,the,empty,string,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,an,empty,string;public,string,opt,string,string,name,return,opt,string,name
JSONObject -> public String optString(String name);1516008705;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns the empty string if no such mapping exists._@param name the name of the property_@return the value or an empty string;public String optString(String name) {_		return optString(name, "")__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,the,empty,string,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,an,empty,string;public,string,opt,string,string,name,return,opt,string,name
JSONObject -> public String optString(String name);1516215803;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns the empty string if no such mapping exists._@param name the name of the property_@return the value or an empty string;public String optString(String name) {_		return optString(name, "")__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,the,empty,string,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,an,empty,string;public,string,opt,string,string,name,return,opt,string,name
JSONObject -> public String optString(String name);1534432765;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns the empty string if no such mapping exists._@param name the name of the property_@return the value or an empty string;public String optString(String name) {_		return optString(name, "")__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,the,empty,string,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,an,empty,string;public,string,opt,string,string,name,return,opt,string,name
JSONObject -> public String optString(String name);1536387643;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns the empty string if no such mapping exists._@param name the name of the property_@return the value or an empty string;public String optString(String name) {_		return optString(name, "")__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,the,empty,string,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,an,empty,string;public,string,opt,string,string,name,return,opt,string,name
JSONObject -> public JSONArray optJSONArray(String name);1515446271;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONArray optJSONArray(String name) {_		Object object = opt(name)__		return object instanceof JSONArray ? (JSONArray) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonarray,opt,jsonarray,string,name,object,object,opt,name,return,object,instanceof,jsonarray,jsonarray,object,null
JSONObject -> public JSONArray optJSONArray(String name);1516008705;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONArray optJSONArray(String name) {_		Object object = opt(name)__		return object instanceof JSONArray ? (JSONArray) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonarray,opt,jsonarray,string,name,object,object,opt,name,return,object,instanceof,jsonarray,jsonarray,object,null
JSONObject -> public JSONArray optJSONArray(String name);1516215803;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONArray optJSONArray(String name) {_		Object object = opt(name)__		return object instanceof JSONArray ? (JSONArray) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonarray,opt,jsonarray,string,name,object,object,opt,name,return,object,instanceof,jsonarray,jsonarray,object,null
JSONObject -> public JSONArray optJSONArray(String name);1534432765;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONArray optJSONArray(String name) {_		Object object = opt(name)__		return object instanceof JSONArray ? (JSONArray) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonarray,opt,jsonarray,string,name,object,object,opt,name,return,object,instanceof,jsonarray,jsonarray,object,null
JSONObject -> public JSONArray optJSONArray(String name);1536387643;Returns the value mapped by {@code name} if it exists and is a {@code_JSONArray}. Returns null otherwise._@param name the name of the property_@return the value or {@code null};public JSONArray optJSONArray(String name) {_		Object object = opt(name)__		return object instanceof JSONArray ? (JSONArray) object : null__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonarray,returns,null,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,jsonarray,opt,jsonarray,string,name,object,object,opt,name,return,object,instanceof,jsonarray,jsonarray,object,null
JSONObject -> public double getDouble(String name) throws JSONException;1515446271;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double.__@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_double.;public double getDouble(String name) throws JSONException {_		Object object = get(name)__		Double result = JSON.toDouble(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "double")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,double;public,double,get,double,string,name,throws,jsonexception,object,object,get,name,double,result,json,to,double,object,if,result,null,throw,json,type,mismatch,name,object,double,return,result
JSONObject -> public double getDouble(String name) throws JSONException;1516008705;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double.__@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_double.;public double getDouble(String name) throws JSONException {_		Object object = get(name)__		Double result = JSON.toDouble(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "double")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,double;public,double,get,double,string,name,throws,jsonexception,object,object,get,name,double,result,json,to,double,object,if,result,null,throw,json,type,mismatch,name,object,double,return,result
JSONObject -> public double getDouble(String name) throws JSONException;1516215803;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double.__@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_double.;public double getDouble(String name) throws JSONException {_		Object object = get(name)__		Double result = JSON.toDouble(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "double")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,double;public,double,get,double,string,name,throws,jsonexception,object,object,get,name,double,result,json,to,double,object,if,result,null,throw,json,type,mismatch,name,object,double,return,result
JSONObject -> public double getDouble(String name) throws JSONException;1534432765;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double.__@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_double.;public double getDouble(String name) throws JSONException {_		Object object = get(name)__		Double result = JSON.toDouble(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "double")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,double;public,double,get,double,string,name,throws,jsonexception,object,object,get,name,double,result,json,to,double,object,if,result,null,throw,json,type,mismatch,name,object,double,return,result
JSONObject -> public double getDouble(String name) throws JSONException;1536387643;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double.__@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_double.;public double getDouble(String name) throws JSONException {_		Object object = get(name)__		Double result = JSON.toDouble(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "double")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,double;public,double,get,double,string,name,throws,jsonexception,object,object,get,name,double,result,json,to,double,object,if,result,null,throw,json,type,mismatch,name,object,double,return,result
JSONObject -> public static String quote(String data);1515446271;Encodes {@code data} as a JSON string. This applies quotes and any necessary_character escaping._@param data the string to encode. Null will be interpreted as an empty string._@return the quoted value;public static String quote(String data) {_		if (data == null) {_			return "\"\""__		}_		try {_			JSONStringer stringer = new JSONStringer()__			stringer.open(JSONStringer.Scope.NULL, "")__			stringer.value(data)__			stringer.close(JSONStringer.Scope.NULL, JSONStringer.Scope.NULL, "")__			return stringer.toString()__		}_		catch (JSONException e) {_			throw new AssertionError()__		}_	};encodes,code,data,as,a,json,string,this,applies,quotes,and,any,necessary,character,escaping,param,data,the,string,to,encode,null,will,be,interpreted,as,an,empty,string,return,the,quoted,value;public,static,string,quote,string,data,if,data,null,return,try,jsonstringer,stringer,new,jsonstringer,stringer,open,jsonstringer,scope,null,stringer,value,data,stringer,close,jsonstringer,scope,null,jsonstringer,scope,null,return,stringer,to,string,catch,jsonexception,e,throw,new,assertion,error
JSONObject -> public static String quote(String data);1516008705;Encodes {@code data} as a JSON string. This applies quotes and any necessary_character escaping._@param data the string to encode. Null will be interpreted as an empty string._@return the quoted value;public static String quote(String data) {_		if (data == null) {_			return "\"\""__		}_		try {_			JSONStringer stringer = new JSONStringer()__			stringer.open(JSONStringer.Scope.NULL, "")__			stringer.value(data)__			stringer.close(JSONStringer.Scope.NULL, JSONStringer.Scope.NULL, "")__			return stringer.toString()__		}_		catch (JSONException e) {_			throw new AssertionError()__		}_	};encodes,code,data,as,a,json,string,this,applies,quotes,and,any,necessary,character,escaping,param,data,the,string,to,encode,null,will,be,interpreted,as,an,empty,string,return,the,quoted,value;public,static,string,quote,string,data,if,data,null,return,try,jsonstringer,stringer,new,jsonstringer,stringer,open,jsonstringer,scope,null,stringer,value,data,stringer,close,jsonstringer,scope,null,jsonstringer,scope,null,return,stringer,to,string,catch,jsonexception,e,throw,new,assertion,error
JSONObject -> public static String quote(String data);1516215803;Encodes {@code data} as a JSON string. This applies quotes and any necessary_character escaping._@param data the string to encode. Null will be interpreted as an empty string._@return the quoted value;public static String quote(String data) {_		if (data == null) {_			return "\"\""__		}_		try {_			JSONStringer stringer = new JSONStringer()__			stringer.open(JSONStringer.Scope.NULL, "")__			stringer.value(data)__			stringer.close(JSONStringer.Scope.NULL, JSONStringer.Scope.NULL, "")__			return stringer.toString()__		}_		catch (JSONException e) {_			throw new AssertionError()__		}_	};encodes,code,data,as,a,json,string,this,applies,quotes,and,any,necessary,character,escaping,param,data,the,string,to,encode,null,will,be,interpreted,as,an,empty,string,return,the,quoted,value;public,static,string,quote,string,data,if,data,null,return,try,jsonstringer,stringer,new,jsonstringer,stringer,open,jsonstringer,scope,null,stringer,value,data,stringer,close,jsonstringer,scope,null,jsonstringer,scope,null,return,stringer,to,string,catch,jsonexception,e,throw,new,assertion,error
JSONObject -> public static String quote(String data);1534432765;Encodes {@code data} as a JSON string. This applies quotes and any necessary_character escaping._@param data the string to encode. Null will be interpreted as an empty string._@return the quoted value;public static String quote(String data) {_		if (data == null) {_			return "\"\""__		}_		try {_			JSONStringer stringer = new JSONStringer()__			stringer.open(JSONStringer.Scope.NULL, "")__			stringer.value(data)__			stringer.close(JSONStringer.Scope.NULL, JSONStringer.Scope.NULL, "")__			return stringer.toString()__		}_		catch (JSONException e) {_			throw new AssertionError()__		}_	};encodes,code,data,as,a,json,string,this,applies,quotes,and,any,necessary,character,escaping,param,data,the,string,to,encode,null,will,be,interpreted,as,an,empty,string,return,the,quoted,value;public,static,string,quote,string,data,if,data,null,return,try,jsonstringer,stringer,new,jsonstringer,stringer,open,jsonstringer,scope,null,stringer,value,data,stringer,close,jsonstringer,scope,null,jsonstringer,scope,null,return,stringer,to,string,catch,jsonexception,e,throw,new,assertion,error
JSONObject -> public static String quote(String data);1536387643;Encodes {@code data} as a JSON string. This applies quotes and any necessary_character escaping._@param data the string to encode. Null will be interpreted as an empty string._@return the quoted value;public static String quote(String data) {_		if (data == null) {_			return "\"\""__		}_		try {_			JSONStringer stringer = new JSONStringer()__			stringer.open(JSONStringer.Scope.NULL, "")__			stringer.value(data)__			stringer.close(JSONStringer.Scope.NULL, JSONStringer.Scope.NULL, "")__			return stringer.toString()__		}_		catch (JSONException e) {_			throw new AssertionError()__		}_	};encodes,code,data,as,a,json,string,this,applies,quotes,and,any,necessary,character,escaping,param,data,the,string,to,encode,null,will,be,interpreted,as,an,empty,string,return,the,quoted,value;public,static,string,quote,string,data,if,data,null,return,try,jsonstringer,stringer,new,jsonstringer,stringer,open,jsonstringer,scope,null,stringer,value,data,stringer,close,jsonstringer,scope,null,jsonstringer,scope,null,return,stringer,to,string,catch,jsonexception,e,throw,new,assertion,error
JSONObject -> public JSONArray toJSONArray(JSONArray names);1515446271;Returns an array with the values corresponding to {@code names}. The array contains_null for names that aren't mapped. This method returns null if {@code names} is_either null or empty._@param names the names of the properties_@return the array;public JSONArray toJSONArray(JSONArray names) {_		JSONArray result = new JSONArray()__		if (names == null) {_			return null__		}_		int length = names.length()__		if (length == 0) {_			return null__		}_		for (int i = 0_ i < length_ i++) {_			String name = JSON.toString(names.opt(i))__			result.put(opt(name))__		}_		return result__	};returns,an,array,with,the,values,corresponding,to,code,names,the,array,contains,null,for,names,that,aren,t,mapped,this,method,returns,null,if,code,names,is,either,null,or,empty,param,names,the,names,of,the,properties,return,the,array;public,jsonarray,to,jsonarray,jsonarray,names,jsonarray,result,new,jsonarray,if,names,null,return,null,int,length,names,length,if,length,0,return,null,for,int,i,0,i,length,i,string,name,json,to,string,names,opt,i,result,put,opt,name,return,result
JSONObject -> public JSONArray toJSONArray(JSONArray names);1516008705;Returns an array with the values corresponding to {@code names}. The array contains_null for names that aren't mapped. This method returns null if {@code names} is_either null or empty._@param names the names of the properties_@return the array;public JSONArray toJSONArray(JSONArray names) {_		JSONArray result = new JSONArray()__		if (names == null) {_			return null__		}_		int length = names.length()__		if (length == 0) {_			return null__		}_		for (int i = 0_ i < length_ i++) {_			String name = JSON.toString(names.opt(i))__			result.put(opt(name))__		}_		return result__	};returns,an,array,with,the,values,corresponding,to,code,names,the,array,contains,null,for,names,that,aren,t,mapped,this,method,returns,null,if,code,names,is,either,null,or,empty,param,names,the,names,of,the,properties,return,the,array;public,jsonarray,to,jsonarray,jsonarray,names,jsonarray,result,new,jsonarray,if,names,null,return,null,int,length,names,length,if,length,0,return,null,for,int,i,0,i,length,i,string,name,json,to,string,names,opt,i,result,put,opt,name,return,result
JSONObject -> public JSONArray toJSONArray(JSONArray names);1516215803;Returns an array with the values corresponding to {@code names}. The array contains_null for names that aren't mapped. This method returns null if {@code names} is_either null or empty._@param names the names of the properties_@return the array;public JSONArray toJSONArray(JSONArray names) {_		JSONArray result = new JSONArray()__		if (names == null) {_			return null__		}_		int length = names.length()__		if (length == 0) {_			return null__		}_		for (int i = 0_ i < length_ i++) {_			String name = JSON.toString(names.opt(i))__			result.put(opt(name))__		}_		return result__	};returns,an,array,with,the,values,corresponding,to,code,names,the,array,contains,null,for,names,that,aren,t,mapped,this,method,returns,null,if,code,names,is,either,null,or,empty,param,names,the,names,of,the,properties,return,the,array;public,jsonarray,to,jsonarray,jsonarray,names,jsonarray,result,new,jsonarray,if,names,null,return,null,int,length,names,length,if,length,0,return,null,for,int,i,0,i,length,i,string,name,json,to,string,names,opt,i,result,put,opt,name,return,result
JSONObject -> public JSONArray toJSONArray(JSONArray names);1534432765;Returns an array with the values corresponding to {@code names}. The array contains_null for names that aren't mapped. This method returns null if {@code names} is_either null or empty._@param names the names of the properties_@return the array;public JSONArray toJSONArray(JSONArray names) {_		JSONArray result = new JSONArray()__		if (names == null) {_			return null__		}_		int length = names.length()__		if (length == 0) {_			return null__		}_		for (int i = 0_ i < length_ i++) {_			String name = JSON.toString(names.opt(i))__			result.put(opt(name))__		}_		return result__	};returns,an,array,with,the,values,corresponding,to,code,names,the,array,contains,null,for,names,that,aren,t,mapped,this,method,returns,null,if,code,names,is,either,null,or,empty,param,names,the,names,of,the,properties,return,the,array;public,jsonarray,to,jsonarray,jsonarray,names,jsonarray,result,new,jsonarray,if,names,null,return,null,int,length,names,length,if,length,0,return,null,for,int,i,0,i,length,i,string,name,json,to,string,names,opt,i,result,put,opt,name,return,result
JSONObject -> public JSONArray toJSONArray(JSONArray names);1536387643;Returns an array with the values corresponding to {@code names}. The array contains_null for names that aren't mapped. This method returns null if {@code names} is_either null or empty._@param names the names of the properties_@return the array;public JSONArray toJSONArray(JSONArray names) {_		JSONArray result = new JSONArray()__		if (names == null) {_			return null__		}_		int length = names.length()__		if (length == 0) {_			return null__		}_		for (int i = 0_ i < length_ i++) {_			String name = JSON.toString(names.opt(i))__			result.put(opt(name))__		}_		return result__	};returns,an,array,with,the,values,corresponding,to,code,names,the,array,contains,null,for,names,that,aren,t,mapped,this,method,returns,null,if,code,names,is,either,null,or,empty,param,names,the,names,of,the,properties,return,the,array;public,jsonarray,to,jsonarray,jsonarray,names,jsonarray,result,new,jsonarray,if,names,null,return,null,int,length,names,length,if,length,0,return,null,for,int,i,0,i,length,i,string,name,json,to,string,names,opt,i,result,put,opt,name,return,result
JSONObject -> public long optLong(String name, long fallback);1515446271;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns {@code fallback} otherwise. Note that JSON represents_numbers as doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer_numbers via JSON._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public long optLong(String name, long fallback) {_		Object object = opt(name)__		Long result = JSON.toLong(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,code,fallback,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,long,opt,long,string,name,long,fallback,object,object,opt,name,long,result,json,to,long,object,return,result,null,result,fallback
JSONObject -> public long optLong(String name, long fallback);1516008705;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns {@code fallback} otherwise. Note that JSON represents_numbers as doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer_numbers via JSON._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public long optLong(String name, long fallback) {_		Object object = opt(name)__		Long result = JSON.toLong(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,code,fallback,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,long,opt,long,string,name,long,fallback,object,object,opt,name,long,result,json,to,long,object,return,result,null,result,fallback
JSONObject -> public long optLong(String name, long fallback);1516215803;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns {@code fallback} otherwise. Note that JSON represents_numbers as doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer_numbers via JSON._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public long optLong(String name, long fallback) {_		Object object = opt(name)__		Long result = JSON.toLong(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,code,fallback,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,long,opt,long,string,name,long,fallback,object,object,opt,name,long,result,json,to,long,object,return,result,null,result,fallback
JSONObject -> public long optLong(String name, long fallback);1534432765;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns {@code fallback} otherwise. Note that JSON represents_numbers as doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer_numbers via JSON._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public long optLong(String name, long fallback) {_		Object object = opt(name)__		Long result = JSON.toLong(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,code,fallback,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,long,opt,long,string,name,long,fallback,object,object,opt,name,long,result,json,to,long,object,return,result,null,result,fallback
JSONObject -> public long optLong(String name, long fallback);1536387643;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns {@code fallback} otherwise. Note that JSON represents_numbers as doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer_numbers via JSON._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public long optLong(String name, long fallback) {_		Object object = opt(name)__		Long result = JSON.toLong(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,code,fallback,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,long,opt,long,string,name,long,fallback,object,object,opt,name,long,result,json,to,long,object,return,result,null,result,fallback
JSONObject -> public Object opt(String name);1515446271;Returns the value mapped by {@code name}, or null if no such mapping exists._@param name the name of the property_@return the value or {@code null};public Object opt(String name) {_		return this.nameValuePairs.get(name)__	};returns,the,value,mapped,by,code,name,or,null,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,code,null;public,object,opt,string,name,return,this,name,value,pairs,get,name
JSONObject -> public Object opt(String name);1516008705;Returns the value mapped by {@code name}, or null if no such mapping exists._@param name the name of the property_@return the value or {@code null};public Object opt(String name) {_		return this.nameValuePairs.get(name)__	};returns,the,value,mapped,by,code,name,or,null,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,code,null;public,object,opt,string,name,return,this,name,value,pairs,get,name
JSONObject -> public Object opt(String name);1516215803;Returns the value mapped by {@code name}, or null if no such mapping exists._@param name the name of the property_@return the value or {@code null};public Object opt(String name) {_		return this.nameValuePairs.get(name)__	};returns,the,value,mapped,by,code,name,or,null,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,code,null;public,object,opt,string,name,return,this,name,value,pairs,get,name
JSONObject -> public Object opt(String name);1534432765;Returns the value mapped by {@code name}, or null if no such mapping exists._@param name the name of the property_@return the value or {@code null};public Object opt(String name) {_		return this.nameValuePairs.get(name)__	};returns,the,value,mapped,by,code,name,or,null,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,code,null;public,object,opt,string,name,return,this,name,value,pairs,get,name
JSONObject -> public Object opt(String name);1536387643;Returns the value mapped by {@code name}, or null if no such mapping exists._@param name the name of the property_@return the value or {@code null};public Object opt(String name) {_		return this.nameValuePairs.get(name)__	};returns,the,value,mapped,by,code,name,or,null,if,no,such,mapping,exists,param,name,the,name,of,the,property,return,the,value,or,code,null;public,object,opt,string,name,return,this,name,value,pairs,get,name
JSONObject -> public JSONObject();1515446271;Creates a {@code JSONObject} with no name/value mappings.;public JSONObject() {_		this.nameValuePairs = new HashMap<String, Object>()__	};creates,a,code,jsonobject,with,no,name,value,mappings;public,jsonobject,this,name,value,pairs,new,hash,map,string,object
JSONObject -> public JSONObject();1516008705;Creates a {@code JSONObject} with no name/value mappings.;public JSONObject() {_		this.nameValuePairs = new HashMap<String, Object>()__	};creates,a,code,jsonobject,with,no,name,value,mappings;public,jsonobject,this,name,value,pairs,new,hash,map,string,object
JSONObject -> public JSONObject();1516215803;Creates a {@code JSONObject} with no name/value mappings.;public JSONObject() {_		this.nameValuePairs = new HashMap<>()__	};creates,a,code,jsonobject,with,no,name,value,mappings;public,jsonobject,this,name,value,pairs,new,hash,map
JSONObject -> public JSONObject();1534432765;Creates a {@code JSONObject} with no name/value mappings.;public JSONObject() {_		this.nameValuePairs = new HashMap<>()__	};creates,a,code,jsonobject,with,no,name,value,mappings;public,jsonobject,this,name,value,pairs,new,hash,map
JSONObject -> public JSONObject();1536387643;Creates a {@code JSONObject} with no name/value mappings.;public JSONObject() {_		this.nameValuePairs = new LinkedHashMap<>()__	};creates,a,code,jsonobject,with,no,name,value,mappings;public,jsonobject,this,name,value,pairs,new,linked,hash,map
JSONObject -> @SuppressWarnings("rawtypes") 	public static Object wrap(Object o);1515446271;Wraps the given object if necessary._<p>_If the object is null or , returns {@link #NULL}. If the object is a_{@code JSONArray} or {@code JSONObject}, no wrapping is necessary. If the object is_{@code NULL}, no wrapping is necessary. If the object is an array or_{@code Collection}, returns an equivalent {@code JSONArray}. If the object is a_{@code Map}, returns an equivalent {@code JSONObject}. If the object is a primitive_wrapper type or {@code String}, returns the object. Otherwise if the object is from_a {@code java} package, returns the result of {@code toString}. If wrapping fails,_returns null._@param o the object to wrap_@return the wrapped object;@SuppressWarnings("rawtypes")_	public static Object wrap(Object o) {_		if (o == null) {_			return NULL__		}_		if (o instanceof JSONArray || o instanceof JSONObject) {_			return o__		}_		if (o.equals(NULL)) {_			return o__		}_		try {_			if (o instanceof Collection) {_				return new JSONArray((Collection) o)__			}_			else if (o.getClass().isArray()) {_				return new JSONArray(o)__			}_			if (o instanceof Map) {_				return new JSONObject((Map) o)__			}_			if (o instanceof Boolean || o instanceof Byte || o instanceof Character_					|| o instanceof Double || o instanceof Float || o instanceof Integer_					|| o instanceof Long || o instanceof Short || o instanceof String) {_				return o__			}_			if (o.getClass().getPackage().getName().startsWith("java.")) {_				return o.toString()__			}_		}_		catch (Exception ignored) {_		}_		return null__	};wraps,the,given,object,if,necessary,p,if,the,object,is,null,or,returns,link,null,if,the,object,is,a,code,jsonarray,or,code,jsonobject,no,wrapping,is,necessary,if,the,object,is,code,null,no,wrapping,is,necessary,if,the,object,is,an,array,or,code,collection,returns,an,equivalent,code,jsonarray,if,the,object,is,a,code,map,returns,an,equivalent,code,jsonobject,if,the,object,is,a,primitive,wrapper,type,or,code,string,returns,the,object,otherwise,if,the,object,is,from,a,code,java,package,returns,the,result,of,code,to,string,if,wrapping,fails,returns,null,param,o,the,object,to,wrap,return,the,wrapped,object;suppress,warnings,rawtypes,public,static,object,wrap,object,o,if,o,null,return,null,if,o,instanceof,jsonarray,o,instanceof,jsonobject,return,o,if,o,equals,null,return,o,try,if,o,instanceof,collection,return,new,jsonarray,collection,o,else,if,o,get,class,is,array,return,new,jsonarray,o,if,o,instanceof,map,return,new,jsonobject,map,o,if,o,instanceof,boolean,o,instanceof,byte,o,instanceof,character,o,instanceof,double,o,instanceof,float,o,instanceof,integer,o,instanceof,long,o,instanceof,short,o,instanceof,string,return,o,if,o,get,class,get,package,get,name,starts,with,java,return,o,to,string,catch,exception,ignored,return,null
JSONObject -> @SuppressWarnings("rawtypes") 	public static Object wrap(Object o);1516008705;Wraps the given object if necessary._<p>_If the object is null or , returns {@link #NULL}. If the object is a_{@code JSONArray} or {@code JSONObject}, no wrapping is necessary. If the object is_{@code NULL}, no wrapping is necessary. If the object is an array or_{@code Collection}, returns an equivalent {@code JSONArray}. If the object is a_{@code Map}, returns an equivalent {@code JSONObject}. If the object is a primitive_wrapper type or {@code String}, returns the object. Otherwise if the object is from_a {@code java} package, returns the result of {@code toString}. If wrapping fails,_returns null._@param o the object to wrap_@return the wrapped object;@SuppressWarnings("rawtypes")_	public static Object wrap(Object o) {_		if (o == null) {_			return NULL__		}_		if (o instanceof JSONArray || o instanceof JSONObject) {_			return o__		}_		if (o.equals(NULL)) {_			return o__		}_		try {_			if (o instanceof Collection) {_				return new JSONArray((Collection) o)__			}_			else if (o.getClass().isArray()) {_				return new JSONArray(o)__			}_			if (o instanceof Map) {_				return new JSONObject((Map) o)__			}_			if (o instanceof Boolean || o instanceof Byte || o instanceof Character_					|| o instanceof Double || o instanceof Float || o instanceof Integer_					|| o instanceof Long || o instanceof Short || o instanceof String) {_				return o__			}_			if (o.getClass().getPackage().getName().startsWith("java.")) {_				return o.toString()__			}_		}_		catch (Exception ignored) {_		}_		return null__	};wraps,the,given,object,if,necessary,p,if,the,object,is,null,or,returns,link,null,if,the,object,is,a,code,jsonarray,or,code,jsonobject,no,wrapping,is,necessary,if,the,object,is,code,null,no,wrapping,is,necessary,if,the,object,is,an,array,or,code,collection,returns,an,equivalent,code,jsonarray,if,the,object,is,a,code,map,returns,an,equivalent,code,jsonobject,if,the,object,is,a,primitive,wrapper,type,or,code,string,returns,the,object,otherwise,if,the,object,is,from,a,code,java,package,returns,the,result,of,code,to,string,if,wrapping,fails,returns,null,param,o,the,object,to,wrap,return,the,wrapped,object;suppress,warnings,rawtypes,public,static,object,wrap,object,o,if,o,null,return,null,if,o,instanceof,jsonarray,o,instanceof,jsonobject,return,o,if,o,equals,null,return,o,try,if,o,instanceof,collection,return,new,jsonarray,collection,o,else,if,o,get,class,is,array,return,new,jsonarray,o,if,o,instanceof,map,return,new,jsonobject,map,o,if,o,instanceof,boolean,o,instanceof,byte,o,instanceof,character,o,instanceof,double,o,instanceof,float,o,instanceof,integer,o,instanceof,long,o,instanceof,short,o,instanceof,string,return,o,if,o,get,class,get,package,get,name,starts,with,java,return,o,to,string,catch,exception,ignored,return,null
JSONObject -> @SuppressWarnings("rawtypes") 	public static Object wrap(Object o);1516215803;Wraps the given object if necessary._<p>_If the object is null or , returns {@link #NULL}. If the object is a_{@code JSONArray} or {@code JSONObject}, no wrapping is necessary. If the object is_{@code NULL}, no wrapping is necessary. If the object is an array or_{@code Collection}, returns an equivalent {@code JSONArray}. If the object is a_{@code Map}, returns an equivalent {@code JSONObject}. If the object is a primitive_wrapper type or {@code String}, returns the object. Otherwise if the object is from_a {@code java} package, returns the result of {@code toString}. If wrapping fails,_returns null._@param o the object to wrap_@return the wrapped object;@SuppressWarnings("rawtypes")_	public static Object wrap(Object o) {_		if (o == null) {_			return NULL__		}_		if (o instanceof JSONArray || o instanceof JSONObject) {_			return o__		}_		if (o.equals(NULL)) {_			return o__		}_		try {_			if (o instanceof Collection) {_				return new JSONArray((Collection) o)__			}_			else if (o.getClass().isArray()) {_				return new JSONArray(o)__			}_			if (o instanceof Map) {_				return new JSONObject((Map) o)__			}_			if (o instanceof Boolean || o instanceof Byte || o instanceof Character_					|| o instanceof Double || o instanceof Float || o instanceof Integer_					|| o instanceof Long || o instanceof Short || o instanceof String) {_				return o__			}_			if (o.getClass().getPackage().getName().startsWith("java.")) {_				return o.toString()__			}_		}_		catch (Exception ignored) {_		}_		return null__	};wraps,the,given,object,if,necessary,p,if,the,object,is,null,or,returns,link,null,if,the,object,is,a,code,jsonarray,or,code,jsonobject,no,wrapping,is,necessary,if,the,object,is,code,null,no,wrapping,is,necessary,if,the,object,is,an,array,or,code,collection,returns,an,equivalent,code,jsonarray,if,the,object,is,a,code,map,returns,an,equivalent,code,jsonobject,if,the,object,is,a,primitive,wrapper,type,or,code,string,returns,the,object,otherwise,if,the,object,is,from,a,code,java,package,returns,the,result,of,code,to,string,if,wrapping,fails,returns,null,param,o,the,object,to,wrap,return,the,wrapped,object;suppress,warnings,rawtypes,public,static,object,wrap,object,o,if,o,null,return,null,if,o,instanceof,jsonarray,o,instanceof,jsonobject,return,o,if,o,equals,null,return,o,try,if,o,instanceof,collection,return,new,jsonarray,collection,o,else,if,o,get,class,is,array,return,new,jsonarray,o,if,o,instanceof,map,return,new,jsonobject,map,o,if,o,instanceof,boolean,o,instanceof,byte,o,instanceof,character,o,instanceof,double,o,instanceof,float,o,instanceof,integer,o,instanceof,long,o,instanceof,short,o,instanceof,string,return,o,if,o,get,class,get,package,get,name,starts,with,java,return,o,to,string,catch,exception,ignored,return,null
JSONObject -> @SuppressWarnings("rawtypes") 	public static Object wrap(Object o);1534432765;Wraps the given object if necessary._<p>_If the object is null or , returns {@link #NULL}. If the object is a_{@code JSONArray} or {@code JSONObject}, no wrapping is necessary. If the object is_{@code NULL}, no wrapping is necessary. If the object is an array or_{@code Collection}, returns an equivalent {@code JSONArray}. If the object is a_{@code Map}, returns an equivalent {@code JSONObject}. If the object is a primitive_wrapper type or {@code String}, returns the object. Otherwise if the object is from_a {@code java} package, returns the result of {@code toString}. If wrapping fails,_returns null._@param o the object to wrap_@return the wrapped object;@SuppressWarnings("rawtypes")_	public static Object wrap(Object o) {_		if (o == null) {_			return NULL__		}_		if (o instanceof JSONArray || o instanceof JSONObject) {_			return o__		}_		if (o.equals(NULL)) {_			return o__		}_		try {_			if (o instanceof Collection) {_				return new JSONArray((Collection) o)__			}_			else if (o.getClass().isArray()) {_				return new JSONArray(o)__			}_			if (o instanceof Map) {_				return new JSONObject((Map) o)__			}_			if (o instanceof Boolean || o instanceof Byte || o instanceof Character_					|| o instanceof Double || o instanceof Float || o instanceof Integer_					|| o instanceof Long || o instanceof Short || o instanceof String) {_				return o__			}_			if (o.getClass().getPackage().getName().startsWith("java.")) {_				return o.toString()__			}_		}_		catch (Exception ignored) {_		}_		return null__	};wraps,the,given,object,if,necessary,p,if,the,object,is,null,or,returns,link,null,if,the,object,is,a,code,jsonarray,or,code,jsonobject,no,wrapping,is,necessary,if,the,object,is,code,null,no,wrapping,is,necessary,if,the,object,is,an,array,or,code,collection,returns,an,equivalent,code,jsonarray,if,the,object,is,a,code,map,returns,an,equivalent,code,jsonobject,if,the,object,is,a,primitive,wrapper,type,or,code,string,returns,the,object,otherwise,if,the,object,is,from,a,code,java,package,returns,the,result,of,code,to,string,if,wrapping,fails,returns,null,param,o,the,object,to,wrap,return,the,wrapped,object;suppress,warnings,rawtypes,public,static,object,wrap,object,o,if,o,null,return,null,if,o,instanceof,jsonarray,o,instanceof,jsonobject,return,o,if,o,equals,null,return,o,try,if,o,instanceof,collection,return,new,jsonarray,collection,o,else,if,o,get,class,is,array,return,new,jsonarray,o,if,o,instanceof,map,return,new,jsonobject,map,o,if,o,instanceof,boolean,o,instanceof,byte,o,instanceof,character,o,instanceof,double,o,instanceof,float,o,instanceof,integer,o,instanceof,long,o,instanceof,short,o,instanceof,string,return,o,if,o,get,class,get,package,get,name,starts,with,java,return,o,to,string,catch,exception,ignored,return,null
JSONObject -> @SuppressWarnings("rawtypes") 	public static Object wrap(Object o);1536387643;Wraps the given object if necessary._<p>_If the object is null or , returns {@link #NULL}. If the object is a_{@code JSONArray} or {@code JSONObject}, no wrapping is necessary. If the object is_{@code NULL}, no wrapping is necessary. If the object is an array or_{@code Collection}, returns an equivalent {@code JSONArray}. If the object is a_{@code Map}, returns an equivalent {@code JSONObject}. If the object is a primitive_wrapper type or {@code String}, returns the object. Otherwise if the object is from_a {@code java} package, returns the result of {@code toString}. If wrapping fails,_returns null._@param o the object to wrap_@return the wrapped object;@SuppressWarnings("rawtypes")_	public static Object wrap(Object o) {_		if (o == null) {_			return NULL__		}_		if (o instanceof JSONArray || o instanceof JSONObject) {_			return o__		}_		if (o.equals(NULL)) {_			return o__		}_		try {_			if (o instanceof Collection) {_				return new JSONArray((Collection) o)__			}_			else if (o.getClass().isArray()) {_				return new JSONArray(o)__			}_			if (o instanceof Map) {_				return new JSONObject((Map) o)__			}_			if (o instanceof Boolean || o instanceof Byte || o instanceof Character_					|| o instanceof Double || o instanceof Float || o instanceof Integer_					|| o instanceof Long || o instanceof Short || o instanceof String) {_				return o__			}_			if (o.getClass().getPackage().getName().startsWith("java.")) {_				return o.toString()__			}_		}_		catch (Exception ignored) {_		}_		return null__	};wraps,the,given,object,if,necessary,p,if,the,object,is,null,or,returns,link,null,if,the,object,is,a,code,jsonarray,or,code,jsonobject,no,wrapping,is,necessary,if,the,object,is,code,null,no,wrapping,is,necessary,if,the,object,is,an,array,or,code,collection,returns,an,equivalent,code,jsonarray,if,the,object,is,a,code,map,returns,an,equivalent,code,jsonobject,if,the,object,is,a,primitive,wrapper,type,or,code,string,returns,the,object,otherwise,if,the,object,is,from,a,code,java,package,returns,the,result,of,code,to,string,if,wrapping,fails,returns,null,param,o,the,object,to,wrap,return,the,wrapped,object;suppress,warnings,rawtypes,public,static,object,wrap,object,o,if,o,null,return,null,if,o,instanceof,jsonarray,o,instanceof,jsonobject,return,o,if,o,equals,null,return,o,try,if,o,instanceof,collection,return,new,jsonarray,collection,o,else,if,o,get,class,is,array,return,new,jsonarray,o,if,o,instanceof,map,return,new,jsonobject,map,o,if,o,instanceof,boolean,o,instanceof,byte,o,instanceof,character,o,instanceof,double,o,instanceof,float,o,instanceof,integer,o,instanceof,long,o,instanceof,short,o,instanceof,string,return,o,if,o,get,class,get,package,get,name,starts,with,java,return,o,to,string,catch,exception,ignored,return,null
JSONObject -> public double optDouble(String name, double fallback);1515446271;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public double optDouble(String name, double fallback) {_		Object object = opt(name)__		Double result = JSON.toDouble(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,double,opt,double,string,name,double,fallback,object,object,opt,name,double,result,json,to,double,object,return,result,null,result,fallback
JSONObject -> public double optDouble(String name, double fallback);1516008705;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public double optDouble(String name, double fallback) {_		Object object = opt(name)__		Double result = JSON.toDouble(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,double,opt,double,string,name,double,fallback,object,object,opt,name,double,result,json,to,double,object,return,result,null,result,fallback
JSONObject -> public double optDouble(String name, double fallback);1516215803;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public double optDouble(String name, double fallback) {_		Object object = opt(name)__		Double result = JSON.toDouble(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,double,opt,double,string,name,double,fallback,object,object,opt,name,double,result,json,to,double,object,return,result,null,result,fallback
JSONObject -> public double optDouble(String name, double fallback);1534432765;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public double optDouble(String name, double fallback) {_		Object object = opt(name)__		Double result = JSON.toDouble(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,double,opt,double,string,name,double,fallback,object,object,opt,name,double,result,json,to,double,object,return,result,null,result,fallback
JSONObject -> public double optDouble(String name, double fallback);1536387643;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public double optDouble(String name, double fallback) {_		Object object = opt(name)__		Double result = JSON.toDouble(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,double,opt,double,string,name,double,fallback,object,object,opt,name,double,result,json,to,double,object,return,result,null,result,fallback
JSONObject -> public String toString(int indentSpaces) throws JSONException;1515446271;Encodes this object as a human readable JSON string for debugging, such as: <pre>__"query": "Pizza",_"locations": [_94043,_90210__}</pre>_@param indentSpaces the number of spaces to indent for each level of nesting._@return a string representation of the object._@throws JSONException if an error occurs;public String toString(int indentSpaces) throws JSONException {_		JSONStringer stringer = new JSONStringer(indentSpaces)__		writeTo(stringer)__		return stringer.toString()__	};encodes,this,object,as,a,human,readable,json,string,for,debugging,such,as,pre,query,pizza,locations,94043,90210,pre,param,indent,spaces,the,number,of,spaces,to,indent,for,each,level,of,nesting,return,a,string,representation,of,the,object,throws,jsonexception,if,an,error,occurs;public,string,to,string,int,indent,spaces,throws,jsonexception,jsonstringer,stringer,new,jsonstringer,indent,spaces,write,to,stringer,return,stringer,to,string
JSONObject -> public String toString(int indentSpaces) throws JSONException;1516008705;Encodes this object as a human readable JSON string for debugging, such as: <pre>__"query": "Pizza",_"locations": [_94043,_90210__}</pre>_@param indentSpaces the number of spaces to indent for each level of nesting._@return a string representation of the object._@throws JSONException if an error occurs;public String toString(int indentSpaces) throws JSONException {_		JSONStringer stringer = new JSONStringer(indentSpaces)__		writeTo(stringer)__		return stringer.toString()__	};encodes,this,object,as,a,human,readable,json,string,for,debugging,such,as,pre,query,pizza,locations,94043,90210,pre,param,indent,spaces,the,number,of,spaces,to,indent,for,each,level,of,nesting,return,a,string,representation,of,the,object,throws,jsonexception,if,an,error,occurs;public,string,to,string,int,indent,spaces,throws,jsonexception,jsonstringer,stringer,new,jsonstringer,indent,spaces,write,to,stringer,return,stringer,to,string
JSONObject -> public String toString(int indentSpaces) throws JSONException;1516215803;Encodes this object as a human readable JSON string for debugging, such as: <pre>__"query": "Pizza",_"locations": [_94043,_90210__}</pre>_@param indentSpaces the number of spaces to indent for each level of nesting._@return a string representation of the object._@throws JSONException if an error occurs;public String toString(int indentSpaces) throws JSONException {_		JSONStringer stringer = new JSONStringer(indentSpaces)__		writeTo(stringer)__		return stringer.toString()__	};encodes,this,object,as,a,human,readable,json,string,for,debugging,such,as,pre,query,pizza,locations,94043,90210,pre,param,indent,spaces,the,number,of,spaces,to,indent,for,each,level,of,nesting,return,a,string,representation,of,the,object,throws,jsonexception,if,an,error,occurs;public,string,to,string,int,indent,spaces,throws,jsonexception,jsonstringer,stringer,new,jsonstringer,indent,spaces,write,to,stringer,return,stringer,to,string
JSONObject -> public String toString(int indentSpaces) throws JSONException;1534432765;Encodes this object as a human readable JSON string for debugging, such as: <pre>__"query": "Pizza",_"locations": [_94043,_90210__}</pre>_@param indentSpaces the number of spaces to indent for each level of nesting._@return a string representation of the object._@throws JSONException if an error occurs;public String toString(int indentSpaces) throws JSONException {_		JSONStringer stringer = new JSONStringer(indentSpaces)__		writeTo(stringer)__		return stringer.toString()__	};encodes,this,object,as,a,human,readable,json,string,for,debugging,such,as,pre,query,pizza,locations,94043,90210,pre,param,indent,spaces,the,number,of,spaces,to,indent,for,each,level,of,nesting,return,a,string,representation,of,the,object,throws,jsonexception,if,an,error,occurs;public,string,to,string,int,indent,spaces,throws,jsonexception,jsonstringer,stringer,new,jsonstringer,indent,spaces,write,to,stringer,return,stringer,to,string
JSONObject -> public String toString(int indentSpaces) throws JSONException;1536387643;Encodes this object as a human readable JSON string for debugging, such as: <pre>__"query": "Pizza",_"locations": [_94043,_90210__}</pre>_@param indentSpaces the number of spaces to indent for each level of nesting._@return a string representation of the object._@throws JSONException if an error occurs;public String toString(int indentSpaces) throws JSONException {_		JSONStringer stringer = new JSONStringer(indentSpaces)__		writeTo(stringer)__		return stringer.toString()__	};encodes,this,object,as,a,human,readable,json,string,for,debugging,such,as,pre,query,pizza,locations,94043,90210,pre,param,indent,spaces,the,number,of,spaces,to,indent,for,each,level,of,nesting,return,a,string,representation,of,the,object,throws,jsonexception,if,an,error,occurs;public,string,to,string,int,indent,spaces,throws,jsonexception,jsonstringer,stringer,new,jsonstringer,indent,spaces,write,to,stringer,return,stringer,to,string
JSONObject -> public int optInt(String name, int fallback);1515446271;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public int optInt(String name, int fallback) {_		Object object = opt(name)__		Integer result = JSON.toInteger(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,int,opt,int,string,name,int,fallback,object,object,opt,name,integer,result,json,to,integer,object,return,result,null,result,fallback
JSONObject -> public int optInt(String name, int fallback);1516008705;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public int optInt(String name, int fallback) {_		Object object = opt(name)__		Integer result = JSON.toInteger(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,int,opt,int,string,name,int,fallback,object,object,opt,name,integer,result,json,to,integer,object,return,result,null,result,fallback
JSONObject -> public int optInt(String name, int fallback);1516215803;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public int optInt(String name, int fallback) {_		Object object = opt(name)__		Integer result = JSON.toInteger(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,int,opt,int,string,name,int,fallback,object,object,opt,name,integer,result,json,to,integer,object,return,result,null,result,fallback
JSONObject -> public int optInt(String name, int fallback);1534432765;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public int optInt(String name, int fallback) {_		Object object = opt(name)__		Integer result = JSON.toInteger(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,int,opt,int,string,name,int,fallback,object,object,opt,name,integer,result,json,to,integer,object,return,result,null,result,fallback
JSONObject -> public int optInt(String name, int fallback);1536387643;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public int optInt(String name, int fallback) {_		Object object = opt(name)__		Integer result = JSON.toInteger(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,int,opt,int,string,name,int,fallback,object,object,opt,name,integer,result,json,to,integer,object,return,result,null,result,fallback
JSONObject -> @SuppressWarnings("rawtypes") 	public Iterator keys();1515446271;Returns an iterator of the {@code String} names in this object. The returned_iterator supports {@link Iterator#remove() remove}, which will remove the_corresponding mapping from this object. If this object is modified after the_iterator is returned, the iterator's behavior is undefined. The order of the keys_is undefined._@return the keys;@SuppressWarnings("rawtypes")_	public Iterator keys() {_		return this.nameValuePairs.keySet().iterator()__	};returns,an,iterator,of,the,code,string,names,in,this,object,the,returned,iterator,supports,link,iterator,remove,remove,which,will,remove,the,corresponding,mapping,from,this,object,if,this,object,is,modified,after,the,iterator,is,returned,the,iterator,s,behavior,is,undefined,the,order,of,the,keys,is,undefined,return,the,keys;suppress,warnings,rawtypes,public,iterator,keys,return,this,name,value,pairs,key,set,iterator
JSONObject -> @SuppressWarnings("rawtypes") 	public Iterator keys();1516008705;Returns an iterator of the {@code String} names in this object. The returned_iterator supports {@link Iterator#remove() remove}, which will remove the_corresponding mapping from this object. If this object is modified after the_iterator is returned, the iterator's behavior is undefined. The order of the keys_is undefined._@return the keys;@SuppressWarnings("rawtypes")_	public Iterator keys() {_		return this.nameValuePairs.keySet().iterator()__	};returns,an,iterator,of,the,code,string,names,in,this,object,the,returned,iterator,supports,link,iterator,remove,remove,which,will,remove,the,corresponding,mapping,from,this,object,if,this,object,is,modified,after,the,iterator,is,returned,the,iterator,s,behavior,is,undefined,the,order,of,the,keys,is,undefined,return,the,keys;suppress,warnings,rawtypes,public,iterator,keys,return,this,name,value,pairs,key,set,iterator
JSONObject -> @SuppressWarnings("rawtypes") 	public Iterator keys();1516215803;Returns an iterator of the {@code String} names in this object. The returned_iterator supports {@link Iterator#remove() remove}, which will remove the_corresponding mapping from this object. If this object is modified after the_iterator is returned, the iterator's behavior is undefined. The order of the keys_is undefined._@return the keys;@SuppressWarnings("rawtypes")_	public Iterator keys() {_		return this.nameValuePairs.keySet().iterator()__	};returns,an,iterator,of,the,code,string,names,in,this,object,the,returned,iterator,supports,link,iterator,remove,remove,which,will,remove,the,corresponding,mapping,from,this,object,if,this,object,is,modified,after,the,iterator,is,returned,the,iterator,s,behavior,is,undefined,the,order,of,the,keys,is,undefined,return,the,keys;suppress,warnings,rawtypes,public,iterator,keys,return,this,name,value,pairs,key,set,iterator
JSONObject -> @SuppressWarnings("rawtypes") 	public Iterator keys();1534432765;Returns an iterator of the {@code String} names in this object. The returned_iterator supports {@link Iterator#remove() remove}, which will remove the_corresponding mapping from this object. If this object is modified after the_iterator is returned, the iterator's behavior is undefined. The order of the keys_is undefined._@return the keys;@SuppressWarnings("rawtypes")_	public Iterator keys() {_		return this.nameValuePairs.keySet().iterator()__	};returns,an,iterator,of,the,code,string,names,in,this,object,the,returned,iterator,supports,link,iterator,remove,remove,which,will,remove,the,corresponding,mapping,from,this,object,if,this,object,is,modified,after,the,iterator,is,returned,the,iterator,s,behavior,is,undefined,the,order,of,the,keys,is,undefined,return,the,keys;suppress,warnings,rawtypes,public,iterator,keys,return,this,name,value,pairs,key,set,iterator
JSONObject -> @SuppressWarnings("rawtypes") 	public Iterator keys();1536387643;Returns an iterator of the {@code String} names in this object. The returned_iterator supports {@link Iterator#remove() remove}, which will remove the_corresponding mapping from this object. If this object is modified after the_iterator is returned, the iterator's behavior is undefined. The order of the keys_is undefined._@return the keys;@SuppressWarnings("rawtypes")_	public Iterator keys() {_		return this.nameValuePairs.keySet().iterator()__	};returns,an,iterator,of,the,code,string,names,in,this,object,the,returned,iterator,supports,link,iterator,remove,remove,which,will,remove,the,corresponding,mapping,from,this,object,if,this,object,is,modified,after,the,iterator,is,returned,the,iterator,s,behavior,is,undefined,the,order,of,the,keys,is,undefined,return,the,keys;suppress,warnings,rawtypes,public,iterator,keys,return,this,name,value,pairs,key,set,iterator
JSONObject -> public int optInt(String name);1515446271;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns 0 otherwise._@param name the name of the property_@return the value of {@code 0};public int optInt(String name) {_		return optInt(name, 0)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,0,otherwise,param,name,the,name,of,the,property,return,the,value,of,code,0;public,int,opt,int,string,name,return,opt,int,name,0
JSONObject -> public int optInt(String name);1516008705;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns 0 otherwise._@param name the name of the property_@return the value of {@code 0};public int optInt(String name) {_		return optInt(name, 0)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,0,otherwise,param,name,the,name,of,the,property,return,the,value,of,code,0;public,int,opt,int,string,name,return,opt,int,name,0
JSONObject -> public int optInt(String name);1516215803;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns 0 otherwise._@param name the name of the property_@return the value of {@code 0};public int optInt(String name) {_		return optInt(name, 0)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,0,otherwise,param,name,the,name,of,the,property,return,the,value,of,code,0;public,int,opt,int,string,name,return,opt,int,name,0
JSONObject -> public int optInt(String name);1534432765;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns 0 otherwise._@param name the name of the property_@return the value of {@code 0};public int optInt(String name) {_		return optInt(name, 0)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,0,otherwise,param,name,the,name,of,the,property,return,the,value,of,code,0;public,int,opt,int,string,name,return,opt,int,name,0
JSONObject -> public int optInt(String name);1536387643;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int. Returns 0 otherwise._@param name the name of the property_@return the value of {@code 0};public int optInt(String name) {_		return optInt(name, 0)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,returns,0,otherwise,param,name,the,name,of,the,property,return,the,value,of,code,0;public,int,opt,int,string,name,return,opt,int,name,0
JSONObject -> public int getInt(String name) throws JSONException;1515446271;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to an int.;public int getInt(String name) throws JSONException {_		Object object = get(name)__		Integer result = JSON.toInteger(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "int")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,an,int;public,int,get,int,string,name,throws,jsonexception,object,object,get,name,integer,result,json,to,integer,object,if,result,null,throw,json,type,mismatch,name,object,int,return,result
JSONObject -> public int getInt(String name) throws JSONException;1516008705;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to an int.;public int getInt(String name) throws JSONException {_		Object object = get(name)__		Integer result = JSON.toInteger(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "int")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,an,int;public,int,get,int,string,name,throws,jsonexception,object,object,get,name,integer,result,json,to,integer,object,if,result,null,throw,json,type,mismatch,name,object,int,return,result
JSONObject -> public int getInt(String name) throws JSONException;1516215803;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to an int.;public int getInt(String name) throws JSONException {_		Object object = get(name)__		Integer result = JSON.toInteger(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "int")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,an,int;public,int,get,int,string,name,throws,jsonexception,object,object,get,name,integer,result,json,to,integer,object,if,result,null,throw,json,type,mismatch,name,object,int,return,result
JSONObject -> public int getInt(String name) throws JSONException;1534432765;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to an int.;public int getInt(String name) throws JSONException {_		Object object = get(name)__		Integer result = JSON.toInteger(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "int")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,an,int;public,int,get,int,string,name,throws,jsonexception,object,object,get,name,integer,result,json,to,integer,object,if,result,null,throw,json,type,mismatch,name,object,int,return,result
JSONObject -> public int getInt(String name) throws JSONException;1536387643;Returns the value mapped by {@code name} if it exists and is an int or can be_coerced to an int._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to an int.;public int getInt(String name) throws JSONException {_		Object object = get(name)__		Integer result = JSON.toInteger(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "int")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,an,int,or,can,be,coerced,to,an,int,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,an,int;public,int,get,int,string,name,throws,jsonexception,object,object,get,name,integer,result,json,to,integer,object,if,result,null,throw,json,type,mismatch,name,object,int,return,result
JSONObject -> public JSONObject(JSONObject copyFrom, String[] names) throws JSONException;1515446271;Creates a new {@code JSONObject} by copying mappings for the listed names from the_given object. Names that aren't present in {@code copyFrom} will be skipped._@param copyFrom the source_@param names the property names_@throws JSONException if an error occurs;public JSONObject(JSONObject copyFrom, String[] names) throws JSONException {_		this()__		for (String name : names) {_			Object value = copyFrom.opt(name)__			if (value != null) {_				this.nameValuePairs.put(name, value)__			}_		}_	};creates,a,new,code,jsonobject,by,copying,mappings,for,the,listed,names,from,the,given,object,names,that,aren,t,present,in,code,copy,from,will,be,skipped,param,copy,from,the,source,param,names,the,property,names,throws,jsonexception,if,an,error,occurs;public,jsonobject,jsonobject,copy,from,string,names,throws,jsonexception,this,for,string,name,names,object,value,copy,from,opt,name,if,value,null,this,name,value,pairs,put,name,value
JSONObject -> public JSONObject(JSONObject copyFrom, String[] names) throws JSONException;1516008705;Creates a new {@code JSONObject} by copying mappings for the listed names from the_given object. Names that aren't present in {@code copyFrom} will be skipped._@param copyFrom the source_@param names the property names_@throws JSONException if an error occurs;public JSONObject(JSONObject copyFrom, String[] names) throws JSONException {_		this()__		for (String name : names) {_			Object value = copyFrom.opt(name)__			if (value != null) {_				this.nameValuePairs.put(name, value)__			}_		}_	};creates,a,new,code,jsonobject,by,copying,mappings,for,the,listed,names,from,the,given,object,names,that,aren,t,present,in,code,copy,from,will,be,skipped,param,copy,from,the,source,param,names,the,property,names,throws,jsonexception,if,an,error,occurs;public,jsonobject,jsonobject,copy,from,string,names,throws,jsonexception,this,for,string,name,names,object,value,copy,from,opt,name,if,value,null,this,name,value,pairs,put,name,value
JSONObject -> public JSONObject(JSONObject copyFrom, String[] names) throws JSONException;1516215803;Creates a new {@code JSONObject} by copying mappings for the listed names from the_given object. Names that aren't present in {@code copyFrom} will be skipped._@param copyFrom the source_@param names the property names_@throws JSONException if an error occurs;public JSONObject(JSONObject copyFrom, String[] names) throws JSONException {_		this()__		for (String name : names) {_			Object value = copyFrom.opt(name)__			if (value != null) {_				this.nameValuePairs.put(name, value)__			}_		}_	};creates,a,new,code,jsonobject,by,copying,mappings,for,the,listed,names,from,the,given,object,names,that,aren,t,present,in,code,copy,from,will,be,skipped,param,copy,from,the,source,param,names,the,property,names,throws,jsonexception,if,an,error,occurs;public,jsonobject,jsonobject,copy,from,string,names,throws,jsonexception,this,for,string,name,names,object,value,copy,from,opt,name,if,value,null,this,name,value,pairs,put,name,value
JSONObject -> public JSONObject(JSONObject copyFrom, String[] names) throws JSONException;1534432765;Creates a new {@code JSONObject} by copying mappings for the listed names from the_given object. Names that aren't present in {@code copyFrom} will be skipped._@param copyFrom the source_@param names the property names_@throws JSONException if an error occurs;public JSONObject(JSONObject copyFrom, String[] names) throws JSONException {_		this()__		for (String name : names) {_			Object value = copyFrom.opt(name)__			if (value != null) {_				this.nameValuePairs.put(name, value)__			}_		}_	};creates,a,new,code,jsonobject,by,copying,mappings,for,the,listed,names,from,the,given,object,names,that,aren,t,present,in,code,copy,from,will,be,skipped,param,copy,from,the,source,param,names,the,property,names,throws,jsonexception,if,an,error,occurs;public,jsonobject,jsonobject,copy,from,string,names,throws,jsonexception,this,for,string,name,names,object,value,copy,from,opt,name,if,value,null,this,name,value,pairs,put,name,value
JSONObject -> public JSONObject(JSONObject copyFrom, String[] names) throws JSONException;1536387643;Creates a new {@code JSONObject} by copying mappings for the listed names from the_given object. Names that aren't present in {@code copyFrom} will be skipped._@param copyFrom the source_@param names the property names_@throws JSONException if an error occurs;public JSONObject(JSONObject copyFrom, String[] names) throws JSONException {_		this()__		for (String name : names) {_			Object value = copyFrom.opt(name)__			if (value != null) {_				this.nameValuePairs.put(name, value)__			}_		}_	};creates,a,new,code,jsonobject,by,copying,mappings,for,the,listed,names,from,the,given,object,names,that,aren,t,present,in,code,copy,from,will,be,skipped,param,copy,from,the,source,param,names,the,property,names,throws,jsonexception,if,an,error,occurs;public,jsonobject,jsonobject,copy,from,string,names,throws,jsonexception,this,for,string,name,names,object,value,copy,from,opt,name,if,value,null,this,name,value,pairs,put,name,value
JSONObject -> public JSONObject(JSONTokener readFrom) throws JSONException;1515446271;Creates a new {@code JSONObject} with name/value mappings from the next object in_the tokener._@param readFrom a tokener whose nextValue() method will yield a {@code JSONObject}._@throws JSONException if the parse fails or doesn't yield a {@code JSONObject}.;public JSONObject(JSONTokener readFrom) throws JSONException {_		_		Object object = readFrom.nextValue()__		if (object instanceof JSONObject) {_			this.nameValuePairs = ((JSONObject) object).nameValuePairs__		}_		else {_			throw JSON.typeMismatch(object, "JSONObject")__		}_	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,next,object,in,the,tokener,param,read,from,a,tokener,whose,next,value,method,will,yield,a,code,jsonobject,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,jsontokener,read,from,throws,jsonexception,object,object,read,from,next,value,if,object,instanceof,jsonobject,this,name,value,pairs,jsonobject,object,name,value,pairs,else,throw,json,type,mismatch,object,jsonobject
JSONObject -> public JSONObject(JSONTokener readFrom) throws JSONException;1516008705;Creates a new {@code JSONObject} with name/value mappings from the next object in_the tokener._@param readFrom a tokener whose nextValue() method will yield a {@code JSONObject}._@throws JSONException if the parse fails or doesn't yield a {@code JSONObject}.;public JSONObject(JSONTokener readFrom) throws JSONException {_		_		Object object = readFrom.nextValue()__		if (object instanceof JSONObject) {_			this.nameValuePairs = ((JSONObject) object).nameValuePairs__		}_		else {_			throw JSON.typeMismatch(object, "JSONObject")__		}_	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,next,object,in,the,tokener,param,read,from,a,tokener,whose,next,value,method,will,yield,a,code,jsonobject,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,jsontokener,read,from,throws,jsonexception,object,object,read,from,next,value,if,object,instanceof,jsonobject,this,name,value,pairs,jsonobject,object,name,value,pairs,else,throw,json,type,mismatch,object,jsonobject
JSONObject -> public JSONObject(JSONTokener readFrom) throws JSONException;1516215803;Creates a new {@code JSONObject} with name/value mappings from the next object in_the tokener._@param readFrom a tokener whose nextValue() method will yield a {@code JSONObject}._@throws JSONException if the parse fails or doesn't yield a {@code JSONObject}.;public JSONObject(JSONTokener readFrom) throws JSONException {_		_		Object object = readFrom.nextValue()__		if (object instanceof JSONObject) {_			this.nameValuePairs = ((JSONObject) object).nameValuePairs__		}_		else {_			throw JSON.typeMismatch(object, "JSONObject")__		}_	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,next,object,in,the,tokener,param,read,from,a,tokener,whose,next,value,method,will,yield,a,code,jsonobject,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,jsontokener,read,from,throws,jsonexception,object,object,read,from,next,value,if,object,instanceof,jsonobject,this,name,value,pairs,jsonobject,object,name,value,pairs,else,throw,json,type,mismatch,object,jsonobject
JSONObject -> public JSONObject(JSONTokener readFrom) throws JSONException;1534432765;Creates a new {@code JSONObject} with name/value mappings from the next object in_the tokener._@param readFrom a tokener whose nextValue() method will yield a {@code JSONObject}._@throws JSONException if the parse fails or doesn't yield a {@code JSONObject}.;public JSONObject(JSONTokener readFrom) throws JSONException {_		_		Object object = readFrom.nextValue()__		if (object instanceof JSONObject) {_			this.nameValuePairs = ((JSONObject) object).nameValuePairs__		}_		else {_			throw JSON.typeMismatch(object, "JSONObject")__		}_	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,next,object,in,the,tokener,param,read,from,a,tokener,whose,next,value,method,will,yield,a,code,jsonobject,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,jsontokener,read,from,throws,jsonexception,object,object,read,from,next,value,if,object,instanceof,jsonobject,this,name,value,pairs,jsonobject,object,name,value,pairs,else,throw,json,type,mismatch,object,jsonobject
JSONObject -> public JSONObject(JSONTokener readFrom) throws JSONException;1536387643;Creates a new {@code JSONObject} with name/value mappings from the next object in_the tokener._@param readFrom a tokener whose nextValue() method will yield a {@code JSONObject}._@throws JSONException if the parse fails or doesn't yield a {@code JSONObject}.;public JSONObject(JSONTokener readFrom) throws JSONException {_		_		Object object = readFrom.nextValue()__		if (object instanceof JSONObject) {_			this.nameValuePairs = ((JSONObject) object).nameValuePairs__		}_		else {_			throw JSON.typeMismatch(object, "JSONObject")__		}_	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,next,object,in,the,tokener,param,read,from,a,tokener,whose,next,value,method,will,yield,a,code,jsonobject,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,jsontokener,read,from,throws,jsonexception,object,object,read,from,next,value,if,object,instanceof,jsonobject,this,name,value,pairs,jsonobject,object,name,value,pairs,else,throw,json,type,mismatch,object,jsonobject
JSONObject -> public JSONObject put(String name, boolean value) throws JSONException;1515446271;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, boolean value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,boolean,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, boolean value) throws JSONException;1516008705;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, boolean value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,boolean,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, boolean value) throws JSONException;1516215803;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, boolean value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,boolean,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, boolean value) throws JSONException;1534432765;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, boolean value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,boolean,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, boolean value) throws JSONException;1536387643;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, boolean value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,boolean,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject accumulate(String name, Object value) throws JSONException;1515446271;Appends {@code value} to the array already mapped to {@code name}. If this object_has no mapping for {@code name}, this inserts a new mapping. If the mapping exists_but its value is not an array, the existing and new values are inserted in order_into a new array which is itself mapped to {@code name}. In aggregate, this allows_values to be added to a mapping one at a time._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL} or null. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject accumulate(String name, Object value) throws JSONException {_		Object current = this.nameValuePairs.get(checkName(name))__		if (current == null) {_			return put(name, value)__		}__		_		if (value instanceof Number) {_			JSON.checkDouble(((Number) value).doubleValue())__		}__		if (current instanceof JSONArray) {_			JSONArray array = (JSONArray) current__			array.put(value)__		}_		else {_			JSONArray array = new JSONArray()__			array.put(current)__			array.put(value)__			this.nameValuePairs.put(name, array)__		}_		return this__	};appends,code,value,to,the,array,already,mapped,to,code,name,if,this,object,has,no,mapping,for,code,name,this,inserts,a,new,mapping,if,the,mapping,exists,but,its,value,is,not,an,array,the,existing,and,new,values,are,inserted,in,order,into,a,new,array,which,is,itself,mapped,to,code,name,in,aggregate,this,allows,values,to,be,added,to,a,mapping,one,at,a,time,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,accumulate,string,name,object,value,throws,jsonexception,object,current,this,name,value,pairs,get,check,name,name,if,current,null,return,put,name,value,if,value,instanceof,number,json,check,double,number,value,double,value,if,current,instanceof,jsonarray,jsonarray,array,jsonarray,current,array,put,value,else,jsonarray,array,new,jsonarray,array,put,current,array,put,value,this,name,value,pairs,put,name,array,return,this
JSONObject -> public JSONObject accumulate(String name, Object value) throws JSONException;1516008705;Appends {@code value} to the array already mapped to {@code name}. If this object_has no mapping for {@code name}, this inserts a new mapping. If the mapping exists_but its value is not an array, the existing and new values are inserted in order_into a new array which is itself mapped to {@code name}. In aggregate, this allows_values to be added to a mapping one at a time._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL} or null. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject accumulate(String name, Object value) throws JSONException {_		Object current = this.nameValuePairs.get(checkName(name))__		if (current == null) {_			return put(name, value)__		}__		_		if (value instanceof Number) {_			JSON.checkDouble(((Number) value).doubleValue())__		}__		if (current instanceof JSONArray) {_			JSONArray array = (JSONArray) current__			array.put(value)__		}_		else {_			JSONArray array = new JSONArray()__			array.put(current)__			array.put(value)__			this.nameValuePairs.put(name, array)__		}_		return this__	};appends,code,value,to,the,array,already,mapped,to,code,name,if,this,object,has,no,mapping,for,code,name,this,inserts,a,new,mapping,if,the,mapping,exists,but,its,value,is,not,an,array,the,existing,and,new,values,are,inserted,in,order,into,a,new,array,which,is,itself,mapped,to,code,name,in,aggregate,this,allows,values,to,be,added,to,a,mapping,one,at,a,time,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,accumulate,string,name,object,value,throws,jsonexception,object,current,this,name,value,pairs,get,check,name,name,if,current,null,return,put,name,value,if,value,instanceof,number,json,check,double,number,value,double,value,if,current,instanceof,jsonarray,jsonarray,array,jsonarray,current,array,put,value,else,jsonarray,array,new,jsonarray,array,put,current,array,put,value,this,name,value,pairs,put,name,array,return,this
JSONObject -> public JSONObject accumulate(String name, Object value) throws JSONException;1516215803;Appends {@code value} to the array already mapped to {@code name}. If this object_has no mapping for {@code name}, this inserts a new mapping. If the mapping exists_but its value is not an array, the existing and new values are inserted in order_into a new array which is itself mapped to {@code name}. In aggregate, this allows_values to be added to a mapping one at a time._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL} or null. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject accumulate(String name, Object value) throws JSONException {_		Object current = this.nameValuePairs.get(checkName(name))__		if (current == null) {_			return put(name, value)__		}__		_		if (value instanceof Number) {_			JSON.checkDouble(((Number) value).doubleValue())__		}__		if (current instanceof JSONArray) {_			JSONArray array = (JSONArray) current__			array.put(value)__		}_		else {_			JSONArray array = new JSONArray()__			array.put(current)__			array.put(value)__			this.nameValuePairs.put(name, array)__		}_		return this__	};appends,code,value,to,the,array,already,mapped,to,code,name,if,this,object,has,no,mapping,for,code,name,this,inserts,a,new,mapping,if,the,mapping,exists,but,its,value,is,not,an,array,the,existing,and,new,values,are,inserted,in,order,into,a,new,array,which,is,itself,mapped,to,code,name,in,aggregate,this,allows,values,to,be,added,to,a,mapping,one,at,a,time,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,accumulate,string,name,object,value,throws,jsonexception,object,current,this,name,value,pairs,get,check,name,name,if,current,null,return,put,name,value,if,value,instanceof,number,json,check,double,number,value,double,value,if,current,instanceof,jsonarray,jsonarray,array,jsonarray,current,array,put,value,else,jsonarray,array,new,jsonarray,array,put,current,array,put,value,this,name,value,pairs,put,name,array,return,this
JSONObject -> public JSONObject accumulate(String name, Object value) throws JSONException;1534432765;Appends {@code value} to the array already mapped to {@code name}. If this object_has no mapping for {@code name}, this inserts a new mapping. If the mapping exists_but its value is not an array, the existing and new values are inserted in order_into a new array which is itself mapped to {@code name}. In aggregate, this allows_values to be added to a mapping one at a time._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL} or null. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject accumulate(String name, Object value) throws JSONException {_		Object current = this.nameValuePairs.get(checkName(name))__		if (current == null) {_			return put(name, value)__		}__		_		if (value instanceof Number) {_			JSON.checkDouble(((Number) value).doubleValue())__		}__		if (current instanceof JSONArray) {_			JSONArray array = (JSONArray) current__			array.put(value)__		}_		else {_			JSONArray array = new JSONArray()__			array.put(current)__			array.put(value)__			this.nameValuePairs.put(name, array)__		}_		return this__	};appends,code,value,to,the,array,already,mapped,to,code,name,if,this,object,has,no,mapping,for,code,name,this,inserts,a,new,mapping,if,the,mapping,exists,but,its,value,is,not,an,array,the,existing,and,new,values,are,inserted,in,order,into,a,new,array,which,is,itself,mapped,to,code,name,in,aggregate,this,allows,values,to,be,added,to,a,mapping,one,at,a,time,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,accumulate,string,name,object,value,throws,jsonexception,object,current,this,name,value,pairs,get,check,name,name,if,current,null,return,put,name,value,if,value,instanceof,number,json,check,double,number,value,double,value,if,current,instanceof,jsonarray,jsonarray,array,jsonarray,current,array,put,value,else,jsonarray,array,new,jsonarray,array,put,current,array,put,value,this,name,value,pairs,put,name,array,return,this
JSONObject -> public JSONObject accumulate(String name, Object value) throws JSONException;1536387643;Appends {@code value} to the array already mapped to {@code name}. If this object_has no mapping for {@code name}, this inserts a new mapping. If the mapping exists_but its value is not an array, the existing and new values are inserted in order_into a new array which is itself mapped to {@code name}. In aggregate, this allows_values to be added to a mapping one at a time._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL} or null. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject accumulate(String name, Object value) throws JSONException {_		Object current = this.nameValuePairs.get(checkName(name))__		if (current == null) {_			return put(name, value)__		}__		_		if (value instanceof Number) {_			JSON.checkDouble(((Number) value).doubleValue())__		}__		if (current instanceof JSONArray) {_			JSONArray array = (JSONArray) current__			array.put(value)__		}_		else {_			JSONArray array = new JSONArray()__			array.put(current)__			array.put(value)__			this.nameValuePairs.put(name, array)__		}_		return this__	};appends,code,value,to,the,array,already,mapped,to,code,name,if,this,object,has,no,mapping,for,code,name,this,inserts,a,new,mapping,if,the,mapping,exists,but,its,value,is,not,an,array,the,existing,and,new,values,are,inserted,in,order,into,a,new,array,which,is,itself,mapped,to,code,name,in,aggregate,this,allows,values,to,be,added,to,a,mapping,one,at,a,time,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,accumulate,string,name,object,value,throws,jsonexception,object,current,this,name,value,pairs,get,check,name,name,if,current,null,return,put,name,value,if,value,instanceof,number,json,check,double,number,value,double,value,if,current,instanceof,jsonarray,jsonarray,array,jsonarray,current,array,put,value,else,jsonarray,array,new,jsonarray,array,put,current,array,put,value,this,name,value,pairs,put,name,array,return,this
JSONObject -> public boolean optBoolean(String name);1515446271;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns false otherwise._@param name the name of the property_@return the value or {@code null};public boolean optBoolean(String name) {_		return optBoolean(name, false)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,false,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,boolean,opt,boolean,string,name,return,opt,boolean,name,false
JSONObject -> public boolean optBoolean(String name);1516008705;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns false otherwise._@param name the name of the property_@return the value or {@code null};public boolean optBoolean(String name) {_		return optBoolean(name, false)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,false,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,boolean,opt,boolean,string,name,return,opt,boolean,name,false
JSONObject -> public boolean optBoolean(String name);1516215803;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns false otherwise._@param name the name of the property_@return the value or {@code null};public boolean optBoolean(String name) {_		return optBoolean(name, false)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,false,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,boolean,opt,boolean,string,name,return,opt,boolean,name,false
JSONObject -> public boolean optBoolean(String name);1534432765;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns false otherwise._@param name the name of the property_@return the value or {@code null};public boolean optBoolean(String name) {_		return optBoolean(name, false)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,false,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,boolean,opt,boolean,string,name,return,opt,boolean,name,false
JSONObject -> public boolean optBoolean(String name);1536387643;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns false otherwise._@param name the name of the property_@return the value or {@code null};public boolean optBoolean(String name) {_		return optBoolean(name, false)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,false,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,null;public,boolean,opt,boolean,string,name,return,opt,boolean,name,false
JSONObject -> public JSONObject putOpt(String name, Object value) throws JSONException;1515446271;Equivalent to {@code put(name, value)} when both parameters are non-null_ does_nothing otherwise._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject putOpt(String name, Object value) throws JSONException {_		if (name == null || value == null) {_			return this__		}_		return put(name, value)__	};equivalent,to,code,put,name,value,when,both,parameters,are,non,null,does,nothing,otherwise,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,opt,string,name,object,value,throws,jsonexception,if,name,null,value,null,return,this,return,put,name,value
JSONObject -> public JSONObject putOpt(String name, Object value) throws JSONException;1516008705;Equivalent to {@code put(name, value)} when both parameters are non-null_ does_nothing otherwise._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject putOpt(String name, Object value) throws JSONException {_		if (name == null || value == null) {_			return this__		}_		return put(name, value)__	};equivalent,to,code,put,name,value,when,both,parameters,are,non,null,does,nothing,otherwise,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,opt,string,name,object,value,throws,jsonexception,if,name,null,value,null,return,this,return,put,name,value
JSONObject -> public JSONObject putOpt(String name, Object value) throws JSONException;1516215803;Equivalent to {@code put(name, value)} when both parameters are non-null_ does_nothing otherwise._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject putOpt(String name, Object value) throws JSONException {_		if (name == null || value == null) {_			return this__		}_		return put(name, value)__	};equivalent,to,code,put,name,value,when,both,parameters,are,non,null,does,nothing,otherwise,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,opt,string,name,object,value,throws,jsonexception,if,name,null,value,null,return,this,return,put,name,value
JSONObject -> public JSONObject putOpt(String name, Object value) throws JSONException;1534432765;Equivalent to {@code put(name, value)} when both parameters are non-null_ does_nothing otherwise._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject putOpt(String name, Object value) throws JSONException {_		if (name == null || value == null) {_			return this__		}_		return put(name, value)__	};equivalent,to,code,put,name,value,when,both,parameters,are,non,null,does,nothing,otherwise,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,opt,string,name,object,value,throws,jsonexception,if,name,null,value,null,return,this,return,put,name,value
JSONObject -> public JSONObject putOpt(String name, Object value) throws JSONException;1536387643;Equivalent to {@code put(name, value)} when both parameters are non-null_ does_nothing otherwise._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject putOpt(String name, Object value) throws JSONException {_		if (name == null || value == null) {_			return this__		}_		return put(name, value)__	};equivalent,to,code,put,name,value,when,both,parameters,are,non,null,does,nothing,otherwise,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,opt,string,name,object,value,throws,jsonexception,if,name,null,value,null,return,this,return,put,name,value
JSONObject -> public JSONObject put(String name, int value) throws JSONException;1515446271;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, int value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,int,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, int value) throws JSONException;1516008705;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, int value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,int,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, int value) throws JSONException;1516215803;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, int value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,int,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, int value) throws JSONException;1534432765;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, int value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,int,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, int value) throws JSONException;1536387643;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, int value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,int,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public boolean isNull(String name);1515446271;Returns true if this object has no mapping for {@code name} or if it has a mapping_whose value is {@link #NULL}._@param name the name of the property_@return true if this object has no mapping for {@code name};public boolean isNull(String name) {_		Object value = this.nameValuePairs.get(name)__		return value == null || value == NULL__	};returns,true,if,this,object,has,no,mapping,for,code,name,or,if,it,has,a,mapping,whose,value,is,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,no,mapping,for,code,name;public,boolean,is,null,string,name,object,value,this,name,value,pairs,get,name,return,value,null,value,null
JSONObject -> public boolean isNull(String name);1516008705;Returns true if this object has no mapping for {@code name} or if it has a mapping_whose value is {@link #NULL}._@param name the name of the property_@return true if this object has no mapping for {@code name};public boolean isNull(String name) {_		Object value = this.nameValuePairs.get(name)__		return value == null || value == NULL__	};returns,true,if,this,object,has,no,mapping,for,code,name,or,if,it,has,a,mapping,whose,value,is,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,no,mapping,for,code,name;public,boolean,is,null,string,name,object,value,this,name,value,pairs,get,name,return,value,null,value,null
JSONObject -> public boolean isNull(String name);1516215803;Returns true if this object has no mapping for {@code name} or if it has a mapping_whose value is {@link #NULL}._@param name the name of the property_@return true if this object has no mapping for {@code name};public boolean isNull(String name) {_		Object value = this.nameValuePairs.get(name)__		return value == null || value == NULL__	};returns,true,if,this,object,has,no,mapping,for,code,name,or,if,it,has,a,mapping,whose,value,is,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,no,mapping,for,code,name;public,boolean,is,null,string,name,object,value,this,name,value,pairs,get,name,return,value,null,value,null
JSONObject -> public boolean isNull(String name);1534432765;Returns true if this object has no mapping for {@code name} or if it has a mapping_whose value is {@link #NULL}._@param name the name of the property_@return true if this object has no mapping for {@code name};public boolean isNull(String name) {_		Object value = this.nameValuePairs.get(name)__		return value == null || value == NULL__	};returns,true,if,this,object,has,no,mapping,for,code,name,or,if,it,has,a,mapping,whose,value,is,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,no,mapping,for,code,name;public,boolean,is,null,string,name,object,value,this,name,value,pairs,get,name,return,value,null,value,null
JSONObject -> public boolean isNull(String name);1536387643;Returns true if this object has no mapping for {@code name} or if it has a mapping_whose value is {@link #NULL}._@param name the name of the property_@return true if this object has no mapping for {@code name};public boolean isNull(String name) {_		Object value = this.nameValuePairs.get(name)__		return value == null || value == NULL__	};returns,true,if,this,object,has,no,mapping,for,code,name,or,if,it,has,a,mapping,whose,value,is,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,no,mapping,for,code,name;public,boolean,is,null,string,name,object,value,this,name,value,pairs,get,name,return,value,null,value,null
JSONObject -> @SuppressWarnings("rawtypes") 	public JSONObject(Map copyFrom);1515446271;Creates a new {@code JSONObject} by copying all name/value mappings from the given_map.__@param copyFrom a map whose keys are of type {@link String} and whose values are of_supported types._@throws NullPointerException if any of the map's keys are null.;@SuppressWarnings("rawtypes")_	public JSONObject(Map copyFrom) {_		this()__		Map<?, ?> contentsTyped = copyFrom__		for (Map.Entry<?, ?> entry : contentsTyped.entrySet()) {_			_			String key = (String) entry.getKey()__			if (key == null) {_				throw new NullPointerException("key == null")__			}_			this.nameValuePairs.put(key, wrap(entry.getValue()))__		}_	};creates,a,new,code,jsonobject,by,copying,all,name,value,mappings,from,the,given,map,param,copy,from,a,map,whose,keys,are,of,type,link,string,and,whose,values,are,of,supported,types,throws,null,pointer,exception,if,any,of,the,map,s,keys,are,null;suppress,warnings,rawtypes,public,jsonobject,map,copy,from,this,map,contents,typed,copy,from,for,map,entry,entry,contents,typed,entry,set,string,key,string,entry,get,key,if,key,null,throw,new,null,pointer,exception,key,null,this,name,value,pairs,put,key,wrap,entry,get,value
JSONObject -> @SuppressWarnings("rawtypes") 	public JSONObject(Map copyFrom);1516008705;Creates a new {@code JSONObject} by copying all name/value mappings from the given_map.__@param copyFrom a map whose keys are of type {@link String} and whose values are of_supported types._@throws NullPointerException if any of the map's keys are null.;@SuppressWarnings("rawtypes")_	public JSONObject(Map copyFrom) {_		this()__		Map<?, ?> contentsTyped = copyFrom__		for (Map.Entry<?, ?> entry : contentsTyped.entrySet()) {_			_			String key = (String) entry.getKey()__			if (key == null) {_				throw new NullPointerException("key == null")__			}_			this.nameValuePairs.put(key, wrap(entry.getValue()))__		}_	};creates,a,new,code,jsonobject,by,copying,all,name,value,mappings,from,the,given,map,param,copy,from,a,map,whose,keys,are,of,type,link,string,and,whose,values,are,of,supported,types,throws,null,pointer,exception,if,any,of,the,map,s,keys,are,null;suppress,warnings,rawtypes,public,jsonobject,map,copy,from,this,map,contents,typed,copy,from,for,map,entry,entry,contents,typed,entry,set,string,key,string,entry,get,key,if,key,null,throw,new,null,pointer,exception,key,null,this,name,value,pairs,put,key,wrap,entry,get,value
JSONObject -> @SuppressWarnings("rawtypes") 	public JSONObject(Map copyFrom);1516215803;Creates a new {@code JSONObject} by copying all name/value mappings from the given_map.__@param copyFrom a map whose keys are of type {@link String} and whose values are of_supported types._@throws NullPointerException if any of the map's keys are null.;@SuppressWarnings("rawtypes")_	public JSONObject(Map copyFrom) {_		this()__		Map<?, ?> contentsTyped = copyFrom__		for (Map.Entry<?, ?> entry : contentsTyped.entrySet()) {_			_			String key = (String) entry.getKey()__			if (key == null) {_				throw new NullPointerException("key == null")__			}_			this.nameValuePairs.put(key, wrap(entry.getValue()))__		}_	};creates,a,new,code,jsonobject,by,copying,all,name,value,mappings,from,the,given,map,param,copy,from,a,map,whose,keys,are,of,type,link,string,and,whose,values,are,of,supported,types,throws,null,pointer,exception,if,any,of,the,map,s,keys,are,null;suppress,warnings,rawtypes,public,jsonobject,map,copy,from,this,map,contents,typed,copy,from,for,map,entry,entry,contents,typed,entry,set,string,key,string,entry,get,key,if,key,null,throw,new,null,pointer,exception,key,null,this,name,value,pairs,put,key,wrap,entry,get,value
JSONObject -> @SuppressWarnings("rawtypes") 	public JSONObject(Map copyFrom);1534432765;Creates a new {@code JSONObject} by copying all name/value mappings from the given_map.__@param copyFrom a map whose keys are of type {@link String} and whose values are of_supported types._@throws NullPointerException if any of the map's keys are null.;@SuppressWarnings("rawtypes")_	public JSONObject(Map copyFrom) {_		this()__		Map<?, ?> contentsTyped = copyFrom__		for (Map.Entry<?, ?> entry : contentsTyped.entrySet()) {_			_			String key = (String) entry.getKey()__			if (key == null) {_				throw new NullPointerException("key == null")__			}_			this.nameValuePairs.put(key, wrap(entry.getValue()))__		}_	};creates,a,new,code,jsonobject,by,copying,all,name,value,mappings,from,the,given,map,param,copy,from,a,map,whose,keys,are,of,type,link,string,and,whose,values,are,of,supported,types,throws,null,pointer,exception,if,any,of,the,map,s,keys,are,null;suppress,warnings,rawtypes,public,jsonobject,map,copy,from,this,map,contents,typed,copy,from,for,map,entry,entry,contents,typed,entry,set,string,key,string,entry,get,key,if,key,null,throw,new,null,pointer,exception,key,null,this,name,value,pairs,put,key,wrap,entry,get,value
JSONObject -> @SuppressWarnings("rawtypes") 	public JSONObject(Map copyFrom);1536387643;Creates a new {@code JSONObject} by copying all name/value mappings from the given_map.__@param copyFrom a map whose keys are of type {@link String} and whose values are of_supported types._@throws NullPointerException if any of the map's keys are null.;@SuppressWarnings("rawtypes")_	public JSONObject(Map copyFrom) {_		this()__		Map<?, ?> contentsTyped = copyFrom__		for (Map.Entry<?, ?> entry : contentsTyped.entrySet()) {_			_			String key = (String) entry.getKey()__			if (key == null) {_				throw new NullPointerException("key == null")__			}_			this.nameValuePairs.put(key, wrap(entry.getValue()))__		}_	};creates,a,new,code,jsonobject,by,copying,all,name,value,mappings,from,the,given,map,param,copy,from,a,map,whose,keys,are,of,type,link,string,and,whose,values,are,of,supported,types,throws,null,pointer,exception,if,any,of,the,map,s,keys,are,null;suppress,warnings,rawtypes,public,jsonobject,map,copy,from,this,map,contents,typed,copy,from,for,map,entry,entry,contents,typed,entry,set,string,key,string,entry,get,key,if,key,null,throw,new,null,pointer,exception,key,null,this,name,value,pairs,put,key,wrap,entry,get,value
JSONObject -> @Override 	public String toString();1515446271;Encodes this object as a compact JSON string, such as:_<pre>{"query":"Pizza","locations":[94043,90210]}</pre>_@return a string representation of the object.;@Override_	public String toString() {_		try {_			JSONStringer stringer = new JSONStringer()__			writeTo(stringer)__			return stringer.toString()__		}_		catch (JSONException e) {_			return null__		}_	};encodes,this,object,as,a,compact,json,string,such,as,pre,query,pizza,locations,94043,90210,pre,return,a,string,representation,of,the,object;override,public,string,to,string,try,jsonstringer,stringer,new,jsonstringer,write,to,stringer,return,stringer,to,string,catch,jsonexception,e,return,null
JSONObject -> @Override 	public String toString();1516008705;Encodes this object as a compact JSON string, such as:_<pre>{"query":"Pizza","locations":[94043,90210]}</pre>_@return a string representation of the object.;@Override_	public String toString() {_		try {_			JSONStringer stringer = new JSONStringer()__			writeTo(stringer)__			return stringer.toString()__		}_		catch (JSONException e) {_			return null__		}_	};encodes,this,object,as,a,compact,json,string,such,as,pre,query,pizza,locations,94043,90210,pre,return,a,string,representation,of,the,object;override,public,string,to,string,try,jsonstringer,stringer,new,jsonstringer,write,to,stringer,return,stringer,to,string,catch,jsonexception,e,return,null
JSONObject -> @Override 	public String toString();1516215803;Encodes this object as a compact JSON string, such as:_<pre>{"query":"Pizza","locations":[94043,90210]}</pre>_@return a string representation of the object.;@Override_	public String toString() {_		try {_			JSONStringer stringer = new JSONStringer()__			writeTo(stringer)__			return stringer.toString()__		}_		catch (JSONException e) {_			return null__		}_	};encodes,this,object,as,a,compact,json,string,such,as,pre,query,pizza,locations,94043,90210,pre,return,a,string,representation,of,the,object;override,public,string,to,string,try,jsonstringer,stringer,new,jsonstringer,write,to,stringer,return,stringer,to,string,catch,jsonexception,e,return,null
JSONObject -> @Override 	public String toString();1534432765;Encodes this object as a compact JSON string, such as:_<pre>{"query":"Pizza","locations":[94043,90210]}</pre>_@return a string representation of the object.;@Override_	public String toString() {_		try {_			JSONStringer stringer = new JSONStringer()__			writeTo(stringer)__			return stringer.toString()__		}_		catch (JSONException e) {_			return null__		}_	};encodes,this,object,as,a,compact,json,string,such,as,pre,query,pizza,locations,94043,90210,pre,return,a,string,representation,of,the,object;override,public,string,to,string,try,jsonstringer,stringer,new,jsonstringer,write,to,stringer,return,stringer,to,string,catch,jsonexception,e,return,null
JSONObject -> @Override 	public String toString();1536387643;Encodes this object as a compact JSON string, such as:_<pre>{"query":"Pizza","locations":[94043,90210]}</pre>_@return a string representation of the object.;@Override_	public String toString() {_		try {_			JSONStringer stringer = new JSONStringer()__			writeTo(stringer)__			return stringer.toString()__		}_		catch (JSONException e) {_			return null__		}_	};encodes,this,object,as,a,compact,json,string,such,as,pre,query,pizza,locations,94043,90210,pre,return,a,string,representation,of,the,object;override,public,string,to,string,try,jsonstringer,stringer,new,jsonstringer,write,to,stringer,return,stringer,to,string,catch,jsonexception,e,return,null
JSONObject -> public boolean optBoolean(String name, boolean fallback);1515446271;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public boolean optBoolean(String name, boolean fallback) {_		Object object = opt(name)__		Boolean result = JSON.toBoolean(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,boolean,opt,boolean,string,name,boolean,fallback,object,object,opt,name,boolean,result,json,to,boolean,object,return,result,null,result,fallback
JSONObject -> public boolean optBoolean(String name, boolean fallback);1516008705;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public boolean optBoolean(String name, boolean fallback) {_		Object object = opt(name)__		Boolean result = JSON.toBoolean(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,boolean,opt,boolean,string,name,boolean,fallback,object,object,opt,name,boolean,result,json,to,boolean,object,return,result,null,result,fallback
JSONObject -> public boolean optBoolean(String name, boolean fallback);1516215803;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public boolean optBoolean(String name, boolean fallback) {_		Object object = opt(name)__		Boolean result = JSON.toBoolean(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,boolean,opt,boolean,string,name,boolean,fallback,object,object,opt,name,boolean,result,json,to,boolean,object,return,result,null,result,fallback
JSONObject -> public boolean optBoolean(String name, boolean fallback);1534432765;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public boolean optBoolean(String name, boolean fallback) {_		Object object = opt(name)__		Boolean result = JSON.toBoolean(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,boolean,opt,boolean,string,name,boolean,fallback,object,object,opt,name,boolean,result,json,to,boolean,object,return,result,null,result,fallback
JSONObject -> public boolean optBoolean(String name, boolean fallback);1536387643;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean. Returns {@code fallback} otherwise._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public boolean optBoolean(String name, boolean fallback) {_		Object object = opt(name)__		Boolean result = JSON.toBoolean(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,returns,code,fallback,otherwise,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,boolean,opt,boolean,string,name,boolean,fallback,object,object,opt,name,boolean,result,json,to,boolean,object,return,result,null,result,fallback
JSONObject -> public JSONObject put(String name, Object value) throws JSONException;1515446271;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name. If the value is {@code null}, any existing mapping for {@code name}_is removed._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL}, or {@code null}. May not be {@link Double#isNaN()_NaNs} or {@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, Object value) throws JSONException {_		if (value == null) {_			this.nameValuePairs.remove(name)__			return this__		}_		if (value instanceof Number) {_			_			_			JSON.checkDouble(((Number) value).doubleValue())__		}_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,if,the,value,is,code,null,any,existing,mapping,for,code,name,is,removed,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,code,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,object,value,throws,jsonexception,if,value,null,this,name,value,pairs,remove,name,return,this,if,value,instanceof,number,json,check,double,number,value,double,value,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, Object value) throws JSONException;1516008705;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name. If the value is {@code null}, any existing mapping for {@code name}_is removed._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL}, or {@code null}. May not be {@link Double#isNaN()_NaNs} or {@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, Object value) throws JSONException {_		if (value == null) {_			this.nameValuePairs.remove(name)__			return this__		}_		if (value instanceof Number) {_			_			_			JSON.checkDouble(((Number) value).doubleValue())__		}_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,if,the,value,is,code,null,any,existing,mapping,for,code,name,is,removed,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,code,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,object,value,throws,jsonexception,if,value,null,this,name,value,pairs,remove,name,return,this,if,value,instanceof,number,json,check,double,number,value,double,value,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, Object value) throws JSONException;1516215803;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name. If the value is {@code null}, any existing mapping for {@code name}_is removed._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL}, or {@code null}. May not be {@link Double#isNaN()_NaNs} or {@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, Object value) throws JSONException {_		if (value == null) {_			this.nameValuePairs.remove(name)__			return this__		}_		if (value instanceof Number) {_			_			_			JSON.checkDouble(((Number) value).doubleValue())__		}_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,if,the,value,is,code,null,any,existing,mapping,for,code,name,is,removed,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,code,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,object,value,throws,jsonexception,if,value,null,this,name,value,pairs,remove,name,return,this,if,value,instanceof,number,json,check,double,number,value,double,value,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, Object value) throws JSONException;1534432765;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name. If the value is {@code null}, any existing mapping for {@code name}_is removed._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL}, or {@code null}. May not be {@link Double#isNaN()_NaNs} or {@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, Object value) throws JSONException {_		if (value == null) {_			this.nameValuePairs.remove(name)__			return this__		}_		if (value instanceof Number) {_			_			_			JSON.checkDouble(((Number) value).doubleValue())__		}_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,if,the,value,is,code,null,any,existing,mapping,for,code,name,is,removed,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,code,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,object,value,throws,jsonexception,if,value,null,this,name,value,pairs,remove,name,return,this,if,value,instanceof,number,json,check,double,number,value,double,value,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, Object value) throws JSONException;1536387643;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name. If the value is {@code null}, any existing mapping for {@code name}_is removed._@param name the name of the property_@param value a {@link JSONObject}, {@link JSONArray}, String, Boolean, Integer,_Long, Double, {@link #NULL}, or {@code null}. May not be {@link Double#isNaN()_NaNs} or {@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, Object value) throws JSONException {_		if (value == null) {_			this.nameValuePairs.remove(name)__			return this__		}_		if (value instanceof Number) {_			_			_			JSON.checkDouble(((Number) value).doubleValue())__		}_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,if,the,value,is,code,null,any,existing,mapping,for,code,name,is,removed,param,name,the,name,of,the,property,param,value,a,link,jsonobject,link,jsonarray,string,boolean,integer,long,double,link,null,or,code,null,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,object,value,throws,jsonexception,if,value,null,this,name,value,pairs,remove,name,return,this,if,value,instanceof,number,json,check,double,number,value,double,value,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public boolean getBoolean(String name) throws JSONException;1515446271;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_boolean.;public boolean getBoolean(String name) throws JSONException {_		Object object = get(name)__		Boolean result = JSON.toBoolean(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "boolean")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,boolean;public,boolean,get,boolean,string,name,throws,jsonexception,object,object,get,name,boolean,result,json,to,boolean,object,if,result,null,throw,json,type,mismatch,name,object,boolean,return,result
JSONObject -> public boolean getBoolean(String name) throws JSONException;1516008705;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_boolean.;public boolean getBoolean(String name) throws JSONException {_		Object object = get(name)__		Boolean result = JSON.toBoolean(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "boolean")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,boolean;public,boolean,get,boolean,string,name,throws,jsonexception,object,object,get,name,boolean,result,json,to,boolean,object,if,result,null,throw,json,type,mismatch,name,object,boolean,return,result
JSONObject -> public boolean getBoolean(String name) throws JSONException;1516215803;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_boolean.;public boolean getBoolean(String name) throws JSONException {_		Object object = get(name)__		Boolean result = JSON.toBoolean(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "boolean")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,boolean;public,boolean,get,boolean,string,name,throws,jsonexception,object,object,get,name,boolean,result,json,to,boolean,object,if,result,null,throw,json,type,mismatch,name,object,boolean,return,result
JSONObject -> public boolean getBoolean(String name) throws JSONException;1534432765;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_boolean.;public boolean getBoolean(String name) throws JSONException {_		Object object = get(name)__		Boolean result = JSON.toBoolean(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "boolean")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,boolean;public,boolean,get,boolean,string,name,throws,jsonexception,object,object,get,name,boolean,result,json,to,boolean,object,if,result,null,throw,json,type,mismatch,name,object,boolean,return,result
JSONObject -> public boolean getBoolean(String name) throws JSONException;1536387643;Returns the value mapped by {@code name} if it exists and is a boolean or can be_coerced to a boolean._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a_boolean.;public boolean getBoolean(String name) throws JSONException {_		Object object = get(name)__		Boolean result = JSON.toBoolean(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "boolean")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,boolean,or,can,be,coerced,to,a,boolean,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,boolean;public,boolean,get,boolean,string,name,throws,jsonexception,object,object,get,name,boolean,result,json,to,boolean,object,if,result,null,throw,json,type,mismatch,name,object,boolean,return,result
JSONObject -> public String getString(String name) throws JSONException;1515446271;Returns the value mapped by {@code name} if it exists, coercing it if necessary._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public String getString(String name) throws JSONException {_		Object object = get(name)__		String result = JSON.toString(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "String")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,string,get,string,string,name,throws,jsonexception,object,object,get,name,string,result,json,to,string,object,if,result,null,throw,json,type,mismatch,name,object,string,return,result
JSONObject -> public String getString(String name) throws JSONException;1516008705;Returns the value mapped by {@code name} if it exists, coercing it if necessary._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public String getString(String name) throws JSONException {_		Object object = get(name)__		String result = JSON.toString(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "String")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,string,get,string,string,name,throws,jsonexception,object,object,get,name,string,result,json,to,string,object,if,result,null,throw,json,type,mismatch,name,object,string,return,result
JSONObject -> public String getString(String name) throws JSONException;1516215803;Returns the value mapped by {@code name} if it exists, coercing it if necessary._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public String getString(String name) throws JSONException {_		Object object = get(name)__		String result = JSON.toString(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "String")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,string,get,string,string,name,throws,jsonexception,object,object,get,name,string,result,json,to,string,object,if,result,null,throw,json,type,mismatch,name,object,string,return,result
JSONObject -> public String getString(String name) throws JSONException;1534432765;Returns the value mapped by {@code name} if it exists, coercing it if necessary._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public String getString(String name) throws JSONException {_		Object object = get(name)__		String result = JSON.toString(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "String")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,string,get,string,string,name,throws,jsonexception,object,object,get,name,string,result,json,to,string,object,if,result,null,throw,json,type,mismatch,name,object,string,return,result
JSONObject -> public String getString(String name) throws JSONException;1536387643;Returns the value mapped by {@code name} if it exists, coercing it if necessary._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public String getString(String name) throws JSONException {_		Object object = get(name)__		String result = JSON.toString(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "String")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,string,get,string,string,name,throws,jsonexception,object,object,get,name,string,result,json,to,string,object,if,result,null,throw,json,type,mismatch,name,object,string,return,result
JSONObject -> public Object remove(String name);1515446271;Removes the named mapping if it exists_ does nothing otherwise.__@param name the name of the property_@return the value previously mapped by {@code name}, or null if there was no such_mapping.;public Object remove(String name) {_		return this.nameValuePairs.remove(name)__	};removes,the,named,mapping,if,it,exists,does,nothing,otherwise,param,name,the,name,of,the,property,return,the,value,previously,mapped,by,code,name,or,null,if,there,was,no,such,mapping;public,object,remove,string,name,return,this,name,value,pairs,remove,name
JSONObject -> public Object remove(String name);1516008705;Removes the named mapping if it exists_ does nothing otherwise.__@param name the name of the property_@return the value previously mapped by {@code name}, or null if there was no such_mapping.;public Object remove(String name) {_		return this.nameValuePairs.remove(name)__	};removes,the,named,mapping,if,it,exists,does,nothing,otherwise,param,name,the,name,of,the,property,return,the,value,previously,mapped,by,code,name,or,null,if,there,was,no,such,mapping;public,object,remove,string,name,return,this,name,value,pairs,remove,name
JSONObject -> public Object remove(String name);1516215803;Removes the named mapping if it exists_ does nothing otherwise.__@param name the name of the property_@return the value previously mapped by {@code name}, or null if there was no such_mapping.;public Object remove(String name) {_		return this.nameValuePairs.remove(name)__	};removes,the,named,mapping,if,it,exists,does,nothing,otherwise,param,name,the,name,of,the,property,return,the,value,previously,mapped,by,code,name,or,null,if,there,was,no,such,mapping;public,object,remove,string,name,return,this,name,value,pairs,remove,name
JSONObject -> public Object remove(String name);1534432765;Removes the named mapping if it exists_ does nothing otherwise.__@param name the name of the property_@return the value previously mapped by {@code name}, or null if there was no such_mapping.;public Object remove(String name) {_		return this.nameValuePairs.remove(name)__	};removes,the,named,mapping,if,it,exists,does,nothing,otherwise,param,name,the,name,of,the,property,return,the,value,previously,mapped,by,code,name,or,null,if,there,was,no,such,mapping;public,object,remove,string,name,return,this,name,value,pairs,remove,name
JSONObject -> public Object remove(String name);1536387643;Removes the named mapping if it exists_ does nothing otherwise.__@param name the name of the property_@return the value previously mapped by {@code name}, or null if there was no such_mapping.;public Object remove(String name) {_		return this.nameValuePairs.remove(name)__	};removes,the,named,mapping,if,it,exists,does,nothing,otherwise,param,name,the,name,of,the,property,return,the,value,previously,mapped,by,code,name,or,null,if,there,was,no,such,mapping;public,object,remove,string,name,return,this,name,value,pairs,remove,name
JSONObject -> public long getLong(String name) throws JSONException;1515446271;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Note that JSON represents numbers as doubles, so this is_<a href="#lossy">lossy</a>_ use strings to transfer numbers via JSON._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a long.;public long getLong(String name) throws JSONException {_		Object object = get(name)__		Long result = JSON.toLong(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "long")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,long;public,long,get,long,string,name,throws,jsonexception,object,object,get,name,long,result,json,to,long,object,if,result,null,throw,json,type,mismatch,name,object,long,return,result
JSONObject -> public long getLong(String name) throws JSONException;1516008705;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Note that JSON represents numbers as doubles, so this is_<a href="#lossy">lossy</a>_ use strings to transfer numbers via JSON._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a long.;public long getLong(String name) throws JSONException {_		Object object = get(name)__		Long result = JSON.toLong(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "long")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,long;public,long,get,long,string,name,throws,jsonexception,object,object,get,name,long,result,json,to,long,object,if,result,null,throw,json,type,mismatch,name,object,long,return,result
JSONObject -> public long getLong(String name) throws JSONException;1516215803;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Note that JSON represents numbers as doubles, so this is_<a href="#lossy">lossy</a>_ use strings to transfer numbers via JSON._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a long.;public long getLong(String name) throws JSONException {_		Object object = get(name)__		Long result = JSON.toLong(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "long")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,long;public,long,get,long,string,name,throws,jsonexception,object,object,get,name,long,result,json,to,long,object,if,result,null,throw,json,type,mismatch,name,object,long,return,result
JSONObject -> public long getLong(String name) throws JSONException;1534432765;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Note that JSON represents numbers as doubles, so this is_<a href="#lossy">lossy</a>_ use strings to transfer numbers via JSON._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a long.;public long getLong(String name) throws JSONException {_		Object object = get(name)__		Long result = JSON.toLong(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "long")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,long;public,long,get,long,string,name,throws,jsonexception,object,object,get,name,long,result,json,to,long,object,if,result,null,throw,json,type,mismatch,name,object,long,return,result
JSONObject -> public long getLong(String name) throws JSONException;1536387643;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Note that JSON represents numbers as doubles, so this is_<a href="#lossy">lossy</a>_ use strings to transfer numbers via JSON._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or cannot be coerced to a long.;public long getLong(String name) throws JSONException {_		Object object = get(name)__		Long result = JSON.toLong(object)__		if (result == null) {_			throw JSON.typeMismatch(name, object, "long")__		}_		return result__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,cannot,be,coerced,to,a,long;public,long,get,long,string,name,throws,jsonexception,object,object,get,name,long,result,json,to,long,object,if,result,null,throw,json,type,mismatch,name,object,long,return,result
JSONObject -> public JSONObject(String json) throws JSONException;1515446271;Creates a new {@code JSONObject} with name/value mappings from the JSON string._@param json a JSON-encoded string containing an object._@throws JSONException if the parse fails or doesn't yield a {@code_JSONObject}.;public JSONObject(String json) throws JSONException {_		this(new JSONTokener(json))__	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,json,string,param,json,a,json,encoded,string,containing,an,object,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,string,json,throws,jsonexception,this,new,jsontokener,json
JSONObject -> public JSONObject(String json) throws JSONException;1516008705;Creates a new {@code JSONObject} with name/value mappings from the JSON string._@param json a JSON-encoded string containing an object._@throws JSONException if the parse fails or doesn't yield a {@code_JSONObject}.;public JSONObject(String json) throws JSONException {_		this(new JSONTokener(json))__	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,json,string,param,json,a,json,encoded,string,containing,an,object,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,string,json,throws,jsonexception,this,new,jsontokener,json
JSONObject -> public JSONObject(String json) throws JSONException;1516215803;Creates a new {@code JSONObject} with name/value mappings from the JSON string._@param json a JSON-encoded string containing an object._@throws JSONException if the parse fails or doesn't yield a {@code_JSONObject}.;public JSONObject(String json) throws JSONException {_		this(new JSONTokener(json))__	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,json,string,param,json,a,json,encoded,string,containing,an,object,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,string,json,throws,jsonexception,this,new,jsontokener,json
JSONObject -> public JSONObject(String json) throws JSONException;1534432765;Creates a new {@code JSONObject} with name/value mappings from the JSON string._@param json a JSON-encoded string containing an object._@throws JSONException if the parse fails or doesn't yield a {@code_JSONObject}.;public JSONObject(String json) throws JSONException {_		this(new JSONTokener(json))__	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,json,string,param,json,a,json,encoded,string,containing,an,object,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,string,json,throws,jsonexception,this,new,jsontokener,json
JSONObject -> public JSONObject(String json) throws JSONException;1536387643;Creates a new {@code JSONObject} with name/value mappings from the JSON string._@param json a JSON-encoded string containing an object._@throws JSONException if the parse fails or doesn't yield a {@code_JSONObject}.;public JSONObject(String json) throws JSONException {_		this(new JSONTokener(json))__	};creates,a,new,code,jsonobject,with,name,value,mappings,from,the,json,string,param,json,a,json,encoded,string,containing,an,object,throws,jsonexception,if,the,parse,fails,or,doesn,t,yield,a,code,jsonobject;public,jsonobject,string,json,throws,jsonexception,this,new,jsontokener,json
JSONObject -> public long optLong(String name);1515446271;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns 0 otherwise. Note that JSON represents numbers as_doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer numbers via_JSON._@param name the name of the property_@return the value or {@code 0L};public long optLong(String name) {_		return optLong(name, 0L)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,0,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,or,code,0l;public,long,opt,long,string,name,return,opt,long,name,0l
JSONObject -> public long optLong(String name);1516008705;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns 0 otherwise. Note that JSON represents numbers as_doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer numbers via_JSON._@param name the name of the property_@return the value or {@code 0L};public long optLong(String name) {_		return optLong(name, 0L)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,0,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,or,code,0l;public,long,opt,long,string,name,return,opt,long,name,0l
JSONObject -> public long optLong(String name);1516215803;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns 0 otherwise. Note that JSON represents numbers as_doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer numbers via_JSON._@param name the name of the property_@return the value or {@code 0L};public long optLong(String name) {_		return optLong(name, 0L)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,0,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,or,code,0l;public,long,opt,long,string,name,return,opt,long,name,0l
JSONObject -> public long optLong(String name);1534432765;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns 0 otherwise. Note that JSON represents numbers as_doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer numbers via_JSON._@param name the name of the property_@return the value or {@code 0L};public long optLong(String name) {_		return optLong(name, 0L)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,0,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,or,code,0l;public,long,opt,long,string,name,return,opt,long,name,0l
JSONObject -> public long optLong(String name);1536387643;Returns the value mapped by {@code name} if it exists and is a long or can be_coerced to a long. Returns 0 otherwise. Note that JSON represents numbers as_doubles, so this is <a href="#lossy">lossy</a>_ use strings to transfer numbers via_JSON._@param name the name of the property_@return the value or {@code 0L};public long optLong(String name) {_		return optLong(name, 0L)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,long,or,can,be,coerced,to,a,long,returns,0,otherwise,note,that,json,represents,numbers,as,doubles,so,this,is,a,href,lossy,lossy,a,use,strings,to,transfer,numbers,via,json,param,name,the,name,of,the,property,return,the,value,or,code,0l;public,long,opt,long,string,name,return,opt,long,name,0l
JSONObject -> public double optDouble(String name);1515446271;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code NaN} otherwise._@param name the name of the property_@return the value or {@code NaN};public double optDouble(String name) {_		return optDouble(name, Double.NaN)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,na,n,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,na,n;public,double,opt,double,string,name,return,opt,double,name,double,na,n
JSONObject -> public double optDouble(String name);1516008705;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code NaN} otherwise._@param name the name of the property_@return the value or {@code NaN};public double optDouble(String name) {_		return optDouble(name, Double.NaN)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,na,n,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,na,n;public,double,opt,double,string,name,return,opt,double,name,double,na,n
JSONObject -> public double optDouble(String name);1516215803;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code NaN} otherwise._@param name the name of the property_@return the value or {@code NaN};public double optDouble(String name) {_		return optDouble(name, Double.NaN)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,na,n,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,na,n;public,double,opt,double,string,name,return,opt,double,name,double,na,n
JSONObject -> public double optDouble(String name);1534432765;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code NaN} otherwise._@param name the name of the property_@return the value or {@code NaN};public double optDouble(String name) {_		return optDouble(name, Double.NaN)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,na,n,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,na,n;public,double,opt,double,string,name,return,opt,double,name,double,na,n
JSONObject -> public double optDouble(String name);1536387643;Returns the value mapped by {@code name} if it exists and is a double or can be_coerced to a double. Returns {@code NaN} otherwise._@param name the name of the property_@return the value or {@code NaN};public double optDouble(String name) {_		return optDouble(name, Double.NaN)__	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,double,or,can,be,coerced,to,a,double,returns,code,na,n,otherwise,param,name,the,name,of,the,property,return,the,value,or,code,na,n;public,double,opt,double,string,name,return,opt,double,name,double,na,n
JSONObject -> public JSONObject put(String name, long value) throws JSONException;1515446271;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, long value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,long,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, long value) throws JSONException;1516008705;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, long value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,long,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, long value) throws JSONException;1516215803;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, long value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,long,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, long value) throws JSONException;1534432765;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, long value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,long,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public JSONObject put(String name, long value) throws JSONException;1536387643;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value the value of the property_@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, long value) throws JSONException {_		this.nameValuePairs.put(checkName(name), value)__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,the,value,of,the,property,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,long,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,value,return,this
JSONObject -> public static String numberToString(Number number) throws JSONException;1515446271;Encodes the number as a JSON string._@param number a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return the encoded value_@throws JSONException if an error occurs;public static String numberToString(Number number) throws JSONException {_		if (number == null) {_			throw new JSONException("Number must be non-null")__		}__		double doubleValue = number.doubleValue()__		JSON.checkDouble(doubleValue)___		_		if (number.equals(NEGATIVE_ZERO)) {_			return "-0"__		}__		long longValue = number.longValue()__		if (doubleValue == longValue) {_			return Long.toString(longValue)__		}__		return number.toString()__	};encodes,the,number,as,a,json,string,param,number,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,the,encoded,value,throws,jsonexception,if,an,error,occurs;public,static,string,number,to,string,number,number,throws,jsonexception,if,number,null,throw,new,jsonexception,number,must,be,non,null,double,double,value,number,double,value,json,check,double,double,value,if,number,equals,return,0,long,long,value,number,long,value,if,double,value,long,value,return,long,to,string,long,value,return,number,to,string
JSONObject -> public static String numberToString(Number number) throws JSONException;1516008705;Encodes the number as a JSON string._@param number a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return the encoded value_@throws JSONException if an error occurs;public static String numberToString(Number number) throws JSONException {_		if (number == null) {_			throw new JSONException("Number must be non-null")__		}__		double doubleValue = number.doubleValue()__		JSON.checkDouble(doubleValue)___		_		if (number.equals(NEGATIVE_ZERO)) {_			return "-0"__		}__		long longValue = number.longValue()__		if (doubleValue == longValue) {_			return Long.toString(longValue)__		}__		return number.toString()__	};encodes,the,number,as,a,json,string,param,number,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,the,encoded,value,throws,jsonexception,if,an,error,occurs;public,static,string,number,to,string,number,number,throws,jsonexception,if,number,null,throw,new,jsonexception,number,must,be,non,null,double,double,value,number,double,value,json,check,double,double,value,if,number,equals,return,0,long,long,value,number,long,value,if,double,value,long,value,return,long,to,string,long,value,return,number,to,string
JSONObject -> public static String numberToString(Number number) throws JSONException;1516215803;Encodes the number as a JSON string._@param number a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return the encoded value_@throws JSONException if an error occurs;public static String numberToString(Number number) throws JSONException {_		if (number == null) {_			throw new JSONException("Number must be non-null")__		}__		double doubleValue = number.doubleValue()__		JSON.checkDouble(doubleValue)___		_		if (number.equals(NEGATIVE_ZERO)) {_			return "-0"__		}__		long longValue = number.longValue()__		if (doubleValue == longValue) {_			return Long.toString(longValue)__		}__		return number.toString()__	};encodes,the,number,as,a,json,string,param,number,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,the,encoded,value,throws,jsonexception,if,an,error,occurs;public,static,string,number,to,string,number,number,throws,jsonexception,if,number,null,throw,new,jsonexception,number,must,be,non,null,double,double,value,number,double,value,json,check,double,double,value,if,number,equals,return,0,long,long,value,number,long,value,if,double,value,long,value,return,long,to,string,long,value,return,number,to,string
JSONObject -> public static String numberToString(Number number) throws JSONException;1534432765;Encodes the number as a JSON string._@param number a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return the encoded value_@throws JSONException if an error occurs;public static String numberToString(Number number) throws JSONException {_		if (number == null) {_			throw new JSONException("Number must be non-null")__		}__		double doubleValue = number.doubleValue()__		JSON.checkDouble(doubleValue)___		_		if (number.equals(NEGATIVE_ZERO)) {_			return "-0"__		}__		long longValue = number.longValue()__		if (doubleValue == longValue) {_			return Long.toString(longValue)__		}__		return number.toString()__	};encodes,the,number,as,a,json,string,param,number,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,the,encoded,value,throws,jsonexception,if,an,error,occurs;public,static,string,number,to,string,number,number,throws,jsonexception,if,number,null,throw,new,jsonexception,number,must,be,non,null,double,double,value,number,double,value,json,check,double,double,value,if,number,equals,return,0,long,long,value,number,long,value,if,double,value,long,value,return,long,to,string,long,value,return,number,to,string
JSONObject -> public static String numberToString(Number number) throws JSONException;1536387643;Encodes the number as a JSON string._@param number a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return the encoded value_@throws JSONException if an error occurs;public static String numberToString(Number number) throws JSONException {_		if (number == null) {_			throw new JSONException("Number must be non-null")__		}__		double doubleValue = number.doubleValue()__		JSON.checkDouble(doubleValue)___		_		if (number.equals(NEGATIVE_ZERO)) {_			return "-0"__		}__		long longValue = number.longValue()__		if (doubleValue == longValue) {_			return Long.toString(longValue)__		}__		return number.toString()__	};encodes,the,number,as,a,json,string,param,number,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,the,encoded,value,throws,jsonexception,if,an,error,occurs;public,static,string,number,to,string,number,number,throws,jsonexception,if,number,null,throw,new,jsonexception,number,must,be,non,null,double,double,value,number,double,value,json,check,double,double,value,if,number,equals,return,0,long,long,value,number,long,value,if,double,value,long,value,return,long,to,string,long,value,return,number,to,string
JSONObject -> public boolean has(String name);1515446271;Returns true if this object has a mapping for {@code name}. The mapping may be_{@link #NULL}._@param name the name of the property_@return true if this object has a mapping for {@code name};public boolean has(String name) {_		return this.nameValuePairs.containsKey(name)__	};returns,true,if,this,object,has,a,mapping,for,code,name,the,mapping,may,be,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,a,mapping,for,code,name;public,boolean,has,string,name,return,this,name,value,pairs,contains,key,name
JSONObject -> public boolean has(String name);1516008705;Returns true if this object has a mapping for {@code name}. The mapping may be_{@link #NULL}._@param name the name of the property_@return true if this object has a mapping for {@code name};public boolean has(String name) {_		return this.nameValuePairs.containsKey(name)__	};returns,true,if,this,object,has,a,mapping,for,code,name,the,mapping,may,be,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,a,mapping,for,code,name;public,boolean,has,string,name,return,this,name,value,pairs,contains,key,name
JSONObject -> public boolean has(String name);1516215803;Returns true if this object has a mapping for {@code name}. The mapping may be_{@link #NULL}._@param name the name of the property_@return true if this object has a mapping for {@code name};public boolean has(String name) {_		return this.nameValuePairs.containsKey(name)__	};returns,true,if,this,object,has,a,mapping,for,code,name,the,mapping,may,be,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,a,mapping,for,code,name;public,boolean,has,string,name,return,this,name,value,pairs,contains,key,name
JSONObject -> public boolean has(String name);1534432765;Returns true if this object has a mapping for {@code name}. The mapping may be_{@link #NULL}._@param name the name of the property_@return true if this object has a mapping for {@code name};public boolean has(String name) {_		return this.nameValuePairs.containsKey(name)__	};returns,true,if,this,object,has,a,mapping,for,code,name,the,mapping,may,be,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,a,mapping,for,code,name;public,boolean,has,string,name,return,this,name,value,pairs,contains,key,name
JSONObject -> public boolean has(String name);1536387643;Returns true if this object has a mapping for {@code name}. The mapping may be_{@link #NULL}._@param name the name of the property_@return true if this object has a mapping for {@code name};public boolean has(String name) {_		return this.nameValuePairs.containsKey(name)__	};returns,true,if,this,object,has,a,mapping,for,code,name,the,mapping,may,be,link,null,param,name,the,name,of,the,property,return,true,if,this,object,has,a,mapping,for,code,name;public,boolean,has,string,name,return,this,name,value,pairs,contains,key,name
JSONObject -> public JSONObject put(String name, double value) throws JSONException;1515446271;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, double value) throws JSONException {_		this.nameValuePairs.put(checkName(name), JSON.checkDouble(value))__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,double,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,json,check,double,value,return,this
JSONObject -> public JSONObject put(String name, double value) throws JSONException;1516008705;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, double value) throws JSONException {_		this.nameValuePairs.put(checkName(name), JSON.checkDouble(value))__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,double,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,json,check,double,value,return,this
JSONObject -> public JSONObject put(String name, double value) throws JSONException;1516215803;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, double value) throws JSONException {_		this.nameValuePairs.put(checkName(name), JSON.checkDouble(value))__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,double,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,json,check,double,value,return,this
JSONObject -> public JSONObject put(String name, double value) throws JSONException;1534432765;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, double value) throws JSONException {_		this.nameValuePairs.put(checkName(name), JSON.checkDouble(value))__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,double,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,json,check,double,value,return,this
JSONObject -> public JSONObject put(String name, double value) throws JSONException;1536387643;Maps {@code name} to {@code value}, clobbering any existing name/value mapping with_the same name._@param name the name of the property_@param value a finite value. May not be {@link Double#isNaN() NaNs} or_{@link Double#isInfinite() infinities}._@return this object._@throws JSONException if an error occurs;public JSONObject put(String name, double value) throws JSONException {_		this.nameValuePairs.put(checkName(name), JSON.checkDouble(value))__		return this__	};maps,code,name,to,code,value,clobbering,any,existing,name,value,mapping,with,the,same,name,param,name,the,name,of,the,property,param,value,a,finite,value,may,not,be,link,double,is,na,n,na,ns,or,link,double,is,infinite,infinities,return,this,object,throws,jsonexception,if,an,error,occurs;public,jsonobject,put,string,name,double,value,throws,jsonexception,this,name,value,pairs,put,check,name,name,json,check,double,value,return,this
JSONObject -> public String optString(String name, String fallback);1515446271;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns {@code fallback} if no such mapping exists._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public String optString(String name, String fallback) {_		Object object = opt(name)__		String result = JSON.toString(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,code,fallback,if,no,such,mapping,exists,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,string,opt,string,string,name,string,fallback,object,object,opt,name,string,result,json,to,string,object,return,result,null,result,fallback
JSONObject -> public String optString(String name, String fallback);1516008705;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns {@code fallback} if no such mapping exists._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public String optString(String name, String fallback) {_		Object object = opt(name)__		String result = JSON.toString(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,code,fallback,if,no,such,mapping,exists,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,string,opt,string,string,name,string,fallback,object,object,opt,name,string,result,json,to,string,object,return,result,null,result,fallback
JSONObject -> public String optString(String name, String fallback);1516215803;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns {@code fallback} if no such mapping exists._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public String optString(String name, String fallback) {_		Object object = opt(name)__		String result = JSON.toString(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,code,fallback,if,no,such,mapping,exists,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,string,opt,string,string,name,string,fallback,object,object,opt,name,string,result,json,to,string,object,return,result,null,result,fallback
JSONObject -> public String optString(String name, String fallback);1534432765;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns {@code fallback} if no such mapping exists._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public String optString(String name, String fallback) {_		Object object = opt(name)__		String result = JSON.toString(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,code,fallback,if,no,such,mapping,exists,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,string,opt,string,string,name,string,fallback,object,object,opt,name,string,result,json,to,string,object,return,result,null,result,fallback
JSONObject -> public String optString(String name, String fallback);1536387643;Returns the value mapped by {@code name} if it exists, coercing it if necessary._Returns {@code fallback} if no such mapping exists._@param name the name of the property_@param fallback a fallback value_@return the value or {@code fallback};public String optString(String name, String fallback) {_		Object object = opt(name)__		String result = JSON.toString(object)__		return result != null ? result : fallback__	};returns,the,value,mapped,by,code,name,if,it,exists,coercing,it,if,necessary,returns,code,fallback,if,no,such,mapping,exists,param,name,the,name,of,the,property,param,fallback,a,fallback,value,return,the,value,or,code,fallback;public,string,opt,string,string,name,string,fallback,object,object,opt,name,string,result,json,to,string,object,return,result,null,result,fallback
JSONObject -> public Object get(String name) throws JSONException;1515446271;Returns the value mapped by {@code name}._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public Object get(String name) throws JSONException {_		Object result = this.nameValuePairs.get(name)__		if (result == null) {_			throw new JSONException("No value for " + name)__		}_		return result__	};returns,the,value,mapped,by,code,name,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,object,get,string,name,throws,jsonexception,object,result,this,name,value,pairs,get,name,if,result,null,throw,new,jsonexception,no,value,for,name,return,result
JSONObject -> public Object get(String name) throws JSONException;1516008705;Returns the value mapped by {@code name}._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public Object get(String name) throws JSONException {_		Object result = this.nameValuePairs.get(name)__		if (result == null) {_			throw new JSONException("No value for " + name)__		}_		return result__	};returns,the,value,mapped,by,code,name,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,object,get,string,name,throws,jsonexception,object,result,this,name,value,pairs,get,name,if,result,null,throw,new,jsonexception,no,value,for,name,return,result
JSONObject -> public Object get(String name) throws JSONException;1516215803;Returns the value mapped by {@code name}._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public Object get(String name) throws JSONException {_		Object result = this.nameValuePairs.get(name)__		if (result == null) {_			throw new JSONException("No value for " + name)__		}_		return result__	};returns,the,value,mapped,by,code,name,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,object,get,string,name,throws,jsonexception,object,result,this,name,value,pairs,get,name,if,result,null,throw,new,jsonexception,no,value,for,name,return,result
JSONObject -> public Object get(String name) throws JSONException;1534432765;Returns the value mapped by {@code name}._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public Object get(String name) throws JSONException {_		Object result = this.nameValuePairs.get(name)__		if (result == null) {_			throw new JSONException("No value for " + name)__		}_		return result__	};returns,the,value,mapped,by,code,name,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,object,get,string,name,throws,jsonexception,object,result,this,name,value,pairs,get,name,if,result,null,throw,new,jsonexception,no,value,for,name,return,result
JSONObject -> public Object get(String name) throws JSONException;1536387643;Returns the value mapped by {@code name}._@param name the name of the property_@return the value_@throws JSONException if no such mapping exists.;public Object get(String name) throws JSONException {_		Object result = this.nameValuePairs.get(name)__		if (result == null) {_			throw new JSONException("No value for " + name)__		}_		return result__	};returns,the,value,mapped,by,code,name,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,no,such,mapping,exists;public,object,get,string,name,throws,jsonexception,object,result,this,name,value,pairs,get,name,if,result,null,throw,new,jsonexception,no,value,for,name,return,result
JSONObject -> public JSONObject getJSONObject(String name) throws JSONException;1515446271;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONObject}.;public JSONObject getJSONObject(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONObject) {_			return (JSONObject) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONObject")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonobject;public,jsonobject,get,jsonobject,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonobject,return,jsonobject,object,else,throw,json,type,mismatch,name,object,jsonobject
JSONObject -> public JSONObject getJSONObject(String name) throws JSONException;1516008705;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONObject}.;public JSONObject getJSONObject(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONObject) {_			return (JSONObject) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONObject")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonobject;public,jsonobject,get,jsonobject,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonobject,return,jsonobject,object,else,throw,json,type,mismatch,name,object,jsonobject
JSONObject -> public JSONObject getJSONObject(String name) throws JSONException;1516215803;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONObject}.;public JSONObject getJSONObject(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONObject) {_			return (JSONObject) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONObject")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonobject;public,jsonobject,get,jsonobject,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonobject,return,jsonobject,object,else,throw,json,type,mismatch,name,object,jsonobject
JSONObject -> public JSONObject getJSONObject(String name) throws JSONException;1534432765;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONObject}.;public JSONObject getJSONObject(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONObject) {_			return (JSONObject) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONObject")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonobject;public,jsonobject,get,jsonobject,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonobject,return,jsonobject,object,else,throw,json,type,mismatch,name,object,jsonobject
JSONObject -> public JSONObject getJSONObject(String name) throws JSONException;1536387643;Returns the value mapped by {@code name} if it exists and is a {@code_JSONObject}._@param name the name of the property_@return the value_@throws JSONException if the mapping doesn't exist or is not a {@code_JSONObject}.;public JSONObject getJSONObject(String name) throws JSONException {_		Object object = get(name)__		if (object instanceof JSONObject) {_			return (JSONObject) object__		}_		else {_			throw JSON.typeMismatch(name, object, "JSONObject")__		}_	};returns,the,value,mapped,by,code,name,if,it,exists,and,is,a,code,jsonobject,param,name,the,name,of,the,property,return,the,value,throws,jsonexception,if,the,mapping,doesn,t,exist,or,is,not,a,code,jsonobject;public,jsonobject,get,jsonobject,string,name,throws,jsonexception,object,object,get,name,if,object,instanceof,jsonobject,return,jsonobject,object,else,throw,json,type,mismatch,name,object,jsonobject
JSONObject -> public JSONArray names();1515446271;Returns an array containing the string names in this object. This method returns_null if this object contains no mappings._@return the array;public JSONArray names() {_		return this.nameValuePairs.isEmpty() ? null_				: new JSONArray(new ArrayList<String>(this.nameValuePairs.keySet()))__	};returns,an,array,containing,the,string,names,in,this,object,this,method,returns,null,if,this,object,contains,no,mappings,return,the,array;public,jsonarray,names,return,this,name,value,pairs,is,empty,null,new,jsonarray,new,array,list,string,this,name,value,pairs,key,set
JSONObject -> public JSONArray names();1516008705;Returns an array containing the string names in this object. This method returns_null if this object contains no mappings._@return the array;public JSONArray names() {_		return this.nameValuePairs.isEmpty() ? null_				: new JSONArray(new ArrayList<String>(this.nameValuePairs.keySet()))__	};returns,an,array,containing,the,string,names,in,this,object,this,method,returns,null,if,this,object,contains,no,mappings,return,the,array;public,jsonarray,names,return,this,name,value,pairs,is,empty,null,new,jsonarray,new,array,list,string,this,name,value,pairs,key,set
JSONObject -> public JSONArray names();1516215803;Returns an array containing the string names in this object. This method returns_null if this object contains no mappings._@return the array;public JSONArray names() {_		return this.nameValuePairs.isEmpty() ? null_				: new JSONArray(new ArrayList<>(this.nameValuePairs.keySet()))__	};returns,an,array,containing,the,string,names,in,this,object,this,method,returns,null,if,this,object,contains,no,mappings,return,the,array;public,jsonarray,names,return,this,name,value,pairs,is,empty,null,new,jsonarray,new,array,list,this,name,value,pairs,key,set
JSONObject -> public JSONArray names();1534432765;Returns an array containing the string names in this object. This method returns_null if this object contains no mappings._@return the array;public JSONArray names() {_		return this.nameValuePairs.isEmpty() ? null_				: new JSONArray(new ArrayList<>(this.nameValuePairs.keySet()))__	};returns,an,array,containing,the,string,names,in,this,object,this,method,returns,null,if,this,object,contains,no,mappings,return,the,array;public,jsonarray,names,return,this,name,value,pairs,is,empty,null,new,jsonarray,new,array,list,this,name,value,pairs,key,set
JSONObject -> public JSONArray names();1536387643;Returns an array containing the string names in this object. This method returns_null if this object contains no mappings._@return the array;public JSONArray names() {_		return this.nameValuePairs.isEmpty() ? null_				: new JSONArray(new ArrayList<>(this.nameValuePairs.keySet()))__	};returns,an,array,containing,the,string,names,in,this,object,this,method,returns,null,if,this,object,contains,no,mappings,return,the,array;public,jsonarray,names,return,this,name,value,pairs,is,empty,null,new,jsonarray,new,array,list,this,name,value,pairs,key,set
