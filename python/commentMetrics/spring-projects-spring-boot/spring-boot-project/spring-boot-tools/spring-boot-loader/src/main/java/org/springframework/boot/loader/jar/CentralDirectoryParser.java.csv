# id;timestamp;commentText;codeText;commentWords;codeWords
CentralDirectoryParser -> public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes) 			throws IOException;1507173536;Parse the source data, triggering {@link CentralDirectoryVisitor visitors}._@param data the source data_@param skipPrefixBytes if prefix bytes should be skipped_@return The actual archive data without any prefix bytes_@throws IOException on error;public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes)_			throws IOException {_		CentralDirectoryEndRecord endRecord = new CentralDirectoryEndRecord(data)__		if (skipPrefixBytes) {_			data = getArchiveData(endRecord, data)__		}_		RandomAccessData centralDirectoryData = endRecord.getCentralDirectory(data)__		visitStart(endRecord, centralDirectoryData)__		parseEntries(endRecord, centralDirectoryData)__		visitEnd()__		return data__	};parse,the,source,data,triggering,link,central,directory,visitor,visitors,param,data,the,source,data,param,skip,prefix,bytes,if,prefix,bytes,should,be,skipped,return,the,actual,archive,data,without,any,prefix,bytes,throws,ioexception,on,error;public,random,access,data,parse,random,access,data,data,boolean,skip,prefix,bytes,throws,ioexception,central,directory,end,record,end,record,new,central,directory,end,record,data,if,skip,prefix,bytes,data,get,archive,data,end,record,data,random,access,data,central,directory,data,end,record,get,central,directory,data,visit,start,end,record,central,directory,data,parse,entries,end,record,central,directory,data,visit,end,return,data
CentralDirectoryParser -> public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes) 			throws IOException;1519099907;Parse the source data, triggering {@link CentralDirectoryVisitor visitors}._@param data the source data_@param skipPrefixBytes if prefix bytes should be skipped_@return The actual archive data without any prefix bytes_@throws IOException on error;public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes)_			throws IOException {_		CentralDirectoryEndRecord endRecord = new CentralDirectoryEndRecord(data)__		if (skipPrefixBytes) {_			data = getArchiveData(endRecord, data)__		}_		RandomAccessData centralDirectoryData = endRecord.getCentralDirectory(data)__		visitStart(endRecord, centralDirectoryData)__		parseEntries(endRecord, centralDirectoryData)__		visitEnd()__		return data__	};parse,the,source,data,triggering,link,central,directory,visitor,visitors,param,data,the,source,data,param,skip,prefix,bytes,if,prefix,bytes,should,be,skipped,return,the,actual,archive,data,without,any,prefix,bytes,throws,ioexception,on,error;public,random,access,data,parse,random,access,data,data,boolean,skip,prefix,bytes,throws,ioexception,central,directory,end,record,end,record,new,central,directory,end,record,data,if,skip,prefix,bytes,data,get,archive,data,end,record,data,random,access,data,central,directory,data,end,record,get,central,directory,data,visit,start,end,record,central,directory,data,parse,entries,end,record,central,directory,data,visit,end,return,data
CentralDirectoryParser -> public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes) 			throws IOException;1519728495;Parse the source data, triggering {@link CentralDirectoryVisitor visitors}._@param data the source data_@param skipPrefixBytes if prefix bytes should be skipped_@return The actual archive data without any prefix bytes_@throws IOException on error;public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes)_			throws IOException {_		CentralDirectoryEndRecord endRecord = new CentralDirectoryEndRecord(data)__		if (skipPrefixBytes) {_			data = getArchiveData(endRecord, data)__		}_		RandomAccessData centralDirectoryData = endRecord.getCentralDirectory(data)__		visitStart(endRecord, centralDirectoryData)__		parseEntries(endRecord, centralDirectoryData)__		visitEnd()__		return data__	};parse,the,source,data,triggering,link,central,directory,visitor,visitors,param,data,the,source,data,param,skip,prefix,bytes,if,prefix,bytes,should,be,skipped,return,the,actual,archive,data,without,any,prefix,bytes,throws,ioexception,on,error;public,random,access,data,parse,random,access,data,data,boolean,skip,prefix,bytes,throws,ioexception,central,directory,end,record,end,record,new,central,directory,end,record,data,if,skip,prefix,bytes,data,get,archive,data,end,record,data,random,access,data,central,directory,data,end,record,get,central,directory,data,visit,start,end,record,central,directory,data,parse,entries,end,record,central,directory,data,visit,end,return,data
CentralDirectoryParser -> public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes) 			throws IOException;1532738143;Parse the source data, triggering {@link CentralDirectoryVisitor visitors}._@param data the source data_@param skipPrefixBytes if prefix bytes should be skipped_@return the actual archive data without any prefix bytes_@throws IOException on error;public RandomAccessData parse(RandomAccessData data, boolean skipPrefixBytes)_			throws IOException {_		CentralDirectoryEndRecord endRecord = new CentralDirectoryEndRecord(data)__		if (skipPrefixBytes) {_			data = getArchiveData(endRecord, data)__		}_		RandomAccessData centralDirectoryData = endRecord.getCentralDirectory(data)__		visitStart(endRecord, centralDirectoryData)__		parseEntries(endRecord, centralDirectoryData)__		visitEnd()__		return data__	};parse,the,source,data,triggering,link,central,directory,visitor,visitors,param,data,the,source,data,param,skip,prefix,bytes,if,prefix,bytes,should,be,skipped,return,the,actual,archive,data,without,any,prefix,bytes,throws,ioexception,on,error;public,random,access,data,parse,random,access,data,data,boolean,skip,prefix,bytes,throws,ioexception,central,directory,end,record,end,record,new,central,directory,end,record,data,if,skip,prefix,bytes,data,get,archive,data,end,record,data,random,access,data,central,directory,data,end,record,get,central,directory,data,visit,start,end,record,central,directory,data,parse,entries,end,record,central,directory,data,visit,end,return,data
