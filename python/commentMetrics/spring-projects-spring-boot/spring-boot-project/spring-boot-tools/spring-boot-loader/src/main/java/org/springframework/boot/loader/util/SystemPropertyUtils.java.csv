# id;timestamp;commentText;codeText;commentWords;codeWords
SystemPropertyUtils -> public static String getProperty(String key, String defaultValue, String text);1507173536;Search the System properties and environment variables for a value with the_provided key. Environment variables in {@code UPPER_CASE} style are allowed where_System properties would normally be {@code lower.case}._@param key the key to resolve_@param defaultValue the default value_@param text optional extra context for an error message if the key resolution fails_(e.g. if System properties are not accessible)_@return a static property value or null of not found;public static String getProperty(String key, String defaultValue, String text) {_		try {_			String propVal = System.getProperty(key)__			if (propVal == null) {_				_				propVal = System.getenv(key)__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.replace('.', '_'))__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.toUpperCase().replace('.', '_'))__			}_			if (propVal != null) {_				return propVal__			}_		}_		catch (Throwable ex) {_			System.err.println("Could not resolve key '" + key + "' in '" + text_					+ "' as system property or in environment: " + ex)__		}_		return defaultValue__	};search,the,system,properties,and,environment,variables,for,a,value,with,the,provided,key,environment,variables,in,code,style,are,allowed,where,system,properties,would,normally,be,code,lower,case,param,key,the,key,to,resolve,param,default,value,the,default,value,param,text,optional,extra,context,for,an,error,message,if,the,key,resolution,fails,e,g,if,system,properties,are,not,accessible,return,a,static,property,value,or,null,of,not,found;public,static,string,get,property,string,key,string,default,value,string,text,try,string,prop,val,system,get,property,key,if,prop,val,null,prop,val,system,getenv,key,if,prop,val,null,prop,val,system,getenv,key,replace,if,prop,val,null,prop,val,system,getenv,key,to,upper,case,replace,if,prop,val,null,return,prop,val,catch,throwable,ex,system,err,println,could,not,resolve,key,key,in,text,as,system,property,or,in,environment,ex,return,default,value
SystemPropertyUtils -> public static String getProperty(String key, String defaultValue, String text);1512201855;Search the System properties and environment variables for a value with the_provided key. Environment variables in {@code UPPER_CASE} style are allowed where_System properties would normally be {@code lower.case}._@param key the key to resolve_@param defaultValue the default value_@param text optional extra context for an error message if the key resolution fails_(e.g. if System properties are not accessible)_@return a static property value or null of not found;public static String getProperty(String key, String defaultValue, String text) {_		try {_			String propVal = System.getProperty(key)__			if (propVal == null) {_				_				propVal = System.getenv(key)__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.replace('.', '_'))__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.toUpperCase().replace('.', '_'))__			}_			if (propVal != null) {_				return propVal__			}_		}_		catch (Throwable ex) {_			System.err.println("Could not resolve key '" + key + "' in '" + text_					+ "' as system property or in environment: " + ex)__		}_		return defaultValue__	};search,the,system,properties,and,environment,variables,for,a,value,with,the,provided,key,environment,variables,in,code,style,are,allowed,where,system,properties,would,normally,be,code,lower,case,param,key,the,key,to,resolve,param,default,value,the,default,value,param,text,optional,extra,context,for,an,error,message,if,the,key,resolution,fails,e,g,if,system,properties,are,not,accessible,return,a,static,property,value,or,null,of,not,found;public,static,string,get,property,string,key,string,default,value,string,text,try,string,prop,val,system,get,property,key,if,prop,val,null,prop,val,system,getenv,key,if,prop,val,null,prop,val,system,getenv,key,replace,if,prop,val,null,prop,val,system,getenv,key,to,upper,case,replace,if,prop,val,null,return,prop,val,catch,throwable,ex,system,err,println,could,not,resolve,key,key,in,text,as,system,property,or,in,environment,ex,return,default,value
SystemPropertyUtils -> public static String getProperty(String key, String defaultValue, String text);1516215803;Search the System properties and environment variables for a value with the_provided key. Environment variables in {@code UPPER_CASE} style are allowed where_System properties would normally be {@code lower.case}._@param key the key to resolve_@param defaultValue the default value_@param text optional extra context for an error message if the key resolution fails_(e.g. if System properties are not accessible)_@return a static property value or null of not found;public static String getProperty(String key, String defaultValue, String text) {_		try {_			String propVal = System.getProperty(key)__			if (propVal == null) {_				_				propVal = System.getenv(key)__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.replace('.', '_'))__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.toUpperCase().replace('.', '_'))__			}_			if (propVal != null) {_				return propVal__			}_		}_		catch (Throwable ex) {_			System.err.println("Could not resolve key '" + key + "' in '" + text_					+ "' as system property or in environment: " + ex)__		}_		return defaultValue__	};search,the,system,properties,and,environment,variables,for,a,value,with,the,provided,key,environment,variables,in,code,style,are,allowed,where,system,properties,would,normally,be,code,lower,case,param,key,the,key,to,resolve,param,default,value,the,default,value,param,text,optional,extra,context,for,an,error,message,if,the,key,resolution,fails,e,g,if,system,properties,are,not,accessible,return,a,static,property,value,or,null,of,not,found;public,static,string,get,property,string,key,string,default,value,string,text,try,string,prop,val,system,get,property,key,if,prop,val,null,prop,val,system,getenv,key,if,prop,val,null,prop,val,system,getenv,key,replace,if,prop,val,null,prop,val,system,getenv,key,to,upper,case,replace,if,prop,val,null,return,prop,val,catch,throwable,ex,system,err,println,could,not,resolve,key,key,in,text,as,system,property,or,in,environment,ex,return,default,value
SystemPropertyUtils -> public static String getProperty(String key, String defaultValue, String text);1519664612;Search the System properties and environment variables for a value with the_provided key. Environment variables in {@code UPPER_CASE} style are allowed where_System properties would normally be {@code lower.case}._@param key the key to resolve_@param defaultValue the default value_@param text optional extra context for an error message if the key resolution fails_(e.g. if System properties are not accessible)_@return a static property value or null of not found;public static String getProperty(String key, String defaultValue, String text) {_		try {_			String propVal = System.getProperty(key)__			if (propVal == null) {_				_				propVal = System.getenv(key)__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.replace('.', '_'))__			}_			if (propVal == null) {_				_				propVal = System.getenv(key.toUpperCase(Locale.ENGLISH)_						.replace('.', '_'))__			}_			if (propVal != null) {_				return propVal__			}_		}_		catch (Throwable ex) {_			System.err.println("Could not resolve key '" + key + "' in '" + text_					+ "' as system property or in environment: " + ex)__		}_		return defaultValue__	};search,the,system,properties,and,environment,variables,for,a,value,with,the,provided,key,environment,variables,in,code,style,are,allowed,where,system,properties,would,normally,be,code,lower,case,param,key,the,key,to,resolve,param,default,value,the,default,value,param,text,optional,extra,context,for,an,error,message,if,the,key,resolution,fails,e,g,if,system,properties,are,not,accessible,return,a,static,property,value,or,null,of,not,found;public,static,string,get,property,string,key,string,default,value,string,text,try,string,prop,val,system,get,property,key,if,prop,val,null,prop,val,system,getenv,key,if,prop,val,null,prop,val,system,getenv,key,replace,if,prop,val,null,prop,val,system,getenv,key,to,upper,case,locale,english,replace,if,prop,val,null,return,prop,val,catch,throwable,ex,system,err,println,could,not,resolve,key,key,in,text,as,system,property,or,in,environment,ex,return,default,value
SystemPropertyUtils -> public static String getProperty(String key, String defaultValue, String text);1519669562;Search the System properties and environment variables for a value with the_provided key. Environment variables in {@code UPPER_CASE} style are allowed where_System properties would normally be {@code lower.case}._@param key the key to resolve_@param defaultValue the default value_@param text optional extra context for an error message if the key resolution fails_(e.g. if System properties are not accessible)_@return a static property value or null of not found;public static String getProperty(String key, String defaultValue, String text) {_		try {_			String propVal = System.getProperty(key)__			if (propVal == null) {_				_				propVal = System.getenv(key)__			}_			if (propVal == null) {_				_				String name = key.replace('.', '_')__				propVal = System.getenv(name)__			}_			if (propVal == null) {_				_				String name = key.toUpperCase(Locale.ENGLISH).replace('.', '_')__				propVal = System.getenv(name)__			}_			if (propVal != null) {_				return propVal__			}_		}_		catch (Throwable ex) {_			System.err.println("Could not resolve key '" + key + "' in '" + text_					+ "' as system property or in environment: " + ex)__		}_		return defaultValue__	};search,the,system,properties,and,environment,variables,for,a,value,with,the,provided,key,environment,variables,in,code,style,are,allowed,where,system,properties,would,normally,be,code,lower,case,param,key,the,key,to,resolve,param,default,value,the,default,value,param,text,optional,extra,context,for,an,error,message,if,the,key,resolution,fails,e,g,if,system,properties,are,not,accessible,return,a,static,property,value,or,null,of,not,found;public,static,string,get,property,string,key,string,default,value,string,text,try,string,prop,val,system,get,property,key,if,prop,val,null,prop,val,system,getenv,key,if,prop,val,null,string,name,key,replace,prop,val,system,getenv,name,if,prop,val,null,string,name,key,to,upper,case,locale,english,replace,prop,val,system,getenv,name,if,prop,val,null,return,prop,val,catch,throwable,ex,system,err,println,could,not,resolve,key,key,in,text,as,system,property,or,in,environment,ex,return,default,value
SystemPropertyUtils -> public static String getProperty(String key, String defaultValue, String text);1525376698;Search the System properties and environment variables for a value with the_provided key. Environment variables in {@code UPPER_CASE} style are allowed where_System properties would normally be {@code lower.case}._@param key the key to resolve_@param defaultValue the default value_@param text optional extra context for an error message if the key resolution fails_(e.g. if System properties are not accessible)_@return a static property value or null of not found;public static String getProperty(String key, String defaultValue, String text) {_		try {_			String propVal = System.getProperty(key)__			if (propVal == null) {_				_				propVal = System.getenv(key)__			}_			if (propVal == null) {_				_				String name = key.replace('.', '_')__				propVal = System.getenv(name)__			}_			if (propVal == null) {_				_				String name = key.toUpperCase(Locale.ENGLISH).replace('.', '_')__				propVal = System.getenv(name)__			}_			if (propVal != null) {_				return propVal__			}_		}_		catch (Throwable ex) {_			System.err.println("Could not resolve key '" + key + "' in '" + text_					+ "' as system property or in environment: " + ex)__		}_		return defaultValue__	};search,the,system,properties,and,environment,variables,for,a,value,with,the,provided,key,environment,variables,in,code,style,are,allowed,where,system,properties,would,normally,be,code,lower,case,param,key,the,key,to,resolve,param,default,value,the,default,value,param,text,optional,extra,context,for,an,error,message,if,the,key,resolution,fails,e,g,if,system,properties,are,not,accessible,return,a,static,property,value,or,null,of,not,found;public,static,string,get,property,string,key,string,default,value,string,text,try,string,prop,val,system,get,property,key,if,prop,val,null,prop,val,system,getenv,key,if,prop,val,null,string,name,key,replace,prop,val,system,getenv,name,if,prop,val,null,string,name,key,to,upper,case,locale,english,replace,prop,val,system,getenv,name,if,prop,val,null,return,prop,val,catch,throwable,ex,system,err,println,could,not,resolve,key,key,in,text,as,system,property,or,in,environment,ex,return,default,value
SystemPropertyUtils -> public static String getProperty(String key, String defaultValue, String text);1532738143;Search the System properties and environment variables for a value with the_provided key. Environment variables in {@code UPPER_CASE} style are allowed where_System properties would normally be {@code lower.case}._@param key the key to resolve_@param defaultValue the default value_@param text optional extra context for an error message if the key resolution fails_(e.g. if System properties are not accessible)_@return a static property value or null of not found;public static String getProperty(String key, String defaultValue, String text) {_		try {_			String propVal = System.getProperty(key)__			if (propVal == null) {_				_				propVal = System.getenv(key)__			}_			if (propVal == null) {_				_				String name = key.replace('.', '_')__				propVal = System.getenv(name)__			}_			if (propVal == null) {_				_				String name = key.toUpperCase(Locale.ENGLISH).replace('.', '_')__				propVal = System.getenv(name)__			}_			if (propVal != null) {_				return propVal__			}_		}_		catch (Throwable ex) {_			System.err.println("Could not resolve key '" + key + "' in '" + text_					+ "' as system property or in environment: " + ex)__		}_		return defaultValue__	};search,the,system,properties,and,environment,variables,for,a,value,with,the,provided,key,environment,variables,in,code,style,are,allowed,where,system,properties,would,normally,be,code,lower,case,param,key,the,key,to,resolve,param,default,value,the,default,value,param,text,optional,extra,context,for,an,error,message,if,the,key,resolution,fails,e,g,if,system,properties,are,not,accessible,return,a,static,property,value,or,null,of,not,found;public,static,string,get,property,string,key,string,default,value,string,text,try,string,prop,val,system,get,property,key,if,prop,val,null,prop,val,system,getenv,key,if,prop,val,null,string,name,key,replace,prop,val,system,getenv,name,if,prop,val,null,string,name,key,to,upper,case,locale,english,replace,prop,val,system,getenv,name,if,prop,val,null,return,prop,val,catch,throwable,ex,system,err,println,could,not,resolve,key,key,in,text,as,system,property,or,in,environment,ex,return,default,value
SystemPropertyUtils -> public static String resolvePlaceholders(Properties properties, String text);1507173536;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param properties a properties instance to use in addition to System_@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(Properties properties, String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(properties, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,properties,a,properties,instance,to,use,in,addition,to,system,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,properties,properties,string,text,if,text,null,return,text,return,parse,string,value,properties,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(Properties properties, String text);1512201855;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param properties a properties instance to use in addition to System_@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(Properties properties, String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(properties, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,properties,a,properties,instance,to,use,in,addition,to,system,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,properties,properties,string,text,if,text,null,return,text,return,parse,string,value,properties,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(Properties properties, String text);1516215803;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param properties a properties instance to use in addition to System_@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(Properties properties, String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(properties, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,properties,a,properties,instance,to,use,in,addition,to,system,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,properties,properties,string,text,if,text,null,return,text,return,parse,string,value,properties,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(Properties properties, String text);1519664612;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param properties a properties instance to use in addition to System_@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(Properties properties, String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(properties, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,properties,a,properties,instance,to,use,in,addition,to,system,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,properties,properties,string,text,if,text,null,return,text,return,parse,string,value,properties,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(Properties properties, String text);1519669562;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param properties a properties instance to use in addition to System_@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(Properties properties, String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(properties, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,properties,a,properties,instance,to,use,in,addition,to,system,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,properties,properties,string,text,if,text,null,return,text,return,parse,string,value,properties,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(Properties properties, String text);1525376698;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param properties a properties instance to use in addition to System_@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(Properties properties, String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(properties, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,properties,a,properties,instance,to,use,in,addition,to,system,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,properties,properties,string,text,if,text,null,return,text,return,parse,string,value,properties,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(Properties properties, String text);1532738143;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param properties a properties instance to use in addition to System_@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(Properties properties, String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(properties, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,properties,a,properties,instance,to,use,in,addition,to,system,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,properties,properties,string,text,if,text,null,return,text,return,parse,string,value,properties,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(String text);1507173536;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(null, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,string,text,if,text,null,return,text,return,parse,string,value,null,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(String text);1512201855;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(null, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,string,text,if,text,null,return,text,return,parse,string,value,null,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(String text);1516215803;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(null, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,string,text,if,text,null,return,text,return,parse,string,value,null,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(String text);1519664612;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(null, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,string,text,if,text,null,return,text,return,parse,string,value,null,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(String text);1519669562;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(null, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,string,text,if,text,null,return,text,return,parse,string,value,null,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(String text);1525376698;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(null, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,string,text,if,text,null,return,text,return,parse,string,value,null,text,text,new,hash,set
SystemPropertyUtils -> public static String resolvePlaceholders(String text);1532738143;Resolve ${...} placeholders in the given text, replacing them with corresponding_system property values._@param text the String to resolve_@return the resolved String_@throws IllegalArgumentException if there is an unresolvable placeholder_@see #PLACEHOLDER_PREFIX_@see #PLACEHOLDER_SUFFIX;public static String resolvePlaceholders(String text) {_		if (text == null) {_			return text__		}_		return parseStringValue(null, text, text, new HashSet<>())__	};resolve,placeholders,in,the,given,text,replacing,them,with,corresponding,system,property,values,param,text,the,string,to,resolve,return,the,resolved,string,throws,illegal,argument,exception,if,there,is,an,unresolvable,placeholder,see,see;public,static,string,resolve,placeholders,string,text,if,text,null,return,text,return,parse,string,value,null,text,text,new,hash,set
