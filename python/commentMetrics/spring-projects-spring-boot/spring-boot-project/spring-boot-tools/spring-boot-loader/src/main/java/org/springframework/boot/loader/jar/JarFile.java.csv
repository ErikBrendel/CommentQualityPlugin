# id;timestamp;commentText;codeText;commentWords;codeWords
JarFile -> public URL getUrl() throws MalformedURLException;1507173536;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1512760426;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1514004557;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1516194952;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1518087233;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1519406123;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1519669562;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1519728495;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1521215930;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1525376698;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1525416882;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1532738143;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public URL getUrl() throws MalformedURLException;1537507999;Return a URL that can be used to access this JAR file. NOTE: the specified URL_cannot be serialized and or cloned._@return the URL_@throws MalformedURLException if the URL is malformed;public URL getUrl() throws MalformedURLException {_		if (this.url == null) {_			Handler handler = new Handler(this)__			String file = this.rootFile.getFile().toURI() + this.pathFromRoot + "!/"__			file = file.replace("file:////", "file://")_ _			this.url = new URL("jar", "", -1, file, handler)__		}_		return this.url__	};return,a,url,that,can,be,used,to,access,this,jar,file,note,the,specified,url,cannot,be,serialized,and,or,cloned,return,the,url,throws,malformed,urlexception,if,the,url,is,malformed;public,url,get,url,throws,malformed,urlexception,if,this,url,null,handler,handler,new,handler,this,string,file,this,root,file,get,file,to,uri,this,path,from,root,file,file,replace,file,file,this,url,new,url,jar,1,file,handler,return,this,url
JarFile -> public static void registerUrlProtocolHandler();1507173536;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1512760426;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1514004557;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1516194952;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1518087233;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1519406123;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1519669562;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1519728495;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1521215930;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1525376698;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1525416882;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1532738143;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> public static void registerUrlProtocolHandler();1537507999;Register a {@literal 'java.protocol.handler.pkgs'} property so that a_{@link URLStreamHandler} will be located to deal with jar URLs.;public static void registerUrlProtocolHandler() {_		String handlers = System.getProperty(PROTOCOL_HANDLER, "")__		System.setProperty(PROTOCOL_HANDLER, ("".equals(handlers) ? HANDLERS_PACKAGE_				: handlers + "|" + HANDLERS_PACKAGE))__		resetCachedUrlHandlers()__	};register,a,literal,java,protocol,handler,pkgs,property,so,that,a,link,urlstream,handler,will,be,located,to,deal,with,jar,urls;public,static,void,register,url,protocol,handler,string,handlers,system,get,property,system,set,property,equals,handlers,handlers,reset,cached,url,handlers
JarFile -> private static void resetCachedUrlHandlers();1507173536;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1512760426;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1514004557;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1516194952;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1518087233;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1519406123;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1519669562;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1519728495;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1521215930;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1525376698;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1525416882;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1532738143;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private static void resetCachedUrlHandlers();1537507999;Reset any cached handlers just in case a jar protocol has already been used. We_reset the handler by trying to set a null {@link URLStreamHandlerFactory} which_should have no effect other than clearing the handlers cache.;private static void resetCachedUrlHandlers() {_		try {_			URL.setURLStreamHandlerFactory(null)__		}_		catch (Error ex) {_			_		}_	};reset,any,cached,handlers,just,in,case,a,jar,protocol,has,already,been,used,we,reset,the,handler,by,trying,to,set,a,null,link,urlstream,handler,factory,which,should,have,no,effect,other,than,clearing,the,handlers,cache;private,static,void,reset,cached,url,handlers,try,url,set,urlstream,handler,factory,null,catch,error,ex
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1507173536;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1512760426;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1514004557;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1516194952;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1518087233;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1519406123;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1519669562;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1519728495;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1521215930;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type, null)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type,null
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1525376698;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type, null)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type,null
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1525416882;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type, null)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type,null
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1532738143;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type, null)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type,null
JarFile -> private JarFile(RandomAccessDataFile rootFile, String pathFromRoot, 			RandomAccessData data, JarFileType type) throws IOException;1537507999;Private constructor used to create a new {@link JarFile} either directly or from a_nested entry._@param rootFile the root jar file_@param pathFromRoot the name of this file_@param data the underlying data_@param type the type of the jar file_@throws IOException if the file cannot be read;private JarFile(RandomAccessDataFile rootFile, String pathFromRoot,_			RandomAccessData data, JarFileType type) throws IOException {_		this(rootFile, pathFromRoot, data, null, type, null)__	};private,constructor,used,to,create,a,new,link,jar,file,either,directly,or,from,a,nested,entry,param,root,file,the,root,jar,file,param,path,from,root,the,name,of,this,file,param,data,the,underlying,data,param,type,the,type,of,the,jar,file,throws,ioexception,if,the,file,cannot,be,read;private,jar,file,random,access,data,file,root,file,string,path,from,root,random,access,data,data,jar,file,type,type,throws,ioexception,this,root,file,path,from,root,data,null,type,null
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1514004557;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1516194952;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1518087233;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1519406123;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1519669562;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1519728495;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1521215930;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1525376698;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1525416882;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1532738143;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException;1537507999;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(ZipEntry entry) throws IOException {_		return getNestedJarFile((JarEntry) entry)__	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,zip,entry,entry,throws,ioexception,return,get,nested,jar,file,jar,entry,entry
JarFile -> public JarFile(File file) throws IOException;1507173536;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1512760426;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1514004557;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1516194952;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1518087233;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1519406123;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1519669562;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1519728495;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1521215930;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1525376698;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1525416882;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1532738143;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> public JarFile(File file) throws IOException;1537507999;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;public JarFile(File file) throws IOException {_		this(new RandomAccessDataFile(file))__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;public,jar,file,file,file,throws,ioexception,this,new,random,access,data,file,file
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1507173536;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1512760426;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1514004557;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1516194952;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1518087233;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1519406123;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1519669562;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1519728495;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1521215930;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1525376698;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1525416882;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1532738143;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> JarFile(RandomAccessDataFile file) throws IOException;1537507999;Create a new {@link JarFile} backed by the specified file._@param file the root jar file_@throws IOException if the file cannot be read;JarFile(RandomAccessDataFile file) throws IOException {_		this(file, "", file, JarFileType.DIRECT)__	};create,a,new,link,jar,file,backed,by,the,specified,file,param,file,the,root,jar,file,throws,ioexception,if,the,file,cannot,be,read;jar,file,random,access,data,file,file,throws,ioexception,this,file,file,jar,file,type,direct
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1507173536;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1512760426;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1514004557;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1516194952;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1518087233;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1519406123;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1519669562;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1519728495;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1521215930;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1525376698;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1525416882;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1532738143;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
JarFile -> public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException;1537507999;Return a nested {@link JarFile} loaded from the specified entry._@param entry the zip entry_@return a {@link JarFile} for the entry_@throws IOException if the nested jar file cannot be read;public synchronized JarFile getNestedJarFile(JarEntry entry) throws IOException {_		try {_			return createJarFileFromEntry(entry)__		}_		catch (Exception ex) {_			throw new IOException(_					"Unable to open nested jar file '" + entry.getName() + "'", ex)__		}_	};return,a,nested,link,jar,file,loaded,from,the,specified,entry,param,entry,the,zip,entry,return,a,link,jar,file,for,the,entry,throws,ioexception,if,the,nested,jar,file,cannot,be,read;public,synchronized,jar,file,get,nested,jar,file,jar,entry,entry,throws,ioexception,try,return,create,jar,file,from,entry,entry,catch,exception,ex,throw,new,ioexception,unable,to,open,nested,jar,file,entry,get,name,ex
