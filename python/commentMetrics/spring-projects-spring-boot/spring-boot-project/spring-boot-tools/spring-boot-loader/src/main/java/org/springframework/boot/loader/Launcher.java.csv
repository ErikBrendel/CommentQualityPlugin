# id;timestamp;commentText;codeText;commentWords;codeWords
Launcher -> protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args, 			ClassLoader classLoader);1507173536;Create the {@code MainMethodRunner} used to launch the application._@param mainClass the main class_@param args the incoming arguments_@param classLoader the classloader_@return the main method runner;protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args,_			ClassLoader classLoader) {_		return new MainMethodRunner(mainClass, args)__	};create,the,code,main,method,runner,used,to,launch,the,application,param,main,class,the,main,class,param,args,the,incoming,arguments,param,class,loader,the,classloader,return,the,main,method,runner;protected,main,method,runner,create,main,method,runner,string,main,class,string,args,class,loader,class,loader,return,new,main,method,runner,main,class,args
Launcher -> protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args, 			ClassLoader classLoader);1519362690;Create the {@code MainMethodRunner} used to launch the application._@param mainClass the main class_@param args the incoming arguments_@param classLoader the classloader_@return the main method runner;protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args,_			ClassLoader classLoader) {_		return new MainMethodRunner(mainClass, args)__	};create,the,code,main,method,runner,used,to,launch,the,application,param,main,class,the,main,class,param,args,the,incoming,arguments,param,class,loader,the,classloader,return,the,main,method,runner;protected,main,method,runner,create,main,method,runner,string,main,class,string,args,class,loader,class,loader,return,new,main,method,runner,main,class,args
Launcher -> protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args, 			ClassLoader classLoader);1525376698;Create the {@code MainMethodRunner} used to launch the application._@param mainClass the main class_@param args the incoming arguments_@param classLoader the classloader_@return the main method runner;protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args,_			ClassLoader classLoader) {_		return new MainMethodRunner(mainClass, args)__	};create,the,code,main,method,runner,used,to,launch,the,application,param,main,class,the,main,class,param,args,the,incoming,arguments,param,class,loader,the,classloader,return,the,main,method,runner;protected,main,method,runner,create,main,method,runner,string,main,class,string,args,class,loader,class,loader,return,new,main,method,runner,main,class,args
Launcher -> protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args, 			ClassLoader classLoader);1532738143;Create the {@code MainMethodRunner} used to launch the application._@param mainClass the main class_@param args the incoming arguments_@param classLoader the classloader_@return the main method runner;protected MainMethodRunner createMainMethodRunner(String mainClass, String[] args,_			ClassLoader classLoader) {_		return new MainMethodRunner(mainClass, args)__	};create,the,code,main,method,runner,used,to,launch,the,application,param,main,class,the,main,class,param,args,the,incoming,arguments,param,class,loader,the,classloader,return,the,main,method,runner;protected,main,method,runner,create,main,method,runner,string,main,class,string,args,class,loader,class,loader,return,new,main,method,runner,main,class,args
Launcher -> protected void launch(String[] args, String mainClass, ClassLoader classLoader) 			throws Exception;1507173536;Launch the application given the archive file and a fully configured classloader._@param args the incoming arguments_@param mainClass the main class to run_@param classLoader the classloader_@throws Exception if the launch fails;protected void launch(String[] args, String mainClass, ClassLoader classLoader)_			throws Exception {_		Thread.currentThread().setContextClassLoader(classLoader)__		createMainMethodRunner(mainClass, args, classLoader).run()__	};launch,the,application,given,the,archive,file,and,a,fully,configured,classloader,param,args,the,incoming,arguments,param,main,class,the,main,class,to,run,param,class,loader,the,classloader,throws,exception,if,the,launch,fails;protected,void,launch,string,args,string,main,class,class,loader,class,loader,throws,exception,thread,current,thread,set,context,class,loader,class,loader,create,main,method,runner,main,class,args,class,loader,run
Launcher -> protected void launch(String[] args, String mainClass, ClassLoader classLoader) 			throws Exception;1519362690;Launch the application given the archive file and a fully configured classloader._@param args the incoming arguments_@param mainClass the main class to run_@param classLoader the classloader_@throws Exception if the launch fails;protected void launch(String[] args, String mainClass, ClassLoader classLoader)_			throws Exception {_		Thread.currentThread().setContextClassLoader(classLoader)__		createMainMethodRunner(mainClass, args, classLoader).run()__	};launch,the,application,given,the,archive,file,and,a,fully,configured,classloader,param,args,the,incoming,arguments,param,main,class,the,main,class,to,run,param,class,loader,the,classloader,throws,exception,if,the,launch,fails;protected,void,launch,string,args,string,main,class,class,loader,class,loader,throws,exception,thread,current,thread,set,context,class,loader,class,loader,create,main,method,runner,main,class,args,class,loader,run
Launcher -> protected void launch(String[] args, String mainClass, ClassLoader classLoader) 			throws Exception;1525376698;Launch the application given the archive file and a fully configured classloader._@param args the incoming arguments_@param mainClass the main class to run_@param classLoader the classloader_@throws Exception if the launch fails;protected void launch(String[] args, String mainClass, ClassLoader classLoader)_			throws Exception {_		Thread.currentThread().setContextClassLoader(classLoader)__		createMainMethodRunner(mainClass, args, classLoader).run()__	};launch,the,application,given,the,archive,file,and,a,fully,configured,classloader,param,args,the,incoming,arguments,param,main,class,the,main,class,to,run,param,class,loader,the,classloader,throws,exception,if,the,launch,fails;protected,void,launch,string,args,string,main,class,class,loader,class,loader,throws,exception,thread,current,thread,set,context,class,loader,class,loader,create,main,method,runner,main,class,args,class,loader,run
Launcher -> protected void launch(String[] args, String mainClass, ClassLoader classLoader) 			throws Exception;1532738143;Launch the application given the archive file and a fully configured classloader._@param args the incoming arguments_@param mainClass the main class to run_@param classLoader the classloader_@throws Exception if the launch fails;protected void launch(String[] args, String mainClass, ClassLoader classLoader)_			throws Exception {_		Thread.currentThread().setContextClassLoader(classLoader)__		createMainMethodRunner(mainClass, args, classLoader).run()__	};launch,the,application,given,the,archive,file,and,a,fully,configured,classloader,param,args,the,incoming,arguments,param,main,class,the,main,class,to,run,param,class,loader,the,classloader,throws,exception,if,the,launch,fails;protected,void,launch,string,args,string,main,class,class,loader,class,loader,throws,exception,thread,current,thread,set,context,class,loader,class,loader,create,main,method,runner,main,class,args,class,loader,run
Launcher -> protected abstract String getMainClass() throws Exception_;1507173536;Returns the main class that should be launched._@return the name of the main class_@throws Exception if the main class cannot be obtained;protected abstract String getMainClass() throws Exception_;returns,the,main,class,that,should,be,launched,return,the,name,of,the,main,class,throws,exception,if,the,main,class,cannot,be,obtained;protected,abstract,string,get,main,class,throws,exception
Launcher -> protected abstract String getMainClass() throws Exception_;1519362690;Returns the main class that should be launched._@return the name of the main class_@throws Exception if the main class cannot be obtained;protected abstract String getMainClass() throws Exception_;returns,the,main,class,that,should,be,launched,return,the,name,of,the,main,class,throws,exception,if,the,main,class,cannot,be,obtained;protected,abstract,string,get,main,class,throws,exception
Launcher -> protected abstract String getMainClass() throws Exception_;1525376698;Returns the main class that should be launched._@return the name of the main class_@throws Exception if the main class cannot be obtained;protected abstract String getMainClass() throws Exception_;returns,the,main,class,that,should,be,launched,return,the,name,of,the,main,class,throws,exception,if,the,main,class,cannot,be,obtained;protected,abstract,string,get,main,class,throws,exception
Launcher -> protected abstract String getMainClass() throws Exception_;1532738143;Returns the main class that should be launched._@return the name of the main class_@throws Exception if the main class cannot be obtained;protected abstract String getMainClass() throws Exception_;returns,the,main,class,that,should,be,launched,return,the,name,of,the,main,class,throws,exception,if,the,main,class,cannot,be,obtained;protected,abstract,string,get,main,class,throws,exception
Launcher -> protected ClassLoader createClassLoader(List<Archive> archives) throws Exception;1507173536;Create a classloader for the specified archives._@param archives the archives_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(List<Archive> archives) throws Exception {_		List<URL> urls = new ArrayList<>(archives.size())__		for (Archive archive : archives) {_			urls.add(archive.getUrl())__		}_		return createClassLoader(urls.toArray(new URL[urls.size()]))__	};create,a,classloader,for,the,specified,archives,param,archives,the,archives,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,list,archive,archives,throws,exception,list,url,urls,new,array,list,archives,size,for,archive,archive,archives,urls,add,archive,get,url,return,create,class,loader,urls,to,array,new,url,urls,size
Launcher -> protected ClassLoader createClassLoader(List<Archive> archives) throws Exception;1519362690;Create a classloader for the specified archives._@param archives the archives_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(List<Archive> archives) throws Exception {_		List<URL> urls = new ArrayList<>(archives.size())__		for (Archive archive : archives) {_			urls.add(archive.getUrl())__		}_		return createClassLoader(urls.toArray(new URL[0]))__	};create,a,classloader,for,the,specified,archives,param,archives,the,archives,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,list,archive,archives,throws,exception,list,url,urls,new,array,list,archives,size,for,archive,archive,archives,urls,add,archive,get,url,return,create,class,loader,urls,to,array,new,url,0
Launcher -> protected ClassLoader createClassLoader(List<Archive> archives) throws Exception;1525376698;Create a classloader for the specified archives._@param archives the archives_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(List<Archive> archives) throws Exception {_		List<URL> urls = new ArrayList<>(archives.size())__		for (Archive archive : archives) {_			urls.add(archive.getUrl())__		}_		return createClassLoader(urls.toArray(new URL[0]))__	};create,a,classloader,for,the,specified,archives,param,archives,the,archives,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,list,archive,archives,throws,exception,list,url,urls,new,array,list,archives,size,for,archive,archive,archives,urls,add,archive,get,url,return,create,class,loader,urls,to,array,new,url,0
Launcher -> protected ClassLoader createClassLoader(List<Archive> archives) throws Exception;1532738143;Create a classloader for the specified archives._@param archives the archives_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(List<Archive> archives) throws Exception {_		List<URL> urls = new ArrayList<>(archives.size())__		for (Archive archive : archives) {_			urls.add(archive.getUrl())__		}_		return createClassLoader(urls.toArray(new URL[0]))__	};create,a,classloader,for,the,specified,archives,param,archives,the,archives,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,list,archive,archives,throws,exception,list,url,urls,new,array,list,archives,size,for,archive,archive,archives,urls,add,archive,get,url,return,create,class,loader,urls,to,array,new,url,0
Launcher -> protected abstract List<Archive> getClassPathArchives() throws Exception_;1507173536;Returns the archives that will be used to construct the class path._@return the class path archives_@throws Exception if the class path archives cannot be obtained;protected abstract List<Archive> getClassPathArchives() throws Exception_;returns,the,archives,that,will,be,used,to,construct,the,class,path,return,the,class,path,archives,throws,exception,if,the,class,path,archives,cannot,be,obtained;protected,abstract,list,archive,get,class,path,archives,throws,exception
Launcher -> protected abstract List<Archive> getClassPathArchives() throws Exception_;1519362690;Returns the archives that will be used to construct the class path._@return the class path archives_@throws Exception if the class path archives cannot be obtained;protected abstract List<Archive> getClassPathArchives() throws Exception_;returns,the,archives,that,will,be,used,to,construct,the,class,path,return,the,class,path,archives,throws,exception,if,the,class,path,archives,cannot,be,obtained;protected,abstract,list,archive,get,class,path,archives,throws,exception
Launcher -> protected abstract List<Archive> getClassPathArchives() throws Exception_;1525376698;Returns the archives that will be used to construct the class path._@return the class path archives_@throws Exception if the class path archives cannot be obtained;protected abstract List<Archive> getClassPathArchives() throws Exception_;returns,the,archives,that,will,be,used,to,construct,the,class,path,return,the,class,path,archives,throws,exception,if,the,class,path,archives,cannot,be,obtained;protected,abstract,list,archive,get,class,path,archives,throws,exception
Launcher -> protected abstract List<Archive> getClassPathArchives() throws Exception_;1532738143;Returns the archives that will be used to construct the class path._@return the class path archives_@throws Exception if the class path archives cannot be obtained;protected abstract List<Archive> getClassPathArchives() throws Exception_;returns,the,archives,that,will,be,used,to,construct,the,class,path,return,the,class,path,archives,throws,exception,if,the,class,path,archives,cannot,be,obtained;protected,abstract,list,archive,get,class,path,archives,throws,exception
Launcher -> protected ClassLoader createClassLoader(URL[] urls) throws Exception;1507173536;Create a classloader for the specified URLs._@param urls the URLs_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(URL[] urls) throws Exception {_		return new LaunchedURLClassLoader(urls, getClass().getClassLoader())__	};create,a,classloader,for,the,specified,urls,param,urls,the,urls,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,url,urls,throws,exception,return,new,launched,urlclass,loader,urls,get,class,get,class,loader
Launcher -> protected ClassLoader createClassLoader(URL[] urls) throws Exception;1519362690;Create a classloader for the specified URLs._@param urls the URLs_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(URL[] urls) throws Exception {_		return new LaunchedURLClassLoader(urls, getClass().getClassLoader())__	};create,a,classloader,for,the,specified,urls,param,urls,the,urls,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,url,urls,throws,exception,return,new,launched,urlclass,loader,urls,get,class,get,class,loader
Launcher -> protected ClassLoader createClassLoader(URL[] urls) throws Exception;1525376698;Create a classloader for the specified URLs._@param urls the URLs_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(URL[] urls) throws Exception {_		return new LaunchedURLClassLoader(urls, getClass().getClassLoader())__	};create,a,classloader,for,the,specified,urls,param,urls,the,urls,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,url,urls,throws,exception,return,new,launched,urlclass,loader,urls,get,class,get,class,loader
Launcher -> protected ClassLoader createClassLoader(URL[] urls) throws Exception;1532738143;Create a classloader for the specified URLs._@param urls the URLs_@return the classloader_@throws Exception if the classloader cannot be created;protected ClassLoader createClassLoader(URL[] urls) throws Exception {_		return new LaunchedURLClassLoader(urls, getClass().getClassLoader())__	};create,a,classloader,for,the,specified,urls,param,urls,the,urls,return,the,classloader,throws,exception,if,the,classloader,cannot,be,created;protected,class,loader,create,class,loader,url,urls,throws,exception,return,new,launched,urlclass,loader,urls,get,class,get,class,loader
Launcher -> protected void launch(String[] args) throws Exception;1507173536;Launch the application. This method is the initial entry point that should be_called by a subclass {@code public static void main(String[] args)} method._@param args the incoming arguments_@throws Exception if the application fails to launch;protected void launch(String[] args) throws Exception {_		JarFile.registerUrlProtocolHandler()__		ClassLoader classLoader = createClassLoader(getClassPathArchives())__		launch(args, getMainClass(), classLoader)__	};launch,the,application,this,method,is,the,initial,entry,point,that,should,be,called,by,a,subclass,code,public,static,void,main,string,args,method,param,args,the,incoming,arguments,throws,exception,if,the,application,fails,to,launch;protected,void,launch,string,args,throws,exception,jar,file,register,url,protocol,handler,class,loader,class,loader,create,class,loader,get,class,path,archives,launch,args,get,main,class,class,loader
Launcher -> protected void launch(String[] args) throws Exception;1519362690;Launch the application. This method is the initial entry point that should be_called by a subclass {@code public static void main(String[] args)} method._@param args the incoming arguments_@throws Exception if the application fails to launch;protected void launch(String[] args) throws Exception {_		JarFile.registerUrlProtocolHandler()__		ClassLoader classLoader = createClassLoader(getClassPathArchives())__		launch(args, getMainClass(), classLoader)__	};launch,the,application,this,method,is,the,initial,entry,point,that,should,be,called,by,a,subclass,code,public,static,void,main,string,args,method,param,args,the,incoming,arguments,throws,exception,if,the,application,fails,to,launch;protected,void,launch,string,args,throws,exception,jar,file,register,url,protocol,handler,class,loader,class,loader,create,class,loader,get,class,path,archives,launch,args,get,main,class,class,loader
Launcher -> protected void launch(String[] args) throws Exception;1525376698;Launch the application. This method is the initial entry point that should be_called by a subclass {@code public static void main(String[] args)} method._@param args the incoming arguments_@throws Exception if the application fails to launch;protected void launch(String[] args) throws Exception {_		JarFile.registerUrlProtocolHandler()__		ClassLoader classLoader = createClassLoader(getClassPathArchives())__		launch(args, getMainClass(), classLoader)__	};launch,the,application,this,method,is,the,initial,entry,point,that,should,be,called,by,a,subclass,code,public,static,void,main,string,args,method,param,args,the,incoming,arguments,throws,exception,if,the,application,fails,to,launch;protected,void,launch,string,args,throws,exception,jar,file,register,url,protocol,handler,class,loader,class,loader,create,class,loader,get,class,path,archives,launch,args,get,main,class,class,loader
Launcher -> protected void launch(String[] args) throws Exception;1532738143;Launch the application. This method is the initial entry point that should be_called by a subclass {@code public static void main(String[] args)} method._@param args the incoming arguments_@throws Exception if the application fails to launch;protected void launch(String[] args) throws Exception {_		JarFile.registerUrlProtocolHandler()__		ClassLoader classLoader = createClassLoader(getClassPathArchives())__		launch(args, getMainClass(), classLoader)__	};launch,the,application,this,method,is,the,initial,entry,point,that,should,be,called,by,a,subclass,code,public,static,void,main,string,args,method,param,args,the,incoming,arguments,throws,exception,if,the,application,fails,to,launch;protected,void,launch,string,args,throws,exception,jar,file,register,url,protocol,handler,class,loader,class,loader,create,class,loader,get,class,path,archives,launch,args,get,main,class,class,loader
