commented;modifiers;parameterAmount;loc;comment;code
false;;0;3;;AsciiBytes getAsciiBytesName() {     return this.name. }
false;public;2;4;;@Override public boolean hasName(CharSequence name, char suffix) {     return this.headerName.matches(name, suffix). }
true;;0;3;/**  * Return a {@link URL} for this {@link JarEntry}.  * @return the URL for the entry  * @throws MalformedURLException if the URL is not valid  */ ;/**  * Return a {@link URL} for this {@link JarEntry}.  * @return the URL for the entry  * @throws MalformedURLException if the URL is not valid  */ URL getUrl() throws MalformedURLException {     return new URL(this.jarFile.getUrl(), getName()). }
false;public;0;5;;@Override public Attributes getAttributes() throws IOException {     Manifest manifest = this.jarFile.getManifest().     return (manifest != null) ? manifest.getAttributes(getName()) : null. }
false;public;0;7;;@Override public Certificate[] getCertificates() {     if (this.jarFile.isSigned() && this.certificates == null) {         this.jarFile.setupEntryCertificates(this).     }     return this.certificates. }
false;public;0;7;;@Override public CodeSigner[] getCodeSigners() {     if (this.jarFile.isSigned() && this.codeSigners == null) {         this.jarFile.setupEntryCertificates(this).     }     return this.codeSigners. }
false;;1;4;;void setCertificates(java.util.jar.JarEntry entry) {     this.certificates = entry.getCertificates().     this.codeSigners = entry.getCodeSigners(). }
false;public;0;4;;@Override public long getLocalHeaderOffset() {     return this.localHeaderOffset. }
