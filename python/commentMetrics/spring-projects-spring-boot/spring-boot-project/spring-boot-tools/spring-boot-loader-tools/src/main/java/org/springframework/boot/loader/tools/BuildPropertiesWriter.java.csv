commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public void writeBuildProperties(ProjectDetails projectDetails) throws IOException {     Properties properties = createBuildInfo(projectDetails).     createFileIfNecessary(this.outputFile).     try (FileOutputStream outputStream = new FileOutputStream(this.outputFile)) {         properties.store(outputStream, "Properties").     } }
false;private;1;14;;private void createFileIfNecessary(File file) throws IOException {     if (file.exists()) {         return.     }     File parent = file.getParentFile().     if (!parent.isDirectory() && !parent.mkdirs()) {         throw new IllegalStateException("Cannot create parent directory for '" + this.outputFile.getAbsolutePath() + "'").     }     if (!file.createNewFile()) {         throw new IllegalStateException("Cannot create target file '" + this.outputFile.getAbsolutePath() + "'").     } }
false;protected;1;16;;protected Properties createBuildInfo(ProjectDetails project) {     Properties properties = new Properties().     properties.put("build.group", project.getGroup()).     properties.put("build.artifact", project.getArtifact()).     properties.put("build.name", project.getName()).     properties.put("build.version", project.getVersion()).     if (project.getTime() != null) {         properties.put("build.time", DateTimeFormatter.ISO_INSTANT.format(project.getTime())).     }     if (project.getAdditionalProperties() != null) {         project.getAdditionalProperties().forEach((name, value) -> properties.put("build." + name, value)).     }     return properties. }
false;private,static;1;10;;private static void validateAdditionalProperties(Map<String, String> additionalProperties) {     if (additionalProperties != null) {         additionalProperties.forEach((name, value) -> {             if (value == null) {                 throw new NullAdditionalPropertyValueException(name).             }         }).     } }
false;public;0;3;;public String getGroup() {     return this.group. }
false;public;0;3;;public String getArtifact() {     return this.artifact. }
false;public;0;3;;public String getName() {     return this.name. }
false;public;0;3;;public String getVersion() {     return this.version. }
false;public;0;3;;public Instant getTime() {     return this.time. }
false;public;0;3;;public Map<String, String> getAdditionalProperties() {     return this.additionalProperties. }
