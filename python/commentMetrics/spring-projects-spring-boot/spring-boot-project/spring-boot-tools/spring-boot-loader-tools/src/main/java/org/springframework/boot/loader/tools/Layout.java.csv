commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the launcher class name for this layout.  * @return the launcher class name  */ ;/**  * Returns the launcher class name for this layout.  * @return the launcher class name  */ String getLauncherClassName().
true;;2;1;/**  * Returns the destination path for a given library.  * @param libraryName the name of the library (excluding any path)  * @param scope the scope of the library  * @return the destination relative to the root of the archive (should end with '/')  * or {@code null} if the library should not be included.  */ ;/**  * Returns the destination path for a given library.  * @param libraryName the name of the library (excluding any path)  * @param scope the scope of the library  * @return the destination relative to the root of the archive (should end with '/')  * or {@code null} if the library should not be included.  */ String getLibraryDestination(String libraryName, LibraryScope scope).
true;;0;1;/**  * Returns the location of classes within the archive.  * @return the classes location  */ ;/**  * Returns the location of classes within the archive.  * @return the classes location  */ String getClassesLocation().
true;;0;1;/**  * Returns if loader classes should be included to make the archive executable.  * @return if the layout is executable  */ ;/**  * Returns if loader classes should be included to make the archive executable.  * @return if the layout is executable  */ boolean isExecutable().
