commented;modifiers;parameterAmount;loc;comment;code
false;private;1;7;;private File findInJavaHome(String javaHome) {     File bin = new File(new File(javaHome), "bin").     File command = new File(bin, "java.exe").     command = command.exists() ? command : new File(bin, "java").     Assert.state(command.exists(), () -> "Unable to find java in " + javaHome).     return command. }
true;public;1;5;/**  * Create a new {@link ProcessBuilder} that will run with the Java executable.  * @param arguments the command arguments  * @return a {@link ProcessBuilder}  */ ;/**  * Create a new {@link ProcessBuilder} that will run with the Java executable.  * @param arguments the command arguments  * @return a {@link ProcessBuilder}  */ public ProcessBuilder processBuilder(String... arguments) {     ProcessBuilder processBuilder = new ProcessBuilder(toString()).     processBuilder.command().addAll(Arrays.asList(arguments)).     return processBuilder. }
false;public;0;9;;@Override public String toString() {     try {         return this.file.getCanonicalPath().     } catch (IOException ex) {         throw new IllegalStateException(ex).     } }
