# id;timestamp;commentText;codeText;commentWords;codeWords
Repackager -> public void setBackupSource(boolean backupSource);1507173536;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setBackupSource(boolean backupSource);1517485113;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setBackupSource(boolean backupSource);1520861622;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setBackupSource(boolean backupSource);1543327795;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setBackupSource(boolean backupSource);1545728419;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setBackupSource(boolean backupSource);1549028882;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setBackupSource(boolean backupSource);1549989735;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setBackupSource(boolean backupSource);1550683719;Sets if source files should be backed up when they would be overwritten._@param backupSource if source files should be backed up;public void setBackupSource(boolean backupSource) {_		this.backupSource = backupSource__	};sets,if,source,files,should,be,backed,up,when,they,would,be,overwritten,param,backup,source,if,source,files,should,be,backed,up;public,void,set,backup,source,boolean,backup,source,this,backup,source,backup,source
Repackager -> public void setLayout(Layout layout);1507173536;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayout(Layout layout);1517485113;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayout(Layout layout);1520861622;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayout(Layout layout);1543327795;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayout(Layout layout);1545728419;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayout(Layout layout);1549028882;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayout(Layout layout);1549989735;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayout(Layout layout);1550683719;Sets the layout to use for the jar. Defaults to {@link Layouts#forFile(File)}._@param layout the layout;public void setLayout(Layout layout) {_		if (layout == null) {_			throw new IllegalArgumentException("Layout must not be null")__		}_		this.layout = layout__	};sets,the,layout,to,use,for,the,jar,defaults,to,link,layouts,for,file,file,param,layout,the,layout;public,void,set,layout,layout,layout,if,layout,null,throw,new,illegal,argument,exception,layout,must,not,be,null,this,layout,layout
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1507173536;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1517485113;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1520861622;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1543327795;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1545728419;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1549028882;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1549989735;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> public void setLayoutFactory(LayoutFactory layoutFactory);1550683719;Sets the layout factory for the jar. The factory can be used when no specific_layout is specified._@param layoutFactory the layout factory to set;public void setLayoutFactory(LayoutFactory layoutFactory) {_		this.layoutFactory = layoutFactory__	};sets,the,layout,factory,for,the,jar,the,factory,can,be,used,when,no,specific,layout,is,specified,param,layout,factory,the,layout,factory,to,set;public,void,set,layout,factory,layout,factory,layout,factory,this,layout,factory,layout,factory
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1507173536;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1517485113;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1520861622;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1543327795;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1545728419;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1549028882;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1549989735;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> MainClassTimeoutWarningListener -> void handleTimeoutWarning(long duration, String mainMethod)_;1550683719;Handle a timeout warning._@param duration the amount of time it took to find the main method_@param mainMethod the main method that was actually found;void handleTimeoutWarning(long duration, String mainMethod)_;handle,a,timeout,warning,param,duration,the,amount,of,time,it,took,to,find,the,main,method,param,main,method,the,main,method,that,was,actually,found;void,handle,timeout,warning,long,duration,string,main,method
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1507173536;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1517485113;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1520861622;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1543327795;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1545728419;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1549028882;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1549989735;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void addMainClassTimeoutWarningListener( 			MainClassTimeoutWarningListener listener);1550683719;Add a listener that will be triggered to display a warning if searching for the_main class takes too long._@param listener the listener to add;public void addMainClassTimeoutWarningListener(_			MainClassTimeoutWarningListener listener) {_		this.mainClassTimeoutListeners.add(listener)__	};add,a,listener,that,will,be,triggered,to,display,a,warning,if,searching,for,the,main,class,takes,too,long,param,listener,the,listener,to,add;public,void,add,main,class,timeout,warning,listener,main,class,timeout,warning,listener,listener,this,main,class,timeout,listeners,add,listener
Repackager -> public void setMainClass(String mainClass);1507173536;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void setMainClass(String mainClass);1517485113;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void setMainClass(String mainClass);1520861622;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void setMainClass(String mainClass);1543327795;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void setMainClass(String mainClass);1545728419;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void setMainClass(String mainClass);1549028882;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void setMainClass(String mainClass);1549989735;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void setMainClass(String mainClass);1550683719;Sets the main class that should be run. If not specified the value from the_MANIFEST will be used, or if no manifest entry is found the archive will be_searched for a suitable class._@param mainClass the main class name;public void setMainClass(String mainClass) {_		this.mainClass = mainClass__	};sets,the,main,class,that,should,be,run,if,not,specified,the,value,from,the,manifest,will,be,used,or,if,no,manifest,entry,is,found,the,archive,will,be,searched,for,a,suitable,class,param,main,class,the,main,class,name;public,void,set,main,class,string,main,class,this,main,class,main,class
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1507173536;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		if (alreadyRepackaged()) {_			return__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,if,already,repackaged,return,destination,destination,get,absolute,file,file,working,source,this,source,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1517485113;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		if (alreadyRepackaged()) {_			return__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,if,already,repackaged,return,destination,destination,get,absolute,file,file,working,source,this,source,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1520861622;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		if (alreadyRepackaged()) {_			return__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,if,already,repackaged,return,destination,destination,get,absolute,file,file,working,source,this,source,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1543327795;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (alreadyRepackaged() && this.source.equals(destination)) {_			return__		}_		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,destination,destination,get,absolute,file,file,working,source,this,source,if,already,repackaged,this,source,equals,destination,return,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1545728419;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (alreadyRepackaged() && this.source.equals(destination)) {_			return__		}_		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,destination,destination,get,absolute,file,file,working,source,this,source,if,already,repackaged,this,source,equals,destination,return,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1549028882;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (alreadyRepackaged() && this.source.equals(destination)) {_			return__		}_		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,destination,destination,get,absolute,file,file,working,source,this,source,if,already,repackaged,this,source,equals,destination,return,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1549989735;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (alreadyRepackaged() && this.source.equals(destination)) {_			return__		}_		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,destination,destination,get,absolute,file,file,working,source,this,source,if,already,repackaged,this,source,equals,destination,return,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public void repackage(File destination, Libraries libraries, 			LaunchScript launchScript) throws IOException;1550683719;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@param launchScript an optional launch script prepended to the front of the jar_@throws IOException if the file cannot be repackaged_@since 1.3.0;public void repackage(File destination, Libraries libraries,_			LaunchScript launchScript) throws IOException {_		if (destination == null || destination.isDirectory()) {_			throw new IllegalArgumentException("Invalid destination")__		}_		if (libraries == null) {_			throw new IllegalArgumentException("Libraries must not be null")__		}_		if (this.layout == null) {_			this.layout = getLayoutFactory().getLayout(this.source)__		}_		destination = destination.getAbsoluteFile()__		File workingSource = this.source__		if (alreadyRepackaged() && this.source.equals(destination)) {_			return__		}_		if (this.source.equals(destination)) {_			workingSource = getBackupFile()__			workingSource.delete()__			renameFile(this.source, workingSource)__		}_		destination.delete()__		try {_			try (JarFile jarFileSource = new JarFile(workingSource)) {_				repackage(jarFileSource, destination, libraries, launchScript)__			}_		}_		finally {_			if (!this.backupSource && !this.source.equals(workingSource)) {_				deleteFile(workingSource)__			}_		}_	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,param,launch,script,an,optional,launch,script,prepended,to,the,front,of,the,jar,throws,ioexception,if,the,file,cannot,be,repackaged,since,1,3,0;public,void,repackage,file,destination,libraries,libraries,launch,script,launch,script,throws,ioexception,if,destination,null,destination,is,directory,throw,new,illegal,argument,exception,invalid,destination,if,libraries,null,throw,new,illegal,argument,exception,libraries,must,not,be,null,if,this,layout,null,this,layout,get,layout,factory,get,layout,this,source,destination,destination,get,absolute,file,file,working,source,this,source,if,already,repackaged,this,source,equals,destination,return,if,this,source,equals,destination,working,source,get,backup,file,working,source,delete,rename,file,this,source,working,source,destination,delete,try,try,jar,file,jar,file,source,new,jar,file,working,source,repackage,jar,file,source,destination,libraries,launch,script,finally,if,this,backup,source,this,source,equals,working,source,delete,file,working,source
Repackager -> public final File getBackupFile();1507173536;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public final File getBackupFile();1517485113;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public final File getBackupFile();1520861622;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public final File getBackupFile();1543327795;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public final File getBackupFile();1545728419;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public final File getBackupFile();1549028882;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public final File getBackupFile();1549989735;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public final File getBackupFile();1550683719;Return the {@link File} to use to backup the original source._@return the file to use to backup the original source;public final File getBackupFile() {_		return new File(this.source.getParentFile(), this.source.getName() + ".original")__	};return,the,link,file,to,use,to,backup,the,original,source,return,the,file,to,use,to,backup,the,original,source;public,final,file,get,backup,file,return,new,file,this,source,get,parent,file,this,source,get,name,original
Repackager -> public void repackage(Libraries libraries) throws IOException;1507173536;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(Libraries libraries) throws IOException;1517485113;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(Libraries libraries) throws IOException;1520861622;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(Libraries libraries) throws IOException;1543327795;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(Libraries libraries) throws IOException;1545728419;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(Libraries libraries) throws IOException;1549028882;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(Libraries libraries) throws IOException;1549989735;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(Libraries libraries) throws IOException;1550683719;Repackage the source file so that it can be run using '{@literal java -jar}'._@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(Libraries libraries) throws IOException {_		repackage(this.source, libraries)__	};repackage,the,source,file,so,that,it,can,be,run,using,literal,java,jar,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,libraries,libraries,throws,ioexception,repackage,this,source,libraries
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1507173536;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1517485113;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1520861622;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1543327795;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1545728419;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1549028882;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1549989735;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
Repackager -> public void repackage(File destination, Libraries libraries) throws IOException;1550683719;Repackage to the given destination so that it can be launched using '_{@literal java -jar}'._@param destination the destination file (may be the same as the source)_@param libraries the libraries required to run the archive_@throws IOException if the file cannot be repackaged;public void repackage(File destination, Libraries libraries) throws IOException {_		repackage(destination, libraries, null)__	};repackage,to,the,given,destination,so,that,it,can,be,launched,using,literal,java,jar,param,destination,the,destination,file,may,be,the,same,as,the,source,param,libraries,the,libraries,required,to,run,the,archive,throws,ioexception,if,the,file,cannot,be,repackaged;public,void,repackage,file,destination,libraries,libraries,throws,ioexception,repackage,destination,libraries,null
