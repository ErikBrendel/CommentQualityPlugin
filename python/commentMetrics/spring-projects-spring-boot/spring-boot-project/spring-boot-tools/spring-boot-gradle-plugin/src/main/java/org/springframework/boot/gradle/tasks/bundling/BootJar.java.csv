# id;timestamp;commentText;codeText;commentWords;codeWords
BootJar -> @Internal 	public CopySpec getBootInf();1545406351;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;@Internal_	public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;internal,public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> @Internal 	public CopySpec getBootInf();1549028882;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;@Internal_	public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;internal,public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> @Internal 	public CopySpec getBootInf();1550686686;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;@Internal_	public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;internal,public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> @Internal 	public CopySpec getBootInf();1550737183;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;@Internal_	public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;internal,public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> public CopySpec getBootInf();1526033771;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> public CopySpec getBootInf();1528477740;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> public CopySpec getBootInf();1529669324;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> public CopySpec getBootInf();1532738143;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> public CopySpec getBootInf();1542981672;Returns a {@code CopySpec} that can be used to add content to the {@code BOOT-INF}_directory of the jar._@return a {@code CopySpec} for {@code BOOT-INF}_@since 2.0.3;public CopySpec getBootInf() {_		CopySpec child = getProject().copySpec()__		this.bootInf.with(child)__		return child__	};returns,a,code,copy,spec,that,can,be,used,to,add,content,to,the,code,boot,inf,directory,of,the,jar,return,a,code,copy,spec,for,code,boot,inf,since,2,0,3;public,copy,spec,get,boot,inf,copy,spec,child,get,project,copy,spec,this,boot,inf,with,child,return,child
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1526033771;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1528477740;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1529669324;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1532738143;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1542981672;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1545406351;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1549028882;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1550686686;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> public CopySpec bootInf(Action<CopySpec> action);1550737183;Calls the given {@code action} to add content to the {@code BOOT-INF} directory of_the jar._@param action the {@code Action} to call_@return the {@code CopySpec} for {@code BOOT-INF} that was passed to the_{@code Action}_@since 2.0.3;public CopySpec bootInf(Action<CopySpec> action) {_		CopySpec bootInf = getBootInf()__		action.execute(bootInf)__		return bootInf__	};calls,the,given,code,action,to,add,content,to,the,code,boot,inf,directory,of,the,jar,param,action,the,code,action,to,call,return,the,code,copy,spec,for,code,boot,inf,that,was,passed,to,the,code,action,since,2,0,3;public,copy,spec,boot,inf,action,copy,spec,action,copy,spec,boot,inf,get,boot,inf,action,execute,boot,inf,return,boot,inf
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1507173536;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated.__@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1508411795;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated.__@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1517409518;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated.__@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1519849365;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1525343758;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1525416882;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1526033771;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1528477740;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1529669324;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1532738143;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1542981672;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1545406351;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1549028882;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1550686686;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1550737183;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code BOOT-INF/lib/} is stored and all other files are_deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		if (details.getRelativePath().getPathString().startsWith("BOOT-INF/lib/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,boot,inf,lib,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,if,details,get,relative,path,get,path,string,starts,with,boot,inf,lib,return,zip,compression,stored,return,zip,compression,deflated
BootJar -> public BootJar();1507173536;Creates a new {@code BootJar} task.;public BootJar() {_		CopySpec bootInf = getRootSpec().addChildBeforeSpec(getMainSpec())_				.into("BOOT-INF")__		bootInf.into("lib", classpathFiles(File::isFile))__		bootInf.into("classes", classpathFiles(File::isDirectory))__	};creates,a,new,code,boot,jar,task;public,boot,jar,copy,spec,boot,inf,get,root,spec,add,child,before,spec,get,main,spec,into,boot,inf,boot,inf,into,lib,classpath,files,file,is,file,boot,inf,into,classes,classpath,files,file,is,directory
BootJar -> public BootJar();1508411795;Creates a new {@code BootJar} task.;public BootJar() {_		CopySpec bootInf = getRootSpec().addChildBeforeSpec(getMainSpec())_				.into("BOOT-INF")__		bootInf.into("lib", classpathFiles(File::isFile))__		bootInf.into("classes", classpathFiles(File::isDirectory))__	};creates,a,new,code,boot,jar,task;public,boot,jar,copy,spec,boot,inf,get,root,spec,add,child,before,spec,get,main,spec,into,boot,inf,boot,inf,into,lib,classpath,files,file,is,file,boot,inf,into,classes,classpath,files,file,is,directory
BootJar -> public BootJar();1517409518;Creates a new {@code BootJar} task.;public BootJar() {_		CopySpec bootInf = getRootSpec().addChildBeforeSpec(getMainSpec())_				.into("BOOT-INF")__		bootInf.into("classes", classpathFiles(File::isDirectory))__		bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,copy,spec,boot,inf,get,root,spec,add,child,before,spec,get,main,spec,into,boot,inf,boot,inf,into,classes,classpath,files,file,is,directory,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1519849365;Creates a new {@code BootJar} task.;public BootJar() {_		CopySpec bootInf = getRootSpec().addChildBeforeSpec(getMainSpec())_				.into("BOOT-INF")__		bootInf.into("classes", classpathFiles(File::isDirectory))__		bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,copy,spec,boot,inf,get,root,spec,add,child,before,spec,get,main,spec,into,boot,inf,boot,inf,into,classes,classpath,files,file,is,directory,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1525343758;Creates a new {@code BootJar} task.;public BootJar() {_		into("BOOT-INF/classes", classpathFiles(File::isDirectory))__		into("BOOT-INF/lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,into,boot,inf,classes,classpath,files,file,is,directory,into,boot,inf,lib,classpath,files,file,is,file
BootJar -> public BootJar();1525416882;Creates a new {@code BootJar} task.;public BootJar() {_		into("BOOT-INF/classes", classpathFiles(File::isDirectory))__		into("BOOT-INF/lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,into,boot,inf,classes,classpath,files,file,is,directory,into,boot,inf,lib,classpath,files,file,is,file
BootJar -> public BootJar();1526033771;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1528477740;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1529669324;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1532738143;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1542981672;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1545406351;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file
BootJar -> public BootJar();1549028882;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__		this.bootInf.filesMatching("module-info.class", (details) -> {_			details.setRelativePath(details.getRelativeSourcePath())__		})__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file,this,boot,inf,files,matching,module,info,class,details,details,set,relative,path,details,get,relative,source,path
BootJar -> public BootJar();1550686686;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__		this.bootInf.filesMatching("module-info.class", (details) -> {_			details.setRelativePath(details.getRelativeSourcePath())__		})__		getRootSpec().eachFile((details) -> {_			String pathString = details.getRelativePath().getPathString()__			if (pathString.startsWith("BOOT-INF/lib/")_					&& !this.support.isZip(details.getFile())) {_				details.exclude()__			}_		})__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file,this,boot,inf,files,matching,module,info,class,details,details,set,relative,path,details,get,relative,source,path,get,root,spec,each,file,details,string,path,string,details,get,relative,path,get,path,string,if,path,string,starts,with,boot,inf,lib,this,support,is,zip,details,get,file,details,exclude
BootJar -> public BootJar();1550737183;Creates a new {@code BootJar} task.;public BootJar() {_		this.bootInf = getProject().copySpec().into("BOOT-INF")__		getMainSpec().with(this.bootInf)__		this.bootInf.into("classes", classpathFiles(File::isDirectory))__		this.bootInf.into("lib", classpathFiles(File::isFile))__		this.bootInf.filesMatching("module-info.class",_				(details) -> details.setRelativePath(details.getRelativeSourcePath()))__		getRootSpec().eachFile((details) -> {_			String pathString = details.getRelativePath().getPathString()__			if (pathString.startsWith("BOOT-INF/lib/")_					&& !this.support.isZip(details.getFile())) {_				details.exclude()__			}_		})__	};creates,a,new,code,boot,jar,task;public,boot,jar,this,boot,inf,get,project,copy,spec,into,boot,inf,get,main,spec,with,this,boot,inf,this,boot,inf,into,classes,classpath,files,file,is,directory,this,boot,inf,into,lib,classpath,files,file,is,file,this,boot,inf,files,matching,module,info,class,details,details,set,relative,path,details,get,relative,source,path,get,root,spec,each,file,details,string,path,string,details,get,relative,path,get,path,string,if,path,string,starts,with,boot,inf,lib,this,support,is,zip,details,get,file,details,exclude
