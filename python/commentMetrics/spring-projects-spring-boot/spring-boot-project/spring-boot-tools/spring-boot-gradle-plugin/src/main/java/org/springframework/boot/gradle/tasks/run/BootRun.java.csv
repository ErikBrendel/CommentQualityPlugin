commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Adds the {@link SourceDirectorySet#getSrcDirs() source directories} of the given  * {@code sourceSet's} {@link SourceSet#getResources() resources} to the start of the  * classpath in place of the {@link SourceSet#getOutput output's}  * {@link SourceSetOutput#getResourcesDir() resources directory}.  * @param sourceSet the source set  */ ;/**  * Adds the {@link SourceDirectorySet#getSrcDirs() source directories} of the given  * {@code sourceSet's} {@link SourceSet#getResources() resources} to the start of the  * classpath in place of the {@link SourceSet#getOutput output's}  * {@link SourceSetOutput#getResourcesDir() resources directory}.  * @param sourceSet the source set  */ public void sourceResources(SourceSet sourceSet) {     setClasspath(getProject().files(sourceSet.getResources().getSrcDirs(), getClasspath()).filter((file) -> !file.equals(sourceSet.getOutput().getResourcesDir()))). }
false;public;0;8;;@Override public void exec() {     if (System.console() != null) {         // Record that the console is available here for AnsiOutput to detect later         this.getEnvironment().put("spring.output.ansi.console-available", true).     }     super.exec(). }
