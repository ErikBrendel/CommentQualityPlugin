# id;timestamp;commentText;codeText;commentWords;codeWords
BootWar -> public void setProvidedClasspath(FileCollection classpath);1542981672;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(FileCollection classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,file,collection,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(FileCollection classpath);1545406351;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(FileCollection classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,file,collection,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(FileCollection classpath);1549028882;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(FileCollection classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,file,collection,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(FileCollection classpath);1550686686;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(FileCollection classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,file,collection,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(FileCollection classpath);1550737183;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(FileCollection classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,file,collection,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public BootWar();1507173536;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec_						.from((Callable<Iterable<File>>) () -> this.providedClasspath == null_								? Collections.emptyList() : this.providedClasspath))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,collections,empty,list,this,provided,classpath
BootWar -> public BootWar();1508411795;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec_						.from((Callable<Iterable<File>>) () -> this.providedClasspath == null_								? Collections.emptyList() : this.providedClasspath))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,collections,empty,list,this,provided,classpath
BootWar -> public BootWar();1518087233;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> this.providedClasspath == null_								? Collections.emptyList() : this.providedClasspath))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,collections,empty,list,this,provided,classpath
BootWar -> public BootWar();1519849365;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> this.providedClasspath == null_								? Collections.emptyList() : this.providedClasspath))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,collections,empty,list,this,provided,classpath
BootWar -> public BootWar();1525416882;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null_								? this.providedClasspath : Collections.emptyList())))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list
BootWar -> public BootWar();1528477740;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null_								? this.providedClasspath : Collections.emptyList())))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list
BootWar -> public BootWar();1529669324;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null_								? this.providedClasspath : Collections.emptyList())))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list
BootWar -> public BootWar();1532738143;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null)_								? this.providedClasspath : Collections.emptyList()))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list
BootWar -> public BootWar();1542981672;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null)_								? this.providedClasspath : Collections.emptyList()))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list
BootWar -> public BootWar();1545406351;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null)_								? this.providedClasspath : Collections.emptyList()))__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list
BootWar -> public BootWar();1549028882;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null)_								? this.providedClasspath : Collections.emptyList()))__		getRootSpec().filesMatching("module-info.class", (details) -> {_			details.setRelativePath(details.getRelativeSourcePath())__		})__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list,get,root,spec,files,matching,module,info,class,details,details,set,relative,path,details,get,relative,source,path
BootWar -> public BootWar();1550686686;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null)_								? this.providedClasspath : Collections.emptyList()))__		getRootSpec().filesMatching("module-info.class", (details) -> {_			details.setRelativePath(details.getRelativeSourcePath())__		})__		getRootSpec().eachFile((details) -> {_			String pathString = details.getRelativePath().getPathString()__			if ((pathString.startsWith("WEB-INF/lib/")_					|| pathString.startsWith("WEB-INF/lib-provided/"))_					&& !this.support.isZip(details.getFile())) {_				details.exclude()__			}_		})__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list,get,root,spec,files,matching,module,info,class,details,details,set,relative,path,details,get,relative,source,path,get,root,spec,each,file,details,string,path,string,details,get,relative,path,get,path,string,if,path,string,starts,with,web,inf,lib,path,string,starts,with,web,inf,lib,provided,this,support,is,zip,details,get,file,details,exclude
BootWar -> public BootWar();1550737183;Creates a new {@code BootWar} task.;public BootWar() {_		getWebInf().into("lib-provided",_				(copySpec) -> copySpec.from(_						(Callable<Iterable<File>>) () -> (this.providedClasspath != null)_								? this.providedClasspath : Collections.emptyList()))__		getRootSpec().filesMatching("module-info.class",_				(details) -> details.setRelativePath(details.getRelativeSourcePath()))__		getRootSpec().eachFile((details) -> {_			String pathString = details.getRelativePath().getPathString()__			if ((pathString.startsWith("WEB-INF/lib/")_					|| pathString.startsWith("WEB-INF/lib-provided/"))_					&& !this.support.isZip(details.getFile())) {_				details.exclude()__			}_		})__	};creates,a,new,code,boot,war,task;public,boot,war,get,web,inf,into,lib,provided,copy,spec,copy,spec,from,callable,iterable,file,this,provided,classpath,null,this,provided,classpath,collections,empty,list,get,root,spec,files,matching,module,info,class,details,details,set,relative,path,details,get,relative,source,path,get,root,spec,each,file,details,string,path,string,details,get,relative,path,get,path,string,if,path,string,starts,with,web,inf,lib,path,string,starts,with,web,inf,lib,provided,this,support,is,zip,details,get,file,details,exclude
BootWar -> public void providedClasspath(Object... classpath);1507173536;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}.__@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				existingClasspath == null ? Collections.emptyList() : existingClasspath,_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,collections,empty,list,existing,classpath,classpath
BootWar -> public void providedClasspath(Object... classpath);1508411795;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}.__@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				existingClasspath == null ? Collections.emptyList() : existingClasspath,_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,collections,empty,list,existing,classpath,classpath
BootWar -> public void providedClasspath(Object... classpath);1518087233;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}.__@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				existingClasspath == null ? Collections.emptyList() : existingClasspath,_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,collections,empty,list,existing,classpath,classpath
BootWar -> public void providedClasspath(Object... classpath);1519849365;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				existingClasspath == null ? Collections.emptyList() : existingClasspath,_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,collections,empty,list,existing,classpath,classpath
BootWar -> public void providedClasspath(Object... classpath);1525416882;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				existingClasspath != null ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1528477740;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				existingClasspath != null ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1529669324;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				existingClasspath != null ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1532738143;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} are evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				(existingClasspath != null) ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,are,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1542981672;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				(existingClasspath != null) ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1545406351;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				(existingClasspath != null) ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1549028882;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				(existingClasspath != null) ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1550686686;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				(existingClasspath != null) ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> public void providedClasspath(Object... classpath);1550737183;Adds files to the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the additions to the classpath;public void providedClasspath(Object... classpath) {_		FileCollection existingClasspath = this.providedClasspath__		this.providedClasspath = getProject().files(_				(existingClasspath != null) ? existingClasspath : Collections.emptyList(),_				classpath)__	};adds,files,to,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,additions,to,the,classpath;public,void,provided,classpath,object,classpath,file,collection,existing,classpath,this,provided,classpath,this,provided,classpath,get,project,files,existing,classpath,null,existing,classpath,collections,empty,list,classpath
BootWar -> @Optional 	@Classpath 	public FileCollection getProvidedClasspath();1545406351;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	@Classpath_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,classpath,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	@Classpath 	public FileCollection getProvidedClasspath();1549028882;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	@Classpath_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,classpath,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	@Classpath 	public FileCollection getProvidedClasspath();1550686686;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	@Classpath_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,classpath,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	@Classpath 	public FileCollection getProvidedClasspath();1550737183;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	@Classpath_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,classpath,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> public void setProvidedClasspath(Object classpath);1542981672;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(Object classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,object,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(Object classpath);1545406351;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(Object classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,object,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(Object classpath);1549028882;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(Object classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,object,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(Object classpath);1550686686;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(Object classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,object,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> public void setProvidedClasspath(Object classpath);1550737183;Sets the provided classpath to include in the {@code WEB-INF/lib-provided}_directory of the war. The given {@code classpath} is evaluated as per_{@link Project#files(Object...)}._@param classpath the classpath_@since 2.0.7;public void setProvidedClasspath(Object classpath) {_		this.providedClasspath = getProject().files(classpath)__	};sets,the,provided,classpath,to,include,in,the,code,web,inf,lib,provided,directory,of,the,war,the,given,code,classpath,is,evaluated,as,per,link,project,files,object,param,classpath,the,classpath,since,2,0,7;public,void,set,provided,classpath,object,classpath,this,provided,classpath,get,project,files,classpath
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1507173536;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated.__@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1508411795;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated.__@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1518087233;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated.__@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1519849365;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1525416882;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1528477740;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1529669324;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1532738143;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1542981672;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1545406351;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1549028882;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1550686686;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> protected ZipCompression resolveZipCompression(FileCopyDetails details);1550737183;Returns the {@link ZipCompression} that should be used when adding the file_represented by the given {@code details} to the jar._<p>_By default, any file in {@code WEB-INF/lib/} or {@code WEB-INF/lib-provided/} is_stored and all other files are deflated._@param details the details_@return the compression to use;protected ZipCompression resolveZipCompression(FileCopyDetails details) {_		String relativePath = details.getRelativePath().getPathString()__		if (relativePath.startsWith("WEB-INF/lib/")_				|| relativePath.startsWith("WEB-INF/lib-provided/")) {_			return ZipCompression.STORED__		}_		return ZipCompression.DEFLATED__	};returns,the,link,zip,compression,that,should,be,used,when,adding,the,file,represented,by,the,given,code,details,to,the,jar,p,by,default,any,file,in,code,web,inf,lib,or,code,web,inf,lib,provided,is,stored,and,all,other,files,are,deflated,param,details,the,details,return,the,compression,to,use;protected,zip,compression,resolve,zip,compression,file,copy,details,details,string,relative,path,details,get,relative,path,get,path,string,if,relative,path,starts,with,web,inf,lib,relative,path,starts,with,web,inf,lib,provided,return,zip,compression,stored,return,zip,compression,deflated
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1507173536;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war.__@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1508411795;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war.__@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1518087233;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war.__@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1519849365;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1525416882;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1528477740;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1529669324;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1532738143;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
BootWar -> @Optional 	public FileCollection getProvidedClasspath();1542981672;Returns the provided classpath, the contents of which will be included in the_{@code WEB-INF/lib-provided} directory of the war._@return the provided classpath;@Optional_	public FileCollection getProvidedClasspath() {_		return this.providedClasspath__	};returns,the,provided,classpath,the,contents,of,which,will,be,included,in,the,code,web,inf,lib,provided,directory,of,the,war,return,the,provided,classpath;optional,public,file,collection,get,provided,classpath,return,this,provided,classpath
