commented;modifiers;parameterAmount;loc;comment;code
true;public;0;6;/**  * Returns the value used for the {@code build.group} property. Defaults to the  * {@link Project#getGroup() Project's group}.  * @return the group  */ ;/**  * Returns the value used for the {@code build.group} property. Defaults to the  * {@link Project#getGroup() Project's group}.  * @return the group  */ public String getGroup() {     if (this.group == null) {         this.group = this.project.getGroup().toString().     }     return this.group. }
true;public;1;3;/**  * Sets the value used for the {@code build.group} property.  * @param group the group name  */ ;/**  * Sets the value used for the {@code build.group} property.  * @param group the group name  */ public void setGroup(String group) {     this.group = group. }
true;public;0;3;/**  * Returns the value used for the {@code build.artifact} property.  * @return the artifact  */ ;/**  * Returns the value used for the {@code build.artifact} property.  * @return the artifact  */ public String getArtifact() {     return this.artifact. }
true;public;1;3;/**  * Sets the value used for the {@code build.artifact} property.  * @param artifact the artifact  */ ;/**  * Sets the value used for the {@code build.artifact} property.  * @param artifact the artifact  */ public void setArtifact(String artifact) {     this.artifact = artifact. }
true;public;0;6;/**  * Returns the value used for the {@code build.version} property. Defaults to the  * {@link Project#getVersion() Project's version}.  * @return the version  */ ;/**  * Returns the value used for the {@code build.version} property. Defaults to the  * {@link Project#getVersion() Project's version}.  * @return the version  */ public String getVersion() {     if (this.version == null) {         this.version = this.project.getVersion().toString().     }     return this.version. }
true;public;1;3;/**  * Sets the value used for the {@code build.version} property.  * @param version the version  */ ;/**  * Sets the value used for the {@code build.version} property.  * @param version the version  */ public void setVersion(String version) {     this.version = version. }
true;public;0;6;/**  * Returns the value used for the {@code build.name} property. Defaults to the  * {@link Project#getDisplayName() Project's display name}.  * @return the name  */ ;/**  * Returns the value used for the {@code build.name} property. Defaults to the  * {@link Project#getDisplayName() Project's display name}.  * @return the name  */ public String getName() {     if (this.name == null) {         this.name = this.project.getName().     }     return this.name. }
true;public;1;3;/**  * Sets the value used for the {@code build.name} property.  * @param name the name  */ ;/**  * Sets the value used for the {@code build.name} property.  * @param name the name  */ public void setName(String name) {     this.name = name. }
true;public;0;3;/**  * Returns the value used for the {@code build.time} property. Defaults to  * {@link Instant#now} when the {@code BuildInfoProperties} instance was created.  * @return the time  */ ;/**  * Returns the value used for the {@code build.time} property. Defaults to  * {@link Instant#now} when the {@code BuildInfoProperties} instance was created.  * @return the time  */ public Instant getTime() {     return this.time. }
true;public;1;3;/**  * Sets the value used for the {@code build.time} property.  * @param time the build time  */ ;/**  * Sets the value used for the {@code build.time} property.  * @param time the build time  */ public void setTime(Instant time) {     this.time = time. }
true;public;0;3;/**  * Returns the additional properties that will be included. When written, the name of  * each additional property is prefixed with {@code build.}.  * @return the additional properties  */ ;/**  * Returns the additional properties that will be included. When written, the name of  * each additional property is prefixed with {@code build.}.  * @return the additional properties  */ public Map<String, Object> getAdditional() {     return this.additionalProperties. }
true;public;1;3;/**  * Sets the additional properties that will be included. When written, the name of  * each additional property is prefixed with {@code build.}.  * @param additionalProperties the additional properties  */ ;/**  * Sets the additional properties that will be included. When written, the name of  * each additional property is prefixed with {@code build.}.  * @param additionalProperties the additional properties  */ public void setAdditional(Map<String, Object> additionalProperties) {     this.additionalProperties = additionalProperties. }
false;public;1;19;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     BuildInfoProperties other = (BuildInfoProperties) obj.     boolean result = true.     result = result && nullSafeEquals(this.additionalProperties, other.additionalProperties).     result = result && nullSafeEquals(this.artifact, other.artifact).     result = result && nullSafeEquals(this.group, other.group).     result = result && nullSafeEquals(this.name, other.name).     result = result && nullSafeEquals(this.version, other.version).     result = result && nullSafeEquals(this.time, other.time).     return result. }
false;private;2;9;;private boolean nullSafeEquals(Object o1, Object o2) {     if (o1 == o2) {         return true.     }     if (o1 == null || o2 == null) {         return false.     }     return (o1.equals(o2)). }
false;public;0;14;;@Override public int hashCode() {     final int prime = 31.     int result = 1.     result = prime * result + ((this.additionalProperties == null) ? 0 : this.additionalProperties.hashCode()).     result = prime * result + ((this.artifact == null) ? 0 : this.artifact.hashCode()).     result = prime * result + ((this.group == null) ? 0 : this.group.hashCode()).     result = prime * result + ((this.name == null) ? 0 : this.name.hashCode()).     result = prime * result + ((this.version == null) ? 0 : this.version.hashCode()).     result = prime * result + ((this.time == null) ? 0 : this.time.hashCode()).     return result. }
