commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUp() {     given(this.task.getProject()).willReturn(this.project). }
false;public;0;6;;@Test public void initInfoProvidesUsesArchiveBaseNameByDefault() {     given(this.task.getBaseName()).willReturn("base-name").     assertThat(new LaunchScriptConfiguration(this.task).getProperties()).containsEntry("initInfoProvides", "base-name"). }
false;public;0;6;;@Test public void initInfoShortDescriptionUsesDescriptionByDefault() {     given(this.project.getDescription()).willReturn("Project description").     assertThat(new LaunchScriptConfiguration(this.task).getProperties()).containsEntry("initInfoShortDescription", "Project description"). }
false;public;0;6;;@Test public void initInfoShortDescriptionUsesArchiveBaseNameWhenDescriptionIsNull() {     given(this.task.getBaseName()).willReturn("base-name").     assertThat(new LaunchScriptConfiguration(this.task).getProperties()).containsEntry("initInfoShortDescription", "base-name"). }
false;public;0;6;;@Test public void initInfoShortDescriptionUsesSingleLineVersionOfMultiLineProjectDescription() {     given(this.project.getDescription()).willReturn("Project\ndescription").     assertThat(new LaunchScriptConfiguration(this.task).getProperties()).containsEntry("initInfoShortDescription", "Project description"). }
false;public;0;6;;@Test public void initInfoDescriptionUsesArchiveBaseNameWhenDescriptionIsNull() {     given(this.task.getBaseName()).willReturn("base-name").     assertThat(new LaunchScriptConfiguration(this.task).getProperties()).containsEntry("initInfoDescription", "base-name"). }
false;public;0;6;;@Test public void initInfoDescriptionUsesProjectDescriptionByDefault() {     given(this.project.getDescription()).willReturn("Project description").     assertThat(new LaunchScriptConfiguration(this.task).getProperties()).containsEntry("initInfoDescription", "Project description"). }
false;public;0;6;;@Test public void initInfoDescriptionUsesCorrectlyFormattedMultiLineProjectDescription() {     given(this.project.getDescription()).willReturn("The\nproject\ndescription").     assertThat(new LaunchScriptConfiguration(this.task).getProperties()).containsEntry("initInfoDescription", "The\n#  project\n#  description"). }
