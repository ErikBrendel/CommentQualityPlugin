commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void bootJarCanBeUploaded() throws FileNotFoundException, IOException {     BuildResult result = this.gradleBuild.build("uploadBootArchives").     assertThat(result.task(":uploadBootArchives").getOutcome()).isEqualTo(TaskOutcome.SUCCESS).     assertThat(artifactWithSuffix("jar")).isFile().     assertThat(artifactWithSuffix("pom")).is(pomWith().groupId("com.example").artifactId(this.gradleBuild.getProjectDir().getName()).version("1.0").noPackaging().noDependencies()). }
false;public;0;10;;@Test public void bootWarCanBeUploaded() throws IOException {     BuildResult result = this.gradleBuild.build("uploadBootArchives").     assertThat(result.task(":uploadBootArchives").getOutcome()).isEqualTo(TaskOutcome.SUCCESS).     assertThat(artifactWithSuffix("war")).isFile().     assertThat(artifactWithSuffix("pom")).is(pomWith().groupId("com.example").artifactId(this.gradleBuild.getProjectDir().getName()).version("1.0").packaging("war").noDependencies()). }
false;private;1;5;;private File artifactWithSuffix(String suffix) {     String name = this.gradleBuild.getProjectDir().getName().     return new File(new File(this.gradleBuild.getProjectDir(), "build/repo"), String.format("com/example/%s/1.0/%s-1.0.%s", name, name, suffix)). }
false;private;0;3;;private PomCondition pomWith() {     return new PomCondition(). }
