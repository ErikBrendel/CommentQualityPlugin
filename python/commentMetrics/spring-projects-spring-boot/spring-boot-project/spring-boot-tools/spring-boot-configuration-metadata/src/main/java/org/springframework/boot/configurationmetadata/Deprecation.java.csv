commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Define the {@link Level} of deprecation.  * @return the deprecation level  */ ;/**  * Define the {@link Level} of deprecation.  * @return the deprecation level  */ public Level getLevel() {     return this.level. }
false;public;1;3;;public void setLevel(Level level) {     this.level = level. }
true;public;0;3;/**  * A reason why the related property is deprecated, if any. Can be multi-lines.  * @return the deprecation reason  * @see #getShortReason()  */ ;/**  * A reason why the related property is deprecated, if any. Can be multi-lines.  * @return the deprecation reason  * @see #getShortReason()  */ public String getReason() {     return this.reason. }
false;public;1;3;;public void setReason(String reason) {     this.reason = reason. }
true;public;0;3;/**  * A single-line, single-sentence reason why the related property is deprecated, if  * any.  * @return the short deprecation reason  * @see #getReason()  */ ;/**  * A single-line, single-sentence reason why the related property is deprecated, if  * any.  * @return the short deprecation reason  * @see #getReason()  */ public String getShortReason() {     return this.shortReason. }
false;public;1;3;;public void setShortReason(String shortReason) {     this.shortReason = shortReason. }
true;public;0;3;/**  * The full name of the property that replaces the related deprecated property, if  * any.  * @return the replacement property name  */ ;/**  * The full name of the property that replaces the related deprecated property, if  * any.  * @return the replacement property name  */ public String getReplacement() {     return this.replacement. }
false;public;1;3;;public void setReplacement(String replacement) {     this.replacement = replacement. }
false;public;0;5;;@Override public String toString() {     return "Deprecation{" + "level='" + this.level + '\'' + ", reason='" + this.reason + '\'' + ", replacement='" + this.replacement + '\'' + '}'. }
