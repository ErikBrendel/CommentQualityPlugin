commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set if the {@link FileSystemWatcher} should be stopped when a full restart occurs.  * @param stopWatcherOnRestart if the watcher should be stopped when a restart occurs  */ ;/**  * Set if the {@link FileSystemWatcher} should be stopped when a full restart occurs.  * @param stopWatcherOnRestart if the watcher should be stopped when a restart occurs  */ public void setStopWatcherOnRestart(boolean stopWatcherOnRestart) {     this.stopWatcherOnRestart = stopWatcherOnRestart. }
false;public;1;5;;@Override public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {     this.applicationContext = applicationContext. }
false;public;0;12;;@Override public void afterPropertiesSet() throws Exception {     if (this.restartStrategy != null) {         FileSystemWatcher watcherToStop = null.         if (this.stopWatcherOnRestart) {             watcherToStop = this.fileSystemWatcher.         }         this.fileSystemWatcher.addListener(new ClassPathFileChangeListener(this.applicationContext, this.restartStrategy, watcherToStop)).     }     this.fileSystemWatcher.start(). }
false;public;0;4;;@Override public void destroy() throws Exception {     this.fileSystemWatcher.stop(). }
