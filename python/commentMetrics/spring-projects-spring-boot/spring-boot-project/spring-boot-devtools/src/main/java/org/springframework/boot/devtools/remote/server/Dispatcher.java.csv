commented;modifiers;parameterAmount;loc;comment;code
true;public;2;11;/**  * Dispatch the specified request to an appropriate {@link Handler}.  * @param request the request  * @param response the response  * @return {@code true} if the request was dispatched  * @throws IOException in case of I/O errors  */ ;/**  * Dispatch the specified request to an appropriate {@link Handler}.  * @param request the request  * @param response the response  * @return {@code true} if the request was dispatched  * @throws IOException in case of I/O errors  */ public boolean handle(ServerHttpRequest request, ServerHttpResponse response) throws IOException {     for (HandlerMapper mapper : this.mappers) {         Handler handler = mapper.getHandler(request).         if (handler != null) {             handle(handler, request, response).             return true.         }     }     return false. }
false;private;3;8;;private void handle(Handler handler, ServerHttpRequest request, ServerHttpResponse response) throws IOException {     if (!this.accessManager.isAllowed(request)) {         response.setStatusCode(HttpStatus.FORBIDDEN).         return.     }     handler.handle(request, response). }
