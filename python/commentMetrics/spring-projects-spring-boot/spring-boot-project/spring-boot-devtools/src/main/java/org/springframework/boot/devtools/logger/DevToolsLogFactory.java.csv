commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;7;/**  * Get a {@link Log} instance for the specified source that will be automatically  * {@link DeferredLog#switchTo(Class) switched} when the  * {@link ApplicationPreparedEvent context is prepared}.  * @param source the source for logging  * @return a {@link DeferredLog} instance  */ ;/**  * Get a {@link Log} instance for the specified source that will be automatically  * {@link DeferredLog#switchTo(Class) switched} when the  * {@link ApplicationPreparedEvent context is prepared}.  * @param source the source for logging  * @return a {@link DeferredLog} instance  */ public static Log getLog(Class<?> source) {     synchronized (logs) {         Log log = new DeferredLog().         logs.put(log, source).         return log.     } }
false;public;1;11;;@Override public void onApplicationEvent(ApplicationPreparedEvent event) {     synchronized (logs) {         logs.forEach((log, source) -> {             if (log instanceof DeferredLog) {                 ((DeferredLog) log).switchTo(source).             }         }).         logs.clear().     } }
