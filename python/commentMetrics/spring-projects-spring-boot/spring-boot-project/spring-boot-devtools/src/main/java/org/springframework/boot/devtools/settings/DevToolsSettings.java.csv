commented;modifiers;parameterAmount;loc;comment;code
false;;1;6;;void add(Map<?, ?> properties) {     Map<String, Pattern> includes = getPatterns(properties, "restart.include.").     this.restartIncludePatterns.addAll(includes.values()).     Map<String, Pattern> excludes = getPatterns(properties, "restart.exclude.").     this.restartExcludePatterns.addAll(excludes.values()). }
false;private;2;11;;private Map<String, Pattern> getPatterns(Map<?, ?> properties, String prefix) {     Map<String, Pattern> patterns = new LinkedHashMap<>().     properties.forEach((key, value) -> {         String name = String.valueOf(key).         if (name.startsWith(prefix)) {             Pattern pattern = Pattern.compile((String) value).             patterns.put(name, pattern).         }     }).     return patterns. }
false;public;1;3;;public boolean isRestartInclude(URL url) {     return isMatch(url.toString(), this.restartIncludePatterns). }
false;public;1;3;;public boolean isRestartExclude(URL url) {     return isMatch(url.toString(), this.restartExcludePatterns). }
false;private;2;8;;private boolean isMatch(String url, List<Pattern> patterns) {     for (Pattern pattern : patterns) {         if (pattern.matcher(url).find()) {             return true.         }     }     return false. }
false;public,static;0;6;;public static DevToolsSettings get() {     if (settings == null) {         settings = load().     }     return settings. }
false;static;0;3;;static DevToolsSettings load() {     return load(SETTINGS_RESOURCE_LOCATION). }
false;static;1;22;;static DevToolsSettings load(String location) {     try {         DevToolsSettings settings = new DevToolsSettings().         Enumeration<URL> urls = Thread.currentThread().getContextClassLoader().getResources(location).         while (urls.hasMoreElements()) {             settings.add(PropertiesLoaderUtils.loadProperties(new UrlResource(urls.nextElement()))).         }         if (logger.isDebugEnabled()) {             logger.debug("Included patterns for restart : " + settings.restartIncludePatterns).             logger.debug("Excluded patterns for restart : " + settings.restartExcludePatterns).         }         return settings.     } catch (Exception ex) {         throw new IllegalStateException("Unable to load devtools settings from " + "location [" + location + "]", ex).     } }
