# id;timestamp;commentText;codeText;commentWords;codeWords
FolderSnapshot -> public File getFolder();1507173536;Return the source folder of this snapshot._@return the source folder;public File getFolder() {_		return this.folder__	};return,the,source,folder,of,this,snapshot,return,the,source,folder;public,file,get,folder,return,this,folder
FolderSnapshot -> public File getFolder();1522079995;Return the source folder of this snapshot._@return the source folder;public File getFolder() {_		return this.folder__	};return,the,source,folder,of,this,snapshot,return,the,source,folder;public,file,get,folder,return,this,folder
FolderSnapshot -> public File getFolder();1530545187;Return the source folder of this snapshot._@return the source folder;public File getFolder() {_		return this.folder__	};return,the,source,folder,of,this,snapshot,return,the,source,folder;public,file,get,folder,return,this,folder
FolderSnapshot -> FolderSnapshot(File folder);1507173536;Create a new {@link FolderSnapshot} for the given folder._@param folder the source folder;FolderSnapshot(File folder) {_		Assert.notNull(folder, "Folder must not be null")__		Assert.isTrue(folder.isDirectory(), "Folder must not be a file")__		this.folder = folder__		this.time = new Date()__		Set<FileSnapshot> files = new LinkedHashSet<>()__		collectFiles(folder, files)__		this.files = Collections.unmodifiableSet(files)__	};create,a,new,link,folder,snapshot,for,the,given,folder,param,folder,the,source,folder;folder,snapshot,file,folder,assert,not,null,folder,folder,must,not,be,null,assert,is,true,folder,is,directory,folder,must,not,be,a,file,this,folder,folder,this,time,new,date,set,file,snapshot,files,new,linked,hash,set,collect,files,folder,files,this,files,collections,unmodifiable,set,files
FolderSnapshot -> FolderSnapshot(File folder);1522079995;Create a new {@link FolderSnapshot} for the given folder._@param folder the source folder;FolderSnapshot(File folder) {_		Assert.notNull(folder, "Folder must not be null")__		Assert.isTrue(folder.isDirectory(), "Folder must not be a file")__		this.folder = folder__		this.time = new Date()__		Set<FileSnapshot> files = new LinkedHashSet<>()__		collectFiles(folder, files)__		this.files = Collections.unmodifiableSet(files)__	};create,a,new,link,folder,snapshot,for,the,given,folder,param,folder,the,source,folder;folder,snapshot,file,folder,assert,not,null,folder,folder,must,not,be,null,assert,is,true,folder,is,directory,folder,must,not,be,a,file,this,folder,folder,this,time,new,date,set,file,snapshot,files,new,linked,hash,set,collect,files,folder,files,this,files,collections,unmodifiable,set,files
FolderSnapshot -> FolderSnapshot(File folder);1530545187;Create a new {@link FolderSnapshot} for the given folder._@param folder the source folder;FolderSnapshot(File folder) {_		Assert.notNull(folder, "Folder must not be null")__		Assert.isTrue(!folder.isFile(), "Folder '" + folder + "' must not be a file")__		this.folder = folder__		this.time = new Date()__		Set<FileSnapshot> files = new LinkedHashSet<>()__		collectFiles(folder, files)__		this.files = Collections.unmodifiableSet(files)__	};create,a,new,link,folder,snapshot,for,the,given,folder,param,folder,the,source,folder;folder,snapshot,file,folder,assert,not,null,folder,folder,must,not,be,null,assert,is,true,folder,is,file,folder,folder,must,not,be,a,file,this,folder,folder,this,time,new,date,set,file,snapshot,files,new,linked,hash,set,collect,files,folder,files,this,files,collections,unmodifiable,set,files
