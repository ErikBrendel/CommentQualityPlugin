# id;timestamp;commentText;codeText;commentWords;codeWords
ChangedFile -> public String getRelativeName();1507173536;Return the name of the file relative to the source folder._@return the relative name;public String getRelativeName() {_		File folder = this.sourceFolder.getAbsoluteFile()__		File file = this.file.getAbsoluteFile()__		String folderName = StringUtils.cleanPath(folder.getPath())__		String fileName = StringUtils.cleanPath(file.getPath())__		Assert.state(fileName.startsWith(folderName), "The file " + fileName_				+ " is not contained in the source folder " + folderName)__		return fileName.substring(folderName.length() + 1)__	};return,the,name,of,the,file,relative,to,the,source,folder,return,the,relative,name;public,string,get,relative,name,file,folder,this,source,folder,get,absolute,file,file,file,this,file,get,absolute,file,string,folder,name,string,utils,clean,path,folder,get,path,string,file,name,string,utils,clean,path,file,get,path,assert,state,file,name,starts,with,folder,name,the,file,file,name,is,not,contained,in,the,source,folder,folder,name,return,file,name,substring,folder,name,length,1
ChangedFile -> public String getRelativeName();1507661773;Return the name of the file relative to the source folder._@return the relative name;public String getRelativeName() {_		File folder = this.sourceFolder.getAbsoluteFile()__		File file = this.file.getAbsoluteFile()__		String folderName = StringUtils.cleanPath(folder.getPath())__		String fileName = StringUtils.cleanPath(file.getPath())__		Assert.state(fileName.startsWith(folderName), "The file " + fileName_				+ " is not contained in the source folder " + folderName)__		return fileName.substring(folderName.length() + 1)__	};return,the,name,of,the,file,relative,to,the,source,folder,return,the,relative,name;public,string,get,relative,name,file,folder,this,source,folder,get,absolute,file,file,file,this,file,get,absolute,file,string,folder,name,string,utils,clean,path,folder,get,path,string,file,name,string,utils,clean,path,file,get,path,assert,state,file,name,starts,with,folder,name,the,file,file,name,is,not,contained,in,the,source,folder,folder,name,return,file,name,substring,folder,name,length,1
ChangedFile -> public String getRelativeName();1508247426;Return the name of the file relative to the source folder._@return the relative name;public String getRelativeName() {_		File folder = this.sourceFolder.getAbsoluteFile()__		File file = this.file.getAbsoluteFile()__		String folderName = StringUtils.cleanPath(folder.getPath())__		String fileName = StringUtils.cleanPath(file.getPath())__		Assert.state(fileName.startsWith(folderName), () -> "The file " + fileName_				+ " is not contained in the source folder " + folderName)__		return fileName.substring(folderName.length() + 1)__	};return,the,name,of,the,file,relative,to,the,source,folder,return,the,relative,name;public,string,get,relative,name,file,folder,this,source,folder,get,absolute,file,file,file,this,file,get,absolute,file,string,folder,name,string,utils,clean,path,folder,get,path,string,file,name,string,utils,clean,path,file,get,path,assert,state,file,name,starts,with,folder,name,the,file,file,name,is,not,contained,in,the,source,folder,folder,name,return,file,name,substring,folder,name,length,1
ChangedFile -> public String getRelativeName();1532738143;Return the name of the file relative to the source folder._@return the relative name;public String getRelativeName() {_		File folder = this.sourceFolder.getAbsoluteFile()__		File file = this.file.getAbsoluteFile()__		String folderName = StringUtils.cleanPath(folder.getPath())__		String fileName = StringUtils.cleanPath(file.getPath())__		Assert.state(fileName.startsWith(folderName), () -> "The file " + fileName_				+ " is not contained in the source folder " + folderName)__		return fileName.substring(folderName.length() + 1)__	};return,the,name,of,the,file,relative,to,the,source,folder,return,the,relative,name;public,string,get,relative,name,file,folder,this,source,folder,get,absolute,file,file,file,this,file,get,absolute,file,string,folder,name,string,utils,clean,path,folder,get,path,string,file,name,string,utils,clean,path,file,get,path,assert,state,file,name,starts,with,folder,name,the,file,file,name,is,not,contained,in,the,source,folder,folder,name,return,file,name,substring,folder,name,length,1
ChangedFile -> public ChangedFile(File sourceFolder, File file, Type type);1507173536;Create a new {@link ChangedFile} instance._@param sourceFolder the source folder_@param file the file_@param type the type of change;public ChangedFile(File sourceFolder, File file, Type type) {_		Assert.notNull(sourceFolder, "SourceFolder must not be null")__		Assert.notNull(file, "File must not be null")__		Assert.notNull(type, "Type must not be null")__		this.sourceFolder = sourceFolder__		this.file = file__		this.type = type__	};create,a,new,link,changed,file,instance,param,source,folder,the,source,folder,param,file,the,file,param,type,the,type,of,change;public,changed,file,file,source,folder,file,file,type,type,assert,not,null,source,folder,source,folder,must,not,be,null,assert,not,null,file,file,must,not,be,null,assert,not,null,type,type,must,not,be,null,this,source,folder,source,folder,this,file,file,this,type,type
ChangedFile -> public ChangedFile(File sourceFolder, File file, Type type);1507661773;Create a new {@link ChangedFile} instance._@param sourceFolder the source folder_@param file the file_@param type the type of change;public ChangedFile(File sourceFolder, File file, Type type) {_		Assert.notNull(sourceFolder, "SourceFolder must not be null")__		Assert.notNull(file, "File must not be null")__		Assert.notNull(type, "Type must not be null")__		this.sourceFolder = sourceFolder__		this.file = file__		this.type = type__	};create,a,new,link,changed,file,instance,param,source,folder,the,source,folder,param,file,the,file,param,type,the,type,of,change;public,changed,file,file,source,folder,file,file,type,type,assert,not,null,source,folder,source,folder,must,not,be,null,assert,not,null,file,file,must,not,be,null,assert,not,null,type,type,must,not,be,null,this,source,folder,source,folder,this,file,file,this,type,type
ChangedFile -> public ChangedFile(File sourceFolder, File file, Type type);1508247426;Create a new {@link ChangedFile} instance._@param sourceFolder the source folder_@param file the file_@param type the type of change;public ChangedFile(File sourceFolder, File file, Type type) {_		Assert.notNull(sourceFolder, "SourceFolder must not be null")__		Assert.notNull(file, "File must not be null")__		Assert.notNull(type, "Type must not be null")__		this.sourceFolder = sourceFolder__		this.file = file__		this.type = type__	};create,a,new,link,changed,file,instance,param,source,folder,the,source,folder,param,file,the,file,param,type,the,type,of,change;public,changed,file,file,source,folder,file,file,type,type,assert,not,null,source,folder,source,folder,must,not,be,null,assert,not,null,file,file,must,not,be,null,assert,not,null,type,type,must,not,be,null,this,source,folder,source,folder,this,file,file,this,type,type
ChangedFile -> public ChangedFile(File sourceFolder, File file, Type type);1532738143;Create a new {@link ChangedFile} instance._@param sourceFolder the source folder_@param file the file_@param type the type of change;public ChangedFile(File sourceFolder, File file, Type type) {_		Assert.notNull(sourceFolder, "SourceFolder must not be null")__		Assert.notNull(file, "File must not be null")__		Assert.notNull(type, "Type must not be null")__		this.sourceFolder = sourceFolder__		this.file = file__		this.type = type__	};create,a,new,link,changed,file,instance,param,source,folder,the,source,folder,param,file,the,file,param,type,the,type,of,change;public,changed,file,file,source,folder,file,file,type,type,assert,not,null,source,folder,source,folder,must,not,be,null,assert,not,null,file,file,must,not,be,null,assert,not,null,type,type,must,not,be,null,this,source,folder,source,folder,this,file,file,this,type,type
ChangedFile -> public File getFile();1507173536;Return the file that was changed._@return the file;public File getFile() {_		return this.file__	};return,the,file,that,was,changed,return,the,file;public,file,get,file,return,this,file
ChangedFile -> public File getFile();1507661773;Return the file that was changed._@return the file;public File getFile() {_		return this.file__	};return,the,file,that,was,changed,return,the,file;public,file,get,file,return,this,file
ChangedFile -> public File getFile();1508247426;Return the file that was changed._@return the file;public File getFile() {_		return this.file__	};return,the,file,that,was,changed,return,the,file;public,file,get,file,return,this,file
ChangedFile -> public File getFile();1532738143;Return the file that was changed._@return the file;public File getFile() {_		return this.file__	};return,the,file,that,was,changed,return,the,file;public,file,get,file,return,this,file
ChangedFile -> public Type getType();1507173536;Return the type of change._@return the type of change;public Type getType() {_		return this.type__	};return,the,type,of,change,return,the,type,of,change;public,type,get,type,return,this,type
ChangedFile -> public Type getType();1507661773;Return the type of change._@return the type of change;public Type getType() {_		return this.type__	};return,the,type,of,change,return,the,type,of,change;public,type,get,type,return,this,type
ChangedFile -> public Type getType();1508247426;Return the type of change._@return the type of change;public Type getType() {_		return this.type__	};return,the,type,of,change,return,the,type,of,change;public,type,get,type,return,this,type
ChangedFile -> public Type getType();1532738143;Return the type of change._@return the type of change;public Type getType() {_		return this.type__	};return,the,type,of,change,return,the,type,of,change;public,type,get,type,return,this,type
