# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultRestartInitializer -> protected boolean isMain(Thread thread);1507173536;Returns if the thread is for a main invocation. By default checks the name of the_thread and the context classloader._@param thread the thread to check_@return {@code true} if the thread is a main invocation;protected boolean isMain(Thread thread) {_		return thread.getName().equals("main") && thread.getContextClassLoader()_				.getClass().getName().contains("AppClassLoader")__	};returns,if,the,thread,is,for,a,main,invocation,by,default,checks,the,name,of,the,thread,and,the,context,classloader,param,thread,the,thread,to,check,return,code,true,if,the,thread,is,a,main,invocation;protected,boolean,is,main,thread,thread,return,thread,get,name,equals,main,thread,get,context,class,loader,get,class,get,name,contains,app,class,loader
DefaultRestartInitializer -> protected boolean isMain(Thread thread);1509617159;Returns if the thread is for a main invocation. By default checks the name of the_thread and the context classloader._@param thread the thread to check_@return {@code true} if the thread is a main invocation;protected boolean isMain(Thread thread) {_		return thread.getName().equals("main") && thread.getContextClassLoader()_				.getClass().getName().contains("AppClassLoader")__	};returns,if,the,thread,is,for,a,main,invocation,by,default,checks,the,name,of,the,thread,and,the,context,classloader,param,thread,the,thread,to,check,return,code,true,if,the,thread,is,a,main,invocation;protected,boolean,is,main,thread,thread,return,thread,get,name,equals,main,thread,get,context,class,loader,get,class,get,name,contains,app,class,loader
DefaultRestartInitializer -> protected boolean isMain(Thread thread);1540327420;Returns if the thread is for a main invocation. By default checks the name of the_thread and the context classloader._@param thread the thread to check_@return {@code true} if the thread is a main invocation;protected boolean isMain(Thread thread) {_		return thread.getName().equals("main") && thread.getContextClassLoader()_				.getClass().getName().contains("AppClassLoader")__	};returns,if,the,thread,is,for,a,main,invocation,by,default,checks,the,name,of,the,thread,and,the,context,classloader,param,thread,the,thread,to,check,return,code,true,if,the,thread,is,a,main,invocation;protected,boolean,is,main,thread,thread,return,thread,get,name,equals,main,thread,get,context,class,loader,get,class,get,name,contains,app,class,loader
DefaultRestartInitializer -> protected boolean isMain(Thread thread);1540327934;Returns if the thread is for a main invocation. By default checks the name of the_thread and the context classloader._@param thread the thread to check_@return {@code true} if the thread is a main invocation;protected boolean isMain(Thread thread) {_		return thread.getName().equals("main") && thread.getContextClassLoader()_				.getClass().getName().contains("AppClassLoader")__	};returns,if,the,thread,is,for,a,main,invocation,by,default,checks,the,name,of,the,thread,and,the,context,classloader,param,thread,the,thread,to,check,return,code,true,if,the,thread,is,a,main,invocation;protected,boolean,is,main,thread,thread,return,thread,get,name,equals,main,thread,get,context,class,loader,get,class,get,name,contains,app,class,loader
DefaultRestartInitializer -> protected boolean isMain(Thread thread);1540596962;Returns if the thread is for a main invocation. By default checks the name of the_thread and the context classloader._@param thread the thread to check_@return {@code true} if the thread is a main invocation;protected boolean isMain(Thread thread) {_		return thread.getName().equals("main") && thread.getContextClassLoader()_				.getClass().getName().contains("AppClassLoader")__	};returns,if,the,thread,is,for,a,main,invocation,by,default,checks,the,name,of,the,thread,and,the,context,classloader,param,thread,the,thread,to,check,return,code,true,if,the,thread,is,a,main,invocation;protected,boolean,is,main,thread,thread,return,thread,get,name,equals,main,thread,get,context,class,loader,get,class,get,name,contains,app,class,loader
DefaultRestartInitializer -> protected boolean isSkippedStackElement(StackTraceElement element);1507173536;Checks if a specific {@link StackTraceElement} should cause the initializer to be_skipped._@param element the stack element to check_@return {@code true} if the stack element means that the initializer should be_skipped;protected boolean isSkippedStackElement(StackTraceElement element) {_		for (String skipped : SKIPPED_STACK_ELEMENTS) {_			if (element.getClassName().startsWith(skipped)) {_				return true__			}_		}_		return false__	};checks,if,a,specific,link,stack,trace,element,should,cause,the,initializer,to,be,skipped,param,element,the,stack,element,to,check,return,code,true,if,the,stack,element,means,that,the,initializer,should,be,skipped;protected,boolean,is,skipped,stack,element,stack,trace,element,element,for,string,skipped,if,element,get,class,name,starts,with,skipped,return,true,return,false
DefaultRestartInitializer -> protected boolean isSkippedStackElement(StackTraceElement element);1509617159;Checks if a specific {@link StackTraceElement} should cause the initializer to be_skipped._@param element the stack element to check_@return {@code true} if the stack element means that the initializer should be_skipped;protected boolean isSkippedStackElement(StackTraceElement element) {_		for (String skipped : SKIPPED_STACK_ELEMENTS) {_			if (element.getClassName().startsWith(skipped)) {_				return true__			}_		}_		return false__	};checks,if,a,specific,link,stack,trace,element,should,cause,the,initializer,to,be,skipped,param,element,the,stack,element,to,check,return,code,true,if,the,stack,element,means,that,the,initializer,should,be,skipped;protected,boolean,is,skipped,stack,element,stack,trace,element,element,for,string,skipped,if,element,get,class,name,starts,with,skipped,return,true,return,false
DefaultRestartInitializer -> protected URL[] getUrls(Thread thread);1507173536;Return the URLs that should be used with initialization._@param thread the source thread_@return the URLs;protected URL[] getUrls(Thread thread) {_		return ChangeableUrls.fromClassLoader(thread.getContextClassLoader()).toArray()__	};return,the,urls,that,should,be,used,with,initialization,param,thread,the,source,thread,return,the,urls;protected,url,get,urls,thread,thread,return,changeable,urls,from,class,loader,thread,get,context,class,loader,to,array
DefaultRestartInitializer -> protected URL[] getUrls(Thread thread);1509617159;Return the URLs that should be used with initialization._@param thread the source thread_@return the URLs;protected URL[] getUrls(Thread thread) {_		return ChangeableUrls.fromClassLoader(thread.getContextClassLoader()).toArray()__	};return,the,urls,that,should,be,used,with,initialization,param,thread,the,source,thread,return,the,urls;protected,url,get,urls,thread,thread,return,changeable,urls,from,class,loader,thread,get,context,class,loader,to,array
DefaultRestartInitializer -> protected URL[] getUrls(Thread thread);1540327420;Return the URLs that should be used with initialization._@param thread the source thread_@return the URLs;protected URL[] getUrls(Thread thread) {_		return ChangeableUrls.fromClassLoader(thread.getContextClassLoader()).toArray()__	};return,the,urls,that,should,be,used,with,initialization,param,thread,the,source,thread,return,the,urls;protected,url,get,urls,thread,thread,return,changeable,urls,from,class,loader,thread,get,context,class,loader,to,array
DefaultRestartInitializer -> protected URL[] getUrls(Thread thread);1540327934;Return the URLs that should be used with initialization._@param thread the source thread_@return the URLs;protected URL[] getUrls(Thread thread) {_		return ChangeableUrls.fromClassLoader(thread.getContextClassLoader()).toArray()__	};return,the,urls,that,should,be,used,with,initialization,param,thread,the,source,thread,return,the,urls;protected,url,get,urls,thread,thread,return,changeable,urls,from,class,loader,thread,get,context,class,loader,to,array
DefaultRestartInitializer -> protected URL[] getUrls(Thread thread);1540596962;Return the URLs that should be used with initialization._@param thread the source thread_@return the URLs;protected URL[] getUrls(Thread thread) {_		return ChangeableUrls.fromClassLoader(thread.getContextClassLoader()).toArray()__	};return,the,urls,that,should,be,used,with,initialization,param,thread,the,source,thread,return,the,urls;protected,url,get,urls,thread,thread,return,changeable,urls,from,class,loader,thread,get,context,class,loader,to,array
DefaultRestartInitializer -> private boolean isSkippedStackElement(StackTraceElement element);1540327420;Checks if a specific {@link StackTraceElement} should cause the initializer to be_skipped._@param element the stack element to check_@return {@code true} if the stack element means that the initializer should be_skipped;private boolean isSkippedStackElement(StackTraceElement element) {_		for (String skipped : SKIPPED_STACK_ELEMENTS) {_			if (element.getClassName().startsWith(skipped)) {_				return true__			}_		}_		return false__	};checks,if,a,specific,link,stack,trace,element,should,cause,the,initializer,to,be,skipped,param,element,the,stack,element,to,check,return,code,true,if,the,stack,element,means,that,the,initializer,should,be,skipped;private,boolean,is,skipped,stack,element,stack,trace,element,element,for,string,skipped,if,element,get,class,name,starts,with,skipped,return,true,return,false
DefaultRestartInitializer -> private boolean isSkippedStackElement(StackTraceElement element);1540327934;Checks if a specific {@link StackTraceElement} should cause the initializer to be_skipped._@param element the stack element to check_@return {@code true} if the stack element means that the initializer should be_skipped;private boolean isSkippedStackElement(StackTraceElement element) {_		for (String skipped : SKIPPED_STACK_ELEMENTS) {_			if (element.getClassName().startsWith(skipped)) {_				return true__			}_		}_		return false__	};checks,if,a,specific,link,stack,trace,element,should,cause,the,initializer,to,be,skipped,param,element,the,stack,element,to,check,return,code,true,if,the,stack,element,means,that,the,initializer,should,be,skipped;private,boolean,is,skipped,stack,element,stack,trace,element,element,for,string,skipped,if,element,get,class,name,starts,with,skipped,return,true,return,false
DefaultRestartInitializer -> private boolean isSkippedStackElement(StackTraceElement element);1540596962;Checks if a specific {@link StackTraceElement} should cause the initializer to be_skipped._@param element the stack element to check_@return {@code true} if the stack element means that the initializer should be_skipped;private boolean isSkippedStackElement(StackTraceElement element) {_		for (String skipped : SKIPPED_STACK_ELEMENTS) {_			if (element.getClassName().startsWith(skipped)) {_				return true__			}_		}_		return false__	};checks,if,a,specific,link,stack,trace,element,should,cause,the,initializer,to,be,skipped,param,element,the,stack,element,to,check,return,code,true,if,the,stack,element,means,that,the,initializer,should,be,skipped;private,boolean,is,skipped,stack,element,stack,trace,element,element,for,string,skipped,if,element,get,class,name,starts,with,skipped,return,true,return,false
