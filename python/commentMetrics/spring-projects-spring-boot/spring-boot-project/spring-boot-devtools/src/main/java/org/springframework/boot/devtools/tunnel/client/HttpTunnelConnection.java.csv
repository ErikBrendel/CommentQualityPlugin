# id;timestamp;commentText;codeText;commentWords;codeWords
HttpTunnelConnection -> protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory, 			Executor executor);1507173536;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory_@param executor the executor used to handle connections;protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory,_			Executor executor) {_		Assert.hasLength(url, "URL must not be empty")__		Assert.notNull(requestFactory, "RequestFactory must not be null")__		try {_			this.uri = new URL(url).toURI()__		}_		catch (URISyntaxException | MalformedURLException ex) {_			throw new IllegalArgumentException("Malformed URL '" + url + "'")__		}_		this.requestFactory = requestFactory__		this.executor = (executor == null_				? Executors.newCachedThreadPool(new TunnelThreadFactory()) : executor)__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory,param,executor,the,executor,used,to,handle,connections;protected,http,tunnel,connection,string,url,client,http,request,factory,request,factory,executor,executor,assert,has,length,url,url,must,not,be,empty,assert,not,null,request,factory,request,factory,must,not,be,null,try,this,uri,new,url,url,to,uri,catch,urisyntax,exception,malformed,urlexception,ex,throw,new,illegal,argument,exception,malformed,url,url,this,request,factory,request,factory,this,executor,executor,null,executors,new,cached,thread,pool,new,tunnel,thread,factory,executor
HttpTunnelConnection -> protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory, 			Executor executor);1512760426;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory_@param executor the executor used to handle connections;protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory,_			Executor executor) {_		Assert.hasLength(url, "URL must not be empty")__		Assert.notNull(requestFactory, "RequestFactory must not be null")__		try {_			this.uri = new URL(url).toURI()__		}_		catch (URISyntaxException | MalformedURLException ex) {_			throw new IllegalArgumentException("Malformed URL '" + url + "'")__		}_		this.requestFactory = requestFactory__		this.executor = (executor == null_				? Executors.newCachedThreadPool(new TunnelThreadFactory()) : executor)__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory,param,executor,the,executor,used,to,handle,connections;protected,http,tunnel,connection,string,url,client,http,request,factory,request,factory,executor,executor,assert,has,length,url,url,must,not,be,empty,assert,not,null,request,factory,request,factory,must,not,be,null,try,this,uri,new,url,url,to,uri,catch,urisyntax,exception,malformed,urlexception,ex,throw,new,illegal,argument,exception,malformed,url,url,this,request,factory,request,factory,this,executor,executor,null,executors,new,cached,thread,pool,new,tunnel,thread,factory,executor
HttpTunnelConnection -> protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory, 			Executor executor);1525376698;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory_@param executor the executor used to handle connections;protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory,_			Executor executor) {_		Assert.hasLength(url, "URL must not be empty")__		Assert.notNull(requestFactory, "RequestFactory must not be null")__		try {_			this.uri = new URL(url).toURI()__		}_		catch (URISyntaxException | MalformedURLException ex) {_			throw new IllegalArgumentException("Malformed URL '" + url + "'")__		}_		this.requestFactory = requestFactory__		this.executor = (executor != null ? executor_				: Executors.newCachedThreadPool(new TunnelThreadFactory()))__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory,param,executor,the,executor,used,to,handle,connections;protected,http,tunnel,connection,string,url,client,http,request,factory,request,factory,executor,executor,assert,has,length,url,url,must,not,be,empty,assert,not,null,request,factory,request,factory,must,not,be,null,try,this,uri,new,url,url,to,uri,catch,urisyntax,exception,malformed,urlexception,ex,throw,new,illegal,argument,exception,malformed,url,url,this,request,factory,request,factory,this,executor,executor,null,executor,executors,new,cached,thread,pool,new,tunnel,thread,factory
HttpTunnelConnection -> protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory, 			Executor executor);1532738143;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory_@param executor the executor used to handle connections;protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory,_			Executor executor) {_		Assert.hasLength(url, "URL must not be empty")__		Assert.notNull(requestFactory, "RequestFactory must not be null")__		try {_			this.uri = new URL(url).toURI()__		}_		catch (URISyntaxException | MalformedURLException ex) {_			throw new IllegalArgumentException("Malformed URL '" + url + "'")__		}_		this.requestFactory = requestFactory__		this.executor = (executor != null) ? executor_				: Executors.newCachedThreadPool(new TunnelThreadFactory())__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory,param,executor,the,executor,used,to,handle,connections;protected,http,tunnel,connection,string,url,client,http,request,factory,request,factory,executor,executor,assert,has,length,url,url,must,not,be,empty,assert,not,null,request,factory,request,factory,must,not,be,null,try,this,uri,new,url,url,to,uri,catch,urisyntax,exception,malformed,urlexception,ex,throw,new,illegal,argument,exception,malformed,url,url,this,request,factory,request,factory,this,executor,executor,null,executor,executors,new,cached,thread,pool,new,tunnel,thread,factory
HttpTunnelConnection -> protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory, 			Executor executor);1532852936;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory_@param executor the executor used to handle connections;protected HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory,_			Executor executor) {_		Assert.hasLength(url, "URL must not be empty")__		Assert.notNull(requestFactory, "RequestFactory must not be null")__		try {_			this.uri = new URL(url).toURI()__		}_		catch (URISyntaxException | MalformedURLException ex) {_			throw new IllegalArgumentException("Malformed URL '" + url + "'")__		}_		this.requestFactory = requestFactory__		this.executor = (executor != null) ? executor_				: Executors.newCachedThreadPool(new TunnelThreadFactory())__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory,param,executor,the,executor,used,to,handle,connections;protected,http,tunnel,connection,string,url,client,http,request,factory,request,factory,executor,executor,assert,has,length,url,url,must,not,be,empty,assert,not,null,request,factory,request,factory,must,not,be,null,try,this,uri,new,url,url,to,uri,catch,urisyntax,exception,malformed,urlexception,ex,throw,new,illegal,argument,exception,malformed,url,url,this,request,factory,request,factory,this,executor,executor,null,executor,executors,new,cached,thread,pool,new,tunnel,thread,factory
HttpTunnelConnection -> public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory);1507173536;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory;public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory) {_		this(url, requestFactory, null)__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory;public,http,tunnel,connection,string,url,client,http,request,factory,request,factory,this,url,request,factory,null
HttpTunnelConnection -> public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory);1512760426;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory;public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory) {_		this(url, requestFactory, null)__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory;public,http,tunnel,connection,string,url,client,http,request,factory,request,factory,this,url,request,factory,null
HttpTunnelConnection -> public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory);1525376698;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory;public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory) {_		this(url, requestFactory, null)__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory;public,http,tunnel,connection,string,url,client,http,request,factory,request,factory,this,url,request,factory,null
HttpTunnelConnection -> public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory);1532738143;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory;public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory) {_		this(url, requestFactory, null)__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory;public,http,tunnel,connection,string,url,client,http,request,factory,request,factory,this,url,request,factory,null
HttpTunnelConnection -> public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory);1532852936;Create a new {@link HttpTunnelConnection} instance._@param url the URL to connect to_@param requestFactory the HTTP request factory;public HttpTunnelConnection(String url, ClientHttpRequestFactory requestFactory) {_		this(url, requestFactory, null)__	};create,a,new,link,http,tunnel,connection,instance,param,url,the,url,to,connect,to,param,request,factory,the,http,request,factory;public,http,tunnel,connection,string,url,client,http,request,factory,request,factory,this,url,request,factory,null
