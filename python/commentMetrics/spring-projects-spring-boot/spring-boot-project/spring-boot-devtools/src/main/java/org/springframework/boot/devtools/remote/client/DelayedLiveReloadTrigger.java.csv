commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;5;;protected void setTimings(long shutdown, long sleep, long timeout) {     this.shutdownTime = shutdown.     this.sleepTime = sleep.     this.timeout = timeout. }
false;public;0;19;;@Override public void run() {     try {         Thread.sleep(this.shutdownTime).         long start = System.currentTimeMillis().         while (!isUp()) {             long runTime = System.currentTimeMillis() - start.             if (runTime > this.timeout) {                 return.             }             Thread.sleep(this.sleepTime).         }         logger.info("Remote server has changed, triggering LiveReload").         this.liveReloadServer.triggerReload().     } catch (InterruptedException ex) {         Thread.currentThread().interrupt().     } }
false;private;0;10;;private boolean isUp() {     try {         ClientHttpRequest request = createRequest().         ClientHttpResponse response = request.execute().         return response.getStatusCode() == HttpStatus.OK.     } catch (Exception ex) {         return false.     } }
false;private;0;3;;private ClientHttpRequest createRequest() throws IOException {     return this.requestFactory.createRequest(this.uri, HttpMethod.GET). }
