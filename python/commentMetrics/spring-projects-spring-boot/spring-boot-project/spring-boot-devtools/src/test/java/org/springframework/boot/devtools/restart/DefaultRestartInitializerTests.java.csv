commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void jUnitStackShouldReturnNull() {     testSkippedStacks("org.junit.runners.Something"). }
false;public;0;4;;@Test public void jUnit5StackShouldReturnNull() {     testSkippedStacks("org.junit.platform.Something"). }
false;public;0;4;;@Test public void springTestStackShouldReturnNull() {     testSkippedStacks("org.springframework.boot.test.Something"). }
false;public;0;4;;@Test public void cucumberStackShouldReturnNull() {     testSkippedStacks("cucumber.runtime.Runtime.run"). }
false;public;0;9;;@Test public void validMainThreadShouldReturnUrls() {     DefaultRestartInitializer initializer = new DefaultRestartInitializer().     ClassLoader classLoader = new MockAppClassLoader(getClass().getClassLoader()).     Thread thread = new Thread().     thread.setName("main").     thread.setContextClassLoader(classLoader).     assertThat(initializer.getInitialUrls(thread)).isNotNull(). }
false;public;0;9;;@Test public void threadNotNamedMainShouldReturnNull() {     DefaultRestartInitializer initializer = new DefaultRestartInitializer().     ClassLoader classLoader = new MockAppClassLoader(getClass().getClassLoader()).     Thread thread = new Thread().     thread.setName("buscuit").     thread.setContextClassLoader(classLoader).     assertThat(initializer.getInitialUrls(thread)).isNull(). }
false;public;0;10;;@Test public void threadNotUsingAppClassLoader() {     DefaultRestartInitializer initializer = new DefaultRestartInitializer().     ClassLoader classLoader = new MockLauncherClassLoader(getClass().getClassLoader()).     Thread thread = new Thread().     thread.setName("main").     thread.setContextClassLoader(classLoader).     assertThat(initializer.getInitialUrls(thread)).isNull(). }
false;public;0;5;;@Test public void urlsCanBeRetrieved() {     assertThat(new DefaultRestartInitializer().getUrls(Thread.currentThread())).isNotEmpty(). }
false;protected;1;11;;protected void testSkippedStacks(String s) {     DefaultRestartInitializer initializer = new DefaultRestartInitializer().     ClassLoader classLoader = new MockAppClassLoader(getClass().getClassLoader()).     Thread thread = mock(Thread.class).     thread.setName("main").     StackTraceElement element = new StackTraceElement(s, "someMethod", "someFile", 123).     given(thread.getStackTrace()).willReturn(new StackTraceElement[] { element }).     given(thread.getContextClassLoader()).willReturn(classLoader).     assertThat(initializer.getInitialUrls(thread)).isEqualTo(null). }
