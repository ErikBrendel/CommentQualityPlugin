commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setup() throws IOException {     this.server = new MockServer().     this.connection = new SocketTargetServerConnection(() -> this.server.getPort()). }
false;public;0;9;;@Test public void readData() throws Exception {     this.server.willSend("hello".getBytes()).     this.server.start().     ByteChannel channel = this.connection.open(DEFAULT_TIMEOUT).     ByteBuffer buffer = ByteBuffer.allocate(5).     channel.read(buffer).     assertThat(buffer.array()).isEqualTo("hello".getBytes()). }
false;public;0;9;;@Test public void writeData() throws Exception {     this.server.expect("hello".getBytes()).     this.server.start().     ByteChannel channel = this.connection.open(DEFAULT_TIMEOUT).     ByteBuffer buffer = ByteBuffer.wrap("hello".getBytes()).     channel.write(buffer).     this.server.closeAndVerify(). }
false;public;0;14;;@Test public void timeout() throws Exception {     this.server.delay(1000).     this.server.start().     ByteChannel channel = this.connection.open(10).     long startTime = System.currentTimeMillis().     assertThatExceptionOfType(SocketTimeoutException.class).isThrownBy(() -> channel.read(ByteBuffer.allocate(5))).satisfies((ex) -> {         long runTime = System.currentTimeMillis() - startTime.         assertThat(runTime).isGreaterThanOrEqualTo(10L).         assertThat(runTime).isLessThan(10000L).     }). }
false;;0;3;;int getPort() {     return this.serverSocket.socket().getLocalPort(). }
false;public;1;3;;public void delay(int delay) {     this.delay = delay. }
false;public;1;3;;public void willSend(byte[] send) {     this.send = send. }
false;public;1;3;;public void expect(byte[] expect) {     this.expect = expect. }
false;public;0;4;;public void start() {     this.thread = new ServerThread().     this.thread.start(). }
false;public;0;4;;public void closeAndVerify() throws InterruptedException {     close().     assertThat(this.actualRead.array()).isEqualTo(this.expect). }
false;public;0;5;;public void close() throws InterruptedException {     while (this.thread.isAlive()) {         Thread.sleep(10).     } }
false;public;0;25;;@Override public void run() {     try {         SocketChannel channel = MockServer.this.serverSocket.accept().         Thread.sleep(MockServer.this.delay).         if (MockServer.this.send != null) {             ByteBuffer buffer = ByteBuffer.wrap(MockServer.this.send).             while (buffer.hasRemaining()) {                 channel.write(buffer).             }         }         if (MockServer.this.expect != null) {             ByteBuffer buffer = ByteBuffer.allocate(MockServer.this.expect.length).             while (buffer.hasRemaining()) {                 channel.read(buffer).             }             MockServer.this.actualRead = buffer.         }         channel.close().     } catch (Exception ex) {         throw new RuntimeException(ex).     } }
