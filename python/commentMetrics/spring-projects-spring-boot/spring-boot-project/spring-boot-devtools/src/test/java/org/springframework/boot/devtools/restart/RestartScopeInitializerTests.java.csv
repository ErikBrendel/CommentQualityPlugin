commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void restartScope() {     createCount = new AtomicInteger().     refreshCount = new AtomicInteger().     ConfigurableApplicationContext context = runApplication().     context.close().     context = runApplication().     context.close().     assertThat(createCount.get()).isEqualTo(1).     assertThat(refreshCount.get()).isEqualTo(2). }
false;private;0;5;;private ConfigurableApplicationContext runApplication() {     SpringApplication application = new SpringApplication(Config.class).     application.setWebApplicationType(WebApplicationType.NONE).     return application.run(). }
false;public;0;5;;@Bean @RestartScope public ScopeTestBean scopeTestBean() {     return new ScopeTestBean(). }
false;public;1;4;;@Override public void onApplicationEvent(ContextRefreshedEvent event) {     refreshCount.incrementAndGet(). }
