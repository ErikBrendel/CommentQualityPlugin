commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before public void setup() {     MockitoAnnotations.initMocks(this).     this.request = new MockHttpServletRequest().     this.response = new MockHttpServletResponse().     this.serverRequest = new ServletServerHttpRequest(this.request).     this.serverResponse = new ServletServerHttpResponse(this.response). }
false;public;0;6;;@Test public void accessManagerMustNotBeNull() {     assertThatIllegalArgumentException().isThrownBy(() -> new Dispatcher(null, Collections.emptyList())).withMessageContaining("AccessManager must not be null"). }
false;public;0;6;;@Test public void mappersMustNotBeNull() {     assertThatIllegalArgumentException().isThrownBy(() -> new Dispatcher(this.accessManager, null)).withMessageContaining("Mappers must not be null"). }
false;public;0;13;;@Test public void accessManagerVetoRequest() throws Exception {     given(this.accessManager.isAllowed(any(ServerHttpRequest.class))).willReturn(false).     HandlerMapper mapper = mock(HandlerMapper.class).     Handler handler = mock(Handler.class).     given(mapper.getHandler(any(ServerHttpRequest.class))).willReturn(handler).     Dispatcher dispatcher = new Dispatcher(this.accessManager, Collections.singleton(mapper)).     dispatcher.handle(this.serverRequest, this.serverResponse).     verifyZeroInteractions(handler).     assertThat(this.response.getStatus()).isEqualTo(403). }
false;public;0;12;;@Test public void accessManagerAllowRequest() throws Exception {     given(this.accessManager.isAllowed(any(ServerHttpRequest.class))).willReturn(true).     HandlerMapper mapper = mock(HandlerMapper.class).     Handler handler = mock(Handler.class).     given(mapper.getHandler(any(ServerHttpRequest.class))).willReturn(handler).     Dispatcher dispatcher = new Dispatcher(this.accessManager, Collections.singleton(mapper)).     dispatcher.handle(this.serverRequest, this.serverResponse).     verify(handler).handle(this.serverRequest, this.serverResponse). }
false;public;0;15;;@Test public void ordersMappers() throws Exception {     HandlerMapper mapper1 = mock(HandlerMapper.class, withSettings().extraInterfaces(Ordered.class)).     HandlerMapper mapper2 = mock(HandlerMapper.class, withSettings().extraInterfaces(Ordered.class)).     given(((Ordered) mapper1).getOrder()).willReturn(1).     given(((Ordered) mapper2).getOrder()).willReturn(2).     List<HandlerMapper> mappers = Arrays.asList(mapper2, mapper1).     Dispatcher dispatcher = new Dispatcher(AccessManager.PERMIT_ALL, mappers).     dispatcher.handle(this.serverRequest, this.serverResponse).     InOrder inOrder = inOrder(mapper1, mapper2).     inOrder.verify(mapper1).getHandler(this.serverRequest).     inOrder.verify(mapper2).getHandler(this.serverRequest). }
