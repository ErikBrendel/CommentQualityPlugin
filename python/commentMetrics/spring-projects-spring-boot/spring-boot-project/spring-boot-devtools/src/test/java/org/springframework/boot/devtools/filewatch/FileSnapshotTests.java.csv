commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void fileMustNotBeNull() {     assertThatIllegalArgumentException().isThrownBy(() -> new FileSnapshot(null)).withMessageContaining("File must not be null"). }
false;public;0;6;;@Test public void fileMustNotBeAFolder() throws Exception {     assertThatIllegalArgumentException().isThrownBy(() -> new FileSnapshot(this.temporaryFolder.newFolder())).withMessageContaining("File must not be a folder"). }
false;public;0;9;;@Test public void equalsIfTheSame() throws Exception {     File file = createNewFile("abc", MODIFIED).     File fileCopy = new File(file, "x").getParentFile().     FileSnapshot snapshot1 = new FileSnapshot(file).     FileSnapshot snapshot2 = new FileSnapshot(fileCopy).     assertThat(snapshot1).isEqualTo(snapshot2).     assertThat(snapshot1.hashCode()).isEqualTo(snapshot2.hashCode()). }
false;public;0;7;;@Test public void notEqualsIfDeleted() throws Exception {     File file = createNewFile("abc", MODIFIED).     FileSnapshot snapshot1 = new FileSnapshot(file).     file.delete().     assertThat(snapshot1).isNotEqualTo(new FileSnapshot(file)). }
false;public;0;7;;@Test public void notEqualsIfLengthChanges() throws Exception {     File file = createNewFile("abc", MODIFIED).     FileSnapshot snapshot1 = new FileSnapshot(file).     setupFile(file, "abcd", MODIFIED).     assertThat(snapshot1).isNotEqualTo(new FileSnapshot(file)). }
false;public;0;7;;@Test public void notEqualsIfLastModifiedChanges() throws Exception {     File file = createNewFile("abc", MODIFIED).     FileSnapshot snapshot1 = new FileSnapshot(file).     setupFile(file, "abc", MODIFIED + TWO_MINS).     assertThat(snapshot1).isNotEqualTo(new FileSnapshot(file)). }
false;private;2;5;;private File createNewFile(String content, long lastModified) throws IOException {     File file = this.temporaryFolder.newFile().     setupFile(file, content, lastModified).     return file. }
false;private;3;5;;private void setupFile(File file, String content, long lastModified) throws IOException {     FileCopyUtils.copy(content.getBytes(), file).     file.setLastModified(lastModified). }
