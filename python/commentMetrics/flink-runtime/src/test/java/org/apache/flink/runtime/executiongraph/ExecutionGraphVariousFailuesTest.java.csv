# id;timestamp;commentText;codeText;commentWords;codeWords
ExecutionGraphVariousFailuesTest -> @Test 	public void testSuppressRestartFailureWhileRestarting() throws Exception;1493831843;Tests that a {@link SuppressRestartsException} in state RESTARTING stops the restarting_immediately and sets the execution graph's state to FAILED.;@Test_	public void testSuppressRestartFailureWhileRestarting() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(10))__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		eg.failGlobal(new Exception("test"))__		assertEquals(JobStatus.FAILING, eg.getState())___		ExecutionGraphTestUtils.completeCancellingForAllVertices(eg)__		assertEquals(JobStatus.RESTARTING, eg.getState())___		_		eg.failGlobal(new SuppressRestartsException(new Exception("Test")))___		assertEquals(JobStatus.FAILED, eg.getState())__	};tests,that,a,link,suppress,restarts,exception,in,state,restarting,stops,the,restarting,immediately,and,sets,the,execution,graph,s,state,to,failed;test,public,void,test,suppress,restart,failure,while,restarting,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,10,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,eg,fail,global,new,exception,test,assert,equals,job,status,failing,eg,get,state,execution,graph,test,utils,complete,cancelling,for,all,vertices,eg,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,suppress,restarts,exception,new,exception,test,assert,equals,job,status,failed,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testSuppressRestartFailureWhileRestarting() throws Exception;1509631297;Tests that a {@link SuppressRestartsException} in state RESTARTING stops the restarting_immediately and sets the execution graph's state to FAILED.;@Test_	public void testSuppressRestartFailureWhileRestarting() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(10))__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		eg.failGlobal(new Exception("test"))__		assertEquals(JobStatus.FAILING, eg.getState())___		ExecutionGraphTestUtils.completeCancellingForAllVertices(eg)__		assertEquals(JobStatus.RESTARTING, eg.getState())___		_		eg.failGlobal(new SuppressRestartsException(new Exception("Test")))___		assertEquals(JobStatus.FAILED, eg.getState())__	};tests,that,a,link,suppress,restarts,exception,in,state,restarting,stops,the,restarting,immediately,and,sets,the,execution,graph,s,state,to,failed;test,public,void,test,suppress,restart,failure,while,restarting,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,10,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,eg,fail,global,new,exception,test,assert,equals,job,status,failing,eg,get,state,execution,graph,test,utils,complete,cancelling,for,all,vertices,eg,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,suppress,restarts,exception,new,exception,test,assert,equals,job,status,failed,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testSuppressRestartFailureWhileRestarting() throws Exception;1549365080;Tests that a {@link SuppressRestartsException} in state RESTARTING stops the restarting_immediately and sets the execution graph's state to FAILED.;@Test_	public void testSuppressRestartFailureWhileRestarting() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(10))__		eg.start(TestingComponentMainThreadExecutorServiceAdapter.forMainThread())__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		eg.failGlobal(new Exception("test"))__		assertEquals(JobStatus.FAILING, eg.getState())___		ExecutionGraphTestUtils.completeCancellingForAllVertices(eg)__		assertEquals(JobStatus.RESTARTING, eg.getState())___		_		eg.failGlobal(new SuppressRestartsException(new Exception("Test")))___		assertEquals(JobStatus.FAILED, eg.getState())__	};tests,that,a,link,suppress,restarts,exception,in,state,restarting,stops,the,restarting,immediately,and,sets,the,execution,graph,s,state,to,failed;test,public,void,test,suppress,restart,failure,while,restarting,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,10,eg,start,testing,component,main,thread,executor,service,adapter,for,main,thread,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,eg,fail,global,new,exception,test,assert,equals,job,status,failing,eg,get,state,execution,graph,test,utils,complete,cancelling,for,all,vertices,eg,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,suppress,restarts,exception,new,exception,test,assert,equals,job,status,failed,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testFailingScheduleOrUpdateConsumers() throws Exception;1493831843;Tests that a failing scheduleOrUpdateConsumers call with a non-existing execution attempt_id, will not fail the execution graph.;@Test_	public void testFailingScheduleOrUpdateConsumers() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(10))__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		IntermediateResultPartitionID intermediateResultPartitionId = new IntermediateResultPartitionID()__		ExecutionAttemptID producerId = new ExecutionAttemptID()__		ResultPartitionID resultPartitionId = new ResultPartitionID(intermediateResultPartitionId, producerId)___		_		__		try {_			eg.scheduleOrUpdateConsumers(resultPartitionId)__			fail("Expected ExecutionGraphException.")__		} catch (ExecutionGraphException e) {_			_		}__		assertEquals(JobStatus.RUNNING, eg.getState())__	};tests,that,a,failing,schedule,or,update,consumers,call,with,a,non,existing,execution,attempt,id,will,not,fail,the,execution,graph;test,public,void,test,failing,schedule,or,update,consumers,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,10,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,intermediate,result,partition,id,intermediate,result,partition,id,new,intermediate,result,partition,id,execution,attempt,id,producer,id,new,execution,attempt,id,result,partition,id,result,partition,id,new,result,partition,id,intermediate,result,partition,id,producer,id,try,eg,schedule,or,update,consumers,result,partition,id,fail,expected,execution,graph,exception,catch,execution,graph,exception,e,assert,equals,job,status,running,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testFailingScheduleOrUpdateConsumers() throws Exception;1509631297;Tests that a failing scheduleOrUpdateConsumers call with a non-existing execution attempt_id, will not fail the execution graph.;@Test_	public void testFailingScheduleOrUpdateConsumers() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(10))__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		IntermediateResultPartitionID intermediateResultPartitionId = new IntermediateResultPartitionID()__		ExecutionAttemptID producerId = new ExecutionAttemptID()__		ResultPartitionID resultPartitionId = new ResultPartitionID(intermediateResultPartitionId, producerId)___		_		__		try {_			eg.scheduleOrUpdateConsumers(resultPartitionId)__			fail("Expected ExecutionGraphException.")__		} catch (ExecutionGraphException e) {_			_		}__		assertEquals(JobStatus.RUNNING, eg.getState())__	};tests,that,a,failing,schedule,or,update,consumers,call,with,a,non,existing,execution,attempt,id,will,not,fail,the,execution,graph;test,public,void,test,failing,schedule,or,update,consumers,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,10,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,intermediate,result,partition,id,intermediate,result,partition,id,new,intermediate,result,partition,id,execution,attempt,id,producer,id,new,execution,attempt,id,result,partition,id,result,partition,id,new,result,partition,id,intermediate,result,partition,id,producer,id,try,eg,schedule,or,update,consumers,result,partition,id,fail,expected,execution,graph,exception,catch,execution,graph,exception,e,assert,equals,job,status,running,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testFailingScheduleOrUpdateConsumers() throws Exception;1549365080;Tests that a failing scheduleOrUpdateConsumers call with a non-existing execution attempt_id, will not fail the execution graph.;@Test_	public void testFailingScheduleOrUpdateConsumers() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(10))__		eg.start(TestingComponentMainThreadExecutorServiceAdapter.forMainThread())__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		IntermediateResultPartitionID intermediateResultPartitionId = new IntermediateResultPartitionID()__		ExecutionAttemptID producerId = new ExecutionAttemptID()__		ResultPartitionID resultPartitionId = new ResultPartitionID(intermediateResultPartitionId, producerId)___		_		__		try {_			eg.scheduleOrUpdateConsumers(resultPartitionId)__			fail("Expected ExecutionGraphException.")__		} catch (ExecutionGraphException e) {_			_		}__		assertEquals(JobStatus.RUNNING, eg.getState())__	};tests,that,a,failing,schedule,or,update,consumers,call,with,a,non,existing,execution,attempt,id,will,not,fail,the,execution,graph;test,public,void,test,failing,schedule,or,update,consumers,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,10,eg,start,testing,component,main,thread,executor,service,adapter,for,main,thread,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,intermediate,result,partition,id,intermediate,result,partition,id,new,intermediate,result,partition,id,execution,attempt,id,producer,id,new,execution,attempt,id,result,partition,id,result,partition,id,new,result,partition,id,intermediate,result,partition,id,producer,id,try,eg,schedule,or,update,consumers,result,partition,id,fail,expected,execution,graph,exception,catch,execution,graph,exception,e,assert,equals,job,status,running,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testFailureWhileRestarting() throws Exception;1493831843;Test that failing in state restarting will retrigger the restarting logic. This means that_it only goes into the state FAILED after the restart strategy says the job is no longer_restartable.;@Test_	public void testFailureWhileRestarting() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(2))__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		eg.failGlobal(new Exception("Test 1"))__		assertEquals(JobStatus.FAILING, eg.getState())__		ExecutionGraphTestUtils.completeCancellingForAllVertices(eg)___		_		assertEquals(JobStatus.RESTARTING, eg.getState())___		eg.failGlobal(new Exception("Test 2"))___		_		assertEquals(JobStatus.RESTARTING, eg.getState())___		eg.failGlobal(new Exception("Test 3"))___		_		assertEquals(JobStatus.FAILED, eg.getState())__	};test,that,failing,in,state,restarting,will,retrigger,the,restarting,logic,this,means,that,it,only,goes,into,the,state,failed,after,the,restart,strategy,says,the,job,is,no,longer,restartable;test,public,void,test,failure,while,restarting,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,2,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,eg,fail,global,new,exception,test,1,assert,equals,job,status,failing,eg,get,state,execution,graph,test,utils,complete,cancelling,for,all,vertices,eg,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,exception,test,2,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,exception,test,3,assert,equals,job,status,failed,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testFailureWhileRestarting() throws Exception;1509631297;Test that failing in state restarting will retrigger the restarting logic. This means that_it only goes into the state FAILED after the restart strategy says the job is no longer_restartable.;@Test_	public void testFailureWhileRestarting() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(2))__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		eg.failGlobal(new Exception("Test 1"))__		assertEquals(JobStatus.FAILING, eg.getState())__		ExecutionGraphTestUtils.completeCancellingForAllVertices(eg)___		_		assertEquals(JobStatus.RESTARTING, eg.getState())___		eg.failGlobal(new Exception("Test 2"))___		_		assertEquals(JobStatus.RESTARTING, eg.getState())___		eg.failGlobal(new Exception("Test 3"))___		_		assertEquals(JobStatus.FAILED, eg.getState())__	};test,that,failing,in,state,restarting,will,retrigger,the,restarting,logic,this,means,that,it,only,goes,into,the,state,failed,after,the,restart,strategy,says,the,job,is,no,longer,restartable;test,public,void,test,failure,while,restarting,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,2,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,eg,fail,global,new,exception,test,1,assert,equals,job,status,failing,eg,get,state,execution,graph,test,utils,complete,cancelling,for,all,vertices,eg,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,exception,test,2,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,exception,test,3,assert,equals,job,status,failed,eg,get,state
ExecutionGraphVariousFailuesTest -> @Test 	public void testFailureWhileRestarting() throws Exception;1549365080;Test that failing in state restarting will retrigger the restarting logic. This means that_it only goes into the state FAILED after the restart strategy says the job is no longer_restartable.;@Test_	public void testFailureWhileRestarting() throws Exception {_		final ExecutionGraph eg = ExecutionGraphTestUtils.createSimpleTestGraph(new InfiniteDelayRestartStrategy(2))__		eg.start(TestingComponentMainThreadExecutorServiceAdapter.forMainThread())__		eg.scheduleForExecution()___		assertEquals(JobStatus.RUNNING, eg.getState())__		ExecutionGraphTestUtils.switchAllVerticesToRunning(eg)___		eg.failGlobal(new Exception("Test 1"))__		assertEquals(JobStatus.FAILING, eg.getState())__		ExecutionGraphTestUtils.completeCancellingForAllVertices(eg)___		_		assertEquals(JobStatus.RESTARTING, eg.getState())___		eg.failGlobal(new Exception("Test 2"))___		_		assertEquals(JobStatus.RESTARTING, eg.getState())___		eg.failGlobal(new Exception("Test 3"))___		_		assertEquals(JobStatus.FAILED, eg.getState())__	};test,that,failing,in,state,restarting,will,retrigger,the,restarting,logic,this,means,that,it,only,goes,into,the,state,failed,after,the,restart,strategy,says,the,job,is,no,longer,restartable;test,public,void,test,failure,while,restarting,throws,exception,final,execution,graph,eg,execution,graph,test,utils,create,simple,test,graph,new,infinite,delay,restart,strategy,2,eg,start,testing,component,main,thread,executor,service,adapter,for,main,thread,eg,schedule,for,execution,assert,equals,job,status,running,eg,get,state,execution,graph,test,utils,switch,all,vertices,to,running,eg,eg,fail,global,new,exception,test,1,assert,equals,job,status,failing,eg,get,state,execution,graph,test,utils,complete,cancelling,for,all,vertices,eg,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,exception,test,2,assert,equals,job,status,restarting,eg,get,state,eg,fail,global,new,exception,test,3,assert,equals,job,status,failed,eg,get,state
