# id;timestamp;commentText;codeText;commentWords;codeWords
MockInputSplitProvider -> public void addInputSplits(final String path, final int noSplits);1405024514;Generates a set of input splits from an input path__@param path_the path of the local file to generate the input splits from_@param noSplits_the number of input splits to be generated from the given input file;public void addInputSplits(final String path, final int noSplits) {__		final InputSplit[] tmp = new InputSplit[noSplits]__		final String[] hosts = { "localhost" }___		final String localPath__		try {_			localPath = new URI(path).getPath()__		} catch (URISyntaxException e) {_			throw new IllegalArgumentException("Path URI can not be transformed to local path.")__		}_		_		final File inFile = new File(localPath)___		final long splitLength = inFile.length() / noSplits__		long pos = 0___		for (int i = 0_ i < noSplits - 1_ i++) {_			tmp[i] = new FileInputSplit(i, new Path(path), pos, splitLength, hosts)__			pos += splitLength__		}__		tmp[noSplits - 1] = new FileInputSplit(noSplits - 1, new Path(path), pos, inFile.length() - pos, hosts)___		this.inputSplits = tmp__	};generates,a,set,of,input,splits,from,an,input,path,param,path,the,path,of,the,local,file,to,generate,the,input,splits,from,param,no,splits,the,number,of,input,splits,to,be,generated,from,the,given,input,file;public,void,add,input,splits,final,string,path,final,int,no,splits,final,input,split,tmp,new,input,split,no,splits,final,string,hosts,localhost,final,string,local,path,try,local,path,new,uri,path,get,path,catch,urisyntax,exception,e,throw,new,illegal,argument,exception,path,uri,can,not,be,transformed,to,local,path,final,file,in,file,new,file,local,path,final,long,split,length,in,file,length,no,splits,long,pos,0,for,int,i,0,i,no,splits,1,i,tmp,i,new,file,input,split,i,new,path,path,pos,split,length,hosts,pos,split,length,tmp,no,splits,1,new,file,input,split,no,splits,1,new,path,path,pos,in,file,length,pos,hosts,this,input,splits,tmp
MockInputSplitProvider -> public void addInputSplits(final String path, final int noSplits);1405090423;Generates a set of input splits from an input path__@param path_the path of the local file to generate the input splits from_@param noSplits_the number of input splits to be generated from the given input file;public void addInputSplits(final String path, final int noSplits) {__		final InputSplit[] tmp = new InputSplit[noSplits]__		final String[] hosts = { "localhost" }___		final String localPath__		try {_			localPath = new URI(path).getPath()__		} catch (URISyntaxException e) {_			throw new IllegalArgumentException("Path URI can not be transformed to local path.")__		}_		_		final File inFile = new File(localPath)___		final long splitLength = inFile.length() / noSplits__		long pos = 0___		for (int i = 0_ i < noSplits - 1_ i++) {_			tmp[i] = new FileInputSplit(i, new Path(path), pos, splitLength, hosts)__			pos += splitLength__		}__		tmp[noSplits - 1] = new FileInputSplit(noSplits - 1, new Path(path), pos, inFile.length() - pos, hosts)___		this.inputSplits = tmp__	};generates,a,set,of,input,splits,from,an,input,path,param,path,the,path,of,the,local,file,to,generate,the,input,splits,from,param,no,splits,the,number,of,input,splits,to,be,generated,from,the,given,input,file;public,void,add,input,splits,final,string,path,final,int,no,splits,final,input,split,tmp,new,input,split,no,splits,final,string,hosts,localhost,final,string,local,path,try,local,path,new,uri,path,get,path,catch,urisyntax,exception,e,throw,new,illegal,argument,exception,path,uri,can,not,be,transformed,to,local,path,final,file,in,file,new,file,local,path,final,long,split,length,in,file,length,no,splits,long,pos,0,for,int,i,0,i,no,splits,1,i,tmp,i,new,file,input,split,i,new,path,path,pos,split,length,hosts,pos,split,length,tmp,no,splits,1,new,file,input,split,no,splits,1,new,path,path,pos,in,file,length,pos,hosts,this,input,splits,tmp
MockInputSplitProvider -> public void addInputSplits(final String path, final int noSplits);1411473593;Generates a set of input splits from an input path__@param path_the path of the local file to generate the input splits from_@param noSplits_the number of input splits to be generated from the given input file;public void addInputSplits(final String path, final int noSplits) {__		final InputSplit[] tmp = new InputSplit[noSplits]__		final String[] hosts = { "localhost" }___		final String localPath__		try {_			localPath = new URI(path).getPath()__		} catch (URISyntaxException e) {_			throw new IllegalArgumentException("Path URI can not be transformed to local path.")__		}_		_		final File inFile = new File(localPath)___		final long splitLength = inFile.length() / noSplits__		long pos = 0___		for (int i = 0_ i < noSplits - 1_ i++) {_			tmp[i] = new FileInputSplit(i, new Path(path), pos, splitLength, hosts)__			pos += splitLength__		}__		tmp[noSplits - 1] = new FileInputSplit(noSplits - 1, new Path(path), pos, inFile.length() - pos, hosts)___		this.inputSplits = tmp__	};generates,a,set,of,input,splits,from,an,input,path,param,path,the,path,of,the,local,file,to,generate,the,input,splits,from,param,no,splits,the,number,of,input,splits,to,be,generated,from,the,given,input,file;public,void,add,input,splits,final,string,path,final,int,no,splits,final,input,split,tmp,new,input,split,no,splits,final,string,hosts,localhost,final,string,local,path,try,local,path,new,uri,path,get,path,catch,urisyntax,exception,e,throw,new,illegal,argument,exception,path,uri,can,not,be,transformed,to,local,path,final,file,in,file,new,file,local,path,final,long,split,length,in,file,length,no,splits,long,pos,0,for,int,i,0,i,no,splits,1,i,tmp,i,new,file,input,split,i,new,path,path,pos,split,length,hosts,pos,split,length,tmp,no,splits,1,new,file,input,split,no,splits,1,new,path,path,pos,in,file,length,pos,hosts,this,input,splits,tmp
MockInputSplitProvider -> public void addInputSplits(final String path, final int noSplits);1473348008;Generates a set of input splits from an input path__@param path_the path of the local file to generate the input splits from_@param noSplits_the number of input splits to be generated from the given input file;public void addInputSplits(final String path, final int noSplits) {__		final InputSplit[] tmp = new InputSplit[noSplits]__		final String[] hosts = { "localhost" }___		final String localPath__		try {_			localPath = new URI(path).getPath()__		} catch (URISyntaxException e) {_			throw new IllegalArgumentException("Path URI can not be transformed to local path.")__		}_		_		final File inFile = new File(localPath)___		final long splitLength = inFile.length() / noSplits__		long pos = 0___		for (int i = 0_ i < noSplits - 1_ i++) {_			tmp[i] = new FileInputSplit(i, new Path(path), pos, splitLength, hosts)__			pos += splitLength__		}__		tmp[noSplits - 1] = new FileInputSplit(noSplits - 1, new Path(path), pos, inFile.length() - pos, hosts)___		this.inputSplits = tmp__	};generates,a,set,of,input,splits,from,an,input,path,param,path,the,path,of,the,local,file,to,generate,the,input,splits,from,param,no,splits,the,number,of,input,splits,to,be,generated,from,the,given,input,file;public,void,add,input,splits,final,string,path,final,int,no,splits,final,input,split,tmp,new,input,split,no,splits,final,string,hosts,localhost,final,string,local,path,try,local,path,new,uri,path,get,path,catch,urisyntax,exception,e,throw,new,illegal,argument,exception,path,uri,can,not,be,transformed,to,local,path,final,file,in,file,new,file,local,path,final,long,split,length,in,file,length,no,splits,long,pos,0,for,int,i,0,i,no,splits,1,i,tmp,i,new,file,input,split,i,new,path,path,pos,split,length,hosts,pos,split,length,tmp,no,splits,1,new,file,input,split,no,splits,1,new,path,path,pos,in,file,length,pos,hosts,this,input,splits,tmp
