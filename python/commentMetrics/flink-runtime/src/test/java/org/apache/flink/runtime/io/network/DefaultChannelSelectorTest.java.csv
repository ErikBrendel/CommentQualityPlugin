# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1405024514;This test checks the channel selection;@Test_	public void channelSelect() {__		final StringRecord dummyRecord = new StringRecord("abc")__		final RoundRobinChannelSelector<StringRecord> selector = new RoundRobinChannelSelector<StringRecord>()__		_		final int numberOfOutputChannels = 2__		int[] selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(1, selectedChannels[0])__		selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(0, selectedChannels[0])__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,record,dummy,record,new,string,record,abc,final,round,robin,channel,selector,string,record,selector,new,round,robin,channel,selector,string,record,final,int,number,of,output,channels,2,int,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,1,selected,channels,0,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,0,selected,channels,0
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1405090423;This test checks the channel selection;@Test_	public void channelSelect() {__		final StringRecord dummyRecord = new StringRecord("abc")__		final RoundRobinChannelSelector<StringRecord> selector = new RoundRobinChannelSelector<StringRecord>()__		_		final int numberOfOutputChannels = 2__		int[] selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(1, selectedChannels[0])__		selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(0, selectedChannels[0])__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,record,dummy,record,new,string,record,abc,final,round,robin,channel,selector,string,record,selector,new,round,robin,channel,selector,string,record,final,int,number,of,output,channels,2,int,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,1,selected,channels,0,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,0,selected,channels,0
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1411473593;This test checks the channel selection;@Test_	public void channelSelect() {__		final StringRecord dummyRecord = new StringRecord("abc")__		final RoundRobinChannelSelector<StringRecord> selector = new RoundRobinChannelSelector<StringRecord>()__		_		final int numberOfOutputChannels = 2__		int[] selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(1, selectedChannels[0])__		selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(0, selectedChannels[0])__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,record,dummy,record,new,string,record,abc,final,round,robin,channel,selector,string,record,selector,new,round,robin,channel,selector,string,record,final,int,number,of,output,channels,2,int,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,1,selected,channels,0,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,0,selected,channels,0
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1421050512;This test checks the channel selection;@Test_	public void channelSelect() {__		final StringRecord dummyRecord = new StringRecord("abc")__		final RoundRobinChannelSelector<StringRecord> selector = new RoundRobinChannelSelector<StringRecord>()__		_		final int numberOfOutputChannels = 2__		int[] selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(1, selectedChannels[0])__		selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(0, selectedChannels[0])__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,record,dummy,record,new,string,record,abc,final,round,robin,channel,selector,string,record,selector,new,round,robin,channel,selector,string,record,final,int,number,of,output,channels,2,int,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,1,selected,channels,0,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,0,selected,channels,0
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1428330445;This test checks the channel selection;@Test_	public void channelSelect() {__		final StringValue dummyRecord = new StringValue("abc")__		final RoundRobinChannelSelector<StringValue> selector = new RoundRobinChannelSelector<StringValue>()__		_		final int numberOfOutputChannels = 2__		int[] selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(1, selectedChannels[0])__		selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(0, selectedChannels[0])__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,value,dummy,record,new,string,value,abc,final,round,robin,channel,selector,string,value,selector,new,round,robin,channel,selector,string,value,final,int,number,of,output,channels,2,int,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,1,selected,channels,0,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,0,selected,channels,0
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1515507952;This test checks the channel selection.;@Test_	public void channelSelect() {__		final StringValue dummyRecord = new StringValue("abc")__		final RoundRobinChannelSelector<StringValue> selector = new RoundRobinChannelSelector<StringValue>()__		_		final int numberOfOutputChannels = 2__		int[] selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(1, selectedChannels[0])__		selectedChannels = selector.selectChannels(dummyRecord, numberOfOutputChannels)__		assertEquals(1, selectedChannels.length)__		assertEquals(0, selectedChannels[0])__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,value,dummy,record,new,string,value,abc,final,round,robin,channel,selector,string,value,selector,new,round,robin,channel,selector,string,value,final,int,number,of,output,channels,2,int,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,1,selected,channels,0,selected,channels,selector,select,channels,dummy,record,number,of,output,channels,assert,equals,1,selected,channels,length,assert,equals,0,selected,channels,0
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1541772956;This test checks the channel selection.;@Test_	public void channelSelect() {_		final StringValue dummyRecord = new StringValue("abc")__		final RoundRobinChannelSelector<StringValue> selector = new RoundRobinChannelSelector<>()__		final int numberOfChannels = 2___		assertSelectedChannel(selector, dummyRecord, numberOfChannels, 0)__		assertSelectedChannel(selector, dummyRecord, numberOfChannels, 1)__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,value,dummy,record,new,string,value,abc,final,round,robin,channel,selector,string,value,selector,new,round,robin,channel,selector,final,int,number,of,channels,2,assert,selected,channel,selector,dummy,record,number,of,channels,0,assert,selected,channel,selector,dummy,record,number,of,channels,1
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1543403062;This test checks the channel selection.;@Test_	public void channelSelect() {_		final StringValue dummyRecord = new StringValue("abc")__		final RoundRobinChannelSelector<StringValue> selector = new RoundRobinChannelSelector<>()__		selector.setup(2)___		assertSelectedChannel(selector, dummyRecord, 0)__		assertSelectedChannel(selector, dummyRecord, 1)__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,value,dummy,record,new,string,value,abc,final,round,robin,channel,selector,string,value,selector,new,round,robin,channel,selector,selector,setup,2,assert,selected,channel,selector,dummy,record,0,assert,selected,channel,selector,dummy,record,1
DefaultChannelSelectorTest -> @Test 	public void channelSelect();1548853005;This test checks the channel selection.;@Test_	public void channelSelect() {_		final StringValue dummyRecord = new StringValue("abc")__		final RoundRobinChannelSelector<StringValue> selector = new RoundRobinChannelSelector<>()__		selector.setup(2)___		assertSelectedChannel(selector, dummyRecord, 0)__		assertSelectedChannel(selector, dummyRecord, 1)__	};this,test,checks,the,channel,selection;test,public,void,channel,select,final,string,value,dummy,record,new,string,value,abc,final,round,robin,channel,selector,string,value,selector,new,round,robin,channel,selector,selector,setup,2,assert,selected,channel,selector,dummy,record,0,assert,selected,channel,selector,dummy,record,1
