# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointTypeTest -> @Test 	public void testOrdinalsAreConstant();1487871589;This test validates that the order of enumeration constants is not changed, because the_ordinal of that enum is used in serialization.__<p>It is still possible to edit both the ordinal and this test, but the test adds_a level of safety, and should make developers stumble over this when attempting_to adjust the enumeration.;@Test_	public void testOrdinalsAreConstant() {_		assertEquals(0, CheckpointType.FULL_CHECKPOINT.ordinal())__		assertEquals(1, CheckpointType.SAVEPOINT.ordinal())__	};this,test,validates,that,the,order,of,enumeration,constants,is,not,changed,because,the,ordinal,of,that,enum,is,used,in,serialization,p,it,is,still,possible,to,edit,both,the,ordinal,and,this,test,but,the,test,adds,a,level,of,safety,and,should,make,developers,stumble,over,this,when,attempting,to,adjust,the,enumeration;test,public,void,test,ordinals,are,constant,assert,equals,0,checkpoint,type,ordinal,assert,equals,1,checkpoint,type,savepoint,ordinal
CheckpointTypeTest -> @Test 	public void testOrdinalsAreConstant();1509118643;This test validates that the order of enumeration constants is not changed, because the_ordinal of that enum is used in serialization.__<p>It is still possible to edit both the ordinal and this test, but the test adds_a level of safety, and should make developers stumble over this when attempting_to adjust the enumeration.;@Test_	public void testOrdinalsAreConstant() {_		assertEquals(0, CheckpointType.CHECKPOINT.ordinal())__		assertEquals(1, CheckpointType.SAVEPOINT.ordinal())__	};this,test,validates,that,the,order,of,enumeration,constants,is,not,changed,because,the,ordinal,of,that,enum,is,used,in,serialization,p,it,is,still,possible,to,edit,both,the,ordinal,and,this,test,but,the,test,adds,a,level,of,safety,and,should,make,developers,stumble,over,this,when,attempting,to,adjust,the,enumeration;test,public,void,test,ordinals,are,constant,assert,equals,0,checkpoint,type,checkpoint,ordinal,assert,equals,1,checkpoint,type,savepoint,ordinal
CheckpointTypeTest -> @Test 	public void testOrdinalsAreConstant();1517489022;This test validates that the order of enumeration constants is not changed, because the_ordinal of that enum is used in serialization.__<p>It is still possible to edit both the ordinal and this test, but the test adds_a level of safety, and should make developers stumble over this when attempting_to adjust the enumeration.;@Test_	public void testOrdinalsAreConstant() {_		assertEquals(0, CheckpointType.CHECKPOINT.ordinal())__		assertEquals(1, CheckpointType.SAVEPOINT.ordinal())__	};this,test,validates,that,the,order,of,enumeration,constants,is,not,changed,because,the,ordinal,of,that,enum,is,used,in,serialization,p,it,is,still,possible,to,edit,both,the,ordinal,and,this,test,but,the,test,adds,a,level,of,safety,and,should,make,developers,stumble,over,this,when,attempting,to,adjust,the,enumeration;test,public,void,test,ordinals,are,constant,assert,equals,0,checkpoint,type,checkpoint,ordinal,assert,equals,1,checkpoint,type,savepoint,ordinal
