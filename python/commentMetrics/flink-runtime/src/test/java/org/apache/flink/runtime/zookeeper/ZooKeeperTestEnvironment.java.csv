# id;timestamp;commentText;codeText;commentWords;codeWords
ZooKeeperTestEnvironment -> public CuratorFramework getClient();1445293011;Returns a client for the started ZooKeeper server/cluster.;public CuratorFramework getClient() {_		return client__	};returns,a,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,get,client,return,client
ZooKeeperTestEnvironment -> public CuratorFramework getClient();1445293012;Returns a client for the started ZooKeeper server/cluster.;public CuratorFramework getClient() {_		return client__	};returns,a,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,get,client,return,client
ZooKeeperTestEnvironment -> public CuratorFramework getClient();1454597355;Returns a client for the started ZooKeeper server/cluster.;public CuratorFramework getClient() {_		return client__	};returns,a,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,get,client,return,client
ZooKeeperTestEnvironment -> public CuratorFramework getClient();1455923429;Returns a client for the started ZooKeeper server/cluster.;public CuratorFramework getClient() {_		return client__	};returns,a,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,get,client,return,client
ZooKeeperTestEnvironment -> public CuratorFramework getClient();1472033364;Returns a client for the started ZooKeeper server/cluster.;public CuratorFramework getClient() {_		return client__	};returns,a,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,get,client,return,client
ZooKeeperTestEnvironment -> public CuratorFramework getClient();1472722870;Returns a client for the started ZooKeeper server/cluster.;public CuratorFramework getClient() {_		return client__	};returns,a,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,get,client,return,client
ZooKeeperTestEnvironment -> public CuratorFramework getClient();1476095826;Returns a client for the started ZooKeeper server/cluster.;public CuratorFramework getClient() {_		return client__	};returns,a,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,get,client,return,client
ZooKeeperTestEnvironment -> public void shutdown() throws Exception;1445293011;Shutdown the client and ZooKeeper server/cluster.;public void shutdown() throws Exception {_		if (client != null) {_			client.close()__		}__		if (zooKeeperServer != null) {_			zooKeeperServer.close()__		}__		if (zooKeeperCluster != null) {_			zooKeeperCluster.close()__		}_	};shutdown,the,client,and,zoo,keeper,server,cluster;public,void,shutdown,throws,exception,if,client,null,client,close,if,zoo,keeper,server,null,zoo,keeper,server,close,if,zoo,keeper,cluster,null,zoo,keeper,cluster,close
ZooKeeperTestEnvironment -> public void shutdown() throws Exception;1445293012;Shutdown the client and ZooKeeper server/cluster.;public void shutdown() throws Exception {_		if (client != null) {_			client.close()__		}__		if (zooKeeperServer != null) {_			zooKeeperServer.close()__		}__		if (zooKeeperCluster != null) {_			zooKeeperCluster.close()__		}_	};shutdown,the,client,and,zoo,keeper,server,cluster;public,void,shutdown,throws,exception,if,client,null,client,close,if,zoo,keeper,server,null,zoo,keeper,server,close,if,zoo,keeper,cluster,null,zoo,keeper,cluster,close
ZooKeeperTestEnvironment -> public void shutdown() throws Exception;1454597355;Shutdown the client and ZooKeeper server/cluster.;public void shutdown() throws Exception {_		if (client != null) {_			client.close()__		}__		if (zooKeeperServer != null) {_			zooKeeperServer.close()__		}__		if (zooKeeperCluster != null) {_			zooKeeperCluster.close()__		}_	};shutdown,the,client,and,zoo,keeper,server,cluster;public,void,shutdown,throws,exception,if,client,null,client,close,if,zoo,keeper,server,null,zoo,keeper,server,close,if,zoo,keeper,cluster,null,zoo,keeper,cluster,close
ZooKeeperTestEnvironment -> public void shutdown() throws Exception;1455923429;Shutdown the client and ZooKeeper server/cluster.;public void shutdown() throws Exception {_		if (client != null) {_			client.close()__		}__		if (zooKeeperServer != null) {_			zooKeeperServer.close()__		}__		if (zooKeeperCluster != null) {_			zooKeeperCluster.close()__		}_	};shutdown,the,client,and,zoo,keeper,server,cluster;public,void,shutdown,throws,exception,if,client,null,client,close,if,zoo,keeper,server,null,zoo,keeper,server,close,if,zoo,keeper,cluster,null,zoo,keeper,cluster,close
ZooKeeperTestEnvironment -> public void shutdown() throws Exception;1472033364;Shutdown the client and ZooKeeper server/cluster.;public void shutdown() throws Exception {_		if (client != null) {_			client.close()__		}__		if (zooKeeperServer != null) {_			zooKeeperServer.close()__		}__		if (zooKeeperCluster != null) {_			zooKeeperCluster.close()__		}_	};shutdown,the,client,and,zoo,keeper,server,cluster;public,void,shutdown,throws,exception,if,client,null,client,close,if,zoo,keeper,server,null,zoo,keeper,server,close,if,zoo,keeper,cluster,null,zoo,keeper,cluster,close
ZooKeeperTestEnvironment -> public void shutdown() throws Exception;1472722870;Shutdown the client and ZooKeeper server/cluster.;public void shutdown() throws Exception {_		if (client != null) {_			client.close()__		}__		if (zooKeeperServer != null) {_			zooKeeperServer.close()__		}__		if (zooKeeperCluster != null) {_			zooKeeperCluster.close()__		}_	};shutdown,the,client,and,zoo,keeper,server,cluster;public,void,shutdown,throws,exception,if,client,null,client,close,if,zoo,keeper,server,null,zoo,keeper,server,close,if,zoo,keeper,cluster,null,zoo,keeper,cluster,close
ZooKeeperTestEnvironment -> public void shutdown() throws Exception;1476095826;Shutdown the client and ZooKeeper server/cluster.;public void shutdown() throws Exception {_		if (client != null) {_			client.close()__		}__		if (zooKeeperServer != null) {_			zooKeeperServer.close()__		}__		if (zooKeeperCluster != null) {_			zooKeeperCluster.close()__		}_	};shutdown,the,client,and,zoo,keeper,server,cluster;public,void,shutdown,throws,exception,if,client,null,client,close,if,zoo,keeper,server,null,zoo,keeper,server,close,if,zoo,keeper,cluster,null,zoo,keeper,cluster,close
ZooKeeperTestEnvironment -> public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers);1445293011;Starts a ZooKeeper cluster with the number of quorum peers and a client.__@param numberOfZooKeeperQuorumPeers Starts a {@link TestingServer}, if <code>1</code>._Starts a {@link TestingCluster}, if <code>=>1</code>.;public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers) {_		if (numberOfZooKeeperQuorumPeers <= 0) {_			throw new IllegalArgumentException("Number of peers needs to be >= 1.")__		}__		final Configuration conf = new Configuration()___		try {_			if (numberOfZooKeeperQuorumPeers == 1) {_				zooKeeperServer = new TestingServer(true)__				zooKeeperCluster = null___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperServer.getConnectString())__			}_			else {_				zooKeeperServer = null__				zooKeeperCluster = new TestingCluster(numberOfZooKeeperQuorumPeers)___				zooKeeperCluster.start()___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperCluster.getConnectString())__			}__			client = ZooKeeperUtils.startCuratorFramework(conf)___			client.newNamespaceAwareEnsurePath("/")_					.ensure(client.getZookeeperClient())__		}_		catch (Exception e) {_			throw new RuntimeException("Error setting up ZooKeeperTestEnvironment", e)__		}_	};starts,a,zoo,keeper,cluster,with,the,number,of,quorum,peers,and,a,client,param,number,of,zoo,keeper,quorum,peers,starts,a,link,testing,server,if,code,1,code,starts,a,link,testing,cluster,if,code,1,code;public,zoo,keeper,test,environment,int,number,of,zoo,keeper,quorum,peers,if,number,of,zoo,keeper,quorum,peers,0,throw,new,illegal,argument,exception,number,of,peers,needs,to,be,1,final,configuration,conf,new,configuration,try,if,number,of,zoo,keeper,quorum,peers,1,zoo,keeper,server,new,testing,server,true,zoo,keeper,cluster,null,conf,set,string,config,constants,zoo,keeper,server,get,connect,string,else,zoo,keeper,server,null,zoo,keeper,cluster,new,testing,cluster,number,of,zoo,keeper,quorum,peers,zoo,keeper,cluster,start,conf,set,string,config,constants,zoo,keeper,cluster,get,connect,string,client,zoo,keeper,utils,start,curator,framework,conf,client,new,namespace,aware,ensure,path,ensure,client,get,zookeeper,client,catch,exception,e,throw,new,runtime,exception,error,setting,up,zoo,keeper,test,environment,e
ZooKeeperTestEnvironment -> public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers);1445293012;Starts a ZooKeeper cluster with the number of quorum peers and a client.__@param numberOfZooKeeperQuorumPeers Starts a {@link TestingServer}, if <code>1</code>._Starts a {@link TestingCluster}, if <code>=>1</code>.;public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers) {_		if (numberOfZooKeeperQuorumPeers <= 0) {_			throw new IllegalArgumentException("Number of peers needs to be >= 1.")__		}__		final Configuration conf = new Configuration()___		try {_			if (numberOfZooKeeperQuorumPeers == 1) {_				zooKeeperServer = new TestingServer(true)__				zooKeeperCluster = null___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperServer.getConnectString())__			}_			else {_				zooKeeperServer = null__				zooKeeperCluster = new TestingCluster(numberOfZooKeeperQuorumPeers)___				zooKeeperCluster.start()___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperCluster.getConnectString())__			}__			client = ZooKeeperUtils.startCuratorFramework(conf)___			client.newNamespaceAwareEnsurePath("/")_					.ensure(client.getZookeeperClient())__		}_		catch (Exception e) {_			throw new RuntimeException("Error setting up ZooKeeperTestEnvironment", e)__		}_	};starts,a,zoo,keeper,cluster,with,the,number,of,quorum,peers,and,a,client,param,number,of,zoo,keeper,quorum,peers,starts,a,link,testing,server,if,code,1,code,starts,a,link,testing,cluster,if,code,1,code;public,zoo,keeper,test,environment,int,number,of,zoo,keeper,quorum,peers,if,number,of,zoo,keeper,quorum,peers,0,throw,new,illegal,argument,exception,number,of,peers,needs,to,be,1,final,configuration,conf,new,configuration,try,if,number,of,zoo,keeper,quorum,peers,1,zoo,keeper,server,new,testing,server,true,zoo,keeper,cluster,null,conf,set,string,config,constants,zoo,keeper,server,get,connect,string,else,zoo,keeper,server,null,zoo,keeper,cluster,new,testing,cluster,number,of,zoo,keeper,quorum,peers,zoo,keeper,cluster,start,conf,set,string,config,constants,zoo,keeper,cluster,get,connect,string,client,zoo,keeper,utils,start,curator,framework,conf,client,new,namespace,aware,ensure,path,ensure,client,get,zookeeper,client,catch,exception,e,throw,new,runtime,exception,error,setting,up,zoo,keeper,test,environment,e
ZooKeeperTestEnvironment -> public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers);1454597355;Starts a ZooKeeper cluster with the number of quorum peers and a client.__@param numberOfZooKeeperQuorumPeers Starts a {@link TestingServer}, if <code>1</code>._Starts a {@link TestingCluster}, if <code>=>1</code>.;public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers) {_		if (numberOfZooKeeperQuorumPeers <= 0) {_			throw new IllegalArgumentException("Number of peers needs to be >= 1.")__		}__		final Configuration conf = new Configuration()___		try {_			if (numberOfZooKeeperQuorumPeers == 1) {_				zooKeeperServer = new TestingServer(true)__				zooKeeperCluster = null___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperServer.getConnectString())__			}_			else {_				zooKeeperServer = null__				zooKeeperCluster = new TestingCluster(numberOfZooKeeperQuorumPeers)___				zooKeeperCluster.start()___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperCluster.getConnectString())__			}__			client = ZooKeeperUtils.startCuratorFramework(conf)___			client.newNamespaceAwareEnsurePath("/")_					.ensure(client.getZookeeperClient())__		}_		catch (Exception e) {_			throw new RuntimeException("Error setting up ZooKeeperTestEnvironment", e)__		}_	};starts,a,zoo,keeper,cluster,with,the,number,of,quorum,peers,and,a,client,param,number,of,zoo,keeper,quorum,peers,starts,a,link,testing,server,if,code,1,code,starts,a,link,testing,cluster,if,code,1,code;public,zoo,keeper,test,environment,int,number,of,zoo,keeper,quorum,peers,if,number,of,zoo,keeper,quorum,peers,0,throw,new,illegal,argument,exception,number,of,peers,needs,to,be,1,final,configuration,conf,new,configuration,try,if,number,of,zoo,keeper,quorum,peers,1,zoo,keeper,server,new,testing,server,true,zoo,keeper,cluster,null,conf,set,string,config,constants,zoo,keeper,server,get,connect,string,else,zoo,keeper,server,null,zoo,keeper,cluster,new,testing,cluster,number,of,zoo,keeper,quorum,peers,zoo,keeper,cluster,start,conf,set,string,config,constants,zoo,keeper,cluster,get,connect,string,client,zoo,keeper,utils,start,curator,framework,conf,client,new,namespace,aware,ensure,path,ensure,client,get,zookeeper,client,catch,exception,e,throw,new,runtime,exception,error,setting,up,zoo,keeper,test,environment,e
ZooKeeperTestEnvironment -> public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers);1455923429;Starts a ZooKeeper cluster with the number of quorum peers and a client.__@param numberOfZooKeeperQuorumPeers Starts a {@link TestingServer}, if <code>1</code>._Starts a {@link TestingCluster}, if <code>=>1</code>.;public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers) {_		if (numberOfZooKeeperQuorumPeers <= 0) {_			throw new IllegalArgumentException("Number of peers needs to be >= 1.")__		}__		final Configuration conf = new Configuration()___		try {_			if (numberOfZooKeeperQuorumPeers == 1) {_				zooKeeperServer = new TestingServer(true)__				zooKeeperCluster = null___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperServer.getConnectString())__			}_			else {_				zooKeeperServer = null__				zooKeeperCluster = new TestingCluster(numberOfZooKeeperQuorumPeers)___				zooKeeperCluster.start()___				conf.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY,_						zooKeeperCluster.getConnectString())__			}__			client = ZooKeeperUtils.startCuratorFramework(conf)___			client.newNamespaceAwareEnsurePath("/")_					.ensure(client.getZookeeperClient())__		}_		catch (Exception e) {_			throw new RuntimeException("Error setting up ZooKeeperTestEnvironment", e)__		}_	};starts,a,zoo,keeper,cluster,with,the,number,of,quorum,peers,and,a,client,param,number,of,zoo,keeper,quorum,peers,starts,a,link,testing,server,if,code,1,code,starts,a,link,testing,cluster,if,code,1,code;public,zoo,keeper,test,environment,int,number,of,zoo,keeper,quorum,peers,if,number,of,zoo,keeper,quorum,peers,0,throw,new,illegal,argument,exception,number,of,peers,needs,to,be,1,final,configuration,conf,new,configuration,try,if,number,of,zoo,keeper,quorum,peers,1,zoo,keeper,server,new,testing,server,true,zoo,keeper,cluster,null,conf,set,string,config,constants,zoo,keeper,server,get,connect,string,else,zoo,keeper,server,null,zoo,keeper,cluster,new,testing,cluster,number,of,zoo,keeper,quorum,peers,zoo,keeper,cluster,start,conf,set,string,config,constants,zoo,keeper,cluster,get,connect,string,client,zoo,keeper,utils,start,curator,framework,conf,client,new,namespace,aware,ensure,path,ensure,client,get,zookeeper,client,catch,exception,e,throw,new,runtime,exception,error,setting,up,zoo,keeper,test,environment,e
ZooKeeperTestEnvironment -> public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers);1472033364;Starts a ZooKeeper cluster with the number of quorum peers and a client.__@param numberOfZooKeeperQuorumPeers Starts a {@link TestingServer}, if <code>1</code>._Starts a {@link TestingCluster}, if <code>=>1</code>.;public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers) {_		if (numberOfZooKeeperQuorumPeers <= 0) {_			throw new IllegalArgumentException("Number of peers needs to be >= 1.")__		}__		final Configuration conf = new Configuration()___		try {_			if (numberOfZooKeeperQuorumPeers == 1) {_				zooKeeperServer = new TestingServer(true)__				zooKeeperCluster = null___				conf.setString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_						zooKeeperServer.getConnectString())__			}_			else {_				zooKeeperServer = null__				zooKeeperCluster = new TestingCluster(numberOfZooKeeperQuorumPeers)___				zooKeeperCluster.start()___				conf.setString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_						zooKeeperCluster.getConnectString())__			}__			client = ZooKeeperUtils.startCuratorFramework(conf)___			client.newNamespaceAwareEnsurePath("/")_					.ensure(client.getZookeeperClient())__		}_		catch (Exception e) {_			throw new RuntimeException("Error setting up ZooKeeperTestEnvironment", e)__		}_	};starts,a,zoo,keeper,cluster,with,the,number,of,quorum,peers,and,a,client,param,number,of,zoo,keeper,quorum,peers,starts,a,link,testing,server,if,code,1,code,starts,a,link,testing,cluster,if,code,1,code;public,zoo,keeper,test,environment,int,number,of,zoo,keeper,quorum,peers,if,number,of,zoo,keeper,quorum,peers,0,throw,new,illegal,argument,exception,number,of,peers,needs,to,be,1,final,configuration,conf,new,configuration,try,if,number,of,zoo,keeper,quorum,peers,1,zoo,keeper,server,new,testing,server,true,zoo,keeper,cluster,null,conf,set,string,config,constants,zoo,keeper,server,get,connect,string,else,zoo,keeper,server,null,zoo,keeper,cluster,new,testing,cluster,number,of,zoo,keeper,quorum,peers,zoo,keeper,cluster,start,conf,set,string,config,constants,zoo,keeper,cluster,get,connect,string,client,zoo,keeper,utils,start,curator,framework,conf,client,new,namespace,aware,ensure,path,ensure,client,get,zookeeper,client,catch,exception,e,throw,new,runtime,exception,error,setting,up,zoo,keeper,test,environment,e
ZooKeeperTestEnvironment -> public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers);1472722870;Starts a ZooKeeper cluster with the number of quorum peers and a client.__@param numberOfZooKeeperQuorumPeers Starts a {@link TestingServer}, if <code>1</code>._Starts a {@link TestingCluster}, if <code>=>1</code>.;public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers) {_		if (numberOfZooKeeperQuorumPeers <= 0) {_			throw new IllegalArgumentException("Number of peers needs to be >= 1.")__		}__		final Configuration conf = new Configuration()___		try {_			if (numberOfZooKeeperQuorumPeers == 1) {_				zooKeeperServer = new TestingServer(true)__				zooKeeperCluster = null___				conf.setString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_						zooKeeperServer.getConnectString())__			}_			else {_				zooKeeperServer = null__				zooKeeperCluster = new TestingCluster(numberOfZooKeeperQuorumPeers)___				zooKeeperCluster.start()___				conf.setString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_						zooKeeperCluster.getConnectString())__			}__			client = ZooKeeperUtils.startCuratorFramework(conf)___			client.newNamespaceAwareEnsurePath("/")_					.ensure(client.getZookeeperClient())__		}_		catch (Exception e) {_			throw new RuntimeException("Error setting up ZooKeeperTestEnvironment", e)__		}_	};starts,a,zoo,keeper,cluster,with,the,number,of,quorum,peers,and,a,client,param,number,of,zoo,keeper,quorum,peers,starts,a,link,testing,server,if,code,1,code,starts,a,link,testing,cluster,if,code,1,code;public,zoo,keeper,test,environment,int,number,of,zoo,keeper,quorum,peers,if,number,of,zoo,keeper,quorum,peers,0,throw,new,illegal,argument,exception,number,of,peers,needs,to,be,1,final,configuration,conf,new,configuration,try,if,number,of,zoo,keeper,quorum,peers,1,zoo,keeper,server,new,testing,server,true,zoo,keeper,cluster,null,conf,set,string,config,constants,zoo,keeper,server,get,connect,string,else,zoo,keeper,server,null,zoo,keeper,cluster,new,testing,cluster,number,of,zoo,keeper,quorum,peers,zoo,keeper,cluster,start,conf,set,string,config,constants,zoo,keeper,cluster,get,connect,string,client,zoo,keeper,utils,start,curator,framework,conf,client,new,namespace,aware,ensure,path,ensure,client,get,zookeeper,client,catch,exception,e,throw,new,runtime,exception,error,setting,up,zoo,keeper,test,environment,e
ZooKeeperTestEnvironment -> public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers);1476095826;Starts a ZooKeeper cluster with the number of quorum peers and a client.__@param numberOfZooKeeperQuorumPeers Starts a {@link TestingServer}, if <code>1</code>._Starts a {@link TestingCluster}, if <code>=>1</code>.;public ZooKeeperTestEnvironment(int numberOfZooKeeperQuorumPeers) {_		if (numberOfZooKeeperQuorumPeers <= 0) {_			throw new IllegalArgumentException("Number of peers needs to be >= 1.")__		}__		final Configuration conf = new Configuration()___		try {_			if (numberOfZooKeeperQuorumPeers == 1) {_				zooKeeperServer = new TestingServer(true)__				zooKeeperCluster = null___				conf.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM,_						zooKeeperServer.getConnectString())__			}_			else {_				zooKeeperServer = null__				zooKeeperCluster = new TestingCluster(numberOfZooKeeperQuorumPeers)___				zooKeeperCluster.start()___				conf.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM,_						zooKeeperCluster.getConnectString())__			}__			client = ZooKeeperUtils.startCuratorFramework(conf)___			client.newNamespaceAwareEnsurePath("/")_					.ensure(client.getZookeeperClient())__		}_		catch (Exception e) {_			throw new RuntimeException("Error setting up ZooKeeperTestEnvironment", e)__		}_	};starts,a,zoo,keeper,cluster,with,the,number,of,quorum,peers,and,a,client,param,number,of,zoo,keeper,quorum,peers,starts,a,link,testing,server,if,code,1,code,starts,a,link,testing,cluster,if,code,1,code;public,zoo,keeper,test,environment,int,number,of,zoo,keeper,quorum,peers,if,number,of,zoo,keeper,quorum,peers,0,throw,new,illegal,argument,exception,number,of,peers,needs,to,be,1,final,configuration,conf,new,configuration,try,if,number,of,zoo,keeper,quorum,peers,1,zoo,keeper,server,new,testing,server,true,zoo,keeper,cluster,null,conf,set,string,high,availability,options,zoo,keeper,server,get,connect,string,else,zoo,keeper,server,null,zoo,keeper,cluster,new,testing,cluster,number,of,zoo,keeper,quorum,peers,zoo,keeper,cluster,start,conf,set,string,high,availability,options,zoo,keeper,cluster,get,connect,string,client,zoo,keeper,utils,start,curator,framework,conf,client,new,namespace,aware,ensure,path,ensure,client,get,zookeeper,client,catch,exception,e,throw,new,runtime,exception,error,setting,up,zoo,keeper,test,environment,e
ZooKeeperTestEnvironment -> public void deleteAll() throws Exception;1445293011;Deletes all ZNodes under the root node.__@throws Exception If the ZooKeeper operation fails;public void deleteAll() throws Exception {_		final String path = "/" + client.getNamespace()__		ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false)__	};deletes,all,znodes,under,the,root,node,throws,exception,if,the,zoo,keeper,operation,fails;public,void,delete,all,throws,exception,final,string,path,client,get,namespace,zkpaths,delete,children,client,get,zookeeper,client,get,zoo,keeper,path,false
ZooKeeperTestEnvironment -> public void deleteAll() throws Exception;1445293012;Deletes all ZNodes under the root node.__@throws Exception If the ZooKeeper operation fails;public void deleteAll() throws Exception {_		final String path = "/" + client.getNamespace()__		ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false)__	};deletes,all,znodes,under,the,root,node,throws,exception,if,the,zoo,keeper,operation,fails;public,void,delete,all,throws,exception,final,string,path,client,get,namespace,zkpaths,delete,children,client,get,zookeeper,client,get,zoo,keeper,path,false
ZooKeeperTestEnvironment -> public void deleteAll() throws Exception;1454597355;Deletes all ZNodes under the root node.__@throws Exception If the ZooKeeper operation fails;public void deleteAll() throws Exception {_		final String path = "/" + client.getNamespace()__		_		for (int attempt = 0_ attempt < 3_ attempt++) {_			try {_				ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false)__				break__			}_			catch (org.apache.zookeeper.KeeperException.NoNodeException e) {_				_				_				_				_			}_		}_	};deletes,all,znodes,under,the,root,node,throws,exception,if,the,zoo,keeper,operation,fails;public,void,delete,all,throws,exception,final,string,path,client,get,namespace,for,int,attempt,0,attempt,3,attempt,try,zkpaths,delete,children,client,get,zookeeper,client,get,zoo,keeper,path,false,break,catch,org,apache,zookeeper,keeper,exception,no,node,exception,e
ZooKeeperTestEnvironment -> public void deleteAll() throws Exception;1455923429;Deletes all ZNodes under the root node.__@throws Exception If the ZooKeeper operation fails;public void deleteAll() throws Exception {_		final String path = "/" + client.getNamespace()___		int maxAttempts = 10___		for (int i = 0_ i < maxAttempts_ i++) {_			try {_				ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false)__				break__			}_			catch (org.apache.zookeeper.KeeperException.NoNodeException e) {_				_				_				break__			}_			catch (KeeperException.ConnectionLossException e) {_				_				Thread.sleep(100)__			}_		}_	};deletes,all,znodes,under,the,root,node,throws,exception,if,the,zoo,keeper,operation,fails;public,void,delete,all,throws,exception,final,string,path,client,get,namespace,int,max,attempts,10,for,int,i,0,i,max,attempts,i,try,zkpaths,delete,children,client,get,zookeeper,client,get,zoo,keeper,path,false,break,catch,org,apache,zookeeper,keeper,exception,no,node,exception,e,break,catch,keeper,exception,connection,loss,exception,e,thread,sleep,100
ZooKeeperTestEnvironment -> public void deleteAll() throws Exception;1472033364;Deletes all ZNodes under the root node.__@throws Exception If the ZooKeeper operation fails;public void deleteAll() throws Exception {_		final String path = "/" + client.getNamespace()___		int maxAttempts = 10___		for (int i = 0_ i < maxAttempts_ i++) {_			try {_				ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false)__				break__			}_			catch (org.apache.zookeeper.KeeperException.NoNodeException e) {_				_				_				break__			}_			catch (KeeperException.ConnectionLossException e) {_				_				Thread.sleep(100)__			}_		}_	};deletes,all,znodes,under,the,root,node,throws,exception,if,the,zoo,keeper,operation,fails;public,void,delete,all,throws,exception,final,string,path,client,get,namespace,int,max,attempts,10,for,int,i,0,i,max,attempts,i,try,zkpaths,delete,children,client,get,zookeeper,client,get,zoo,keeper,path,false,break,catch,org,apache,zookeeper,keeper,exception,no,node,exception,e,break,catch,keeper,exception,connection,loss,exception,e,thread,sleep,100
ZooKeeperTestEnvironment -> public void deleteAll() throws Exception;1472722870;Deletes all ZNodes under the root node.__@throws Exception If the ZooKeeper operation fails;public void deleteAll() throws Exception {_		final String path = "/" + client.getNamespace()___		int maxAttempts = 10___		for (int i = 0_ i < maxAttempts_ i++) {_			try {_				ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false)__				return__			}_			catch (org.apache.zookeeper.KeeperException.NoNodeException e) {_				_				_				return__			}_			catch (KeeperException.ConnectionLossException e) {_				_				Thread.sleep(100)__			}_		}__		throw new Exception("Could not clear the ZNodes under " + path + ". ZooKeeper is not in " +_			"a clean state.")___	};deletes,all,znodes,under,the,root,node,throws,exception,if,the,zoo,keeper,operation,fails;public,void,delete,all,throws,exception,final,string,path,client,get,namespace,int,max,attempts,10,for,int,i,0,i,max,attempts,i,try,zkpaths,delete,children,client,get,zookeeper,client,get,zoo,keeper,path,false,return,catch,org,apache,zookeeper,keeper,exception,no,node,exception,e,return,catch,keeper,exception,connection,loss,exception,e,thread,sleep,100,throw,new,exception,could,not,clear,the,znodes,under,path,zoo,keeper,is,not,in,a,clean,state
ZooKeeperTestEnvironment -> public void deleteAll() throws Exception;1476095826;Deletes all ZNodes under the root node.__@throws Exception If the ZooKeeper operation fails;public void deleteAll() throws Exception {_		final String path = "/" + client.getNamespace()___		int maxAttempts = 10___		for (int i = 0_ i < maxAttempts_ i++) {_			try {_				ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false)__				return__			}_			catch (org.apache.zookeeper.KeeperException.NoNodeException e) {_				_				_				return__			}_			catch (KeeperException.ConnectionLossException e) {_				_				Thread.sleep(100)__			}_		}__		throw new Exception("Could not clear the ZNodes under " + path + ". ZooKeeper is not in " +_			"a clean state.")___	};deletes,all,znodes,under,the,root,node,throws,exception,if,the,zoo,keeper,operation,fails;public,void,delete,all,throws,exception,final,string,path,client,get,namespace,int,max,attempts,10,for,int,i,0,i,max,attempts,i,try,zkpaths,delete,children,client,get,zookeeper,client,get,zoo,keeper,path,false,return,catch,org,apache,zookeeper,keeper,exception,no,node,exception,e,return,catch,keeper,exception,connection,loss,exception,e,thread,sleep,100,throw,new,exception,could,not,clear,the,znodes,under,path,zoo,keeper,is,not,in,a,clean,state
ZooKeeperTestEnvironment -> public CuratorFramework createClient();1445293011;Creates a new client for the started ZooKeeper server/cluster.;public CuratorFramework createClient() {_		Configuration config = new Configuration()__		config.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, getConnectString())__		return ZooKeeperUtils.startCuratorFramework(config)__	};creates,a,new,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,create,client,configuration,config,new,configuration,config,set,string,config,constants,get,connect,string,return,zoo,keeper,utils,start,curator,framework,config
ZooKeeperTestEnvironment -> public CuratorFramework createClient();1445293012;Creates a new client for the started ZooKeeper server/cluster.;public CuratorFramework createClient() {_		Configuration config = new Configuration()__		config.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, getConnectString())__		return ZooKeeperUtils.startCuratorFramework(config)__	};creates,a,new,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,create,client,configuration,config,new,configuration,config,set,string,config,constants,get,connect,string,return,zoo,keeper,utils,start,curator,framework,config
ZooKeeperTestEnvironment -> public CuratorFramework createClient();1454597355;Creates a new client for the started ZooKeeper server/cluster.;public CuratorFramework createClient() {_		Configuration config = new Configuration()__		config.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, getConnectString())__		return ZooKeeperUtils.startCuratorFramework(config)__	};creates,a,new,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,create,client,configuration,config,new,configuration,config,set,string,config,constants,get,connect,string,return,zoo,keeper,utils,start,curator,framework,config
ZooKeeperTestEnvironment -> public CuratorFramework createClient();1455923429;Creates a new client for the started ZooKeeper server/cluster.;public CuratorFramework createClient() {_		Configuration config = new Configuration()__		config.setString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, getConnectString())__		return ZooKeeperUtils.startCuratorFramework(config)__	};creates,a,new,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,create,client,configuration,config,new,configuration,config,set,string,config,constants,get,connect,string,return,zoo,keeper,utils,start,curator,framework,config
ZooKeeperTestEnvironment -> public CuratorFramework createClient();1472033364;Creates a new client for the started ZooKeeper server/cluster.;public CuratorFramework createClient() {_		Configuration config = new Configuration()__		config.setString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY, getConnectString())__		return ZooKeeperUtils.startCuratorFramework(config)__	};creates,a,new,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,create,client,configuration,config,new,configuration,config,set,string,config,constants,get,connect,string,return,zoo,keeper,utils,start,curator,framework,config
ZooKeeperTestEnvironment -> public CuratorFramework createClient();1472722870;Creates a new client for the started ZooKeeper server/cluster.;public CuratorFramework createClient() {_		Configuration config = new Configuration()__		config.setString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY, getConnectString())__		return ZooKeeperUtils.startCuratorFramework(config)__	};creates,a,new,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,create,client,configuration,config,new,configuration,config,set,string,config,constants,get,connect,string,return,zoo,keeper,utils,start,curator,framework,config
ZooKeeperTestEnvironment -> public CuratorFramework createClient();1476095826;Creates a new client for the started ZooKeeper server/cluster.;public CuratorFramework createClient() {_		Configuration config = new Configuration()__		config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM, getConnectString())__		return ZooKeeperUtils.startCuratorFramework(config)__	};creates,a,new,client,for,the,started,zoo,keeper,server,cluster;public,curator,framework,create,client,configuration,config,new,configuration,config,set,string,high,availability,options,get,connect,string,return,zoo,keeper,utils,start,curator,framework,config
