# id;timestamp;commentText;codeText;commentWords;codeWords
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1482522856;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = Await.result(remoteGatewayFuture, timeout)___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,await,result,remote,gateway,future,timeout,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1482522856;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = Await.result(remoteGatewayFuture, timeout)___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,await,result,remote,gateway,future,timeout,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1482522859;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1482522864;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1501760738;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1502452184;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1515481550;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1519406526;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1519406528;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1522681180;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1526494919;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1548326020;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1550005039;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testSerializableRemoteMessageTransfer() throws Exception;1550005040;Tests that a remote rpc call with a serializable argument can be successfully executed.;@Test_	public void testSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int expected = 42___		remoteGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,remote,rpc,call,with,a,serializable,argument,can,be,successfully,executed;test,public,void,test,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,expected,42,remote,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1482522856;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = Await.result(remoteGatewayFuture, timeout)___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,await,result,remote,gateway,future,timeout,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1482522856;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = Await.result(remoteGatewayFuture, timeout)___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,await,result,remote,gateway,future,timeout,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1482522859;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1482522864;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1501760738;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1502452184;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1515481550;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1519406526;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1519406528;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1522681180;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1526494919;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1548326020;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1550005039;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testNonSerializableRemoteMessageTransfer() throws Exception;1550005040;Tests that a remote rpc call with a non-serializable argument fails with an_{@link IOException} (or an {@link java.lang.reflect.UndeclaredThrowableException} if the_the method declaration does not include the {@link IOException} as throwable).;@Test(expected = IOException.class)_	public void testNonSerializableRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		remoteGateway.foobar(new Object())___		fail("Should have failed because Object is not serializable.")__	};tests,that,a,remote,rpc,call,with,a,non,serializable,argument,fails,with,an,link,ioexception,or,an,link,java,lang,reflect,undeclared,throwable,exception,if,the,the,method,declaration,does,not,include,the,link,ioexception,as,throwable;test,expected,ioexception,class,public,void,test,non,serializable,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,remote,gateway,foobar,new,object,fail,should,have,failed,because,object,is,not,serializable
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1482522856;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = Await.result(remoteGatewayFuture, timeout)___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,await,result,remote,gateway,future,timeout,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1482522856;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = Await.result(remoteGatewayFuture, timeout)___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,await,result,remote,gateway,future,timeout,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1482522859;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1482522864;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		Future<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1501760738;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1502452184;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1515481550;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1519406526;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1519406528;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1522681180;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1526494919;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1548326020;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1550005039;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test(expected = IOException.class) 	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception;1550005040;Tests that a message which exceeds the maximum frame size is detected and a corresponding_exception is thrown.;@Test(expected = IOException.class)_	public void testMaximumFramesizeRemoteMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()___		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		String address = testEndpoint.getAddress()___		CompletableFuture<TestGateway> remoteGatewayFuture = akkaRpcService2.connect(address, TestGateway.class)___		TestGateway remoteGateway = remoteGatewayFuture.get(timeout.getSize(), timeout.getUnit())___		int bufferSize = maxFrameSize + 1__		byte[] buffer = new byte[bufferSize]___		remoteGateway.foobar(buffer)___		fail("Should have failed due to exceeding the maximum framesize.")__	};tests,that,a,message,which,exceeds,the,maximum,frame,size,is,detected,and,a,corresponding,exception,is,thrown;test,expected,ioexception,class,public,void,test,maximum,framesize,remote,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,string,address,test,endpoint,get,address,completable,future,test,gateway,remote,gateway,future,akka,rpc,service2,connect,address,test,gateway,class,test,gateway,remote,gateway,remote,gateway,future,get,timeout,get,size,timeout,get,unit,int,buffer,size,max,frame,size,1,byte,buffer,new,byte,buffer,size,remote,gateway,foobar,buffer,fail,should,have,failed,due,to,exceeding,the,maximum,framesize
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws InterruptedException, IOException;1482522856;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws InterruptedException, IOException {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)___		TestGateway testGateway = testEndpoint.getSelf()___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,interrupted,exception,ioexception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,gateway,test,gateway,test,endpoint,get,self,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws InterruptedException, IOException;1482522856;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws InterruptedException, IOException {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelf()___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,interrupted,exception,ioexception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws InterruptedException, IOException;1482522859;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws InterruptedException, IOException {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelf()___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,interrupted,exception,ioexception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1482522864;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelf()___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1501760738;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelf()___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1502452184;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1515481550;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1519406526;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1519406528;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1522681180;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1526494919;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1548326020;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1550005039;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
MessageSerializationTest -> @Test 	public void testNonSerializableLocalMessageTransfer() throws Exception;1550005040;Tests that a local rpc call with a non serializable argument can be executed.;@Test_	public void testNonSerializableLocalMessageTransfer() throws Exception {_		LinkedBlockingQueue<Object> linkedBlockingQueue = new LinkedBlockingQueue<>()__		TestEndpoint testEndpoint = new TestEndpoint(akkaRpcService1, linkedBlockingQueue)__		testEndpoint.start()___		TestGateway testGateway = testEndpoint.getSelfGateway(TestGateway.class)___		NonSerializableObject expected = new NonSerializableObject(42)___		testGateway.foobar(expected)___		assertThat(linkedBlockingQueue.take(), Is.<Object>is(expected))__	};tests,that,a,local,rpc,call,with,a,non,serializable,argument,can,be,executed;test,public,void,test,non,serializable,local,message,transfer,throws,exception,linked,blocking,queue,object,linked,blocking,queue,new,linked,blocking,queue,test,endpoint,test,endpoint,new,test,endpoint,akka,rpc,service1,linked,blocking,queue,test,endpoint,start,test,gateway,test,gateway,test,endpoint,get,self,gateway,test,gateway,class,non,serializable,object,expected,new,non,serializable,object,42,test,gateway,foobar,expected,assert,that,linked,blocking,queue,take,is,object,is,expected
