# id;timestamp;commentText;codeText;commentWords;codeWords
SlotPoolSlotSharingTest -> @Test 	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException;1513261599;Tests that returned slot futures are failed if the allocation request is failed.;@Test_	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException {_		final CompletableFuture<AllocationID> allocationIdFuture = new CompletableFuture<>()__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIdFuture.complete(slotRequest.getAllocationId()))___		CompletableFuture<LogicalSlot> logicalSlotFuture = slotProvider.allocateSlot(_			new ScheduledUnit(_				new JobVertexID(),_				new SlotSharingGroupId(),_				null),_			true,_			Collections.emptyList())___		final AllocationID allocationId = allocationIdFuture.get()___		_		slotPoolGateway.failAllocation(allocationId, new FlinkException("Testing Exception"))___		try {_			logicalSlotFuture.get()__			fail("The slot future should have failed.")__		} catch (ExecutionException ee) {_			assertTrue(ExceptionUtils.findThrowable(ee, FlinkException.class).isPresent())__		}_	};tests,that,returned,slot,futures,are,failed,if,the,allocation,request,is,failed;test,public,void,test,failing,queued,shared,slot,scheduling,throws,execution,exception,interrupted,exception,final,completable,future,allocation,id,allocation,id,future,new,completable,future,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,id,future,complete,slot,request,get,allocation,id,completable,future,logical,slot,logical,slot,future,slot,provider,allocate,slot,new,scheduled,unit,new,job,vertex,id,new,slot,sharing,group,id,null,true,collections,empty,list,final,allocation,id,allocation,id,allocation,id,future,get,slot,pool,gateway,fail,allocation,allocation,id,new,flink,exception,testing,exception,try,logical,slot,future,get,fail,the,slot,future,should,have,failed,catch,execution,exception,ee,assert,true,exception,utils,find,throwable,ee,flink,exception,class,is,present
SlotPoolSlotSharingTest -> @Test 	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException;1518680774;Tests that returned slot futures are failed if the allocation request is failed.;@Test_	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException {_		final CompletableFuture<AllocationID> allocationIdFuture = new CompletableFuture<>()__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIdFuture.complete(slotRequest.getAllocationId()))___		CompletableFuture<LogicalSlot> logicalSlotFuture = slotProvider.allocateSlot(_			new ScheduledUnit(_				new JobVertexID(),_				new SlotSharingGroupId(),_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		final AllocationID allocationId = allocationIdFuture.get()___		_		slotPoolGateway.failAllocation(allocationId, new FlinkException("Testing Exception"))___		try {_			logicalSlotFuture.get()__			fail("The slot future should have failed.")__		} catch (ExecutionException ee) {_			assertTrue(ExceptionUtils.findThrowable(ee, FlinkException.class).isPresent())__		}_	};tests,that,returned,slot,futures,are,failed,if,the,allocation,request,is,failed;test,public,void,test,failing,queued,shared,slot,scheduling,throws,execution,exception,interrupted,exception,final,completable,future,allocation,id,allocation,id,future,new,completable,future,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,id,future,complete,slot,request,get,allocation,id,completable,future,logical,slot,logical,slot,future,slot,provider,allocate,slot,new,scheduled,unit,new,job,vertex,id,new,slot,sharing,group,id,null,true,collections,empty,list,testing,utils,infinite,time,final,allocation,id,allocation,id,allocation,id,future,get,slot,pool,gateway,fail,allocation,allocation,id,new,flink,exception,testing,exception,try,logical,slot,future,get,fail,the,slot,future,should,have,failed,catch,execution,exception,ee,assert,true,exception,utils,find,throwable,ee,flink,exception,class,is,present
SlotPoolSlotSharingTest -> @Test 	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException;1519655521;Tests that returned slot futures are failed if the allocation request is failed.;@Test_	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException {_		final CompletableFuture<AllocationID> allocationIdFuture = new CompletableFuture<>()__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIdFuture.complete(slotRequest.getAllocationId()))___		CompletableFuture<LogicalSlot> logicalSlotFuture = slotProvider.allocateSlot(_			new ScheduledUnit(_				new JobVertexID(),_				new SlotSharingGroupId(),_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		final AllocationID allocationId = allocationIdFuture.get()___		_		slotPoolGateway.failAllocation(allocationId, new FlinkException("Testing Exception"))___		try {_			logicalSlotFuture.get()__			fail("The slot future should have failed.")__		} catch (ExecutionException ee) {_			assertTrue(ExceptionUtils.findThrowable(ee, FlinkException.class).isPresent())__		}_	};tests,that,returned,slot,futures,are,failed,if,the,allocation,request,is,failed;test,public,void,test,failing,queued,shared,slot,scheduling,throws,execution,exception,interrupted,exception,final,completable,future,allocation,id,allocation,id,future,new,completable,future,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,id,future,complete,slot,request,get,allocation,id,completable,future,logical,slot,logical,slot,future,slot,provider,allocate,slot,new,scheduled,unit,new,job,vertex,id,new,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,final,allocation,id,allocation,id,allocation,id,future,get,slot,pool,gateway,fail,allocation,allocation,id,new,flink,exception,testing,exception,try,logical,slot,future,get,fail,the,slot,future,should,have,failed,catch,execution,exception,ee,assert,true,exception,utils,find,throwable,ee,flink,exception,class,is,present
SlotPoolSlotSharingTest -> @Test 	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException;1530104620;Tests that returned slot futures are failed if the allocation request is failed.;@Test_	public void testFailingQueuedSharedSlotScheduling() throws ExecutionException, InterruptedException {_		final CompletableFuture<AllocationID> allocationIdFuture = new CompletableFuture<>()__		final TestingResourceManagerGateway testingResourceManagerGateway = slotPoolResource.getTestingResourceManagerGateway()__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIdFuture.complete(slotRequest.getAllocationId()))___		final SlotProvider slotProvider = slotPoolResource.getSlotProvider()__		CompletableFuture<LogicalSlot> logicalSlotFuture = slotProvider.allocateSlot(_			new ScheduledUnit(_				new JobVertexID(),_				new SlotSharingGroupId(),_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		final AllocationID allocationId = allocationIdFuture.get()___		_		final SlotPoolGateway slotPoolGateway = slotPoolResource.getSlotPoolGateway()__		slotPoolGateway.failAllocation(allocationId, new FlinkException("Testing Exception"))___		try {_			logicalSlotFuture.get()__			fail("The slot future should have failed.")__		} catch (ExecutionException ee) {_			assertTrue(ExceptionUtils.findThrowable(ee, FlinkException.class).isPresent())__		}_	};tests,that,returned,slot,futures,are,failed,if,the,allocation,request,is,failed;test,public,void,test,failing,queued,shared,slot,scheduling,throws,execution,exception,interrupted,exception,final,completable,future,allocation,id,allocation,id,future,new,completable,future,final,testing,resource,manager,gateway,testing,resource,manager,gateway,slot,pool,resource,get,testing,resource,manager,gateway,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,id,future,complete,slot,request,get,allocation,id,final,slot,provider,slot,provider,slot,pool,resource,get,slot,provider,completable,future,logical,slot,logical,slot,future,slot,provider,allocate,slot,new,scheduled,unit,new,job,vertex,id,new,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,final,allocation,id,allocation,id,allocation,id,future,get,final,slot,pool,gateway,slot,pool,gateway,slot,pool,resource,get,slot,pool,gateway,slot,pool,gateway,fail,allocation,allocation,id,new,flink,exception,testing,exception,try,logical,slot,future,get,fail,the,slot,future,should,have,failed,catch,execution,exception,ee,assert,true,exception,utils,find,throwable,ee,flink,exception,class,is,present
SlotPoolSlotSharingTest -> @Test 	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException;1513261599;Tests queued slot scheduling with a single slot sharing group;@Test_	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()___		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())___		final AllocationID allocationId1 = allocationIds.take()___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		final AllocationID allocationId2 = allocationIds.take()___		_		CompletableFuture<Boolean> offerFuture = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId1, logicalSlot2.getAllocationId())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		logicalSlot1.releaseSlot(null)__		logicalSlot2.releaseSlot(null)___		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot3.getAllocationId())__		assertEquals(allocationId1, logicalSlot4.getAllocationId())__	};tests,queued,slot,scheduling,with,a,single,slot,sharing,group;test,public,void,test,queued,shared,slot,scheduling,throws,interrupted,exception,execution,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,collections,empty,list,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,collections,empty,list,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,final,allocation,id,allocation,id1,allocation,ids,take,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,collections,empty,list,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,collections,empty,list,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,assert,true,offer,future,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id1,logical,slot2,get,allocation,id,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,logical,slot1,release,slot,null,logical,slot2,release,slot,null,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot3,get,allocation,id,assert,equals,allocation,id1,logical,slot4,get,allocation,id
SlotPoolSlotSharingTest -> @Test 	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException;1518680774;Tests queued slot scheduling with a single slot sharing group;@Test_	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()___		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())___		final AllocationID allocationId1 = allocationIds.take()___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		final AllocationID allocationId2 = allocationIds.take()___		_		CompletableFuture<Boolean> offerFuture = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId1, logicalSlot2.getAllocationId())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		logicalSlot1.releaseSlot(null)__		logicalSlot2.releaseSlot(null)___		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot3.getAllocationId())__		assertEquals(allocationId1, logicalSlot4.getAllocationId())__	};tests,queued,slot,scheduling,with,a,single,slot,sharing,group;test,public,void,test,queued,shared,slot,scheduling,throws,interrupted,exception,execution,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,collections,empty,list,testing,utils,infinite,time,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,final,allocation,id,allocation,id1,allocation,ids,take,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,collections,empty,list,testing,utils,infinite,time,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,assert,true,offer,future,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id1,logical,slot2,get,allocation,id,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,logical,slot1,release,slot,null,logical,slot2,release,slot,null,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot3,get,allocation,id,assert,equals,allocation,id1,logical,slot4,get,allocation,id
SlotPoolSlotSharingTest -> @Test 	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException;1519655521;Tests queued slot scheduling with a single slot sharing group;@Test_	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()___		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())___		final AllocationID allocationId1 = allocationIds.take()___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		final AllocationID allocationId2 = allocationIds.take()___		_		CompletableFuture<Boolean> offerFuture = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId1, logicalSlot2.getAllocationId())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		logicalSlot1.releaseSlot(null)__		logicalSlot2.releaseSlot(null)___		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot3.getAllocationId())__		assertEquals(allocationId1, logicalSlot4.getAllocationId())__	};tests,queued,slot,scheduling,with,a,single,slot,sharing,group;test,public,void,test,queued,shared,slot,scheduling,throws,interrupted,exception,execution,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,final,allocation,id,allocation,id1,allocation,ids,take,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,assert,true,offer,future,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id1,logical,slot2,get,allocation,id,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,logical,slot1,release,slot,null,logical,slot2,release,slot,null,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot3,get,allocation,id,assert,equals,allocation,id1,logical,slot4,get,allocation,id
SlotPoolSlotSharingTest -> @Test 	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException;1530104620;Tests queued slot scheduling with a single slot sharing group;@Test_	public void testQueuedSharedSlotScheduling() throws InterruptedException, ExecutionException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)__		final TestingResourceManagerGateway testingResourceManagerGateway = slotPoolResource.getTestingResourceManagerGateway()__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		final SlotPoolGateway slotPoolGateway = slotPoolResource.getSlotPoolGateway()__		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()___		final SlotProvider slotProvider = slotPoolResource.getSlotProvider()__		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())___		final AllocationID allocationId1 = allocationIds.take()___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		final AllocationID allocationId2 = allocationIds.take()___		_		CompletableFuture<Boolean> offerFuture = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId1, logicalSlot2.getAllocationId())___		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		logicalSlot1.releaseSlot(null)__		logicalSlot2.releaseSlot(null)___		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())__		assertEquals(allocationId1, logicalSlot3.getAllocationId())__		assertEquals(allocationId1, logicalSlot4.getAllocationId())__	};tests,queued,slot,scheduling,with,a,single,slot,sharing,group;test,public,void,test,queued,shared,slot,scheduling,throws,interrupted,exception,execution,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,final,testing,resource,manager,gateway,testing,resource,manager,gateway,slot,pool,resource,get,testing,resource,manager,gateway,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,final,slot,pool,gateway,slot,pool,gateway,slot,pool,resource,get,slot,pool,gateway,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,final,slot,provider,slot,provider,slot,pool,resource,get,slot,provider,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,final,allocation,id,allocation,id1,allocation,ids,take,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,null,true,slot,profile,no,requirements,testing,utils,infinite,time,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,assert,true,offer,future,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id1,logical,slot2,get,allocation,id,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,logical,slot1,release,slot,null,logical,slot2,release,slot,null,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot3,get,allocation,id,assert,equals,allocation,id1,logical,slot4,get,allocation,id
SlotPoolSlotSharingTest -> @Test 	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException;1513261599;Tests queued slot scheduling with multiple slot sharing groups.;@Test_	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(4)___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()__		final SlotSharingGroupId slotSharingGroupId1 = new SlotSharingGroupId()__		final SlotSharingGroupId slotSharingGroupId2 = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()__		final JobVertexID jobVertexId3 = new JobVertexID()__		final JobVertexID jobVertexId4 = new JobVertexID()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId1,_				null),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId1,_				null),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId3,_				slotSharingGroupId2,_				null),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId4,_				slotSharingGroupId2,_				null),_			true,_			Collections.emptyList())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())__		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> offerFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> offerFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture1.get())__		assertTrue(offerFuture2.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()__		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())___		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId2, logicalSlot3.getAllocationId())__	};tests,queued,slot,scheduling,with,multiple,slot,sharing,groups;test,public,void,test,queued,multiple,slot,sharing,groups,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,4,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,final,slot,sharing,group,id,slot,sharing,group,id1,new,slot,sharing,group,id,final,slot,sharing,group,id,slot,sharing,group,id2,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,final,job,vertex,id,job,vertex,id3,new,job,vertex,id,final,job,vertex,id,job,vertex,id4,new,job,vertex,id,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id1,null,true,collections,empty,list,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id1,null,true,collections,empty,list,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id3,slot,sharing,group,id2,null,true,collections,empty,list,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id4,slot,sharing,group,id2,null,true,collections,empty,list,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,offer,future1,get,assert,true,offer,future2,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id2,logical,slot3,get,allocation,id
SlotPoolSlotSharingTest -> @Test 	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException;1518680774;Tests queued slot scheduling with multiple slot sharing groups.;@Test_	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(4)___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()__		final SlotSharingGroupId slotSharingGroupId1 = new SlotSharingGroupId()__		final SlotSharingGroupId slotSharingGroupId2 = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()__		final JobVertexID jobVertexId3 = new JobVertexID()__		final JobVertexID jobVertexId4 = new JobVertexID()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId1,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId1,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId3,_				slotSharingGroupId2,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId4,_				slotSharingGroupId2,_				null),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())__		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> offerFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> offerFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture1.get())__		assertTrue(offerFuture2.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()__		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())___		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId2, logicalSlot3.getAllocationId())__	};tests,queued,slot,scheduling,with,multiple,slot,sharing,groups;test,public,void,test,queued,multiple,slot,sharing,groups,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,4,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,final,slot,sharing,group,id,slot,sharing,group,id1,new,slot,sharing,group,id,final,slot,sharing,group,id,slot,sharing,group,id2,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,final,job,vertex,id,job,vertex,id3,new,job,vertex,id,final,job,vertex,id,job,vertex,id4,new,job,vertex,id,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id1,null,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id1,null,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id3,slot,sharing,group,id2,null,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id4,slot,sharing,group,id2,null,true,collections,empty,list,testing,utils,infinite,time,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,offer,future1,get,assert,true,offer,future2,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id2,logical,slot3,get,allocation,id
SlotPoolSlotSharingTest -> @Test 	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException;1519655521;Tests queued slot scheduling with multiple slot sharing groups.;@Test_	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(4)___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()__		final SlotSharingGroupId slotSharingGroupId1 = new SlotSharingGroupId()__		final SlotSharingGroupId slotSharingGroupId2 = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()__		final JobVertexID jobVertexId3 = new JobVertexID()__		final JobVertexID jobVertexId4 = new JobVertexID()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId1,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId1,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId3,_				slotSharingGroupId2,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId4,_				slotSharingGroupId2,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())__		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> offerFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> offerFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture1.get())__		assertTrue(offerFuture2.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()__		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())___		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId2, logicalSlot3.getAllocationId())__	};tests,queued,slot,scheduling,with,multiple,slot,sharing,groups;test,public,void,test,queued,multiple,slot,sharing,groups,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,4,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,final,slot,sharing,group,id,slot,sharing,group,id1,new,slot,sharing,group,id,final,slot,sharing,group,id,slot,sharing,group,id2,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,final,job,vertex,id,job,vertex,id3,new,job,vertex,id,final,job,vertex,id,job,vertex,id4,new,job,vertex,id,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id1,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id1,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id3,slot,sharing,group,id2,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id4,slot,sharing,group,id2,null,true,slot,profile,no,requirements,testing,utils,infinite,time,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,offer,future1,get,assert,true,offer,future2,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id2,logical,slot3,get,allocation,id
SlotPoolSlotSharingTest -> @Test 	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException;1530104620;Tests queued slot scheduling with multiple slot sharing groups.;@Test_	public void testQueuedMultipleSlotSharingGroups() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(4)___		final TestingResourceManagerGateway testingResourceManagerGateway = slotPoolResource.getTestingResourceManagerGateway()__		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()__		final SlotSharingGroupId slotSharingGroupId1 = new SlotSharingGroupId()__		final SlotSharingGroupId slotSharingGroupId2 = new SlotSharingGroupId()__		final JobVertexID jobVertexId1 = new JobVertexID()__		final JobVertexID jobVertexId2 = new JobVertexID()__		final JobVertexID jobVertexId3 = new JobVertexID()__		final JobVertexID jobVertexId4 = new JobVertexID()___		final SlotPoolGateway slotPoolGateway = slotPoolResource.getSlotPoolGateway()__		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		final SlotProvider slotProvider = slotPoolResource.getSlotProvider()__		CompletableFuture<LogicalSlot> logicalSlotFuture1 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId1,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture2 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId1,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture3 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId3,_				slotSharingGroupId2,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture4 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId4,_				slotSharingGroupId2,_				null),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		assertFalse(logicalSlotFuture1.isDone())__		assertFalse(logicalSlotFuture2.isDone())__		assertFalse(logicalSlotFuture3.isDone())__		assertFalse(logicalSlotFuture4.isDone())___		_		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> offerFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> offerFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(offerFuture1.get())__		assertTrue(offerFuture2.get())___		LogicalSlot logicalSlot1 = logicalSlotFuture1.get()__		LogicalSlot logicalSlot2 = logicalSlotFuture2.get()__		LogicalSlot logicalSlot3 = logicalSlotFuture3.get()__		LogicalSlot logicalSlot4 = logicalSlotFuture4.get()___		assertEquals(logicalSlot1.getTaskManagerLocation(), logicalSlot2.getTaskManagerLocation())__		assertEquals(logicalSlot3.getTaskManagerLocation(), logicalSlot4.getTaskManagerLocation())___		assertEquals(allocationId1, logicalSlot1.getAllocationId())__		assertEquals(allocationId2, logicalSlot3.getAllocationId())__	};tests,queued,slot,scheduling,with,multiple,slot,sharing,groups;test,public,void,test,queued,multiple,slot,sharing,groups,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,4,final,testing,resource,manager,gateway,testing,resource,manager,gateway,slot,pool,resource,get,testing,resource,manager,gateway,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,final,slot,sharing,group,id,slot,sharing,group,id1,new,slot,sharing,group,id,final,slot,sharing,group,id,slot,sharing,group,id2,new,slot,sharing,group,id,final,job,vertex,id,job,vertex,id1,new,job,vertex,id,final,job,vertex,id,job,vertex,id2,new,job,vertex,id,final,job,vertex,id,job,vertex,id3,new,job,vertex,id,final,job,vertex,id,job,vertex,id4,new,job,vertex,id,final,slot,pool,gateway,slot,pool,gateway,slot,pool,resource,get,slot,pool,gateway,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,final,slot,provider,slot,provider,slot,pool,resource,get,slot,provider,completable,future,logical,slot,logical,slot,future1,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id1,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future2,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id1,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future3,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id3,slot,sharing,group,id2,null,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future4,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id4,slot,sharing,group,id2,null,true,slot,profile,no,requirements,testing,utils,infinite,time,assert,false,logical,slot,future1,is,done,assert,false,logical,slot,future2,is,done,assert,false,logical,slot,future3,is,done,assert,false,logical,slot,future4,is,done,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,offer,future1,get,assert,true,offer,future2,get,logical,slot,logical,slot1,logical,slot,future1,get,logical,slot,logical,slot2,logical,slot,future2,get,logical,slot,logical,slot3,logical,slot,future3,get,logical,slot,logical,slot4,logical,slot,future4,get,assert,equals,logical,slot1,get,task,manager,location,logical,slot2,get,task,manager,location,assert,equals,logical,slot3,get,task,manager,location,logical,slot4,get,task,manager,location,assert,equals,allocation,id1,logical,slot1,get,allocation,id,assert,equals,allocation,id2,logical,slot3,get,allocation,id
