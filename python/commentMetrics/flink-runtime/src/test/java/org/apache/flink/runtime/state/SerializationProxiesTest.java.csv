# id;timestamp;commentText;codeText;commentWords;codeWords
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1484160227;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(5, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,5,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1484339359;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(5, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,5,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1485118420;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(6, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,6,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1487865389;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1494180263;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1495032411;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1495142372;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1495466666;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1499156246;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1518008821;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1525657109;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1525661782;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1531404901;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1531771917;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1539149054;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1540907751;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1540907751;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1540907751;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1544521602;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
SerializationProxiesTest -> @Test 	public void testFixTypeOrder();1546867949;This test fixes the order of elements in the enum which is important for serialization. Do not modify this test_except if you are entirely sure what you are doing.;@Test_	public void testFixTypeOrder() {_		_		Assert.assertEquals(7, StateDescriptor.Type.values().length)__		_		Assert.assertEquals(0, StateDescriptor.Type.UNKNOWN.ordinal())__		Assert.assertEquals(1, StateDescriptor.Type.VALUE.ordinal())__		Assert.assertEquals(2, StateDescriptor.Type.LIST.ordinal())__		Assert.assertEquals(3, StateDescriptor.Type.REDUCING.ordinal())__		Assert.assertEquals(4, StateDescriptor.Type.FOLDING.ordinal())__		Assert.assertEquals(5, StateDescriptor.Type.AGGREGATING.ordinal())__		Assert.assertEquals(6, StateDescriptor.Type.MAP.ordinal())__	};this,test,fixes,the,order,of,elements,in,the,enum,which,is,important,for,serialization,do,not,modify,this,test,except,if,you,are,entirely,sure,what,you,are,doing;test,public,void,test,fix,type,order,assert,assert,equals,7,state,descriptor,type,values,length,assert,assert,equals,0,state,descriptor,type,unknown,ordinal,assert,assert,equals,1,state,descriptor,type,value,ordinal,assert,assert,equals,2,state,descriptor,type,list,ordinal,assert,assert,equals,3,state,descriptor,type,reducing,ordinal,assert,assert,equals,4,state,descriptor,type,folding,ordinal,assert,assert,equals,5,state,descriptor,type,aggregating,ordinal,assert,assert,equals,6,state,descriptor,type,map,ordinal
