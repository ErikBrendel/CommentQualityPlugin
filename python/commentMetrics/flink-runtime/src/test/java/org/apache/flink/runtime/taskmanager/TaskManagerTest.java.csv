# id;timestamp;commentText;codeText;commentWords;codeWords
TaskManagerTest -> @Test 	public void testPartitionNotFound() throws Exception;1432295874;Tests that repeated {@link PartitionNotFoundException}s fail the receiver.;@Test_	public void testPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorRef jobManager = null__			ActorRef taskManager = null___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				jobManager = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(resultId, getTestActor())))___				final int dataPort = NetUtils.getAvailablePort()__				taskManager = createTaskManager(jobManager, true, false, dataPort)___				__				final ActorRef tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), getTestActor())__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),_								PartitionNotFoundException.class)__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				if (taskManager != null) {_					taskManager.tell(Kill.getInstance(), ActorRef.noSender())__				}__				if (jobManager != null) {_					jobManager.tell(Kill.getInstance(), ActorRef.noSender())__				}_			}_		}}__	};tests,that,repeated,link,partition,not,found,exception,s,fail,the,receiver;test,public,void,test,partition,not,found,throws,exception,new,java,test,kit,system,actor,ref,job,manager,null,actor,ref,task,manager,null,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,job,manager,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,result,id,get,test,actor,final,int,data,port,net,utils,get,available,port,task,manager,create,task,manager,job,manager,true,false,data,port,final,actor,ref,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,get,test,actor,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,assert,equals,msg,get,error,class,loader,get,system,class,loader,get,class,partition,not,found,exception,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,task,manager,null,task,manager,tell,kill,get,instance,actor,ref,no,sender,if,job,manager,null,job,manager,tell,kill,get,instance,actor,ref,no,sender
TaskManagerTest -> @Test 	public void testPartitionNotFound() throws Exception;1432650143;Tests that repeated {@link PartitionNotFoundException}s fail the receiver.;@Test_	public void testPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorRef jobManager = null__			ActorRef taskManager = null___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				jobManager = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(resultId, getTestActor())))___				final int dataPort = NetUtils.getAvailablePort()__				taskManager = createTaskManager(jobManager, true, false, dataPort)___				__				final ActorRef tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), getTestActor())__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),_								PartitionNotFoundException.class)__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				if (taskManager != null) {_					taskManager.tell(Kill.getInstance(), ActorRef.noSender())__				}__				if (jobManager != null) {_					jobManager.tell(Kill.getInstance(), ActorRef.noSender())__				}_			}_		}}__	};tests,that,repeated,link,partition,not,found,exception,s,fail,the,receiver;test,public,void,test,partition,not,found,throws,exception,new,java,test,kit,system,actor,ref,job,manager,null,actor,ref,task,manager,null,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,job,manager,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,result,id,get,test,actor,final,int,data,port,net,utils,get,available,port,task,manager,create,task,manager,job,manager,true,false,data,port,final,actor,ref,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,get,test,actor,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,assert,equals,msg,get,error,class,loader,get,system,class,loader,get,class,partition,not,found,exception,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,task,manager,null,task,manager,tell,kill,get,instance,actor,ref,no,sender,if,job,manager,null,job,manager,tell,kill,get,instance,actor,ref,no,sender
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1454940284;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null__			ActorGateway jobManagerActorGateway = TestingUtils.createForwardingJobManager(_					system,_					getTestActor(),_					Option.<String>empty())___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				new Within(d) {_					@Override_					protected void run() {_						expectMsgClass(RegistrationMessages.RegisterTaskManager.class)__						assertEquals(taskManager.actor(), getLastSender())___						taskManager.tell(new RegistrationMessages.AcknowledgeRegistration(_								new InstanceID(), 12345), jobManager)__					}_				}___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new ApplicationID(),_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {_					@Override_					protected void run() {_						try {_							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							_							_							taskManager.tell(new TriggerStackTraceSample(_											0,_											tdd.getExecutionId(),_											10000,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											0),_									testActorGateway)___							_							taskManager.tell(new CancelTask(tdd.getExecutionId()))___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(tdd.getExecutionId(), response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,gateway,job,manager,actor,gateway,testing,utils,create,forwarding,job,manager,system,get,test,actor,option,string,empty,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,new,within,d,override,protected,void,run,expect,msg,class,registration,messages,register,task,manager,class,assert,equals,task,manager,actor,get,last,sender,task,manager,tell,new,registration,messages,acknowledge,registration,new,instance,id,12345,job,manager,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,application,id,new,job,id,new,job,vertex,id,new,execution,attempt,id,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,task,manager,tell,new,trigger,stack,trace,sample,0,tdd,get,execution,id,10000,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,task,manager,tell,new,cancel,task,tdd,get,execution,id,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1455549373;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null__			ActorGateway jobManagerActorGateway = TestingUtils.createForwardingJobManager(_					system,_					getTestActor(),_					Option.<String>empty())___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				new Within(d) {_					@Override_					protected void run() {_						expectMsgClass(RegistrationMessages.RegisterTaskManager.class)__						assertEquals(taskManager.actor(), getLastSender())___						taskManager.tell(new RegistrationMessages.AcknowledgeRegistration(_								new InstanceID(), 12345), jobManager)__					}_				}___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new ApplicationID(),_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {_					@Override_					protected void run() {_						try {_							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							_							_							taskManager.tell(new TriggerStackTraceSample(_											0,_											tdd.getExecutionId(),_											10000,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											0),_									testActorGateway)___							_							taskManager.tell(new CancelTask(tdd.getExecutionId()))___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(tdd.getExecutionId(), response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,gateway,job,manager,actor,gateway,testing,utils,create,forwarding,job,manager,system,get,test,actor,option,string,empty,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,new,within,d,override,protected,void,run,expect,msg,class,registration,messages,register,task,manager,class,assert,equals,task,manager,actor,get,last,sender,task,manager,tell,new,registration,messages,acknowledge,registration,new,instance,id,12345,job,manager,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,application,id,new,job,id,new,job,vertex,id,new,execution,attempt,id,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,task,manager,tell,new,trigger,stack,trace,sample,0,tdd,get,execution,id,10000,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,task,manager,tell,new,cancel,task,tdd,get,execution,id,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1455716764;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null__			ActorGateway jobManagerActorGateway = TestingUtils.createForwardingJobManager(_					system,_					getTestActor(),_					Option.<String>empty())___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				new Within(d) {_					@Override_					protected void run() {_						expectMsgClass(RegistrationMessages.RegisterTaskManager.class)__						assertEquals(taskManager.actor(), getLastSender())___						taskManager.tell(new RegistrationMessages.AcknowledgeRegistration(_								new InstanceID(), 12345), jobManager)__					}_				}___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {_					@Override_					protected void run() {_						try {_							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							_							_							taskManager.tell(new TriggerStackTraceSample(_											0,_											tdd.getExecutionId(),_											10000,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											0),_									testActorGateway)___							_							taskManager.tell(new CancelTask(tdd.getExecutionId()))___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(tdd.getExecutionId(), response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,gateway,job,manager,actor,gateway,testing,utils,create,forwarding,job,manager,system,get,test,actor,option,string,empty,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,new,within,d,override,protected,void,run,expect,msg,class,registration,messages,register,task,manager,class,assert,equals,task,manager,actor,get,last,sender,task,manager,tell,new,registration,messages,acknowledge,registration,new,instance,id,12345,job,manager,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,new,job,vertex,id,new,execution,attempt,id,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,task,manager,tell,new,trigger,stack,trace,sample,0,tdd,get,execution,id,10000,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,task,manager,tell,new,cancel,task,tdd,get,execution,id,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1455991376;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_						.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__				Await.ready(connectFuture, remaining())___				_				new Within(d) {_					@Override_					protected void run() {_						try {_							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,new,job,vertex,id,new,execution,attempt,id,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,new,within,d,override,protected,void,run,try,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1456004726;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,new,job,vertex,id,new,execution,attempt,id,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1457450031;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,new,job,vertex,id,new,execution,attempt,id,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1457737669;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						new ExecutionConfig(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,new,job,vertex,id,new,execution,attempt,id,new,execution,config,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1459248687;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						new ExecutionConfig(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,new,job,vertex,id,new,execution,attempt,id,new,execution,config,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1463155298;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						new JobVertexID(),_						new ExecutionAttemptID(),_						ExecutionConfigTest.getSerializedConfig(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,new,job,vertex,id,new,execution,attempt,id,execution,config,test,get,serialized,config,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1463939897;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						ExecutionConfigTest.getSerializedConfig(),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,execution,config,test,get,serialized,config,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1467726586;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1472663401;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1472821521;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1474891865;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1475219249;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1477937801;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											d,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleFailure)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleFailure response = (ResponseStackTraceSampleFailure) msg[0]___							assertEquals(112223, response.sampleId())__							assertEquals(taskId, response.executionId())__							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												new FiniteDuration(100, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_									msg = receiveN(1)__								}__								ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___								_								assertEquals(19230, response.sampleId())__								assertEquals(tdd.getExecutionId(), response.executionId())___								List<StackTraceElement[]> traces = response.samples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											new FiniteDuration(100, TimeUnit.MILLISECONDS),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof ResponseStackTraceSampleSuccess)) {_								msg = receiveN(1)__							}__							ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___							_							assertEquals(1337, response.sampleId())__							assertEquals(tdd.getExecutionId(), response.executionId())___							List<StackTraceElement[]> traces = response.samples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(new TriggerStackTraceSample(_												44,_												tdd.getExecutionId(),_												Integer.MAX_VALUE,_												new FiniteDuration(10, TimeUnit.MILLISECONDS),_												0),_										testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof ResponseStackTraceSampleSuccess) {_										ResponseStackTraceSampleSuccess response = (ResponseStackTraceSampleSuccess) msg[0]___										assertEquals(tdd.getExecutionId(), response.executionId())__										assertEquals(44, response.sampleId())___										_										return__									} else if (msg[0] instanceof ResponseStackTraceSampleFailure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,failure,msg,receive,n,1,response,stack,trace,sample,failure,response,response,stack,trace,sample,failure,msg,0,assert,equals,112223,response,sample,id,assert,equals,task,id,response,execution,id,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,19230,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,new,finite,duration,100,time,unit,milliseconds,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,response,stack,trace,sample,success,msg,receive,n,1,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,1337,response,sample,id,assert,equals,tdd,get,execution,id,response,execution,id,list,stack,trace,element,traces,response,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,new,finite,duration,10,time,unit,milliseconds,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,response,stack,trace,sample,success,response,stack,trace,sample,success,response,response,stack,trace,sample,success,msg,0,assert,equals,tdd,get,execution,id,response,execution,id,assert,equals,44,response,sample,id,return,else,if,msg,0,instanceof,response,stack,trace,sample,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1477989375;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				_				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						new JobID(),_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(tdd.getJobID()),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,new,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,tdd,get,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1478800024;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1478815184;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1478815615;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1478853699;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1481560756;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1482522862;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						Tasks.BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												Tasks.BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,tasks,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,tasks,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1482522863;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1485206299;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1485269495;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Failure)) {_								msg = receiveN(1)__							}__							Failure response = (Failure) msg[0]___							assertEquals(IllegalStateException.class, response.exception().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,failure,msg,receive,n,1,failure,response,failure,msg,0,assert,equals,illegal,state,exception,class,response,exception,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1487261399;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1489149058;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1489149058;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(null)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, null)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,null,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1490174800;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(leaderSessionID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, leaderSessionID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,leader,session,id,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,leader,session,id,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1491500150;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(leaderSessionID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(jm, leaderSessionID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway__				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,leader,session,id,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,leader,session,id,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,actor,gateway,job,manager,job,manager,actor,gateway,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1493975167;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1494092513;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1501760738;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1507212387;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1508861310;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1515519059;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1516626397;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1518607727;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1519638690;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1522130597;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1530798894;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1539073113;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1550483137;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingJobManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,job,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1550568579;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingTaskManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,task,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testTriggerStackTraceSampleMessage() throws Exception;1550568579;Tests sampling of task stack traces.;@Test_	@SuppressWarnings("unchecked")_	public void testTriggerStackTraceSampleMessage() throws Exception {_		new JavaTestKit(system) {{_			ActorGateway taskManagerActorGateway = null___			_			_			ActorRef jm = system.actorOf(Props.create(new SimpleLookupJobManagerCreator(_				HighAvailabilityServices.DEFAULT_LEADER_ID)))__			ActorGateway jobManagerActorGateway = new AkkaActorGateway(_				jm,_				HighAvailabilityServices.DEFAULT_LEADER_ID)___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					HighAvailabilityServices.DEFAULT_LEADER_ID)___			try {_				final ActorGateway jobManager = jobManagerActorGateway___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final ActorGateway taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						new Configuration(),_						true,_						false)___				final JobID jobId = new JobID()___				_				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jobId,_						"Job",_						new JobVertexID(),_						new ExecutionAttemptID(),_						new SerializedValue<>(new ExecutionConfig()),_						"Task",_						1,_						0,_						1,_						0,_						new Configuration(),_						new Configuration(),_						BlockingNoOpInvokable.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.<InputGateDeploymentDescriptor>emptyList(),_						Collections.emptyList(),_						Collections.emptyList(),_						0)___				_				new Within(d) {__					@Override_					protected void run() {_						try {_							_							Future<?> connectFuture = taskManager.ask(new TestingTaskManagerMessages_									.NotifyWhenRegisteredAtJobManager(jobManager.actor()), remaining())__							Await.ready(connectFuture, remaining())___							Future<Object> taskRunningFuture = taskManager.ask(_									new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_											tdd.getExecutionAttemptId()), timeout)___							taskManager.tell(new SubmitTask(tdd))___							Await.ready(taskRunningFuture, d)__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							ExecutionAttemptID taskId = new ExecutionAttemptID()___							taskManager.tell(new TriggerStackTraceSample(_											112223,_											taskId,_											100,_											timeD,_											0),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof Status.Failure)) {_								msg = receiveN(1)__							}__							Status.Failure response = (Status.Failure) msg[0]___							assertEquals(IllegalStateException.class, response.cause().getClass())__						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						boolean success = false__						Throwable lastError = null___						for (int i = 0_ i < 100 && !success_ i++) {_							try {_								int numSamples = 5___								taskManager.tell(new TriggerStackTraceSample(_												19230,_												tdd.getExecutionAttemptId(),_												numSamples,_												Time.milliseconds(100L),_												0),_										testActorGateway)___								_								Object[] msg = receiveN(1)__								while (!(msg[0] instanceof StackTraceSampleResponse)) {_									msg = receiveN(1)__								}__								StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___								_								assertEquals(19230, response.getSampleId())__								assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___								List<StackTraceElement[]> traces = response.getSamples()___								assertEquals("Number of samples", numSamples, traces.size())___								for (StackTraceElement[] trace : traces) {_									_									for (StackTraceElement elem : trace) {_										if (elem.getClassName().equals(_												BlockingNoOpInvokable.class.getName())) {__											assertEquals("invoke", elem.getMethodName())__											success = true__											break__										}_									}__									assertTrue("Unexpected stack trace: " +_											Arrays.toString(trace), success)__								}_							} catch (Throwable t) {_								lastError = t__								LOG.warn("Failed to find invokable.", t)__							}__							try {_								Thread.sleep(100)__							} catch (InterruptedException e) {_								LOG.error("Interrupted while sleeping before retry.", e)__								break__							}_						}__						if (!success) {_							if (lastError == null) {_								fail("Failed to find invokable")__							} else {_								fail(lastError.getMessage())__							}_						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int numSamples = 5__							int maxDepth = 2___							taskManager.tell(new TriggerStackTraceSample(_											1337,_											tdd.getExecutionAttemptId(),_											numSamples,_											Time.milliseconds(100L),_											maxDepth),_									testActorGateway)___							_							Object[] msg = receiveN(1)__							while (!(msg[0] instanceof StackTraceSampleResponse)) {_								msg = receiveN(1)__							}__							StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___							_							assertEquals(1337, response.getSampleId())__							assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())___							List<StackTraceElement[]> traces = response.getSamples()___							assertEquals("Number of samples", numSamples, traces.size())___							for (StackTraceElement[] trace : traces) {_								assertEquals("Max depth", maxDepth, trace.length)__							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}___				_				_				_				new Within(d) {_					@Override_					protected void run() {_						try {_							int maxAttempts = 10__							int sleepTime = 100__							for (int i = 0_ i < maxAttempts_ i++, sleepTime *= 2) {_								_								_								taskManager.tell(_									new TriggerStackTraceSample(_										44,_										tdd.getExecutionAttemptId(),_										Integer.MAX_VALUE,_										Time.milliseconds(10L),_										0),_									testActorGateway)___								Thread.sleep(sleepTime)___								Future<?> removeFuture = taskManager.ask(_										new TestingTaskManagerMessages.NotifyWhenJobRemoved(jobId),_										remaining())___								_								taskManager.tell(new CancelTask(tdd.getExecutionAttemptId()))___								_								while (true) {_									Object[] msg = receiveN(1)__									if (msg[0] instanceof StackTraceSampleResponse) {_										StackTraceSampleResponse response = (StackTraceSampleResponse) msg[0]___										assertEquals(tdd.getExecutionAttemptId(), response.getExecutionAttemptID())__										assertEquals(44, response.getSampleId())___										_										return__									} else if (msg[0] instanceof Failure) {_										_										Await.ready(removeFuture, remaining())___										Future<?> taskRunningFuture = taskManager.ask(_												new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(_														tdd.getExecutionAttemptId()), timeout)___										_										taskManager.tell(new SubmitTask(tdd))___										Await.ready(taskRunningFuture, remaining())___										_										break__									} else {_										_										continue__									}_								}_							}_						} catch (Exception e) {_							e.printStackTrace()__							fail(e.getMessage())__						}_					}_				}__			} finally {_				TestingUtils.stopActor(taskManagerActorGateway)__				TestingUtils.stopActor(jobManagerActorGateway)__			}_		}}__	};tests,sampling,of,task,stack,traces;test,suppress,warnings,unchecked,public,void,test,trigger,stack,trace,sample,message,throws,exception,new,java,test,kit,system,actor,gateway,task,manager,actor,gateway,null,actor,ref,jm,system,actor,of,props,create,new,simple,lookup,job,manager,creator,high,availability,services,actor,gateway,job,manager,actor,gateway,new,akka,actor,gateway,jm,high,availability,services,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,high,availability,services,try,final,actor,gateway,job,manager,job,manager,actor,gateway,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,false,final,job,id,job,id,new,job,id,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,job,id,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,try,future,connect,future,task,manager,ask,new,testing,task,manager,messages,notify,when,registered,at,job,manager,job,manager,actor,remaining,await,ready,connect,future,remaining,future,object,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,d,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,execution,attempt,id,task,id,new,execution,attempt,id,task,manager,tell,new,trigger,stack,trace,sample,112223,task,id,100,time,d,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,status,failure,msg,receive,n,1,status,failure,response,status,failure,msg,0,assert,equals,illegal,state,exception,class,response,cause,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,boolean,success,false,throwable,last,error,null,for,int,i,0,i,100,success,i,try,int,num,samples,5,task,manager,tell,new,trigger,stack,trace,sample,19230,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,0,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,19230,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,for,stack,trace,element,elem,trace,if,elem,get,class,name,equals,blocking,no,op,invokable,class,get,name,assert,equals,invoke,elem,get,method,name,success,true,break,assert,true,unexpected,stack,trace,arrays,to,string,trace,success,catch,throwable,t,last,error,t,log,warn,failed,to,find,invokable,t,try,thread,sleep,100,catch,interrupted,exception,e,log,error,interrupted,while,sleeping,before,retry,e,break,if,success,if,last,error,null,fail,failed,to,find,invokable,else,fail,last,error,get,message,new,within,d,override,protected,void,run,try,int,num,samples,5,int,max,depth,2,task,manager,tell,new,trigger,stack,trace,sample,1337,tdd,get,execution,attempt,id,num,samples,time,milliseconds,100l,max,depth,test,actor,gateway,object,msg,receive,n,1,while,msg,0,instanceof,stack,trace,sample,response,msg,receive,n,1,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,1337,response,get,sample,id,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,list,stack,trace,element,traces,response,get,samples,assert,equals,number,of,samples,num,samples,traces,size,for,stack,trace,element,trace,traces,assert,equals,max,depth,max,depth,trace,length,catch,exception,e,e,print,stack,trace,fail,e,get,message,new,within,d,override,protected,void,run,try,int,max,attempts,10,int,sleep,time,100,for,int,i,0,i,max,attempts,i,sleep,time,2,task,manager,tell,new,trigger,stack,trace,sample,44,tdd,get,execution,attempt,id,integer,time,milliseconds,10l,0,test,actor,gateway,thread,sleep,sleep,time,future,remove,future,task,manager,ask,new,testing,task,manager,messages,notify,when,job,removed,job,id,remaining,task,manager,tell,new,cancel,task,tdd,get,execution,attempt,id,while,true,object,msg,receive,n,1,if,msg,0,instanceof,stack,trace,sample,response,stack,trace,sample,response,response,stack,trace,sample,response,msg,0,assert,equals,tdd,get,execution,attempt,id,response,get,execution,attempt,id,assert,equals,44,response,get,sample,id,return,else,if,msg,0,instanceof,failure,await,ready,remove,future,remaining,future,task,running,future,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,tdd,get,execution,attempt,id,timeout,task,manager,tell,new,submit,task,tdd,await,ready,task,running,future,remaining,break,else,continue,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,actor,gateway,testing,utils,stop,actor,job,manager,actor,gateway
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1477937801;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				false _			)___			final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1477989375;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				false _			)___			final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,false,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1478800024;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				false _			)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,false,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1478815184;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1478815615;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1478853699;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1481560756;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1482522862;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1482522863;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1485206299;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1485269495;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1487261399;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1489149058;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1489149058;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1490174800;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(ConfigConstants.TASK_MANAGER_MEMORY_SEGMENT_SIZE_KEY, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,config,constants,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1491500150;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,job,manager,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1493975167;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1494092513;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				org.apache.flink.runtime.concurrent.Future<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,org,apache,flink,runtime,concurrent,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1501760738;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<BlobKey>(), Collections.<URL>emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,blob,key,collections,url,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1507212387;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1508861310;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1515519059;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1516626397;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1518607727;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1519638690;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1522130597;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setInteger(TaskManagerOptions.MEMORY_SEGMENT_SIZE, 4096)___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,integer,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1530798894;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setString(TaskManagerOptions.MEMORY_SEGMENT_SIZE, "4096")___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)____			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, leaderSessionID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,string,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,leader,session,id,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1539073113;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__<p>IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setString(TaskManagerOptions.MEMORY_SEGMENT_SIZE, "4096")___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)___			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, LEADER_SESSION_ID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,p,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,string,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1550483137;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__<p>IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setString(TaskManagerOptions.MEMORY_SEGMENT_SIZE, "4096")___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)___			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, LEADER_SESSION_ID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,p,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,string,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1550568579;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__<p>IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setString(TaskManagerOptions.MEMORY_SEGMENT_SIZE, "4096")___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)___			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, LEADER_SESSION_ID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,p,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,string,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test(timeout = 10000L) 	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception;1550568579;Test that a failing schedule or update consumers call leads to the failing of the respective_task.__<p>IMPORTANT: We have to make sure that the invokable's cancel method is called, because only_then the future is completed. We do this by not eagerly deploy consumer tasks and requiring_the invokable to fill one memory segment. The completed memory segment will trigger the_scheduling of the downstream operator since it is in pipeline mode. After we've filled the_memory segment, we'll block the invokable and wait for the task failure due to the failed_schedule or update consumers call.;@Test(timeout = 10000L)_	public void testFailingScheduleOrUpdateConsumersMessage() throws Exception {_		new JavaTestKit(system) {{_			final Configuration configuration = new Configuration()___			_			_			_			configuration.setString(TaskManagerOptions.MEMORY_SEGMENT_SIZE, "4096")___			final JobID jid = new JobID()__			final JobVertexID vid = new JobVertexID()__			final ExecutionAttemptID eid = new ExecutionAttemptID()__			final SerializedValue<ExecutionConfig> executionConfig = new SerializedValue<>(new ExecutionConfig())___			final ResultPartitionDeploymentDescriptor resultPartitionDeploymentDescriptor = new ResultPartitionDeploymentDescriptor(_				new IntermediateDataSetID(),_				new IntermediateResultPartitionID(),_				ResultPartitionType.PIPELINED,_				1,_				1,_				true)___			final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(jid, "TestJob", vid, eid, executionConfig,_				"TestTask", 1, 0, 1, 0, new Configuration(), new Configuration(),_				TestInvokableRecordCancel.class.getName(),_				Collections.singletonList(resultPartitionDeploymentDescriptor),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				new ArrayList<>(), Collections.emptyList(), 0)___			ActorRef jmActorRef = system.actorOf(Props.create(FailingScheduleOrUpdateConsumersJobManager.class, LEADER_SESSION_ID), "jobmanager")__			ActorGateway jobManager = new AkkaActorGateway(jmActorRef, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			final ActorGateway taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				configuration,_				true,_				true)___			try {_				TestInvokableRecordCancel.resetGotCanceledFuture()___				Future<Object> result = taskManager.ask(new SubmitTask(tdd), timeout)___				Await.result(result, timeout)___				CompletableFuture<Boolean> cancelFuture = TestInvokableRecordCancel.gotCanceled()___				assertEquals(true, cancelFuture.get())__			} finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};test,that,a,failing,schedule,or,update,consumers,call,leads,to,the,failing,of,the,respective,task,p,important,we,have,to,make,sure,that,the,invokable,s,cancel,method,is,called,because,only,then,the,future,is,completed,we,do,this,by,not,eagerly,deploy,consumer,tasks,and,requiring,the,invokable,to,fill,one,memory,segment,the,completed,memory,segment,will,trigger,the,scheduling,of,the,downstream,operator,since,it,is,in,pipeline,mode,after,we,ve,filled,the,memory,segment,we,ll,block,the,invokable,and,wait,for,the,task,failure,due,to,the,failed,schedule,or,update,consumers,call;test,timeout,10000l,public,void,test,failing,schedule,or,update,consumers,message,throws,exception,new,java,test,kit,system,final,configuration,configuration,new,configuration,configuration,set,string,task,manager,options,4096,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,serialized,value,execution,config,execution,config,new,serialized,value,new,execution,config,final,result,partition,deployment,descriptor,result,partition,deployment,descriptor,new,result,partition,deployment,descriptor,new,intermediate,data,set,id,new,intermediate,result,partition,id,result,partition,type,pipelined,1,1,true,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,test,invokable,record,cancel,class,get,name,collections,singleton,list,result,partition,deployment,descriptor,collections,input,gate,deployment,descriptor,empty,list,new,array,list,collections,empty,list,0,actor,ref,jm,actor,ref,system,actor,of,props,create,failing,schedule,or,update,consumers,job,manager,class,jobmanager,actor,gateway,job,manager,new,akka,actor,gateway,jm,actor,ref,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,actor,gateway,task,manager,testing,utils,create,task,manager,system,high,availability,services,configuration,true,true,try,test,invokable,record,cancel,reset,got,canceled,future,future,object,result,task,manager,ask,new,submit,task,tdd,timeout,await,result,result,timeout,completable,future,boolean,cancel,future,test,invokable,record,cancel,got,canceled,assert,equals,true,cancel,future,get,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1487261399;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1490174800;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1491500150;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1493975167;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1494092513;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1501760738;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1507212387;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1508861310;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1515519059;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1516626397;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1518607727;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1519638690;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1522130597;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1530798894;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1539073113;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1550483137;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testSubmitTaskFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the submit task_message fails.;@Test_	public void testSubmitTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				new ExecutionAttemptID(),_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				0, _				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				"Foobar",_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			try {_				Await.result(submitResponse, timeout)___				fail("The submit task message should have failed.")__			} catch (IllegalArgumentException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,submit,task,message,fails;test,public,void,test,submit,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,new,execution,attempt,id,new,serialized,value,new,execution,config,test,task,0,0,1,0,new,configuration,new,configuration,foobar,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,try,await,result,submit,response,timeout,fail,the,submit,task,message,should,have,failed,catch,illegal,argument,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1432760698;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorRef jobManager = null__			ActorRef taskManager = null___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				jobManager = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(resultId, getTestActor())))___				final int dataPort = NetUtils.getAvailablePort()__				taskManager = createTaskManager(jobManager, true, true, dataPort)___				__				final ActorRef tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), getTestActor())__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),_								PartitionNotFoundException.class)__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				if (taskManager != null) {_					taskManager.tell(Kill.getInstance(), ActorRef.noSender())__				}__				if (jobManager != null) {_					jobManager.tell(Kill.getInstance(), ActorRef.noSender())__				}_			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,ref,job,manager,null,actor,ref,task,manager,null,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,job,manager,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,result,id,get,test,actor,final,int,data,port,net,utils,get,available,port,task,manager,create,task,manager,job,manager,true,true,data,port,final,actor,ref,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,get,test,actor,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,assert,equals,msg,get,error,class,loader,get,system,class,loader,get,class,partition,not,found,exception,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,task,manager,null,task,manager,tell,kill,get,instance,actor,ref,no,sender,if,job,manager,null,job,manager,tell,kill,get,instance,actor,ref,no,sender
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1437665997;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorRef jobManager = null__			ActorRef taskManager = null___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				jobManager = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID.get(), getTestActor())))___				final int dataPort = NetUtils.getAvailablePort()__				taskManager = createTaskManager(jobManager, true, true, dataPort)___				__				final ActorRef tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(decorator.decorate(new SubmitTask(tdd)), getTestActor())__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),_								PartitionNotFoundException.class)__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				if (taskManager != null) {_					taskManager.tell(Kill.getInstance(), ActorRef.noSender())__				}__				if (jobManager != null) {_					jobManager.tell(Kill.getInstance(), ActorRef.noSender())__				}_			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,ref,job,manager,null,actor,ref,task,manager,null,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,job,manager,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,get,test,actor,final,int,data,port,net,utils,get,available,port,task,manager,create,task,manager,job,manager,true,true,data,port,final,actor,ref,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,decorator,decorate,new,submit,task,tdd,get,test,actor,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,assert,equals,msg,get,error,class,loader,get,system,class,loader,get,class,partition,not,found,exception,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,task,manager,null,task,manager,tell,kill,get,instance,actor,ref,no,sender,if,job,manager,null,job,manager,tell,kill,get,instance,actor,ref,no,sender
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1441011751;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),_								PartitionNotFoundException.class)__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,assert,equals,msg,get,error,class,loader,get,system,class,loader,get,class,partition,not,found,exception,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1442829016;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1443682795;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1444312509;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1449496469;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1452526242;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1452854660;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1453902315;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1454940284;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1455549373;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1455716764;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						_						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1455991376;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1456004726;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1457450031;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1457737669;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, new ExecutionConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,new,execution,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1459248687;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, new ExecutionConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,new,execution,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1463155298;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, ExecutionConfigTest.getSerializedConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,execution,config,test,get,serialized,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1463939897;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid, ExecutionConfigTest.getSerializedConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,get,serialized,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1467726586;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1472663401;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				final Configuration config = new Configuration()___				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,final,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1472821521;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1474891865;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1475219249;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1477937801;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1477989375;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1478800024;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1478815184;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1478815615;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1478853699;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1481560756;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1482522862;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1482522863;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1485206299;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1485269495;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1487261399;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1489149058;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1489149058;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1490174800;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1491500150;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1493975167;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1494092513;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1501760738;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1507212387;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1508861310;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1515519059;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1516626397;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1518607727;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1519638690;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1522130597;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1530798894;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1539073113;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1550483137;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1550568579;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testLocalPartitionNotFound() throws Exception;1550568579;Tests that repeated local {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testLocalPartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						true,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation.createLocal()___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(new FiniteDuration(120, TimeUnit.SECONDS)) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)___						Throwable error = msg.getError(getClass().getClassLoader())__						if (error.getClass() != PartitionNotFoundException.class) {_							error.printStackTrace()__							fail("Wrong exception: " + error.getMessage())__						}_					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,local,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,local,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,configuration,config,new,configuration,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,true,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,local,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,new,finite,duration,120,time,unit,seconds,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,throwable,error,msg,get,error,get,class,get,class,loader,if,error,get,class,partition,not,found,exception,class,error,print,stack,trace,fail,wrong,exception,error,get,message,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1487261399;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1490174800;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1491500150;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1493975167;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1494092513;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1501760738;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1507212387;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1508861310;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1515519059;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1516626397;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1518607727;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1519638690;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1522130597;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1530798894;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1539073113;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1550483137;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStackTraceSampleFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testStackTraceSampleFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			Future<Object> stackTraceResponse = taskManager.ask(_				new TriggerStackTraceSample(_					0,_					new ExecutionAttemptID(),_					0,_					Time.milliseconds(1L),_					0),_				timeout)___			try {_				Await.result(stackTraceResponse, timeout)___				fail("The trigger stack trace message should have failed.")__			} catch (IllegalStateException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,stack,trace,sample,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,future,object,stack,trace,response,task,manager,ask,new,trigger,stack,trace,sample,0,new,execution,attempt,id,0,time,milliseconds,1l,0,timeout,try,await,result,stack,trace,response,timeout,fail,the,trigger,stack,trace,message,should,have,failed,catch,illegal,state,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1432760698;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorRef jobManager = null__			ActorRef taskManager = null___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				jobManager = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(resultId, getTestActor())))___				final int dataPort = NetUtils.getAvailablePort()__				taskManager = createTaskManager(jobManager, true, false, dataPort)___				__				final ActorRef tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), getTestActor())__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),_								PartitionNotFoundException.class)__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				if (taskManager != null) {_					taskManager.tell(Kill.getInstance(), ActorRef.noSender())__				}__				if (jobManager != null) {_					jobManager.tell(Kill.getInstance(), ActorRef.noSender())__				}_			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,ref,job,manager,null,actor,ref,task,manager,null,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,job,manager,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,result,id,get,test,actor,final,int,data,port,net,utils,get,available,port,task,manager,create,task,manager,job,manager,true,false,data,port,final,actor,ref,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,get,test,actor,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,assert,equals,msg,get,error,class,loader,get,system,class,loader,get,class,partition,not,found,exception,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,task,manager,null,task,manager,tell,kill,get,instance,actor,ref,no,sender,if,job,manager,null,job,manager,tell,kill,get,instance,actor,ref,no,sender
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1437665997;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorRef jobManager = null__			ActorRef taskManager = null___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				jobManager = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID.get(), getTestActor())))___				final int dataPort = NetUtils.getAvailablePort()__				taskManager = createTaskManager(jobManager, true, false, dataPort)___				__				final ActorRef tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(decorator.decorate(new SubmitTask(tdd)), getTestActor())__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(msg.getExecutionState(), ExecutionState.FAILED)__						assertEquals(msg.getError(ClassLoader.getSystemClassLoader()).getClass(),_								PartitionNotFoundException.class)__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				if (taskManager != null) {_					taskManager.tell(Kill.getInstance(), ActorRef.noSender())__				}__				if (jobManager != null) {_					jobManager.tell(Kill.getInstance(), ActorRef.noSender())__				}_			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,ref,job,manager,null,actor,ref,task,manager,null,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,job,manager,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,get,test,actor,final,int,data,port,net,utils,get,available,port,task,manager,create,task,manager,job,manager,true,false,data,port,final,actor,ref,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,decorator,decorate,new,submit,task,tdd,get,test,actor,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,msg,get,execution,state,execution,state,failed,assert,equals,msg,get,error,class,loader,get,system,class,loader,get,class,partition,not,found,exception,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,task,manager,null,task,manager,tell,kill,get,instance,actor,ref,no,sender,if,job,manager,null,job,manager,tell,kill,get,instance,actor,ref,no,sender
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1441011751;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1442829016;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1443682795;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1444312509;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1449496469;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1452526242;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1452854660;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1453902315;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1454940284;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1455549373;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						appId, jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,app,id,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1455716764;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1455991376;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1456004726;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						assertEquals(PartitionNotFoundException.class,_								msg.getError(ClassLoader.getSystemClassLoader()).getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,assert,equals,partition,not,found,exception,class,msg,get,error,class,loader,get,system,class,loader,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1457450031;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid, "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1457737669;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid,_						new ExecutionConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,new,execution,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1459248687;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid,_						new ExecutionConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,new,execution,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1463155298;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, vid, eid,_						ExecutionConfigTest.getSerializedConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,vid,eid,execution,config,test,get,serialized,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1463939897;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						ExecutionConfigTest.getSerializedConfig(), "Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,execution,config,test,get,serialized,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1467726586;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1472663401;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1472821521;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1474891865;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1475219249;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1477937801;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Messages.getAcknowledge().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,messages,get,acknowledge,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1477989375;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = new TaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,new,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1478800024;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1478815184;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1478815615;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1478853699;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1481560756;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1482522862;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1482522863;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1485206299;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1485269495;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1487261399;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1489149058;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1489149058;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1490174800;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1491500150;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						jobManager,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,job,manager,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1493975167;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1494092513;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1501760738;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.<BlobKey>emptyList(),_						Collections.<URL>emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,blob,key,empty,list,collections,url,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1507212387;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1508861310;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1515519059;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1516626397;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(ConfigConstants.TASK_MANAGER_DATA_PORT_KEY, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,config,constants,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1518607727;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1519638690;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1522130597;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1530798894;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_					leaderSessionID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(leaderSessionID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, leaderSessionID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(), _							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch(Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,leader,session,id,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,leader,session,id,get,test,actor,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1539073113;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(),_							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1550483137;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(),_							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1550568579;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(),_							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testRemotePartitionNotFound() throws Exception;1550568579;Tests that repeated remote {@link PartitionNotFoundException}s ultimately fail the receiver.;@Test_	public void testRemotePartitionNotFound() throws Exception {__		new JavaTestKit(system){{__			ActorGateway jobManager = null__			ActorGateway taskManager = null___			final ActorGateway testActorGateway = new AkkaActorGateway(_					getTestActor(),_				LEADER_SESSION_ID)___			try {_				final IntermediateDataSetID resultId = new IntermediateDataSetID()___				_				ActorRef jm = system.actorOf(Props.create(_						new SimplePartitionStateLookupJobManagerCreator(LEADER_SESSION_ID, getTestActor())))___				jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___				highAvailabilityServices.setJobMasterLeaderRetriever(_					HighAvailabilityServices.DEFAULT_JOB_ID,_					new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___				final int dataPort = NetUtils.getAvailablePort()__				Configuration config = new Configuration()__				config.setInteger(TaskManagerOptions.DATA_PORT, dataPort)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL, 100)__				config.setInteger(TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX, 200)___				taskManager = TestingUtils.createTaskManager(_						system,_						highAvailabilityServices,_						config,_						false,_						true)___				__				final ActorGateway tm = taskManager___				final JobID jid = new JobID()__				final JobVertexID vid = new JobVertexID()__				final ExecutionAttemptID eid = new ExecutionAttemptID()___				final ResultPartitionID partitionId = new ResultPartitionID()___				_				final ResultPartitionLocation loc = ResultPartitionLocation_						.createRemote(new ConnectionID(_								new InetSocketAddress("localhost", dataPort), 0))___				final InputChannelDeploymentDescriptor[] icdd =_						new InputChannelDeploymentDescriptor[] {_								new InputChannelDeploymentDescriptor(partitionId, loc)}___				final InputGateDeploymentDescriptor igdd =_						new InputGateDeploymentDescriptor(resultId, ResultPartitionType.PIPELINED, 0, icdd)___				final TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_						jid, "TestJob", vid, eid,_						new SerializedValue<>(new ExecutionConfig()),_						"Receiver", 1, 0, 1, 0,_						new Configuration(), new Configuration(),_						Tasks.AgnosticReceiver.class.getName(),_						Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_						Collections.singletonList(igdd),_						Collections.emptyList(),_						Collections.emptyList(), 0)___				new Within(d) {_					@Override_					protected void run() {_						_						tm.tell(new SubmitTask(tdd), testActorGateway)__						expectMsgClass(Acknowledge.get().getClass())___						_						TaskExecutionState msg = expectMsgClass(TaskExecutionState.class)___						_						assertEquals(ExecutionState.FAILED, msg.getExecutionState())__						Throwable t = msg.getError(ClassLoader.getSystemClassLoader())__						assertEquals("Thrown exception was not a PartitionNotFoundException: " + t.getMessage(),_							PartitionNotFoundException.class, t.getClass())__					}_				}__			}_			catch (Exception e) {_				e.printStackTrace()__				fail(e.getMessage())__			}_			finally {_				TestingUtils.stopActor(taskManager)__				TestingUtils.stopActor(jobManager)__			}_		}}__	};tests,that,repeated,remote,link,partition,not,found,exception,s,ultimately,fail,the,receiver;test,public,void,test,remote,partition,not,found,throws,exception,new,java,test,kit,system,actor,gateway,job,manager,null,actor,gateway,task,manager,null,final,actor,gateway,test,actor,gateway,new,akka,actor,gateway,get,test,actor,try,final,intermediate,data,set,id,result,id,new,intermediate,data,set,id,actor,ref,jm,system,actor,of,props,create,new,simple,partition,state,lookup,job,manager,creator,get,test,actor,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,final,int,data,port,net,utils,get,available,port,configuration,config,new,configuration,config,set,integer,task,manager,options,data,port,config,set,integer,task,manager,options,100,config,set,integer,task,manager,options,200,task,manager,testing,utils,create,task,manager,system,high,availability,services,config,false,true,final,actor,gateway,tm,task,manager,final,job,id,jid,new,job,id,final,job,vertex,id,vid,new,job,vertex,id,final,execution,attempt,id,eid,new,execution,attempt,id,final,result,partition,id,partition,id,new,result,partition,id,final,result,partition,location,loc,result,partition,location,create,remote,new,connection,id,new,inet,socket,address,localhost,data,port,0,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,new,input,channel,deployment,descriptor,partition,id,loc,final,input,gate,deployment,descriptor,igdd,new,input,gate,deployment,descriptor,result,id,result,partition,type,pipelined,0,icdd,final,task,deployment,descriptor,tdd,create,task,deployment,descriptor,jid,test,job,vid,eid,new,serialized,value,new,execution,config,receiver,1,0,1,0,new,configuration,new,configuration,tasks,agnostic,receiver,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,singleton,list,igdd,collections,empty,list,collections,empty,list,0,new,within,d,override,protected,void,run,tm,tell,new,submit,task,tdd,test,actor,gateway,expect,msg,class,acknowledge,get,get,class,task,execution,state,msg,expect,msg,class,task,execution,state,class,assert,equals,execution,state,failed,msg,get,execution,state,throwable,t,msg,get,error,class,loader,get,system,class,loader,assert,equals,thrown,exception,was,not,a,partition,not,found,exception,t,get,message,partition,not,found,exception,class,t,get,class,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,testing,utils,stop,actor,task,manager,testing,utils,stop,actor,job,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1487261399;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1490174800;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1491500150;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1493975167;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1494092513;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1501760738;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1507212387;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1508861310;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1515519059;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1516626397;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1518607727;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1519638690;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1522130597;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			final Future<Object> taskRunning = taskManager.ask(new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(executionAttemptId), timeout)___			Await.result(taskRunning, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,final,future,object,task,running,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,execution,attempt,id,timeout,await,result,task,running,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1530798894;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			final Future<Object> taskRunning = taskManager.ask(new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(executionAttemptId), timeout)___			Await.result(taskRunning, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,final,future,object,task,running,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,execution,attempt,id,timeout,await,result,task,running,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1539073113;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			final Future<Object> taskRunning = taskManager.ask(new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(executionAttemptId), timeout)___			Await.result(taskRunning, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,final,future,object,task,running,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,execution,attempt,id,timeout,await,result,task,running,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1550483137;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			final Future<Object> taskRunning = taskManager.ask(new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(executionAttemptId), timeout)___			Await.result(taskRunning, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,final,future,object,task,running,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,execution,attempt,id,timeout,await,result,task,running,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			final Future<Object> taskRunning = taskManager.ask(new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(executionAttemptId), timeout)___			Await.result(taskRunning, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,final,future,object,task,running,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,execution,attempt,id,timeout,await,result,task,running,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testStopTaskFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the stop task_message fails.;@Test_	public void testStopTaskFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {_			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			final Future<Object> taskRunning = taskManager.ask(new TestingTaskManagerMessages.NotifyWhenTaskIsRunning(executionAttemptId), timeout)___			Await.result(taskRunning, timeout)___			Future<Object> stopResponse = taskManager.ask(new StopTask(executionAttemptId), timeout)___			try {_				Await.result(stopResponse, timeout)___				fail("The stop task message should have failed.")__			} catch (UnsupportedOperationException e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,stop,task,message,fails;test,public,void,test,stop,task,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,final,future,object,task,running,task,manager,ask,new,testing,task,manager,messages,notify,when,task,is,running,execution,attempt,id,timeout,await,result,task,running,timeout,future,object,stop,response,task,manager,ask,new,stop,task,execution,attempt,id,timeout,try,await,result,stop,response,timeout,fail,the,stop,task,message,should,have,failed,catch,unsupported,operation,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1487261399;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1489149058;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1490174800;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1491500150;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			taskManager = TestingUtils.createTaskManager(_				system,_				jobManager,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,task,manager,testing,utils,create,task,manager,system,job,manager,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1493975167;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1494092513;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1501760738;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.<BlobKey>emptyList(),_				Collections.<URL>emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,blob,key,empty,list,collections,url,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1507212387;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1508861310;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1515519059;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1516626397;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1518607727;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1519638690;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1522130597;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1530798894;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, leaderSessionID))__			jobManager = new AkkaActorGateway(jm, leaderSessionID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,leader,session,id,job,manager,new,akka,actor,gateway,jm,leader,session,id,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1539073113;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1550483137;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
TaskManagerTest -> @Test 	public void testUpdateTaskInputPartitionsFailure() throws Exception;1550568579;Tests that the TaskManager sends a proper exception back to the sender if the trigger stack_trace message fails.;@Test_	public void testUpdateTaskInputPartitionsFailure() throws Exception {_		ActorGateway jobManager = null__		ActorGateway taskManager = null___		try {__			final ExecutionAttemptID executionAttemptId = new ExecutionAttemptID()___			ActorRef jm = system.actorOf(Props.create(SimpleJobManager.class, LEADER_SESSION_ID))__			jobManager = new AkkaActorGateway(jm, LEADER_SESSION_ID)___			highAvailabilityServices.setJobMasterLeaderRetriever(_				HighAvailabilityServices.DEFAULT_JOB_ID,_				new StandaloneLeaderRetrievalService(jobManager.path(), jobManager.leaderSessionID()))___			taskManager = TestingUtils.createTaskManager(_				system,_				highAvailabilityServices,_				new Configuration(),_				true,_				true)___			TaskDeploymentDescriptor tdd = createTaskDeploymentDescriptor(_				new JobID(),_				"test job",_				new JobVertexID(),_				executionAttemptId,_				new SerializedValue<>(new ExecutionConfig()),_				"test task",_				1,_				0,_				1,_				0,_				new Configuration(),_				new Configuration(),_				BlockingNoOpInvokable.class.getName(),_				Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_				Collections.<InputGateDeploymentDescriptor>emptyList(),_				Collections.emptyList(),_				Collections.emptyList(),_				0)___			Future<Object> submitResponse = taskManager.ask(new SubmitTask(tdd), timeout)___			Await.result(submitResponse, timeout)___			Future<Object> partitionUpdateResponse = taskManager.ask(_				new TaskMessages.UpdateTaskSinglePartitionInfo(_					executionAttemptId,_					new IntermediateDataSetID(),_					new InputChannelDeploymentDescriptor(new ResultPartitionID(), ResultPartitionLocation.createLocal())),_				timeout)___			try {_				Await.result(partitionUpdateResponse, timeout)___				fail("The update task input partitions message should have failed.")__			} catch (Exception e) {_				_			}_		} finally {_			TestingUtils.stopActor(jobManager)__			TestingUtils.stopActor(taskManager)__		}_	};tests,that,the,task,manager,sends,a,proper,exception,back,to,the,sender,if,the,trigger,stack,trace,message,fails;test,public,void,test,update,task,input,partitions,failure,throws,exception,actor,gateway,job,manager,null,actor,gateway,task,manager,null,try,final,execution,attempt,id,execution,attempt,id,new,execution,attempt,id,actor,ref,jm,system,actor,of,props,create,simple,job,manager,class,job,manager,new,akka,actor,gateway,jm,high,availability,services,set,job,master,leader,retriever,high,availability,services,new,standalone,leader,retrieval,service,job,manager,path,job,manager,leader,session,id,task,manager,testing,utils,create,task,manager,system,high,availability,services,new,configuration,true,true,task,deployment,descriptor,tdd,create,task,deployment,descriptor,new,job,id,test,job,new,job,vertex,id,execution,attempt,id,new,serialized,value,new,execution,config,test,task,1,0,1,0,new,configuration,new,configuration,blocking,no,op,invokable,class,get,name,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,collections,empty,list,collections,empty,list,0,future,object,submit,response,task,manager,ask,new,submit,task,tdd,timeout,await,result,submit,response,timeout,future,object,partition,update,response,task,manager,ask,new,task,messages,update,task,single,partition,info,execution,attempt,id,new,intermediate,data,set,id,new,input,channel,deployment,descriptor,new,result,partition,id,result,partition,location,create,local,timeout,try,await,result,partition,update,response,timeout,fail,the,update,task,input,partitions,message,should,have,failed,catch,exception,e,finally,testing,utils,stop,actor,job,manager,testing,utils,stop,actor,task,manager
