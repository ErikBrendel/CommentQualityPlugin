# id;timestamp;commentText;codeText;commentWords;codeWords
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1404155775;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1404986750;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1405088715;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1411473561;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1414786554;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1415382319;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1420560668;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1440967006;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public List<MemorySegment> close() throws IOException;1460472696;Closes this OutputView, closing the underlying writer and returning all memory segments.__@return A list containing all memory segments originally supplied to this view._@throws IOException Thrown, if the underlying writer could not be properly closed.;public List<MemorySegment> close() throws IOException_	{_		_		writeSegment(getCurrentSegment(), getCurrentPositionInSegment(), true)__		clear()__		_		_		final LinkedBlockingQueue<MemorySegment> queue = this.writer.getReturnQueue()__		this.writer.close()__		_		_		ArrayList<MemorySegment> list = new ArrayList<MemorySegment>(this.numSegments)_	_		for (int i = 0_ i < this.numSegments_ i++) {_			final MemorySegment m = queue.poll()__			if (m == null) {_				_				throw new RuntimeException("ChannelWriterOutputView: MemorySegments have been taken from return queue by different actor.")__			}_			list.add(m)__		}_		_		return list__	};closes,this,output,view,closing,the,underlying,writer,and,returning,all,memory,segments,return,a,list,containing,all,memory,segments,originally,supplied,to,this,view,throws,ioexception,thrown,if,the,underlying,writer,could,not,be,properly,closed;public,list,memory,segment,close,throws,ioexception,write,segment,get,current,segment,get,current,position,in,segment,true,clear,final,linked,blocking,queue,memory,segment,queue,this,writer,get,return,queue,this,writer,close,array,list,memory,segment,list,new,array,list,memory,segment,this,num,segments,for,int,i,0,i,this,num,segments,i,final,memory,segment,m,queue,poll,if,m,null,throw,new,runtime,exception,channel,writer,output,view,memory,segments,have,been,taken,from,return,queue,by,different,actor,list,add,m,return,list
ChannelWriterOutputView -> public long getBytesMemoryUsed();1404155775;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1404986750;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1405088715;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1411473561;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1414786554;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1415382319;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1420560668;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1440967006;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesMemoryUsed();1460472696;Gets the number of bytes used by this output view, including written bytes and header bytes.__@return The number of bytes that have been written to this output view.;public long getBytesMemoryUsed()_	{_		return (this.blockCount - 1) * getSegmentSize() + getCurrentPositionInSegment()__	};gets,the,number,of,bytes,used,by,this,output,view,including,written,bytes,and,header,bytes,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,memory,used,return,this,block,count,1,get,segment,size,get,current,position,in,segment
ChannelWriterOutputView -> public int getBlockCount();1404155775;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1404986750;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1405088715;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1411473561;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1414786554;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1415382319;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1420560668;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1440967006;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public int getBlockCount();1460472696;Gets the number of blocks used by this view.__@return The number of blocks used.;public int getBlockCount()_	{_		return this.blockCount__	};gets,the,number,of,blocks,used,by,this,view,return,the,number,of,blocks,used;public,int,get,block,count,return,this,block,count
ChannelWriterOutputView -> public long getBytesWritten();1404155775;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1404986750;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1405088715;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1411473561;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1414786554;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1415382319;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1420560668;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1440967006;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public long getBytesWritten();1460472696;Gets the number of pay-load bytes already written. This excludes the number of bytes spent on headers_in the segments.__@return The number of bytes that have been written to this output view.;public long getBytesWritten()_	{_		return this.bytesBeforeSegment + getCurrentPositionInSegment() - HEADER_LENGTH__	};gets,the,number,of,pay,load,bytes,already,written,this,excludes,the,number,of,bytes,spent,on,headers,in,the,segments,return,the,number,of,bytes,that,have,been,written,to,this,output,view;public,long,get,bytes,written,return,this,bytes,before,segment,get,current,position,in,segment
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize);1404155775;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize)_	{_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize);1404986750;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize)_	{_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize);1405088715;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize)_	{_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize);1411473561;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize)_	{_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize);1414786554;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize)_	{_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize);1415382319;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, List<MemorySegment> memory, int segmentSize) {_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize);1404155775;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize);1404986750;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize);1405088715;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize);1411473561;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize);1414786554;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize);1415382319;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, List<MemorySegment> memory, int segmentSize);1420560668;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, List<MemorySegment> memory, int segmentSize) {_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,memory,segment,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, List<MemorySegment> memory, int segmentSize);1440967006;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, List<MemorySegment> memory, int segmentSize) {_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,memory,segment,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, List<MemorySegment> memory, int segmentSize);1460472696;Creates an new ChannelWriterOutputView that writes to the given channel and buffers data_in the given memory segments. If the given memory segments are null, the writer takes its buffers_directly from the return queue of the writer. Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param memory The memory used to buffer data, or null, to utilize solely the return queue._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, List<MemorySegment> memory, int segmentSize) {_		super(segmentSize, HEADER_LENGTH)__		_		if (writer == null) {_			throw new NullPointerException()__		}_		_		this.writer = writer__		_		if (memory == null) {_			this.numSegments = 0__		} else {_			this.numSegments = memory.size()__			_			final LinkedBlockingQueue<MemorySegment> queue = writer.getReturnQueue()__			for (int i = memory.size() - 1_ i >= 0_ --i) {_				final MemorySegment seg = memory.get(i)__				if (seg.size() != segmentSize) {_					throw new IllegalArgumentException("The supplied memory segments are not of the specified size.")__				}_				queue.add(seg)__			}_		}_		_		_		try {_			advance()__		}_		catch (IOException ioex) {_			throw new RuntimeException("BUG: IOException occurred while getting first block for ChannelWriterOutputView.", ioex)__		}_	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,and,buffers,data,in,the,given,memory,segments,if,the,given,memory,segments,are,null,the,writer,takes,its,buffers,directly,from,the,return,queue,of,the,writer,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,memory,the,memory,used,to,buffer,data,or,null,to,utilize,solely,the,return,queue,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,memory,segment,writer,list,memory,segment,memory,int,segment,size,super,segment,size,if,writer,null,throw,new,null,pointer,exception,this,writer,writer,if,memory,null,this,num,segments,0,else,this,num,segments,memory,size,final,linked,blocking,queue,memory,segment,queue,writer,get,return,queue,for,int,i,memory,size,1,i,0,i,final,memory,segment,seg,memory,get,i,if,seg,size,segment,size,throw,new,illegal,argument,exception,the,supplied,memory,segments,are,not,of,the,specified,size,queue,add,seg,try,advance,catch,ioexception,ioex,throw,new,runtime,exception,bug,ioexception,occurred,while,getting,first,block,for,channel,writer,output,view,ioex
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, int segmentSize);1420560668;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,memory,segment,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, int segmentSize);1440967006;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writers return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writers,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,memory,segment,writer,int,segment,size,this,writer,null,segment,size
ChannelWriterOutputView -> public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, int segmentSize);1460472696;Creates an new ChannelWriterOutputView that writes to the given channel. It uses only a single_memory segment for the buffering, which it takes from the writer's return queue._Note that this variant locks if no buffers are contained_in the return queue.__@param writer The writer to write to._@param segmentSize The size of the memory segments.;public ChannelWriterOutputView(BlockChannelWriter<MemorySegment> writer, int segmentSize)_	{_		this(writer, null, segmentSize)__	};creates,an,new,channel,writer,output,view,that,writes,to,the,given,channel,it,uses,only,a,single,memory,segment,for,the,buffering,which,it,takes,from,the,writer,s,return,queue,note,that,this,variant,locks,if,no,buffers,are,contained,in,the,return,queue,param,writer,the,writer,to,write,to,param,segment,size,the,size,of,the,memory,segments;public,channel,writer,output,view,block,channel,writer,memory,segment,writer,int,segment,size,this,writer,null,segment,size
