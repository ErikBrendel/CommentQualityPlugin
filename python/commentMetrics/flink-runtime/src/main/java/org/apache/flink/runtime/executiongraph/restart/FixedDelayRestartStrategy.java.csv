# id;timestamp;commentText;codeText;commentWords;codeWords
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1461690276;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_					ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_					". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_					ConfigConstants.EXECUTION_RETRY_DELAY_KEY + ": " + delayString +_					". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1465991918;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_					ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_					". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_					ConfigConstants.EXECUTION_RETRY_DELAY_KEY + ": " + delayString +_					". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1466687530;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_					ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_					". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_					ConfigConstants.EXECUTION_RETRY_DELAY_KEY + ": " + delayString +_					". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1468274438;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_						ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_						". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_						ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_						". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1477989375;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_						ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_						". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_						ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_						". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1479852017;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_						ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_						". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_						ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_						". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1495477702;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			AkkaOptions.WATCH_HEARTBEAT_INTERVAL)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_						AkkaOptions.WATCH_HEARTBEAT_PAUSE.key() + ": " + timeoutString +_						". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_						ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_						". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,akka,options,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,akka,options,key,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1500811086;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			AkkaOptions.WATCH_HEARTBEAT_INTERVAL)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_						AkkaOptions.WATCH_HEARTBEAT_PAUSE.key() + ": " + timeoutString +_						". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_						ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_						". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,akka,options,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,akka,options,key,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1509404699;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			AkkaOptions.WATCH_HEARTBEAT_INTERVAL)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_						AkkaOptions.WATCH_HEARTBEAT_INTERVAL.key() + ": " + timeoutString +_						". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_						ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_						". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,akka,options,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,akka,options,key,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1511183461;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String delayString = configuration.getString(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			throw new Exception("Invalid config value for " +_					ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_					". Value must be a valid duration (such as '100 milli' or '10 s')")__		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,delay,string,configuration,get,string,config,constants,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception;1549365080;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategyFactory createFactory(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String delayString = configuration.getString(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			throw new Exception("Invalid config value for " +_					ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY + ": " + delayString +_					". Value must be a valid duration (such as '100 milli' or '10 s')")__		}__		return new FixedDelayRestartStrategyFactory(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,factory,create,factory,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,delay,string,configuration,get,string,config,constants,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,factory,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategy create(Configuration configuration) throws Exception;1455548285;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategy create(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			throw new Exception("Invalid config value for " + ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY +_				": " + delayString + ". Value must be a valid duration (such as 100 s or 1 min).")__		}__		return new FixedDelayRestartStrategy(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,create,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,s,or,1,min,return,new,fixed,delay,restart,strategy,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategy create(Configuration configuration) throws Exception;1455549473;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategy create(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_					ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_					". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_					ConfigConstants.EXECUTION_RETRY_DELAY_KEY + ": " + delayString +_					". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategy(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,create,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,max,attempts,delay
FixedDelayRestartStrategy -> public static FixedDelayRestartStrategy create(Configuration configuration) throws Exception;1456235649;Creates a FixedDelayRestartStrategy from the given Configuration.__@param configuration Configuration containing the parameter values for the restart strategy_@return Initialized instance of FixedDelayRestartStrategy_@throws Exception;public static FixedDelayRestartStrategy create(Configuration configuration) throws Exception {_		int maxAttempts = configuration.getInteger(ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_ATTEMPTS, 1)___		String timeoutString = configuration.getString(_			ConfigConstants.AKKA_WATCH_HEARTBEAT_INTERVAL,_			ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)___		String delayString = configuration.getString(_			ConfigConstants.RESTART_STRATEGY_FIXED_DELAY_DELAY,_			timeoutString_		)___		long delay___		try {_			delay = Duration.apply(delayString).toMillis()__		} catch (NumberFormatException nfe) {_			if (delayString.equals(timeoutString)) {_				throw new Exception("Invalid config value for " +_					ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE + ": " + timeoutString +_					". Value must be a valid duration (such as '10 s' or '1 min')")__			} else {_				throw new Exception("Invalid config value for " +_					ConfigConstants.EXECUTION_RETRY_DELAY_KEY + ": " + delayString +_					". Value must be a valid duration (such as '100 milli' or '10 s')")__			}_		}__		return new FixedDelayRestartStrategy(maxAttempts, delay)__	};creates,a,fixed,delay,restart,strategy,from,the,given,configuration,param,configuration,configuration,containing,the,parameter,values,for,the,restart,strategy,return,initialized,instance,of,fixed,delay,restart,strategy,throws,exception;public,static,fixed,delay,restart,strategy,create,configuration,configuration,throws,exception,int,max,attempts,configuration,get,integer,config,constants,1,string,timeout,string,configuration,get,string,config,constants,config,constants,string,delay,string,configuration,get,string,config,constants,timeout,string,long,delay,try,delay,duration,apply,delay,string,to,millis,catch,number,format,exception,nfe,if,delay,string,equals,timeout,string,throw,new,exception,invalid,config,value,for,config,constants,timeout,string,value,must,be,a,valid,duration,such,as,10,s,or,1,min,else,throw,new,exception,invalid,config,value,for,config,constants,delay,string,value,must,be,a,valid,duration,such,as,100,milli,or,10,s,return,new,fixed,delay,restart,strategy,max,attempts,delay
