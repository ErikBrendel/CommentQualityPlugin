# id;timestamp;commentText;codeText;commentWords;codeWords
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1505860824;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						List<MetricDump> dumpedMetrics = deserializer.deserialize(result)__						synchronized (metrics) {_							for (MetricDump metric : dumpedMetrics) {_								metrics.add(metric)__							}_						}_					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,list,metric,dump,dumped,metrics,deserializer,deserialize,result,synchronized,metrics,for,metric,dump,metric,dumped,metrics,metrics,add,metric,executor
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1506376022;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						List<MetricDump> dumpedMetrics = deserializer.deserialize(result)__						synchronized (metrics) {_							for (MetricDump metric : dumpedMetrics) {_								metrics.add(metric)__							}_						}_					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,list,metric,dump,dumped,metrics,deserializer,deserialize,result,synchronized,metrics,for,metric,dump,metric,dumped,metrics,metrics,add,metric,executor
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1509028917;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						metrics.addAll(deserializer.deserialize(result))__					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,metrics,add,all,deserializer,deserialize,result,executor
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1509547680;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		LOG.debug("Query metrics for {}.", queryServiceGateway.getAddress())___		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						metrics.addAll(deserializer.deserialize(result))__					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,log,debug,query,metrics,for,query,service,gateway,get,address,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,metrics,add,all,deserializer,deserialize,result,executor
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1509547920;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		LOG.debug("Query metrics for {}.", queryServiceGateway.getAddress())___		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						metrics.addAll(deserializer.deserialize(result))__					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,log,debug,query,metrics,for,query,service,gateway,get,address,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,metrics,add,all,deserializer,deserialize,result,executor
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1510063664;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		LOG.debug("Query metrics for {}.", queryServiceGateway.getAddress())___		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						metrics.addAll(deserializer.deserialize(result))__					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,log,debug,query,metrics,for,query,service,gateway,get,address,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,metrics,add,all,deserializer,deserialize,result,executor
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1510063664;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		LOG.debug("Query metrics for {}.", queryServiceGateway.getAddress())___		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						metrics.addAll(deserializer.deserialize(result))__					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,log,debug,query,metrics,for,query,service,gateway,get,address,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,metrics,add,all,deserializer,deserialize,result,executor
MetricFetcher -> private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway);1512061052;Query the metrics from the given QueryServiceGateway.__@param queryServiceGateway to query for metrics;private void queryMetrics(final MetricQueryServiceGateway queryServiceGateway) {_		LOG.debug("Query metrics for {}.", queryServiceGateway.getAddress())___		queryServiceGateway_			.queryMetrics(timeout)_			.whenCompleteAsync(_				(MetricDumpSerialization.MetricSerializationResult result, Throwable t) -> {_					if (t != null) {_						LOG.debug("Fetching metrics failed.", t)__					} else {_						metrics.addAll(deserializer.deserialize(result))__					}_				},_				executor)__	};query,the,metrics,from,the,given,query,service,gateway,param,query,service,gateway,to,query,for,metrics;private,void,query,metrics,final,metric,query,service,gateway,query,service,gateway,log,debug,query,metrics,for,query,service,gateway,get,address,query,service,gateway,query,metrics,timeout,when,complete,async,metric,dump,serialization,metric,serialization,result,result,throwable,t,if,t,null,log,debug,fetching,metrics,failed,t,else,metrics,add,all,deserializer,deserialize,result,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1505860824;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1506376022;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1509028917;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1509547680;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		LOG.debug("Retrieve metric query service gateway for {}", queryServicePath)___		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,log,debug,retrieve,metric,query,service,gateway,for,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1509547920;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		LOG.debug("Retrieve metric query service gateway for {}", queryServicePath)___		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,log,debug,retrieve,metric,query,service,gateway,for,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1510063664;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		LOG.debug("Retrieve metric query service gateway for {}", queryServicePath)___		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,log,debug,retrieve,metric,query,service,gateway,for,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1510063664;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		LOG.debug("Retrieve metric query service gateway for {}", queryServicePath)___		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,log,debug,retrieve,metric,query,service,gateway,for,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> private void retrieveAndQueryMetrics(String queryServicePath);1512061052;Retrieves and queries the specified QueryServiceGateway.__@param queryServicePath specifying the QueryServiceGateway;private void retrieveAndQueryMetrics(String queryServicePath) {_		LOG.debug("Retrieve metric query service gateway for {}", queryServicePath)___		final CompletableFuture<MetricQueryServiceGateway> queryServiceGatewayFuture = queryServiceRetriever.retrieveService(queryServicePath)___		queryServiceGatewayFuture.whenCompleteAsync(_			(MetricQueryServiceGateway queryServiceGateway, Throwable t) -> {_				if (t != null) {_					LOG.debug("Could not retrieve QueryServiceGateway.", t)__				} else {_					queryMetrics(queryServiceGateway)__				}_			},_			executor)__	};retrieves,and,queries,the,specified,query,service,gateway,param,query,service,path,specifying,the,query,service,gateway;private,void,retrieve,and,query,metrics,string,query,service,path,log,debug,retrieve,metric,query,service,gateway,for,query,service,path,final,completable,future,metric,query,service,gateway,query,service,gateway,future,query,service,retriever,retrieve,service,query,service,path,query,service,gateway,future,when,complete,async,metric,query,service,gateway,query,service,gateway,throwable,t,if,t,null,log,debug,could,not,retrieve,query,service,gateway,t,else,query,metrics,query,service,gateway,executor
MetricFetcher -> public MetricStore getMetricStore();1505860824;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public MetricStore getMetricStore();1506376022;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public MetricStore getMetricStore();1509028917;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public MetricStore getMetricStore();1509547680;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public MetricStore getMetricStore();1509547920;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public MetricStore getMetricStore();1510063664;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public MetricStore getMetricStore();1510063664;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public MetricStore getMetricStore();1512061052;Returns the MetricStore containing all stored metrics.__@return MetricStore containing all stored metrics_;public MetricStore getMetricStore() {_		return metrics__	};returns,the,metric,store,containing,all,stored,metrics,return,metric,store,containing,all,stored,metrics;public,metric,store,get,metric,store,return,metrics
MetricFetcher -> public void update();1505860824;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
MetricFetcher -> public void update();1506376022;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
MetricFetcher -> public void update();1509028917;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
MetricFetcher -> public void update();1509547680;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
MetricFetcher -> public void update();1509547920;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
MetricFetcher -> public void update();1510063664;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
MetricFetcher -> public void update();1510063664;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
MetricFetcher -> public void update();1512061052;This method can be used to signal this MetricFetcher that the metrics are still in use and should be updated.;public void update() {_		synchronized (this) {_			long currentTime = System.currentTimeMillis()__			if (currentTime - lastUpdateTime > 10000) { _				lastUpdateTime = currentTime__				fetchMetrics()__			}_		}_	};this,method,can,be,used,to,signal,this,metric,fetcher,that,the,metrics,are,still,in,use,and,should,be,updated;public,void,update,synchronized,this,long,current,time,system,current,time,millis,if,current,time,last,update,time,10000,last,update,time,current,time,fetch,metrics
