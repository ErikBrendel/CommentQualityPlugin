# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractRecordReader -> @SuppressWarnings("unchecked") 	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories);1464188671;Creates a new AbstractRecordReader that de-serializes records from the given input gate and_can spill partial records to disk, if they grow large.__@param inputGate The input gate to read from._@param tmpDirectories The temp directories. USed for spilling if the reader concurrently_reconstructs multiple large records.;@SuppressWarnings("unchecked")_	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories) {_		super(inputGate)___		_		this.recordDeserializers = new SpillingAdaptiveSpanningRecordDeserializer[inputGate.getNumberOfInputChannels()]__		for (int i = 0_ i < recordDeserializers.length_ i++) {_			recordDeserializers[i] = new SpillingAdaptiveSpanningRecordDeserializer<T>(tmpDirectories)__		}_	};creates,a,new,abstract,record,reader,that,de,serializes,records,from,the,given,input,gate,and,can,spill,partial,records,to,disk,if,they,grow,large,param,input,gate,the,input,gate,to,read,from,param,tmp,directories,the,temp,directories,used,for,spilling,if,the,reader,concurrently,reconstructs,multiple,large,records;suppress,warnings,unchecked,protected,abstract,record,reader,input,gate,input,gate,string,tmp,directories,super,input,gate,this,record,deserializers,new,spilling,adaptive,spanning,record,deserializer,input,gate,get,number,of,input,channels,for,int,i,0,i,record,deserializers,length,i,record,deserializers,i,new,spilling,adaptive,spanning,record,deserializer,t,tmp,directories
AbstractRecordReader -> @SuppressWarnings("unchecked") 	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories);1464773080;Creates a new AbstractRecordReader that de-serializes records from the given input gate and_can spill partial records to disk, if they grow large.__@param inputGate The input gate to read from._@param tmpDirectories The temp directories. USed for spilling if the reader concurrently_reconstructs multiple large records.;@SuppressWarnings("unchecked")_	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories) {_		super(inputGate)___		_		this.recordDeserializers = new SpillingAdaptiveSpanningRecordDeserializer[inputGate.getNumberOfInputChannels()]__		for (int i = 0_ i < recordDeserializers.length_ i++) {_			recordDeserializers[i] = new SpillingAdaptiveSpanningRecordDeserializer<T>(tmpDirectories)__		}_	};creates,a,new,abstract,record,reader,that,de,serializes,records,from,the,given,input,gate,and,can,spill,partial,records,to,disk,if,they,grow,large,param,input,gate,the,input,gate,to,read,from,param,tmp,directories,the,temp,directories,used,for,spilling,if,the,reader,concurrently,reconstructs,multiple,large,records;suppress,warnings,unchecked,protected,abstract,record,reader,input,gate,input,gate,string,tmp,directories,super,input,gate,this,record,deserializers,new,spilling,adaptive,spanning,record,deserializer,input,gate,get,number,of,input,channels,for,int,i,0,i,record,deserializers,length,i,record,deserializers,i,new,spilling,adaptive,spanning,record,deserializer,t,tmp,directories
AbstractRecordReader -> @SuppressWarnings("unchecked") 	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories);1477919825;Creates a new AbstractRecordReader that de-serializes records from the given input gate and_can spill partial records to disk, if they grow large.__@param inputGate The input gate to read from._@param tmpDirectories The temp directories. USed for spilling if the reader concurrently_reconstructs multiple large records.;@SuppressWarnings("unchecked")_	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories) {_		super(inputGate)___		_		this.recordDeserializers = new SpillingAdaptiveSpanningRecordDeserializer[inputGate.getNumberOfInputChannels()]__		for (int i = 0_ i < recordDeserializers.length_ i++) {_			recordDeserializers[i] = new SpillingAdaptiveSpanningRecordDeserializer<T>(tmpDirectories)__		}_	};creates,a,new,abstract,record,reader,that,de,serializes,records,from,the,given,input,gate,and,can,spill,partial,records,to,disk,if,they,grow,large,param,input,gate,the,input,gate,to,read,from,param,tmp,directories,the,temp,directories,used,for,spilling,if,the,reader,concurrently,reconstructs,multiple,large,records;suppress,warnings,unchecked,protected,abstract,record,reader,input,gate,input,gate,string,tmp,directories,super,input,gate,this,record,deserializers,new,spilling,adaptive,spanning,record,deserializer,input,gate,get,number,of,input,channels,for,int,i,0,i,record,deserializers,length,i,record,deserializers,i,new,spilling,adaptive,spanning,record,deserializer,t,tmp,directories
AbstractRecordReader -> @SuppressWarnings("unchecked") 	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories);1504538512;Creates a new AbstractRecordReader that de-serializes records from the given input gate and_can spill partial records to disk, if they grow large.__@param inputGate The input gate to read from._@param tmpDirectories The temp directories. USed for spilling if the reader concurrently_reconstructs multiple large records.;@SuppressWarnings("unchecked")_	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories) {_		super(inputGate)___		_		this.recordDeserializers = new SpillingAdaptiveSpanningRecordDeserializer[inputGate.getNumberOfInputChannels()]__		for (int i = 0_ i < recordDeserializers.length_ i++) {_			recordDeserializers[i] = new SpillingAdaptiveSpanningRecordDeserializer<T>(tmpDirectories)__		}_	};creates,a,new,abstract,record,reader,that,de,serializes,records,from,the,given,input,gate,and,can,spill,partial,records,to,disk,if,they,grow,large,param,input,gate,the,input,gate,to,read,from,param,tmp,directories,the,temp,directories,used,for,spilling,if,the,reader,concurrently,reconstructs,multiple,large,records;suppress,warnings,unchecked,protected,abstract,record,reader,input,gate,input,gate,string,tmp,directories,super,input,gate,this,record,deserializers,new,spilling,adaptive,spanning,record,deserializer,input,gate,get,number,of,input,channels,for,int,i,0,i,record,deserializers,length,i,record,deserializers,i,new,spilling,adaptive,spanning,record,deserializer,t,tmp,directories
AbstractRecordReader -> @SuppressWarnings("unchecked") 	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories);1515534998;Creates a new AbstractRecordReader that de-serializes records from the given input gate and_can spill partial records to disk, if they grow large.__@param inputGate The input gate to read from._@param tmpDirectories The temp directories. USed for spilling if the reader concurrently_reconstructs multiple large records.;@SuppressWarnings("unchecked")_	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories) {_		super(inputGate)___		_		this.recordDeserializers = new SpillingAdaptiveSpanningRecordDeserializer[inputGate.getNumberOfInputChannels()]__		for (int i = 0_ i < recordDeserializers.length_ i++) {_			recordDeserializers[i] = new SpillingAdaptiveSpanningRecordDeserializer<T>(tmpDirectories)__		}_	};creates,a,new,abstract,record,reader,that,de,serializes,records,from,the,given,input,gate,and,can,spill,partial,records,to,disk,if,they,grow,large,param,input,gate,the,input,gate,to,read,from,param,tmp,directories,the,temp,directories,used,for,spilling,if,the,reader,concurrently,reconstructs,multiple,large,records;suppress,warnings,unchecked,protected,abstract,record,reader,input,gate,input,gate,string,tmp,directories,super,input,gate,this,record,deserializers,new,spilling,adaptive,spanning,record,deserializer,input,gate,get,number,of,input,channels,for,int,i,0,i,record,deserializers,length,i,record,deserializers,i,new,spilling,adaptive,spanning,record,deserializer,t,tmp,directories
AbstractRecordReader -> @SuppressWarnings("unchecked") 	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories);1516959754;Creates a new AbstractRecordReader that de-serializes records from the given input gate and_can spill partial records to disk, if they grow large.__@param inputGate The input gate to read from._@param tmpDirectories The temp directories. USed for spilling if the reader concurrently_reconstructs multiple large records.;@SuppressWarnings("unchecked")_	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories) {_		super(inputGate)___		_		this.recordDeserializers = new SpillingAdaptiveSpanningRecordDeserializer[inputGate.getNumberOfInputChannels()]__		for (int i = 0_ i < recordDeserializers.length_ i++) {_			recordDeserializers[i] = new SpillingAdaptiveSpanningRecordDeserializer<T>(tmpDirectories)__		}_	};creates,a,new,abstract,record,reader,that,de,serializes,records,from,the,given,input,gate,and,can,spill,partial,records,to,disk,if,they,grow,large,param,input,gate,the,input,gate,to,read,from,param,tmp,directories,the,temp,directories,used,for,spilling,if,the,reader,concurrently,reconstructs,multiple,large,records;suppress,warnings,unchecked,protected,abstract,record,reader,input,gate,input,gate,string,tmp,directories,super,input,gate,this,record,deserializers,new,spilling,adaptive,spanning,record,deserializer,input,gate,get,number,of,input,channels,for,int,i,0,i,record,deserializers,length,i,record,deserializers,i,new,spilling,adaptive,spanning,record,deserializer,t,tmp,directories
AbstractRecordReader -> @SuppressWarnings("unchecked") 	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories);1517490822;Creates a new AbstractRecordReader that de-serializes records from the given input gate and_can spill partial records to disk, if they grow large.__@param inputGate The input gate to read from._@param tmpDirectories The temp directories. USed for spilling if the reader concurrently_reconstructs multiple large records.;@SuppressWarnings("unchecked")_	protected AbstractRecordReader(InputGate inputGate, String[] tmpDirectories) {_		super(inputGate)___		_		this.recordDeserializers = new SpillingAdaptiveSpanningRecordDeserializer[inputGate.getNumberOfInputChannels()]__		for (int i = 0_ i < recordDeserializers.length_ i++) {_			recordDeserializers[i] = new SpillingAdaptiveSpanningRecordDeserializer<T>(tmpDirectories)__		}_	};creates,a,new,abstract,record,reader,that,de,serializes,records,from,the,given,input,gate,and,can,spill,partial,records,to,disk,if,they,grow,large,param,input,gate,the,input,gate,to,read,from,param,tmp,directories,the,temp,directories,used,for,spilling,if,the,reader,concurrently,reconstructs,multiple,large,records;suppress,warnings,unchecked,protected,abstract,record,reader,input,gate,input,gate,string,tmp,directories,super,input,gate,this,record,deserializers,new,spilling,adaptive,spanning,record,deserializer,input,gate,get,number,of,input,channels,for,int,i,0,i,record,deserializers,length,i,record,deserializers,i,new,spilling,adaptive,spanning,record,deserializer,t,tmp,directories
