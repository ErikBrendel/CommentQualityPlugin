# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractHeapMergingState -> protected AbstractHeapMergingState( 			SD stateDesc, 			StateTable<K, N, SV> stateTable, 			TypeSerializer<K> keySerializer, 			TypeSerializer<N> namespaceSerializer);1489685642;Creates a new key/value state for the given hash map of key/value pairs.__@param stateDesc The state identifier for the state. This contains name_and can create a default state value._@param stateTable The state tab_e to use in this kev/value state. May contain initial state.;protected AbstractHeapMergingState(_			SD stateDesc,_			StateTable<K, N, SV> stateTable,_			TypeSerializer<K> keySerializer,_			TypeSerializer<N> namespaceSerializer) {__		super(stateDesc, stateTable, keySerializer, namespaceSerializer)__		this.mergeTransformation = new MergeTransformation()__	};creates,a,new,key,value,state,for,the,given,hash,map,of,key,value,pairs,param,state,desc,the,state,identifier,for,the,state,this,contains,name,and,can,create,a,default,state,value,param,state,table,the,state,tab,e,to,use,in,this,kev,value,state,may,contain,initial,state;protected,abstract,heap,merging,state,sd,state,desc,state,table,k,n,sv,state,table,type,serializer,k,key,serializer,type,serializer,n,namespace,serializer,super,state,desc,state,table,key,serializer,namespace,serializer,this,merge,transformation,new,merge,transformation
AbstractHeapMergingState -> protected AbstractHeapMergingState( 			SD stateDesc, 			StateTable<K, N, SV> stateTable, 			TypeSerializer<K> keySerializer, 			TypeSerializer<N> namespaceSerializer);1522337739;Creates a new key/value state for the given hash map of key/value pairs.__@param stateDesc The state identifier for the state. This contains name_and can create a default state value._@param stateTable The state tab_e to use in this kev/value state. May contain initial state.;protected AbstractHeapMergingState(_			SD stateDesc,_			StateTable<K, N, SV> stateTable,_			TypeSerializer<K> keySerializer,_			TypeSerializer<N> namespaceSerializer) {__		super(stateDesc, stateTable, keySerializer, namespaceSerializer)__		this.mergeTransformation = new MergeTransformation()__	};creates,a,new,key,value,state,for,the,given,hash,map,of,key,value,pairs,param,state,desc,the,state,identifier,for,the,state,this,contains,name,and,can,create,a,default,state,value,param,state,table,the,state,tab,e,to,use,in,this,kev,value,state,may,contain,initial,state;protected,abstract,heap,merging,state,sd,state,desc,state,table,k,n,sv,state,table,type,serializer,k,key,serializer,type,serializer,n,namespace,serializer,super,state,desc,state,table,key,serializer,namespace,serializer,this,merge,transformation,new,merge,transformation
AbstractHeapMergingState -> protected AbstractHeapMergingState( 			StateTable<K, N, SV> stateTable, 			TypeSerializer<K> keySerializer, 			TypeSerializer<SV> valueSerializer, 			TypeSerializer<N> namespaceSerializer, 			SV defaultValue);1524906327;Creates a new key/value state for the given hash map of key/value pairs.__@param stateTable The state table for which this state is associated to._@param keySerializer The serializer for the keys._@param valueSerializer The serializer for the state._@param namespaceSerializer The serializer for the namespace._@param defaultValue The default value for the state.;protected AbstractHeapMergingState(_			StateTable<K, N, SV> stateTable,_			TypeSerializer<K> keySerializer,_			TypeSerializer<SV> valueSerializer,_			TypeSerializer<N> namespaceSerializer,_			SV defaultValue) {__		super(stateTable, keySerializer, valueSerializer, namespaceSerializer, defaultValue)__		this.mergeTransformation = new MergeTransformation()__	};creates,a,new,key,value,state,for,the,given,hash,map,of,key,value,pairs,param,state,table,the,state,table,for,which,this,state,is,associated,to,param,key,serializer,the,serializer,for,the,keys,param,value,serializer,the,serializer,for,the,state,param,namespace,serializer,the,serializer,for,the,namespace,param,default,value,the,default,value,for,the,state;protected,abstract,heap,merging,state,state,table,k,n,sv,state,table,type,serializer,k,key,serializer,type,serializer,sv,value,serializer,type,serializer,n,namespace,serializer,sv,default,value,super,state,table,key,serializer,value,serializer,namespace,serializer,default,value,this,merge,transformation,new,merge,transformation
AbstractHeapMergingState -> protected AbstractHeapMergingState( 			StateTable<K, N, SV> stateTable, 			TypeSerializer<K> keySerializer, 			TypeSerializer<SV> valueSerializer, 			TypeSerializer<N> namespaceSerializer, 			SV defaultValue);1528969216;Creates a new key/value state for the given hash map of key/value pairs.__@param stateTable The state table for which this state is associated to._@param keySerializer The serializer for the keys._@param valueSerializer The serializer for the state._@param namespaceSerializer The serializer for the namespace._@param defaultValue The default value for the state.;protected AbstractHeapMergingState(_			StateTable<K, N, SV> stateTable,_			TypeSerializer<K> keySerializer,_			TypeSerializer<SV> valueSerializer,_			TypeSerializer<N> namespaceSerializer,_			SV defaultValue) {__		super(stateTable, keySerializer, valueSerializer, namespaceSerializer, defaultValue)__		this.mergeTransformation = new MergeTransformation()__	};creates,a,new,key,value,state,for,the,given,hash,map,of,key,value,pairs,param,state,table,the,state,table,for,which,this,state,is,associated,to,param,key,serializer,the,serializer,for,the,keys,param,value,serializer,the,serializer,for,the,state,param,namespace,serializer,the,serializer,for,the,namespace,param,default,value,the,default,value,for,the,state;protected,abstract,heap,merging,state,state,table,k,n,sv,state,table,type,serializer,k,key,serializer,type,serializer,sv,value,serializer,type,serializer,n,namespace,serializer,sv,default,value,super,state,table,key,serializer,value,serializer,namespace,serializer,default,value,this,merge,transformation,new,merge,transformation
