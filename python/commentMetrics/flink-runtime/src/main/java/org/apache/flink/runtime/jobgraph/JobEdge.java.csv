# id;timestamp;commentText;codeText;commentWords;codeWords
JobEdge -> public AbstractJobVertex getConnectedVertex();1405024514;Returns the vertex this edge is connected to.__@return the vertex this edge is connected to;public AbstractJobVertex getConnectedVertex() {_		return this.connectedVertex__	};returns,the,vertex,this,edge,is,connected,to,return,the,vertex,this,edge,is,connected,to;public,abstract,job,vertex,get,connected,vertex,return,this,connected,vertex
JobEdge -> public AbstractJobVertex getConnectedVertex();1405090423;Returns the vertex this edge is connected to.__@return the vertex this edge is connected to;public AbstractJobVertex getConnectedVertex() {_		return this.connectedVertex__	};returns,the,vertex,this,edge,is,connected,to,return,the,vertex,this,edge,is,connected,to;public,abstract,job,vertex,get,connected,vertex,return,this,connected,vertex
JobEdge -> public AbstractJobVertex getConnectedVertex();1411236168;Returns the vertex this edge is connected to.__@return the vertex this edge is connected to;public AbstractJobVertex getConnectedVertex() {_		return this.connectedVertex__	};returns,the,vertex,this,edge,is,connected,to,return,the,vertex,this,edge,is,connected,to;public,abstract,job,vertex,get,connected,vertex,return,this,connected,vertex
JobEdge -> public JobEdge(IntermediateDataSet source, AbstractJobVertex target, DistributionPattern distributionPattern);1411236168;Constructs a new job edge, that connects an intermediate result to a consumer task.__@param source The data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSet source, AbstractJobVertex target, DistributionPattern distributionPattern) {_		if (source == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.source = source__		this.sourceId = source.getId()__	};constructs,a,new,job,edge,that,connects,an,intermediate,result,to,a,consumer,task,param,source,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,source,abstract,job,vertex,target,distribution,pattern,distribution,pattern,if,source,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,source,this,source,id,source,get,id
JobEdge -> public JobEdge(IntermediateDataSet source, AbstractJobVertex target, DistributionPattern distributionPattern);1411473593;Constructs a new job edge, that connects an intermediate result to a consumer task.__@param source The data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSet source, AbstractJobVertex target, DistributionPattern distributionPattern) {_		if (source == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.source = source__		this.sourceId = source.getId()__	};constructs,a,new,job,edge,that,connects,an,intermediate,result,to,a,consumer,task,param,source,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,source,abstract,job,vertex,target,distribution,pattern,distribution,pattern,if,source,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,source,this,source,id,source,get,id
JobEdge -> public JobEdge(final AbstractJobVertex connectedVertex, final ChannelType channelType, 			final int indexOfInputGate, final DistributionPattern distributionPattern);1405024514;Constructs a new job edge.__@param connectedVertex_the vertex this edge should connect to_@param channelType_the channel type this edge should be translated to at runtime_@param compressionLevel_the compression level the corresponding channel should have at runtime_@param indexOfInputGate_index of the consuming task's input gate that this edge connects to;public JobEdge(final AbstractJobVertex connectedVertex, final ChannelType channelType,_			final int indexOfInputGate, final DistributionPattern distributionPattern) {_		this.connectedVertex = connectedVertex__		this.channelType = channelType__		this.indexOfInputGate = indexOfInputGate__		this.distributionPattern = distributionPattern__	};constructs,a,new,job,edge,param,connected,vertex,the,vertex,this,edge,should,connect,to,param,channel,type,the,channel,type,this,edge,should,be,translated,to,at,runtime,param,compression,level,the,compression,level,the,corresponding,channel,should,have,at,runtime,param,index,of,input,gate,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to;public,job,edge,final,abstract,job,vertex,connected,vertex,final,channel,type,channel,type,final,int,index,of,input,gate,final,distribution,pattern,distribution,pattern,this,connected,vertex,connected,vertex,this,channel,type,channel,type,this,index,of,input,gate,index,of,input,gate,this,distribution,pattern,distribution,pattern
JobEdge -> public JobEdge(final AbstractJobVertex connectedVertex, final ChannelType channelType, 			final int indexOfInputGate, final DistributionPattern distributionPattern);1405090423;Constructs a new job edge.__@param connectedVertex_the vertex this edge should connect to_@param channelType_the channel type this edge should be translated to at runtime_@param compressionLevel_the compression level the corresponding channel should have at runtime_@param indexOfInputGate_index of the consuming task's input gate that this edge connects to;public JobEdge(final AbstractJobVertex connectedVertex, final ChannelType channelType,_			final int indexOfInputGate, final DistributionPattern distributionPattern) {_		this.connectedVertex = connectedVertex__		this.channelType = channelType__		this.indexOfInputGate = indexOfInputGate__		this.distributionPattern = distributionPattern__	};constructs,a,new,job,edge,param,connected,vertex,the,vertex,this,edge,should,connect,to,param,channel,type,the,channel,type,this,edge,should,be,translated,to,at,runtime,param,compression,level,the,compression,level,the,corresponding,channel,should,have,at,runtime,param,index,of,input,gate,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to;public,job,edge,final,abstract,job,vertex,connected,vertex,final,channel,type,channel,type,final,int,index,of,input,gate,final,distribution,pattern,distribution,pattern,this,connected,vertex,connected,vertex,this,channel,type,channel,type,this,index,of,input,gate,index,of,input,gate,this,distribution,pattern,distribution,pattern
JobEdge -> public JobEdge(final AbstractJobVertex connectedVertex, final ChannelType channelType, 			final int indexOfInputGate, final DistributionPattern distributionPattern);1411236168;Constructs a new job edge.__@param connectedVertex_the vertex this edge should connect to_@param channelType_the channel type this edge should be translated to at runtime_@param compressionLevel_the compression level the corresponding channel should have at runtime_@param indexOfInputGate_index of the consuming task's input gate that this edge connects to;public JobEdge(final AbstractJobVertex connectedVertex, final ChannelType channelType,_			final int indexOfInputGate, final DistributionPattern distributionPattern) {_		this.connectedVertex = connectedVertex__		this.channelType = channelType__		this.indexOfInputGate = indexOfInputGate__		this.distributionPattern = distributionPattern__	};constructs,a,new,job,edge,param,connected,vertex,the,vertex,this,edge,should,connect,to,param,channel,type,the,channel,type,this,edge,should,be,translated,to,at,runtime,param,compression,level,the,compression,level,the,corresponding,channel,should,have,at,runtime,param,index,of,input,gate,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to;public,job,edge,final,abstract,job,vertex,connected,vertex,final,channel,type,channel,type,final,int,index,of,input,gate,final,distribution,pattern,distribution,pattern,this,connected,vertex,connected,vertex,this,channel,type,channel,type,this,index,of,input,gate,index,of,input,gate,this,distribution,pattern,distribution,pattern
JobEdge -> public IntermediateDataSet getSource();1411236168;Returns the data set at the source of the edge. May be null, if the edge refers to the source via an ID_and has not been connected.__@return The data set at the source of the edge;public IntermediateDataSet getSource() {_		return source__	};returns,the,data,set,at,the,source,of,the,edge,may,be,null,if,the,edge,refers,to,the,source,via,an,id,and,has,not,been,connected,return,the,data,set,at,the,source,of,the,edge;public,intermediate,data,set,get,source,return,source
JobEdge -> public IntermediateDataSet getSource();1411473593;Returns the data set at the source of the edge. May be null, if the edge refers to the source via an ID_and has not been connected.__@return The data set at the source of the edge;public IntermediateDataSet getSource() {_		return source__	};returns,the,data,set,at,the,source,of,the,edge,may,be,null,if,the,edge,refers,to,the,source,via,an,id,and,has,not,been,connected,return,the,data,set,at,the,source,of,the,edge;public,intermediate,data,set,get,source,return,source
JobEdge -> public IntermediateDataSet getSource();1434467925;Returns the data set at the source of the edge. May be null, if the edge refers to the source via an ID_and has not been connected.__@return The data set at the source of the edge;public IntermediateDataSet getSource() {_		return source__	};returns,the,data,set,at,the,source,of,the,edge,may,be,null,if,the,edge,refers,to,the,source,via,an,id,and,has,not,been,connected,return,the,data,set,at,the,source,of,the,edge;public,intermediate,data,set,get,source,return,source
JobEdge -> public IntermediateDataSet getSource();1442492509;Returns the data set at the source of the edge. May be null, if the edge refers to the source via an ID_and has not been connected.__@return The data set at the source of the edge;public IntermediateDataSet getSource() {_		return source__	};returns,the,data,set,at,the,source,of,the,edge,may,be,null,if,the,edge,refers,to,the,source,via,an,id,and,has,not,been,connected,return,the,data,set,at,the,source,of,the,edge;public,intermediate,data,set,get,source,return,source
JobEdge -> public ChannelType getChannelType();1405024514;Returns the channel type assigned to this edge.__@return the channel type assigned to this edge;public ChannelType getChannelType() {_		return this.channelType__	};returns,the,channel,type,assigned,to,this,edge,return,the,channel,type,assigned,to,this,edge;public,channel,type,get,channel,type,return,this,channel,type
JobEdge -> public ChannelType getChannelType();1405090423;Returns the channel type assigned to this edge.__@return the channel type assigned to this edge;public ChannelType getChannelType() {_		return this.channelType__	};returns,the,channel,type,assigned,to,this,edge,return,the,channel,type,assigned,to,this,edge;public,channel,type,get,channel,type,return,this,channel,type
JobEdge -> public ChannelType getChannelType();1411236168;Returns the channel type assigned to this edge.__@return the channel type assigned to this edge;public ChannelType getChannelType() {_		return this.channelType__	};returns,the,channel,type,assigned,to,this,edge,return,the,channel,type,assigned,to,this,edge;public,channel,type,get,channel,type,return,this,channel,type
JobEdge -> public DistributionPattern getDistributionPattern();1405024514;Returns the distribution pattern used for this edge.__@return;public DistributionPattern getDistributionPattern(){_		return this.distributionPattern__	};returns,the,distribution,pattern,used,for,this,edge,return;public,distribution,pattern,get,distribution,pattern,return,this,distribution,pattern
JobEdge -> public DistributionPattern getDistributionPattern();1405090423;Returns the distribution pattern used for this edge.__@return;public DistributionPattern getDistributionPattern(){_		return this.distributionPattern__	};returns,the,distribution,pattern,used,for,this,edge,return;public,distribution,pattern,get,distribution,pattern,return,this,distribution,pattern
JobEdge -> public DistributionPattern getDistributionPattern();1411236168;Returns the distribution pattern used for this edge.__@return;public DistributionPattern getDistributionPattern(){_		return this.distributionPattern__	};returns,the,distribution,pattern,used,for,this,edge,return;public,distribution,pattern,get,distribution,pattern,return,this,distribution,pattern
JobEdge -> public DistributionPattern getDistributionPattern();1411236168;Returns the distribution pattern used for this edge.__@return The distribution pattern used for this edge.;public DistributionPattern getDistributionPattern(){_		return this.distributionPattern__	};returns,the,distribution,pattern,used,for,this,edge,return,the,distribution,pattern,used,for,this,edge;public,distribution,pattern,get,distribution,pattern,return,this,distribution,pattern
JobEdge -> public DistributionPattern getDistributionPattern();1411473593;Returns the distribution pattern used for this edge.__@return The distribution pattern used for this edge.;public DistributionPattern getDistributionPattern(){_		return this.distributionPattern__	};returns,the,distribution,pattern,used,for,this,edge,return,the,distribution,pattern,used,for,this,edge;public,distribution,pattern,get,distribution,pattern,return,this,distribution,pattern
JobEdge -> public DistributionPattern getDistributionPattern();1434467925;Returns the distribution pattern used for this edge.__@return The distribution pattern used for this edge.;public DistributionPattern getDistributionPattern(){_		return this.distributionPattern__	};returns,the,distribution,pattern,used,for,this,edge,return,the,distribution,pattern,used,for,this,edge;public,distribution,pattern,get,distribution,pattern,return,this,distribution,pattern
JobEdge -> public DistributionPattern getDistributionPattern();1442492509;Returns the distribution pattern used for this edge.__@return The distribution pattern used for this edge.;public DistributionPattern getDistributionPattern(){_		return this.distributionPattern__	};returns,the,distribution,pattern,used,for,this,edge,return,the,distribution,pattern,used,for,this,edge;public,distribution,pattern,get,distribution,pattern,return,this,distribution,pattern
JobEdge -> public JobEdge(IntermediateDataSetID sourceId, JobVertex target, DistributionPattern distributionPattern);1434467925;Constructs a new job edge that refers to an intermediate result via the Id, rather than directly through_the intermediate data set structure.__@param sourceId The id of the data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSetID sourceId, JobVertex target, DistributionPattern distributionPattern) {_		if (sourceId == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.sourceId = sourceId__	};constructs,a,new,job,edge,that,refers,to,an,intermediate,result,via,the,id,rather,than,directly,through,the,intermediate,data,set,structure,param,source,id,the,id,of,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,id,source,id,job,vertex,target,distribution,pattern,distribution,pattern,if,source,id,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,id,source,id
JobEdge -> public JobEdge(IntermediateDataSetID sourceId, JobVertex target, DistributionPattern distributionPattern);1442492509;Constructs a new job edge that refers to an intermediate result via the Id, rather than directly through_the intermediate data set structure.__@param sourceId The id of the data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSetID sourceId, JobVertex target, DistributionPattern distributionPattern) {_		if (sourceId == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.sourceId = sourceId__	};constructs,a,new,job,edge,that,refers,to,an,intermediate,result,via,the,id,rather,than,directly,through,the,intermediate,data,set,structure,param,source,id,the,id,of,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,id,source,id,job,vertex,target,distribution,pattern,distribution,pattern,if,source,id,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,id,source,id
JobEdge -> public JobVertex getTarget();1434467925;Returns the vertex connected to this edge.__@return The vertex connected to this edge.;public JobVertex getTarget() {_		return target__	};returns,the,vertex,connected,to,this,edge,return,the,vertex,connected,to,this,edge;public,job,vertex,get,target,return,target
JobEdge -> public JobVertex getTarget();1442492509;Returns the vertex connected to this edge.__@return The vertex connected to this edge.;public JobVertex getTarget() {_		return target__	};returns,the,vertex,connected,to,this,edge,return,the,vertex,connected,to,this,edge;public,job,vertex,get,target,return,target
JobEdge -> public AbstractJobVertex getTarget();1411236168;Returns the vertex connected to this edge.__@return The vertex connected to this edge.;public AbstractJobVertex getTarget() {_		return target__	};returns,the,vertex,connected,to,this,edge,return,the,vertex,connected,to,this,edge;public,abstract,job,vertex,get,target,return,target
JobEdge -> public AbstractJobVertex getTarget();1411473593;Returns the vertex connected to this edge.__@return The vertex connected to this edge.;public AbstractJobVertex getTarget() {_		return target__	};returns,the,vertex,connected,to,this,edge,return,the,vertex,connected,to,this,edge;public,abstract,job,vertex,get,target,return,target
JobEdge -> public IntermediateDataSetID getSourceId();1411236168;Gets the ID of the consumed data set.__@return The ID of the consumed data set.;public IntermediateDataSetID getSourceId() {_		return sourceId__	};gets,the,id,of,the,consumed,data,set,return,the,id,of,the,consumed,data,set;public,intermediate,data,set,id,get,source,id,return,source,id
JobEdge -> public IntermediateDataSetID getSourceId();1411473593;Gets the ID of the consumed data set.__@return The ID of the consumed data set.;public IntermediateDataSetID getSourceId() {_		return sourceId__	};gets,the,id,of,the,consumed,data,set,return,the,id,of,the,consumed,data,set;public,intermediate,data,set,id,get,source,id,return,source,id
JobEdge -> public IntermediateDataSetID getSourceId();1434467925;Gets the ID of the consumed data set.__@return The ID of the consumed data set.;public IntermediateDataSetID getSourceId() {_		return sourceId__	};gets,the,id,of,the,consumed,data,set,return,the,id,of,the,consumed,data,set;public,intermediate,data,set,id,get,source,id,return,source,id
JobEdge -> public IntermediateDataSetID getSourceId();1442492509;Gets the ID of the consumed data set.__@return The ID of the consumed data set.;public IntermediateDataSetID getSourceId() {_		return sourceId__	};gets,the,id,of,the,consumed,data,set,return,the,id,of,the,consumed,data,set;public,intermediate,data,set,id,get,source,id,return,source,id
JobEdge -> public JobEdge(IntermediateDataSet source, JobVertex target, DistributionPattern distributionPattern);1434467925;Constructs a new job edge, that connects an intermediate result to a consumer task.__@param source The data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSet source, JobVertex target, DistributionPattern distributionPattern) {_		if (source == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.source = source__		this.sourceId = source.getId()__	};constructs,a,new,job,edge,that,connects,an,intermediate,result,to,a,consumer,task,param,source,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,source,job,vertex,target,distribution,pattern,distribution,pattern,if,source,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,source,this,source,id,source,get,id
JobEdge -> public JobEdge(IntermediateDataSet source, JobVertex target, DistributionPattern distributionPattern);1442492509;Constructs a new job edge, that connects an intermediate result to a consumer task.__@param source The data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSet source, JobVertex target, DistributionPattern distributionPattern) {_		if (source == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.source = source__		this.sourceId = source.getId()__	};constructs,a,new,job,edge,that,connects,an,intermediate,result,to,a,consumer,task,param,source,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,source,job,vertex,target,distribution,pattern,distribution,pattern,if,source,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,source,this,source,id,source,get,id
JobEdge -> public int getIndexOfInputGate();1405024514;Returns the index of the consuming task's input gate that this edge connects to.__@return the index of the consuming task's input gate that this edge connects to;public int getIndexOfInputGate() {_		return this.indexOfInputGate__	};returns,the,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to,return,the,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to;public,int,get,index,of,input,gate,return,this,index,of,input,gate
JobEdge -> public int getIndexOfInputGate();1405090423;Returns the index of the consuming task's input gate that this edge connects to.__@return the index of the consuming task's input gate that this edge connects to;public int getIndexOfInputGate() {_		return this.indexOfInputGate__	};returns,the,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to,return,the,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to;public,int,get,index,of,input,gate,return,this,index,of,input,gate
JobEdge -> public int getIndexOfInputGate();1411236168;Returns the index of the consuming task's input gate that this edge connects to.__@return the index of the consuming task's input gate that this edge connects to;public int getIndexOfInputGate() {_		return this.indexOfInputGate__	};returns,the,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to,return,the,index,of,the,consuming,task,s,input,gate,that,this,edge,connects,to;public,int,get,index,of,input,gate,return,this,index,of,input,gate
JobEdge -> public JobEdge(IntermediateDataSetID sourceId, AbstractJobVertex target, DistributionPattern distributionPattern);1411236168;Constructs a new job edge that refers to an intermediate result via the Id, rather than directly through_the intermediate data set structure.__@param sourceId The id of the data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSetID sourceId, AbstractJobVertex target, DistributionPattern distributionPattern) {_		if (sourceId == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.sourceId = sourceId__	};constructs,a,new,job,edge,that,refers,to,an,intermediate,result,via,the,id,rather,than,directly,through,the,intermediate,data,set,structure,param,source,id,the,id,of,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,id,source,id,abstract,job,vertex,target,distribution,pattern,distribution,pattern,if,source,id,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,id,source,id
JobEdge -> public JobEdge(IntermediateDataSetID sourceId, AbstractJobVertex target, DistributionPattern distributionPattern);1411473593;Constructs a new job edge that refers to an intermediate result via the Id, rather than directly through_the intermediate data set structure.__@param sourceId The id of the data set that is at the source of this edge._@param target The operation that is at the target of this edge._@param distributionPattern The pattern that defines how the connection behaves in parallel.;public JobEdge(IntermediateDataSetID sourceId, AbstractJobVertex target, DistributionPattern distributionPattern) {_		if (sourceId == null || target == null || distributionPattern == null) {_			throw new NullPointerException()__		}_		this.target = target__		this.distributionPattern = distributionPattern__		this.sourceId = sourceId__	};constructs,a,new,job,edge,that,refers,to,an,intermediate,result,via,the,id,rather,than,directly,through,the,intermediate,data,set,structure,param,source,id,the,id,of,the,data,set,that,is,at,the,source,of,this,edge,param,target,the,operation,that,is,at,the,target,of,this,edge,param,distribution,pattern,the,pattern,that,defines,how,the,connection,behaves,in,parallel;public,job,edge,intermediate,data,set,id,source,id,abstract,job,vertex,target,distribution,pattern,distribution,pattern,if,source,id,null,target,null,distribution,pattern,null,throw,new,null,pointer,exception,this,target,target,this,distribution,pattern,distribution,pattern,this,source,id,source,id
