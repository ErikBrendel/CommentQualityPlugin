# id;timestamp;commentText;codeText;commentWords;codeWords
NettyBufferPool -> int getChunkSize();1454511937;Returns the chunk size.__@return Chunk size.;int getChunkSize() {_		return chunkSize__	};returns,the,chunk,size,return,chunk,size;int,get,chunk,size,return,chunk,size
NettyBufferPool -> int getChunkSize();1454921026;Returns the chunk size.__@return Chunk size.;int getChunkSize() {_		return chunkSize__	};returns,the,chunk,size,return,chunk,size;int,get,chunk,size,return,chunk,size
NettyBufferPool -> int getChunkSize();1464609649;Returns the chunk size.__@return Chunk size.;int getChunkSize() {_		return chunkSize__	};returns,the,chunk,size,return,chunk,size;int,get,chunk,size,return,chunk,size
NettyBufferPool -> int getChunkSize();1465394479;Returns the chunk size.__@return Chunk size.;int getChunkSize() {_		return chunkSize__	};returns,the,chunk,size,return,chunk,size;int,get,chunk,size,return,chunk,size
NettyBufferPool -> int getChunkSize();1497282291;Returns the chunk size.__@return Chunk size.;int getChunkSize() {_		return chunkSize__	};returns,the,chunk,size,return,chunk,size;int,get,chunk,size,return,chunk,size
NettyBufferPool -> int getChunkSize();1498566436;Returns the chunk size.__@return Chunk size.;int getChunkSize() {_		return chunkSize__	};returns,the,chunk,size,return,chunk,size;int,get,chunk,size,return,chunk,size
NettyBufferPool -> int getChunkSize();1503482668;Returns the chunk size.__@return Chunk size.;int getChunkSize() {_		return chunkSize__	};returns,the,chunk,size,return,chunk,size;int,get,chunk,size,return,chunk,size
NettyBufferPool -> int getNumberOfArenas();1454511937;Returns the number of arenas.__@return Number of arenas.;int getNumberOfArenas() {_		return numberOfArenas__	};returns,the,number,of,arenas,return,number,of,arenas;int,get,number,of,arenas,return,number,of,arenas
NettyBufferPool -> int getNumberOfArenas();1454921026;Returns the number of arenas.__@return Number of arenas.;int getNumberOfArenas() {_		return numberOfArenas__	};returns,the,number,of,arenas,return,number,of,arenas;int,get,number,of,arenas,return,number,of,arenas
NettyBufferPool -> int getNumberOfArenas();1464609649;Returns the number of arenas.__@return Number of arenas.;int getNumberOfArenas() {_		return numberOfArenas__	};returns,the,number,of,arenas,return,number,of,arenas;int,get,number,of,arenas,return,number,of,arenas
NettyBufferPool -> int getNumberOfArenas();1465394479;Returns the number of arenas.__@return Number of arenas.;int getNumberOfArenas() {_		return numberOfArenas__	};returns,the,number,of,arenas,return,number,of,arenas;int,get,number,of,arenas,return,number,of,arenas
NettyBufferPool -> int getNumberOfArenas();1497282291;Returns the number of arenas.__@return Number of arenas.;int getNumberOfArenas() {_		return numberOfArenas__	};returns,the,number,of,arenas,return,number,of,arenas;int,get,number,of,arenas,return,number,of,arenas
NettyBufferPool -> int getNumberOfArenas();1498566436;Returns the number of arenas.__@return Number of arenas.;int getNumberOfArenas() {_		return numberOfArenas__	};returns,the,number,of,arenas,return,number,of,arenas;int,get,number,of,arenas,return,number,of,arenas
NettyBufferPool -> int getNumberOfArenas();1503482668;Returns the number of arenas.__@return Number of arenas.;int getNumberOfArenas() {_		return numberOfArenas__	};returns,the,number,of,arenas,return,number,of,arenas;int,get,number,of,arenas,return,number,of,arenas
NettyBufferPool -> public Option<Long> getNumberOfAllocatedBytes() 			throws NoSuchFieldException, IllegalAccessException;1454511937;Returns the number of currently allocated bytes.__<p>The stats are gathered via Reflection and are mostly relevant for_debugging purposes.__@return Number of currently allocated bytes.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;public Option<Long> getNumberOfAllocatedBytes()_			throws NoSuchFieldException, IllegalAccessException {__		if (directArenas != null) {_			int numChunks = 0__			for (Object arena : directArenas) {_				numChunks += getNumberOfAllocatedChunks(arena, "qInit")__				numChunks += getNumberOfAllocatedChunks(arena, "q000")__				numChunks += getNumberOfAllocatedChunks(arena, "q025")__				numChunks += getNumberOfAllocatedChunks(arena, "q050")__				numChunks += getNumberOfAllocatedChunks(arena, "q075")__				numChunks += getNumberOfAllocatedChunks(arena, "q100")__			}__			long allocatedBytes = numChunks * chunkSize__			return Option.apply(allocatedBytes)__		} else {_			return Option.empty()__		}_	};returns,the,number,of,currently,allocated,bytes,p,the,stats,are,gathered,via,reflection,and,are,mostly,relevant,for,debugging,purposes,return,number,of,currently,allocated,bytes,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;public,option,long,get,number,of,allocated,bytes,throws,no,such,field,exception,illegal,access,exception,if,direct,arenas,null,int,num,chunks,0,for,object,arena,direct,arenas,num,chunks,get,number,of,allocated,chunks,arena,q,init,num,chunks,get,number,of,allocated,chunks,arena,q000,num,chunks,get,number,of,allocated,chunks,arena,q025,num,chunks,get,number,of,allocated,chunks,arena,q050,num,chunks,get,number,of,allocated,chunks,arena,q075,num,chunks,get,number,of,allocated,chunks,arena,q100,long,allocated,bytes,num,chunks,chunk,size,return,option,apply,allocated,bytes,else,return,option,empty
NettyBufferPool -> public Option<Long> getNumberOfAllocatedBytes() 			throws NoSuchFieldException, IllegalAccessException;1454921026;Returns the number of currently allocated bytes.__<p>The stats are gathered via Reflection and are mostly relevant for_debugging purposes.__@return Number of currently allocated bytes.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;public Option<Long> getNumberOfAllocatedBytes()_			throws NoSuchFieldException, IllegalAccessException {__		if (directArenas != null) {_			long numChunks = 0__			for (Object arena : directArenas) {_				numChunks += getNumberOfAllocatedChunks(arena, "qInit")__				numChunks += getNumberOfAllocatedChunks(arena, "q000")__				numChunks += getNumberOfAllocatedChunks(arena, "q025")__				numChunks += getNumberOfAllocatedChunks(arena, "q050")__				numChunks += getNumberOfAllocatedChunks(arena, "q075")__				numChunks += getNumberOfAllocatedChunks(arena, "q100")__			}__			long allocatedBytes = numChunks * chunkSize__			return Option.apply(allocatedBytes)__		} else {_			return Option.empty()__		}_	};returns,the,number,of,currently,allocated,bytes,p,the,stats,are,gathered,via,reflection,and,are,mostly,relevant,for,debugging,purposes,return,number,of,currently,allocated,bytes,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;public,option,long,get,number,of,allocated,bytes,throws,no,such,field,exception,illegal,access,exception,if,direct,arenas,null,long,num,chunks,0,for,object,arena,direct,arenas,num,chunks,get,number,of,allocated,chunks,arena,q,init,num,chunks,get,number,of,allocated,chunks,arena,q000,num,chunks,get,number,of,allocated,chunks,arena,q025,num,chunks,get,number,of,allocated,chunks,arena,q050,num,chunks,get,number,of,allocated,chunks,arena,q075,num,chunks,get,number,of,allocated,chunks,arena,q100,long,allocated,bytes,num,chunks,chunk,size,return,option,apply,allocated,bytes,else,return,option,empty
NettyBufferPool -> public Option<Long> getNumberOfAllocatedBytes() 			throws NoSuchFieldException, IllegalAccessException;1464609649;Returns the number of currently allocated bytes.__<p>The stats are gathered via Reflection and are mostly relevant for_debugging purposes.__@return Number of currently allocated bytes.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;public Option<Long> getNumberOfAllocatedBytes()_			throws NoSuchFieldException, IllegalAccessException {__		if (directArenas != null) {_			long numChunks = 0__			for (Object arena : directArenas) {_				numChunks += getNumberOfAllocatedChunks(arena, "qInit")__				numChunks += getNumberOfAllocatedChunks(arena, "q000")__				numChunks += getNumberOfAllocatedChunks(arena, "q025")__				numChunks += getNumberOfAllocatedChunks(arena, "q050")__				numChunks += getNumberOfAllocatedChunks(arena, "q075")__				numChunks += getNumberOfAllocatedChunks(arena, "q100")__			}__			long allocatedBytes = numChunks * chunkSize__			return Option.apply(allocatedBytes)__		} else {_			return Option.empty()__		}_	};returns,the,number,of,currently,allocated,bytes,p,the,stats,are,gathered,via,reflection,and,are,mostly,relevant,for,debugging,purposes,return,number,of,currently,allocated,bytes,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;public,option,long,get,number,of,allocated,bytes,throws,no,such,field,exception,illegal,access,exception,if,direct,arenas,null,long,num,chunks,0,for,object,arena,direct,arenas,num,chunks,get,number,of,allocated,chunks,arena,q,init,num,chunks,get,number,of,allocated,chunks,arena,q000,num,chunks,get,number,of,allocated,chunks,arena,q025,num,chunks,get,number,of,allocated,chunks,arena,q050,num,chunks,get,number,of,allocated,chunks,arena,q075,num,chunks,get,number,of,allocated,chunks,arena,q100,long,allocated,bytes,num,chunks,chunk,size,return,option,apply,allocated,bytes,else,return,option,empty
NettyBufferPool -> public Option<Long> getNumberOfAllocatedBytes() 			throws NoSuchFieldException, IllegalAccessException;1465394479;Returns the number of currently allocated bytes.__<p>The stats are gathered via Reflection and are mostly relevant for_debugging purposes.__@return Number of currently allocated bytes.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;public Option<Long> getNumberOfAllocatedBytes()_			throws NoSuchFieldException, IllegalAccessException {__		if (directArenas != null) {_			long numChunks = 0__			for (Object arena : directArenas) {_				numChunks += getNumberOfAllocatedChunks(arena, "qInit")__				numChunks += getNumberOfAllocatedChunks(arena, "q000")__				numChunks += getNumberOfAllocatedChunks(arena, "q025")__				numChunks += getNumberOfAllocatedChunks(arena, "q050")__				numChunks += getNumberOfAllocatedChunks(arena, "q075")__				numChunks += getNumberOfAllocatedChunks(arena, "q100")__			}__			long allocatedBytes = numChunks * chunkSize__			return Option.apply(allocatedBytes)__		} else {_			return Option.empty()__		}_	};returns,the,number,of,currently,allocated,bytes,p,the,stats,are,gathered,via,reflection,and,are,mostly,relevant,for,debugging,purposes,return,number,of,currently,allocated,bytes,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;public,option,long,get,number,of,allocated,bytes,throws,no,such,field,exception,illegal,access,exception,if,direct,arenas,null,long,num,chunks,0,for,object,arena,direct,arenas,num,chunks,get,number,of,allocated,chunks,arena,q,init,num,chunks,get,number,of,allocated,chunks,arena,q000,num,chunks,get,number,of,allocated,chunks,arena,q025,num,chunks,get,number,of,allocated,chunks,arena,q050,num,chunks,get,number,of,allocated,chunks,arena,q075,num,chunks,get,number,of,allocated,chunks,arena,q100,long,allocated,bytes,num,chunks,chunk,size,return,option,apply,allocated,bytes,else,return,option,empty
NettyBufferPool -> public Option<Long> getNumberOfAllocatedBytes() 			throws NoSuchFieldException, IllegalAccessException;1497282291;Returns the number of currently allocated bytes.__<p>The stats are gathered via Reflection and are mostly relevant for_debugging purposes.__@return Number of currently allocated bytes.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;public Option<Long> getNumberOfAllocatedBytes()_			throws NoSuchFieldException, IllegalAccessException {__		if (directArenas != null) {_			long numChunks = 0__			for (Object arena : directArenas) {_				numChunks += getNumberOfAllocatedChunks(arena, "qInit")__				numChunks += getNumberOfAllocatedChunks(arena, "q000")__				numChunks += getNumberOfAllocatedChunks(arena, "q025")__				numChunks += getNumberOfAllocatedChunks(arena, "q050")__				numChunks += getNumberOfAllocatedChunks(arena, "q075")__				numChunks += getNumberOfAllocatedChunks(arena, "q100")__			}__			long allocatedBytes = numChunks * chunkSize__			return Option.apply(allocatedBytes)__		} else {_			return Option.empty()__		}_	};returns,the,number,of,currently,allocated,bytes,p,the,stats,are,gathered,via,reflection,and,are,mostly,relevant,for,debugging,purposes,return,number,of,currently,allocated,bytes,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;public,option,long,get,number,of,allocated,bytes,throws,no,such,field,exception,illegal,access,exception,if,direct,arenas,null,long,num,chunks,0,for,object,arena,direct,arenas,num,chunks,get,number,of,allocated,chunks,arena,q,init,num,chunks,get,number,of,allocated,chunks,arena,q000,num,chunks,get,number,of,allocated,chunks,arena,q025,num,chunks,get,number,of,allocated,chunks,arena,q050,num,chunks,get,number,of,allocated,chunks,arena,q075,num,chunks,get,number,of,allocated,chunks,arena,q100,long,allocated,bytes,num,chunks,chunk,size,return,option,apply,allocated,bytes,else,return,option,empty
NettyBufferPool -> public Option<Long> getNumberOfAllocatedBytes() 			throws NoSuchFieldException, IllegalAccessException;1498566436;Returns the number of currently allocated bytes.__<p>The stats are gathered via Reflection and are mostly relevant for_debugging purposes.__@return Number of currently allocated bytes.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;public Option<Long> getNumberOfAllocatedBytes()_			throws NoSuchFieldException, IllegalAccessException {__		if (directArenas != null) {_			long numChunks = 0__			for (Object arena : directArenas) {_				numChunks += getNumberOfAllocatedChunks(arena, "qInit")__				numChunks += getNumberOfAllocatedChunks(arena, "q000")__				numChunks += getNumberOfAllocatedChunks(arena, "q025")__				numChunks += getNumberOfAllocatedChunks(arena, "q050")__				numChunks += getNumberOfAllocatedChunks(arena, "q075")__				numChunks += getNumberOfAllocatedChunks(arena, "q100")__			}__			long allocatedBytes = numChunks * chunkSize__			return Option.apply(allocatedBytes)__		} else {_			return Option.empty()__		}_	};returns,the,number,of,currently,allocated,bytes,p,the,stats,are,gathered,via,reflection,and,are,mostly,relevant,for,debugging,purposes,return,number,of,currently,allocated,bytes,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;public,option,long,get,number,of,allocated,bytes,throws,no,such,field,exception,illegal,access,exception,if,direct,arenas,null,long,num,chunks,0,for,object,arena,direct,arenas,num,chunks,get,number,of,allocated,chunks,arena,q,init,num,chunks,get,number,of,allocated,chunks,arena,q000,num,chunks,get,number,of,allocated,chunks,arena,q025,num,chunks,get,number,of,allocated,chunks,arena,q050,num,chunks,get,number,of,allocated,chunks,arena,q075,num,chunks,get,number,of,allocated,chunks,arena,q100,long,allocated,bytes,num,chunks,chunk,size,return,option,apply,allocated,bytes,else,return,option,empty
NettyBufferPool -> public Option<Long> getNumberOfAllocatedBytes() 			throws NoSuchFieldException, IllegalAccessException;1503482668;Returns the number of currently allocated bytes.__<p>The stats are gathered via Reflection and are mostly relevant for_debugging purposes.__@return Number of currently allocated bytes.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;public Option<Long> getNumberOfAllocatedBytes()_			throws NoSuchFieldException, IllegalAccessException {__		if (directArenas != null) {_			long numChunks = 0__			for (Object arena : directArenas) {_				numChunks += getNumberOfAllocatedChunks(arena, "qInit")__				numChunks += getNumberOfAllocatedChunks(arena, "q000")__				numChunks += getNumberOfAllocatedChunks(arena, "q025")__				numChunks += getNumberOfAllocatedChunks(arena, "q050")__				numChunks += getNumberOfAllocatedChunks(arena, "q075")__				numChunks += getNumberOfAllocatedChunks(arena, "q100")__			}__			long allocatedBytes = numChunks * chunkSize__			return Option.apply(allocatedBytes)__		} else {_			return Option.empty()__		}_	};returns,the,number,of,currently,allocated,bytes,p,the,stats,are,gathered,via,reflection,and,are,mostly,relevant,for,debugging,purposes,return,number,of,currently,allocated,bytes,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;public,option,long,get,number,of,allocated,bytes,throws,no,such,field,exception,illegal,access,exception,if,direct,arenas,null,long,num,chunks,0,for,object,arena,direct,arenas,num,chunks,get,number,of,allocated,chunks,arena,q,init,num,chunks,get,number,of,allocated,chunks,arena,q000,num,chunks,get,number,of,allocated,chunks,arena,q025,num,chunks,get,number,of,allocated,chunks,arena,q050,num,chunks,get,number,of,allocated,chunks,arena,q075,num,chunks,get,number,of,allocated,chunks,arena,q100,long,allocated,bytes,num,chunks,chunk,size,return,option,apply,allocated,bytes,else,return,option,empty
NettyBufferPool -> private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName) 			throws NoSuchFieldException, IllegalAccessException;1454511937;Returns the number of allocated bytes of the given arena and chunk list.__@param arena              Arena to gather statistics about._@param chunkListFieldName Chunk list to check.__@return Number of total allocated bytes by this arena.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName)_			throws NoSuchFieldException, IllegalAccessException {__		_		_		_		__		_		Field chunkListField = arena.getClass().getSuperclass()_				.getDeclaredField(chunkListFieldName)__		chunkListField.setAccessible(true)__		Object chunkList = chunkListField.get(arena)___		_		Field headChunkField = chunkList.getClass().getDeclaredField("head")__		headChunkField.setAccessible(true)__		Object headChunk = headChunkField.get(chunkList)___		if (headChunk == null) {_			return 0__		} else {_			int numChunks = 0___			Object current = headChunk___			while (current != null) {_				Field nextChunkField = headChunk.getClass().getDeclaredField("next")__				nextChunkField.setAccessible(true)__				current = nextChunkField.get(current)__				numChunks++__			}__			return numChunks__		}_	};returns,the,number,of,allocated,bytes,of,the,given,arena,and,chunk,list,param,arena,arena,to,gather,statistics,about,param,chunk,list,field,name,chunk,list,to,check,return,number,of,total,allocated,bytes,by,this,arena,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;private,long,get,number,of,allocated,chunks,object,arena,string,chunk,list,field,name,throws,no,such,field,exception,illegal,access,exception,field,chunk,list,field,arena,get,class,get,superclass,get,declared,field,chunk,list,field,name,chunk,list,field,set,accessible,true,object,chunk,list,chunk,list,field,get,arena,field,head,chunk,field,chunk,list,get,class,get,declared,field,head,head,chunk,field,set,accessible,true,object,head,chunk,head,chunk,field,get,chunk,list,if,head,chunk,null,return,0,else,int,num,chunks,0,object,current,head,chunk,while,current,null,field,next,chunk,field,head,chunk,get,class,get,declared,field,next,next,chunk,field,set,accessible,true,current,next,chunk,field,get,current,num,chunks,return,num,chunks
NettyBufferPool -> private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName) 			throws NoSuchFieldException, IllegalAccessException;1454921026;Returns the number of allocated bytes of the given arena and chunk list.__@param arena              Arena to gather statistics about._@param chunkListFieldName Chunk list to check.__@return Number of total allocated bytes by this arena.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName)_			throws NoSuchFieldException, IllegalAccessException {__		_		_		_		__		_		Field chunkListField = arena.getClass().getSuperclass()_				.getDeclaredField(chunkListFieldName)__		chunkListField.setAccessible(true)__		Object chunkList = chunkListField.get(arena)___		_		Field headChunkField = chunkList.getClass().getDeclaredField("head")__		headChunkField.setAccessible(true)__		Object headChunk = headChunkField.get(chunkList)___		if (headChunk == null) {_			return 0__		} else {_			int numChunks = 0___			Object current = headChunk___			while (current != null) {_				Field nextChunkField = headChunk.getClass().getDeclaredField("next")__				nextChunkField.setAccessible(true)__				current = nextChunkField.get(current)__				numChunks++__			}__			return numChunks__		}_	};returns,the,number,of,allocated,bytes,of,the,given,arena,and,chunk,list,param,arena,arena,to,gather,statistics,about,param,chunk,list,field,name,chunk,list,to,check,return,number,of,total,allocated,bytes,by,this,arena,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;private,long,get,number,of,allocated,chunks,object,arena,string,chunk,list,field,name,throws,no,such,field,exception,illegal,access,exception,field,chunk,list,field,arena,get,class,get,superclass,get,declared,field,chunk,list,field,name,chunk,list,field,set,accessible,true,object,chunk,list,chunk,list,field,get,arena,field,head,chunk,field,chunk,list,get,class,get,declared,field,head,head,chunk,field,set,accessible,true,object,head,chunk,head,chunk,field,get,chunk,list,if,head,chunk,null,return,0,else,int,num,chunks,0,object,current,head,chunk,while,current,null,field,next,chunk,field,head,chunk,get,class,get,declared,field,next,next,chunk,field,set,accessible,true,current,next,chunk,field,get,current,num,chunks,return,num,chunks
NettyBufferPool -> private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName) 			throws NoSuchFieldException, IllegalAccessException;1464609649;Returns the number of allocated bytes of the given arena and chunk list.__@param arena              Arena to gather statistics about._@param chunkListFieldName Chunk list to check.__@return Number of total allocated bytes by this arena.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName)_			throws NoSuchFieldException, IllegalAccessException {__		_		_		_		__		_		Field chunkListField = arena.getClass().getSuperclass()_				.getDeclaredField(chunkListFieldName)__		chunkListField.setAccessible(true)__		Object chunkList = chunkListField.get(arena)___		_		Field headChunkField = chunkList.getClass().getDeclaredField("head")__		headChunkField.setAccessible(true)__		Object headChunk = headChunkField.get(chunkList)___		if (headChunk == null) {_			return 0__		} else {_			int numChunks = 0___			Object current = headChunk___			while (current != null) {_				Field nextChunkField = headChunk.getClass().getDeclaredField("next")__				nextChunkField.setAccessible(true)__				current = nextChunkField.get(current)__				numChunks++__			}__			return numChunks__		}_	};returns,the,number,of,allocated,bytes,of,the,given,arena,and,chunk,list,param,arena,arena,to,gather,statistics,about,param,chunk,list,field,name,chunk,list,to,check,return,number,of,total,allocated,bytes,by,this,arena,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;private,long,get,number,of,allocated,chunks,object,arena,string,chunk,list,field,name,throws,no,such,field,exception,illegal,access,exception,field,chunk,list,field,arena,get,class,get,superclass,get,declared,field,chunk,list,field,name,chunk,list,field,set,accessible,true,object,chunk,list,chunk,list,field,get,arena,field,head,chunk,field,chunk,list,get,class,get,declared,field,head,head,chunk,field,set,accessible,true,object,head,chunk,head,chunk,field,get,chunk,list,if,head,chunk,null,return,0,else,int,num,chunks,0,object,current,head,chunk,while,current,null,field,next,chunk,field,head,chunk,get,class,get,declared,field,next,next,chunk,field,set,accessible,true,current,next,chunk,field,get,current,num,chunks,return,num,chunks
NettyBufferPool -> private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName) 			throws NoSuchFieldException, IllegalAccessException;1465394479;Returns the number of allocated bytes of the given arena and chunk list.__@param arena              Arena to gather statistics about._@param chunkListFieldName Chunk list to check.__@return Number of total allocated bytes by this arena.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName)_			throws NoSuchFieldException, IllegalAccessException {__		_		_		_		__		_		Field chunkListField = arena.getClass().getSuperclass()_				.getDeclaredField(chunkListFieldName)__		chunkListField.setAccessible(true)__		Object chunkList = chunkListField.get(arena)___		_		Field headChunkField = chunkList.getClass().getDeclaredField("head")__		headChunkField.setAccessible(true)__		Object headChunk = headChunkField.get(chunkList)___		if (headChunk == null) {_			return 0__		} else {_			int numChunks = 0___			Object current = headChunk___			while (current != null) {_				Field nextChunkField = headChunk.getClass().getDeclaredField("next")__				nextChunkField.setAccessible(true)__				current = nextChunkField.get(current)__				numChunks++__			}__			return numChunks__		}_	};returns,the,number,of,allocated,bytes,of,the,given,arena,and,chunk,list,param,arena,arena,to,gather,statistics,about,param,chunk,list,field,name,chunk,list,to,check,return,number,of,total,allocated,bytes,by,this,arena,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;private,long,get,number,of,allocated,chunks,object,arena,string,chunk,list,field,name,throws,no,such,field,exception,illegal,access,exception,field,chunk,list,field,arena,get,class,get,superclass,get,declared,field,chunk,list,field,name,chunk,list,field,set,accessible,true,object,chunk,list,chunk,list,field,get,arena,field,head,chunk,field,chunk,list,get,class,get,declared,field,head,head,chunk,field,set,accessible,true,object,head,chunk,head,chunk,field,get,chunk,list,if,head,chunk,null,return,0,else,int,num,chunks,0,object,current,head,chunk,while,current,null,field,next,chunk,field,head,chunk,get,class,get,declared,field,next,next,chunk,field,set,accessible,true,current,next,chunk,field,get,current,num,chunks,return,num,chunks
NettyBufferPool -> private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName) 			throws NoSuchFieldException, IllegalAccessException;1497282291;Returns the number of allocated bytes of the given arena and chunk list.__@param arena              Arena to gather statistics about._@param chunkListFieldName Chunk list to check.__@return Number of total allocated bytes by this arena.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName)_			throws NoSuchFieldException, IllegalAccessException {__		_		_		_		__		_		Field chunkListField = arena.getClass().getSuperclass()_				.getDeclaredField(chunkListFieldName)__		chunkListField.setAccessible(true)__		Object chunkList = chunkListField.get(arena)___		_		Field headChunkField = chunkList.getClass().getDeclaredField("head")__		headChunkField.setAccessible(true)__		Object headChunk = headChunkField.get(chunkList)___		if (headChunk == null) {_			return 0__		} else {_			int numChunks = 0___			Object current = headChunk___			while (current != null) {_				Field nextChunkField = headChunk.getClass().getDeclaredField("next")__				nextChunkField.setAccessible(true)__				current = nextChunkField.get(current)__				numChunks++__			}__			return numChunks__		}_	};returns,the,number,of,allocated,bytes,of,the,given,arena,and,chunk,list,param,arena,arena,to,gather,statistics,about,param,chunk,list,field,name,chunk,list,to,check,return,number,of,total,allocated,bytes,by,this,arena,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;private,long,get,number,of,allocated,chunks,object,arena,string,chunk,list,field,name,throws,no,such,field,exception,illegal,access,exception,field,chunk,list,field,arena,get,class,get,superclass,get,declared,field,chunk,list,field,name,chunk,list,field,set,accessible,true,object,chunk,list,chunk,list,field,get,arena,field,head,chunk,field,chunk,list,get,class,get,declared,field,head,head,chunk,field,set,accessible,true,object,head,chunk,head,chunk,field,get,chunk,list,if,head,chunk,null,return,0,else,int,num,chunks,0,object,current,head,chunk,while,current,null,field,next,chunk,field,head,chunk,get,class,get,declared,field,next,next,chunk,field,set,accessible,true,current,next,chunk,field,get,current,num,chunks,return,num,chunks
NettyBufferPool -> private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName) 			throws NoSuchFieldException, IllegalAccessException;1498566436;Returns the number of allocated bytes of the given arena and chunk list.__@param arena              Arena to gather statistics about._@param chunkListFieldName Chunk list to check.__@return Number of total allocated bytes by this arena.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName)_			throws NoSuchFieldException, IllegalAccessException {__		_		_		_		__		_		Field chunkListField = arena.getClass().getSuperclass()_				.getDeclaredField(chunkListFieldName)__		chunkListField.setAccessible(true)__		Object chunkList = chunkListField.get(arena)___		_		Field headChunkField = chunkList.getClass().getDeclaredField("head")__		headChunkField.setAccessible(true)__		Object headChunk = headChunkField.get(chunkList)___		if (headChunk == null) {_			return 0__		} else {_			int numChunks = 0___			Object current = headChunk___			while (current != null) {_				Field nextChunkField = headChunk.getClass().getDeclaredField("next")__				nextChunkField.setAccessible(true)__				current = nextChunkField.get(current)__				numChunks++__			}__			return numChunks__		}_	};returns,the,number,of,allocated,bytes,of,the,given,arena,and,chunk,list,param,arena,arena,to,gather,statistics,about,param,chunk,list,field,name,chunk,list,to,check,return,number,of,total,allocated,bytes,by,this,arena,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;private,long,get,number,of,allocated,chunks,object,arena,string,chunk,list,field,name,throws,no,such,field,exception,illegal,access,exception,field,chunk,list,field,arena,get,class,get,superclass,get,declared,field,chunk,list,field,name,chunk,list,field,set,accessible,true,object,chunk,list,chunk,list,field,get,arena,field,head,chunk,field,chunk,list,get,class,get,declared,field,head,head,chunk,field,set,accessible,true,object,head,chunk,head,chunk,field,get,chunk,list,if,head,chunk,null,return,0,else,int,num,chunks,0,object,current,head,chunk,while,current,null,field,next,chunk,field,head,chunk,get,class,get,declared,field,next,next,chunk,field,set,accessible,true,current,next,chunk,field,get,current,num,chunks,return,num,chunks
NettyBufferPool -> private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName) 			throws NoSuchFieldException, IllegalAccessException;1503482668;Returns the number of allocated bytes of the given arena and chunk list.__@param arena              Arena to gather statistics about._@param chunkListFieldName Chunk list to check.__@return Number of total allocated bytes by this arena.__@throws NoSuchFieldException   Error getting the statistics (should not_happen when the Netty version stays the_same)._@throws IllegalAccessException Error getting the statistics (should not_happen when the Netty version stays the_same).;private long getNumberOfAllocatedChunks(Object arena, String chunkListFieldName)_			throws NoSuchFieldException, IllegalAccessException {__		_		_		_		__		_		Field chunkListField = arena.getClass().getSuperclass()_				.getDeclaredField(chunkListFieldName)__		chunkListField.setAccessible(true)__		Object chunkList = chunkListField.get(arena)___		_		Field headChunkField = chunkList.getClass().getDeclaredField("head")__		headChunkField.setAccessible(true)__		Object headChunk = headChunkField.get(chunkList)___		if (headChunk == null) {_			return 0__		} else {_			int numChunks = 0___			Object current = headChunk___			while (current != null) {_				Field nextChunkField = headChunk.getClass().getDeclaredField("next")__				nextChunkField.setAccessible(true)__				current = nextChunkField.get(current)__				numChunks++__			}__			return numChunks__		}_	};returns,the,number,of,allocated,bytes,of,the,given,arena,and,chunk,list,param,arena,arena,to,gather,statistics,about,param,chunk,list,field,name,chunk,list,to,check,return,number,of,total,allocated,bytes,by,this,arena,throws,no,such,field,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same,throws,illegal,access,exception,error,getting,the,statistics,should,not,happen,when,the,netty,version,stays,the,same;private,long,get,number,of,allocated,chunks,object,arena,string,chunk,list,field,name,throws,no,such,field,exception,illegal,access,exception,field,chunk,list,field,arena,get,class,get,superclass,get,declared,field,chunk,list,field,name,chunk,list,field,set,accessible,true,object,chunk,list,chunk,list,field,get,arena,field,head,chunk,field,chunk,list,get,class,get,declared,field,head,head,chunk,field,set,accessible,true,object,head,chunk,head,chunk,field,get,chunk,list,if,head,chunk,null,return,0,else,int,num,chunks,0,object,current,head,chunk,while,current,null,field,next,chunk,field,head,chunk,get,class,get,declared,field,next,next,chunk,field,set,accessible,true,current,next,chunk,field,get,current,num,chunks,return,num,chunks
NettyBufferPool -> NettyBufferPool(int numberOfArenas);1454511937;Creates Netty's buffer pool with the specified number of direct arenas.__@param numberOfArenas Number of arenas (recommended: 2 * number of task_slots);NettyBufferPool(int numberOfArenas) {_		checkArgument(numberOfArenas >= 1, "Number of arenas")__		this.numberOfArenas = numberOfArenas___		if (!PlatformDependent.hasUnsafe()) {_			LOG.warn("Using direct buffers, but sun.misc.Unsafe not available.")__		}__		_		boolean preferDirect = true___		_		_		int pageSize = 8192__		int maxOrder = 11___		this.chunkSize = pageSize << maxOrder___		_		_		_		_		_		_		int numDirectArenas = numberOfArenas___		_		int numHeapArenas = 0___		this.alloc = new PooledByteBufAllocator(_				preferDirect,_				numHeapArenas,_				numDirectArenas,_				pageSize,_				maxOrder)___		Object[] allocDirectArenas = null__		try {_			Field directArenasField = alloc.getClass()_					.getDeclaredField("directArenas")__			directArenasField.setAccessible(true)___			allocDirectArenas = (Object[]) directArenasField.get(alloc)__		} catch (Exception ignored) {_			LOG.warn("Memory statistics not available")__		} finally {_			this.directArenas = allocDirectArenas__		}_	};creates,netty,s,buffer,pool,with,the,specified,number,of,direct,arenas,param,number,of,arenas,number,of,arenas,recommended,2,number,of,task,slots;netty,buffer,pool,int,number,of,arenas,check,argument,number,of,arenas,1,number,of,arenas,this,number,of,arenas,number,of,arenas,if,platform,dependent,has,unsafe,log,warn,using,direct,buffers,but,sun,misc,unsafe,not,available,boolean,prefer,direct,true,int,page,size,8192,int,max,order,11,this,chunk,size,page,size,max,order,int,num,direct,arenas,number,of,arenas,int,num,heap,arenas,0,this,alloc,new,pooled,byte,buf,allocator,prefer,direct,num,heap,arenas,num,direct,arenas,page,size,max,order,object,alloc,direct,arenas,null,try,field,direct,arenas,field,alloc,get,class,get,declared,field,direct,arenas,direct,arenas,field,set,accessible,true,alloc,direct,arenas,object,direct,arenas,field,get,alloc,catch,exception,ignored,log,warn,memory,statistics,not,available,finally,this,direct,arenas,alloc,direct,arenas
NettyBufferPool -> NettyBufferPool(int numberOfArenas);1454921026;Creates Netty's buffer pool with the specified number of direct arenas.__@param numberOfArenas Number of arenas (recommended: 2 * number of task_slots);NettyBufferPool(int numberOfArenas) {_		checkArgument(numberOfArenas >= 1, "Number of arenas")__		this.numberOfArenas = numberOfArenas___		if (!PlatformDependent.hasUnsafe()) {_			LOG.warn("Using direct buffers, but sun.misc.Unsafe not available.")__		}__		_		boolean preferDirect = true___		_		_		int pageSize = 8192__		int maxOrder = 11___		this.chunkSize = pageSize << maxOrder___		_		_		_		_		_		_		int numDirectArenas = numberOfArenas___		_		int numHeapArenas = 0___		this.alloc = new PooledByteBufAllocator(_				preferDirect,_				numHeapArenas,_				numDirectArenas,_				pageSize,_				maxOrder)___		Object[] allocDirectArenas = null__		try {_			Field directArenasField = alloc.getClass()_					.getDeclaredField("directArenas")__			directArenasField.setAccessible(true)___			allocDirectArenas = (Object[]) directArenasField.get(alloc)__		} catch (Exception ignored) {_			LOG.warn("Memory statistics not available")__		} finally {_			this.directArenas = allocDirectArenas__		}_	};creates,netty,s,buffer,pool,with,the,specified,number,of,direct,arenas,param,number,of,arenas,number,of,arenas,recommended,2,number,of,task,slots;netty,buffer,pool,int,number,of,arenas,check,argument,number,of,arenas,1,number,of,arenas,this,number,of,arenas,number,of,arenas,if,platform,dependent,has,unsafe,log,warn,using,direct,buffers,but,sun,misc,unsafe,not,available,boolean,prefer,direct,true,int,page,size,8192,int,max,order,11,this,chunk,size,page,size,max,order,int,num,direct,arenas,number,of,arenas,int,num,heap,arenas,0,this,alloc,new,pooled,byte,buf,allocator,prefer,direct,num,heap,arenas,num,direct,arenas,page,size,max,order,object,alloc,direct,arenas,null,try,field,direct,arenas,field,alloc,get,class,get,declared,field,direct,arenas,direct,arenas,field,set,accessible,true,alloc,direct,arenas,object,direct,arenas,field,get,alloc,catch,exception,ignored,log,warn,memory,statistics,not,available,finally,this,direct,arenas,alloc,direct,arenas
NettyBufferPool -> NettyBufferPool(int numberOfArenas);1465394479;Creates Netty's buffer pool with the specified number of direct arenas.__@param numberOfArenas Number of arenas (recommended: 2 * number of task_slots);NettyBufferPool(int numberOfArenas) {_		checkArgument(numberOfArenas >= 1, "Number of arenas")__		this.numberOfArenas = numberOfArenas___		if (!PlatformDependent.hasUnsafe()) {_			LOG.warn("Using direct buffers, but sun.misc.Unsafe not available.")__		}__		_		boolean preferDirect = true___		_		_		int pageSize = 8192__		int maxOrder = 11___		this.chunkSize = pageSize << maxOrder___		_		_		_		_		_		_		int numDirectArenas = numberOfArenas___		_		int numHeapArenas = 0___		this.alloc = new PooledByteBufAllocator(_				preferDirect,_				numHeapArenas,_				numDirectArenas,_				pageSize,_				maxOrder)___		Object[] allocDirectArenas = null__		try {_			Field directArenasField = alloc.getClass()_					.getDeclaredField("directArenas")__			directArenasField.setAccessible(true)___			allocDirectArenas = (Object[]) directArenasField.get(alloc)__		} catch (Exception ignored) {_			LOG.warn("Memory statistics not available")__		} finally {_			this.directArenas = allocDirectArenas__		}_	};creates,netty,s,buffer,pool,with,the,specified,number,of,direct,arenas,param,number,of,arenas,number,of,arenas,recommended,2,number,of,task,slots;netty,buffer,pool,int,number,of,arenas,check,argument,number,of,arenas,1,number,of,arenas,this,number,of,arenas,number,of,arenas,if,platform,dependent,has,unsafe,log,warn,using,direct,buffers,but,sun,misc,unsafe,not,available,boolean,prefer,direct,true,int,page,size,8192,int,max,order,11,this,chunk,size,page,size,max,order,int,num,direct,arenas,number,of,arenas,int,num,heap,arenas,0,this,alloc,new,pooled,byte,buf,allocator,prefer,direct,num,heap,arenas,num,direct,arenas,page,size,max,order,object,alloc,direct,arenas,null,try,field,direct,arenas,field,alloc,get,class,get,declared,field,direct,arenas,direct,arenas,field,set,accessible,true,alloc,direct,arenas,object,direct,arenas,field,get,alloc,catch,exception,ignored,log,warn,memory,statistics,not,available,finally,this,direct,arenas,alloc,direct,arenas
NettyBufferPool -> public NettyBufferPool(int numberOfArenas);1464609649;Creates Netty's buffer pool with the specified number of direct arenas.__@param numberOfArenas Number of arenas (recommended: 2 * number of task_slots);public NettyBufferPool(int numberOfArenas) {_		checkArgument(numberOfArenas >= 1, "Number of arenas")__		this.numberOfArenas = numberOfArenas___		if (!PlatformDependent.hasUnsafe()) {_			LOG.warn("Using direct buffers, but sun.misc.Unsafe not available.")__		}__		_		boolean preferDirect = true___		_		_		int pageSize = 8192__		int maxOrder = 11___		this.chunkSize = pageSize << maxOrder___		_		_		_		_		_		_		int numDirectArenas = numberOfArenas___		_		int numHeapArenas = 0___		this.alloc = new PooledByteBufAllocator(_				preferDirect,_				numHeapArenas,_				numDirectArenas,_				pageSize,_				maxOrder)___		Object[] allocDirectArenas = null__		try {_			Field directArenasField = alloc.getClass()_					.getDeclaredField("directArenas")__			directArenasField.setAccessible(true)___			allocDirectArenas = (Object[]) directArenasField.get(alloc)__		} catch (Exception ignored) {_			LOG.warn("Memory statistics not available")__		} finally {_			this.directArenas = allocDirectArenas__		}_	};creates,netty,s,buffer,pool,with,the,specified,number,of,direct,arenas,param,number,of,arenas,number,of,arenas,recommended,2,number,of,task,slots;public,netty,buffer,pool,int,number,of,arenas,check,argument,number,of,arenas,1,number,of,arenas,this,number,of,arenas,number,of,arenas,if,platform,dependent,has,unsafe,log,warn,using,direct,buffers,but,sun,misc,unsafe,not,available,boolean,prefer,direct,true,int,page,size,8192,int,max,order,11,this,chunk,size,page,size,max,order,int,num,direct,arenas,number,of,arenas,int,num,heap,arenas,0,this,alloc,new,pooled,byte,buf,allocator,prefer,direct,num,heap,arenas,num,direct,arenas,page,size,max,order,object,alloc,direct,arenas,null,try,field,direct,arenas,field,alloc,get,class,get,declared,field,direct,arenas,direct,arenas,field,set,accessible,true,alloc,direct,arenas,object,direct,arenas,field,get,alloc,catch,exception,ignored,log,warn,memory,statistics,not,available,finally,this,direct,arenas,alloc,direct,arenas
NettyBufferPool -> public NettyBufferPool(int numberOfArenas);1497282291;Creates Netty's buffer pool with the specified number of direct arenas.__@param numberOfArenas Number of arenas (recommended: 2 * number of task_slots);public NettyBufferPool(int numberOfArenas) {_		checkArgument(numberOfArenas >= 1, "Number of arenas")__		this.numberOfArenas = numberOfArenas___		_		boolean preferDirect = true___		_		_		int pageSize = 8192__		int maxOrder = 11___		this.chunkSize = pageSize << maxOrder___		_		_		_		_		_		_		int numDirectArenas = numberOfArenas___		_		int numHeapArenas = 0___		this.alloc = new PooledByteBufAllocator(_				preferDirect,_				numHeapArenas,_				numDirectArenas,_				pageSize,_				maxOrder)___		Object[] allocDirectArenas = null__		try {_			Field directArenasField = alloc.getClass()_					.getDeclaredField("directArenas")__			directArenasField.setAccessible(true)___			allocDirectArenas = (Object[]) directArenasField.get(alloc)__		} catch (Exception ignored) {_			LOG.warn("Memory statistics not available")__		} finally {_			this.directArenas = allocDirectArenas__		}_	};creates,netty,s,buffer,pool,with,the,specified,number,of,direct,arenas,param,number,of,arenas,number,of,arenas,recommended,2,number,of,task,slots;public,netty,buffer,pool,int,number,of,arenas,check,argument,number,of,arenas,1,number,of,arenas,this,number,of,arenas,number,of,arenas,boolean,prefer,direct,true,int,page,size,8192,int,max,order,11,this,chunk,size,page,size,max,order,int,num,direct,arenas,number,of,arenas,int,num,heap,arenas,0,this,alloc,new,pooled,byte,buf,allocator,prefer,direct,num,heap,arenas,num,direct,arenas,page,size,max,order,object,alloc,direct,arenas,null,try,field,direct,arenas,field,alloc,get,class,get,declared,field,direct,arenas,direct,arenas,field,set,accessible,true,alloc,direct,arenas,object,direct,arenas,field,get,alloc,catch,exception,ignored,log,warn,memory,statistics,not,available,finally,this,direct,arenas,alloc,direct,arenas
NettyBufferPool -> public NettyBufferPool(int numberOfArenas);1498566436;Creates Netty's buffer pool with the specified number of direct arenas.__@param numberOfArenas Number of arenas (recommended: 2 * number of task_slots);public NettyBufferPool(int numberOfArenas) {_		checkArgument(numberOfArenas >= 1, "Number of arenas")__		this.numberOfArenas = numberOfArenas___		_		boolean preferDirect = true___		_		_		int pageSize = 8192__		int maxOrder = 11___		this.chunkSize = pageSize << maxOrder___		_		_		_		_		_		_		int numDirectArenas = numberOfArenas___		_		int numHeapArenas = 0___		this.alloc = new PooledByteBufAllocator(_				preferDirect,_				numHeapArenas,_				numDirectArenas,_				pageSize,_				maxOrder)___		Object[] allocDirectArenas = null__		try {_			Field directArenasField = alloc.getClass()_					.getDeclaredField("directArenas")__			directArenasField.setAccessible(true)___			allocDirectArenas = (Object[]) directArenasField.get(alloc)__		} catch (Exception ignored) {_			LOG.warn("Memory statistics not available")__		} finally {_			this.directArenas = allocDirectArenas__		}_	};creates,netty,s,buffer,pool,with,the,specified,number,of,direct,arenas,param,number,of,arenas,number,of,arenas,recommended,2,number,of,task,slots;public,netty,buffer,pool,int,number,of,arenas,check,argument,number,of,arenas,1,number,of,arenas,this,number,of,arenas,number,of,arenas,boolean,prefer,direct,true,int,page,size,8192,int,max,order,11,this,chunk,size,page,size,max,order,int,num,direct,arenas,number,of,arenas,int,num,heap,arenas,0,this,alloc,new,pooled,byte,buf,allocator,prefer,direct,num,heap,arenas,num,direct,arenas,page,size,max,order,object,alloc,direct,arenas,null,try,field,direct,arenas,field,alloc,get,class,get,declared,field,direct,arenas,direct,arenas,field,set,accessible,true,alloc,direct,arenas,object,direct,arenas,field,get,alloc,catch,exception,ignored,log,warn,memory,statistics,not,available,finally,this,direct,arenas,alloc,direct,arenas
NettyBufferPool -> public NettyBufferPool(int numberOfArenas);1503482668;Creates Netty's buffer pool with the specified number of direct arenas.__@param numberOfArenas Number of arenas (recommended: 2 * number of task_slots);public NettyBufferPool(int numberOfArenas) {_		super(_			PREFER_DIRECT,_			_			0,_			_			_			_			_			_			_			numberOfArenas,_			PAGE_SIZE,_			MAX_ORDER)___		checkArgument(numberOfArenas >= 1, "Number of arenas")__		this.numberOfArenas = numberOfArenas___		_		__		this.chunkSize = PAGE_SIZE << MAX_ORDER___		Object[] allocDirectArenas = null__		try {_			Field directArenasField = PooledByteBufAllocator.class_					.getDeclaredField("directArenas")__			directArenasField.setAccessible(true)___			allocDirectArenas = (Object[]) directArenasField.get(this)__		} catch (Exception ignored) {_			LOG.warn("Memory statistics not available")__		} finally {_			this.directArenas = allocDirectArenas__		}_	};creates,netty,s,buffer,pool,with,the,specified,number,of,direct,arenas,param,number,of,arenas,number,of,arenas,recommended,2,number,of,task,slots;public,netty,buffer,pool,int,number,of,arenas,super,0,number,of,arenas,check,argument,number,of,arenas,1,number,of,arenas,this,number,of,arenas,number,of,arenas,this,chunk,size,object,alloc,direct,arenas,null,try,field,direct,arenas,field,pooled,byte,buf,allocator,class,get,declared,field,direct,arenas,direct,arenas,field,set,accessible,true,alloc,direct,arenas,object,direct,arenas,field,get,this,catch,exception,ignored,log,warn,memory,statistics,not,available,finally,this,direct,arenas,alloc,direct,arenas
