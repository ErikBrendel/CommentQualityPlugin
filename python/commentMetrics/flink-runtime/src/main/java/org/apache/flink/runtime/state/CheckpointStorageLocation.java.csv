# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointStorageLocation -> CheckpointStorageLocationReference getLocationReference()_;1515600846;Gets a reference to the storage location. This reference is sent to the_target storage location via checkpoint RPC messages and checkpoint barriers,_in a format avoiding backend-specific classes.__<p>If there is no custom location information that needs to be communicated,_this method can simply return {@link CheckpointStorageLocationReference#getDefault()}.;CheckpointStorageLocationReference getLocationReference()_;gets,a,reference,to,the,storage,location,this,reference,is,sent,to,the,target,storage,location,via,checkpoint,rpc,messages,and,checkpoint,barriers,in,a,format,avoiding,backend,specific,classes,p,if,there,is,no,custom,location,information,that,needs,to,be,communicated,this,method,can,simply,return,link,checkpoint,storage,location,reference,get,default;checkpoint,storage,location,reference,get,location,reference
CheckpointStorageLocation -> CheckpointStorageLocationReference getLocationReference()_;1516365428;Gets a reference to the storage location. This reference is sent to the_target storage location via checkpoint RPC messages and checkpoint barriers,_in a format avoiding backend-specific classes.__<p>If there is no custom location information that needs to be communicated,_this method can simply return {@link CheckpointStorageLocationReference#getDefault()}.;CheckpointStorageLocationReference getLocationReference()_;gets,a,reference,to,the,storage,location,this,reference,is,sent,to,the,target,storage,location,via,checkpoint,rpc,messages,and,checkpoint,barriers,in,a,format,avoiding,backend,specific,classes,p,if,there,is,no,custom,location,information,that,needs,to,be,communicated,this,method,can,simply,return,link,checkpoint,storage,location,reference,get,default;checkpoint,storage,location,reference,get,location,reference
CheckpointStorageLocation -> CheckpointStorageLocationReference getLocationReference()_;1517414098;Gets a reference to the storage location. This reference is sent to the_target storage location via checkpoint RPC messages and checkpoint barriers,_in a format avoiding backend-specific classes.__<p>If there is no custom location information that needs to be communicated,_this method can simply return {@link CheckpointStorageLocationReference#getDefault()}.;CheckpointStorageLocationReference getLocationReference()_;gets,a,reference,to,the,storage,location,this,reference,is,sent,to,the,target,storage,location,via,checkpoint,rpc,messages,and,checkpoint,barriers,in,a,format,avoiding,backend,specific,classes,p,if,there,is,no,custom,location,information,that,needs,to,be,communicated,this,method,can,simply,return,link,checkpoint,storage,location,reference,get,default;checkpoint,storage,location,reference,get,location,reference
CheckpointStorageLocation -> void disposeOnFailure() throws IOException_;1509045960;Disposes the checkpoint location in case the checkpoint has failed.;void disposeOnFailure() throws IOException_;disposes,the,checkpoint,location,in,case,the,checkpoint,has,failed;void,dispose,on,failure,throws,ioexception
CheckpointStorageLocation -> void disposeOnFailure() throws IOException_;1515600846;Disposes the checkpoint location in case the checkpoint has failed._This method disposes all the data at that location, not just the data written_by the particular node or process that calls this method.;void disposeOnFailure() throws IOException_;disposes,the,checkpoint,location,in,case,the,checkpoint,has,failed,this,method,disposes,all,the,data,at,that,location,not,just,the,data,written,by,the,particular,node,or,process,that,calls,this,method;void,dispose,on,failure,throws,ioexception
CheckpointStorageLocation -> void disposeOnFailure() throws IOException_;1516365428;Disposes the checkpoint location in case the checkpoint has failed.;void disposeOnFailure() throws IOException_;disposes,the,checkpoint,location,in,case,the,checkpoint,has,failed;void,dispose,on,failure,throws,ioexception
CheckpointStorageLocation -> void disposeOnFailure() throws IOException_;1517414098;Disposes the checkpoint location in case the checkpoint has failed._This method disposes all the data at that location, not just the data written_by the particular node or process that calls this method.;void disposeOnFailure() throws IOException_;disposes,the,checkpoint,location,in,case,the,checkpoint,has,failed,this,method,disposes,all,the,data,at,that,location,not,just,the,data,written,by,the,particular,node,or,process,that,calls,this,method;void,dispose,on,failure,throws,ioexception
CheckpointStorageLocation -> String markCheckpointAsFinished() throws IOException_;1509045960;Finalizes the checkpoint, marking the location as a finished checkpoint._This method returns the external checkpoint pointer that can be used to resolve_the checkpoint upon recovery.__@return The external pointer to the checkpoint at this location._@throws IOException Thrown, if finalizing / marking as finished fails due to an I/O error.;String markCheckpointAsFinished() throws IOException_;finalizes,the,checkpoint,marking,the,location,as,a,finished,checkpoint,this,method,returns,the,external,checkpoint,pointer,that,can,be,used,to,resolve,the,checkpoint,upon,recovery,return,the,external,pointer,to,the,checkpoint,at,this,location,throws,ioexception,thrown,if,finalizing,marking,as,finished,fails,due,to,an,i,o,error;string,mark,checkpoint,as,finished,throws,ioexception
CheckpointStorageLocation -> String markCheckpointAsFinished() throws IOException_;1515600846;Finalizes the checkpoint, marking the location as a finished checkpoint._This method returns the external checkpoint pointer that can be used to resolve_the checkpoint upon recovery.__@return The external pointer to the checkpoint at this location._@throws IOException Thrown, if finalizing / marking as finished fails due to an I/O error.;String markCheckpointAsFinished() throws IOException_;finalizes,the,checkpoint,marking,the,location,as,a,finished,checkpoint,this,method,returns,the,external,checkpoint,pointer,that,can,be,used,to,resolve,the,checkpoint,upon,recovery,return,the,external,pointer,to,the,checkpoint,at,this,location,throws,ioexception,thrown,if,finalizing,marking,as,finished,fails,due,to,an,i,o,error;string,mark,checkpoint,as,finished,throws,ioexception
CheckpointStorageLocation -> String markCheckpointAsFinished() throws IOException_;1516365428;Finalizes the checkpoint, marking the location as a finished checkpoint._This method returns the external checkpoint pointer that can be used to resolve_the checkpoint upon recovery.__@return The external pointer to the checkpoint at this location._@throws IOException Thrown, if finalizing / marking as finished fails due to an I/O error.;String markCheckpointAsFinished() throws IOException_;finalizes,the,checkpoint,marking,the,location,as,a,finished,checkpoint,this,method,returns,the,external,checkpoint,pointer,that,can,be,used,to,resolve,the,checkpoint,upon,recovery,return,the,external,pointer,to,the,checkpoint,at,this,location,throws,ioexception,thrown,if,finalizing,marking,as,finished,fails,due,to,an,i,o,error;string,mark,checkpoint,as,finished,throws,ioexception
CheckpointStorageLocation -> CheckpointStateOutputStream createMetadataOutputStream() throws IOException_;1509045960;Creates the output stream to persist the checkpoint metadata to.__@return The output stream to persist the checkpoint metadata to._@throws IOException Thrown, if the stream cannot be opened due to an I/O error.;CheckpointStateOutputStream createMetadataOutputStream() throws IOException_;creates,the,output,stream,to,persist,the,checkpoint,metadata,to,return,the,output,stream,to,persist,the,checkpoint,metadata,to,throws,ioexception,thrown,if,the,stream,cannot,be,opened,due,to,an,i,o,error;checkpoint,state,output,stream,create,metadata,output,stream,throws,ioexception
CheckpointStorageLocation -> CheckpointStateOutputStream createMetadataOutputStream() throws IOException_;1515600846;Creates the output stream to persist the checkpoint metadata to.__@return The output stream to persist the checkpoint metadata to._@throws IOException Thrown, if the stream cannot be opened due to an I/O error.;CheckpointStateOutputStream createMetadataOutputStream() throws IOException_;creates,the,output,stream,to,persist,the,checkpoint,metadata,to,return,the,output,stream,to,persist,the,checkpoint,metadata,to,throws,ioexception,thrown,if,the,stream,cannot,be,opened,due,to,an,i,o,error;checkpoint,state,output,stream,create,metadata,output,stream,throws,ioexception
CheckpointStorageLocation -> CheckpointStateOutputStream createMetadataOutputStream() throws IOException_;1516365428;Creates the output stream to persist the checkpoint metadata to.__@return The output stream to persist the checkpoint metadata to._@throws IOException Thrown, if the stream cannot be opened due to an I/O error.;CheckpointStateOutputStream createMetadataOutputStream() throws IOException_;creates,the,output,stream,to,persist,the,checkpoint,metadata,to,return,the,output,stream,to,persist,the,checkpoint,metadata,to,throws,ioexception,thrown,if,the,stream,cannot,be,opened,due,to,an,i,o,error;checkpoint,state,output,stream,create,metadata,output,stream,throws,ioexception
