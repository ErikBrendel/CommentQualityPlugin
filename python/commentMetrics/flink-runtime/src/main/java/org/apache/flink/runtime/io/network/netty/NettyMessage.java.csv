# id;timestamp;commentText;codeText;commentWords;codeWords
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1509981552;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1510668947;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1515408360;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1515408360;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1516285456;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1516285497;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1516285878;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1516291532;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1518785736;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1528796721;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id);1528796721;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>Before sending the buffer, you must write the actual length after adding the contents as_an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id) {_		return allocateBuffer(allocator, id, -1)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,before,sending,the,buffer,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,return,allocate,buffer,allocator,id,1
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length);1509981552;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>length</tt> is unknown, you must write the actual length after adding the_contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param length_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length) {_		checkArgument(length <= Integer.MAX_VALUE - HEADER_LENGTH)___		final ByteBuf buffer__		if (length != -1) {_			buffer = allocator.directBuffer(HEADER_LENGTH + length)__		} else {_			_			buffer = allocator.directBuffer()__		}__		buffer.writeInt(HEADER_LENGTH + length)__		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,length,check,argument,length,integer,final,byte,buf,buffer,if,length,1,buffer,allocator,direct,buffer,length,else,buffer,allocator,direct,buffer,buffer,write,int,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length);1510668947;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>length</tt> is unknown, you must write the actual length after adding the_contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param length_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length) {_		checkArgument(length <= Integer.MAX_VALUE - HEADER_LENGTH)___		final ByteBuf buffer__		if (length != -1) {_			buffer = allocator.directBuffer(HEADER_LENGTH + length)__		} else {_			_			buffer = allocator.directBuffer()__		}__		buffer.writeInt(HEADER_LENGTH + length)__		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,length,check,argument,length,integer,final,byte,buf,buffer,if,length,1,buffer,allocator,direct,buffer,length,else,buffer,allocator,direct,buffer,buffer,write,int,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length);1515408360;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>length</tt> is unknown, you must write the actual length after adding the_contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param length_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length) {_		checkArgument(length <= Integer.MAX_VALUE - HEADER_LENGTH)___		final ByteBuf buffer__		if (length != -1) {_			buffer = allocator.directBuffer(HEADER_LENGTH + length)__		} else {_			_			buffer = allocator.directBuffer()__		}__		buffer.writeInt(HEADER_LENGTH + length)__		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,length,check,argument,length,integer,final,byte,buf,buffer,if,length,1,buffer,allocator,direct,buffer,length,else,buffer,allocator,direct,buffer,buffer,write,int,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length);1515408360;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>length</tt> is unknown, you must write the actual length after adding the_contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param length_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length) {_		checkArgument(length <= Integer.MAX_VALUE - HEADER_LENGTH)___		final ByteBuf buffer__		if (length != -1) {_			buffer = allocator.directBuffer(HEADER_LENGTH + length)__		} else {_			_			buffer = allocator.directBuffer()__		}__		buffer.writeInt(HEADER_LENGTH + length)__		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,length,check,argument,length,integer,final,byte,buf,buffer,if,length,1,buffer,allocator,direct,buffer,length,else,buffer,allocator,direct,buffer,buffer,write,int,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length);1516285456;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>length</tt> is unknown, you must write the actual length after adding the_contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param length_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length) {_		checkArgument(length <= Integer.MAX_VALUE - HEADER_LENGTH)___		final ByteBuf buffer__		if (length != -1) {_			buffer = allocator.directBuffer(HEADER_LENGTH + length)__		} else {_			_			buffer = allocator.directBuffer()__		}__		buffer.writeInt(HEADER_LENGTH + length)__		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,length,check,argument,length,integer,final,byte,buf,buffer,if,length,1,buffer,allocator,direct,buffer,length,else,buffer,allocator,direct,buffer,buffer,write,int,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length);1516285497;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>length</tt> is unknown, you must write the actual length after adding the_contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param length_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length) {_		checkArgument(length <= Integer.MAX_VALUE - HEADER_LENGTH)___		final ByteBuf buffer__		if (length != -1) {_			buffer = allocator.directBuffer(HEADER_LENGTH + length)__		} else {_			_			buffer = allocator.directBuffer()__		}__		buffer.writeInt(HEADER_LENGTH + length)__		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,length,check,argument,length,integer,final,byte,buf,buffer,if,length,1,buffer,allocator,direct,buffer,length,else,buffer,allocator,direct,buffer,buffer,write,int,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length);1516285878;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>length</tt> is unknown, you must write the actual length after adding the_contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param length_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int length) {_		checkArgument(length <= Integer.MAX_VALUE - HEADER_LENGTH)___		final ByteBuf buffer__		if (length != -1) {_			buffer = allocator.directBuffer(HEADER_LENGTH + length)__		} else {_			_			buffer = allocator.directBuffer()__		}__		buffer.writeInt(HEADER_LENGTH + length)__		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,length,check,argument,length,integer,final,byte,buf,buffer,if,length,1,buffer,allocator,direct,buffer,length,else,buffer,allocator,direct,buffer,buffer,write,int,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer( 			ByteBufAllocator allocator, 			byte id, 			int messageHeaderLength, 			int contentLength, 			boolean allocateForContent);1516291532;Allocates a new buffer and adds some header information for the frame decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param messageHeaderLength_additional header length that should be part of the allocated buffer and is written_outside of this method_@param contentLength_content length (or <tt>-1</tt> if unknown)_@param allocateForContent_whether to make room for the actual content in the buffer (<tt>true</tt>) or whether to_only return a buffer with the header information (<tt>false</tt>)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(_			ByteBufAllocator allocator,_			byte id,_			int messageHeaderLength,_			int contentLength,_			boolean allocateForContent) {_		checkArgument(contentLength <= Integer.MAX_VALUE - FRAME_HEADER_LENGTH)___		final ByteBuf buffer__		if (!allocateForContent) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength)__		} else if (contentLength != -1) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)__		} else {_			_			buffer = allocator.directBuffer()__		}_		buffer.writeInt(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)_ _		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,message,header,length,additional,header,length,that,should,be,part,of,the,allocated,buffer,and,is,written,outside,of,this,method,param,content,length,content,length,or,tt,1,tt,if,unknown,param,allocate,for,content,whether,to,make,room,for,the,actual,content,in,the,buffer,tt,true,tt,or,whether,to,only,return,a,buffer,with,the,header,information,tt,false,tt,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,message,header,length,int,content,length,boolean,allocate,for,content,check,argument,content,length,integer,final,byte,buf,buffer,if,allocate,for,content,buffer,allocator,direct,buffer,message,header,length,else,if,content,length,1,buffer,allocator,direct,buffer,message,header,length,content,length,else,buffer,allocator,direct,buffer,buffer,write,int,message,header,length,content,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer( 			ByteBufAllocator allocator, 			byte id, 			int messageHeaderLength, 			int contentLength, 			boolean allocateForContent);1518785736;Allocates a new buffer and adds some header information for the frame decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param messageHeaderLength_additional header length that should be part of the allocated buffer and is written_outside of this method_@param contentLength_content length (or <tt>-1</tt> if unknown)_@param allocateForContent_whether to make room for the actual content in the buffer (<tt>true</tt>) or whether to_only return a buffer with the header information (<tt>false</tt>)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(_			ByteBufAllocator allocator,_			byte id,_			int messageHeaderLength,_			int contentLength,_			boolean allocateForContent) {_		checkArgument(contentLength <= Integer.MAX_VALUE - FRAME_HEADER_LENGTH)___		final ByteBuf buffer__		if (!allocateForContent) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength)__		} else if (contentLength != -1) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)__		} else {_			_			buffer = allocator.directBuffer()__		}_		buffer.writeInt(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)_ _		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,message,header,length,additional,header,length,that,should,be,part,of,the,allocated,buffer,and,is,written,outside,of,this,method,param,content,length,content,length,or,tt,1,tt,if,unknown,param,allocate,for,content,whether,to,make,room,for,the,actual,content,in,the,buffer,tt,true,tt,or,whether,to,only,return,a,buffer,with,the,header,information,tt,false,tt,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,message,header,length,int,content,length,boolean,allocate,for,content,check,argument,content,length,integer,final,byte,buf,buffer,if,allocate,for,content,buffer,allocator,direct,buffer,message,header,length,else,if,content,length,1,buffer,allocator,direct,buffer,message,header,length,content,length,else,buffer,allocator,direct,buffer,buffer,write,int,message,header,length,content,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer( 			ByteBufAllocator allocator, 			byte id, 			int messageHeaderLength, 			int contentLength, 			boolean allocateForContent);1528796721;Allocates a new buffer and adds some header information for the frame decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param messageHeaderLength_additional header length that should be part of the allocated buffer and is written_outside of this method_@param contentLength_content length (or <tt>-1</tt> if unknown)_@param allocateForContent_whether to make room for the actual content in the buffer (<tt>true</tt>) or whether to_only return a buffer with the header information (<tt>false</tt>)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(_			ByteBufAllocator allocator,_			byte id,_			int messageHeaderLength,_			int contentLength,_			boolean allocateForContent) {_		checkArgument(contentLength <= Integer.MAX_VALUE - FRAME_HEADER_LENGTH)___		final ByteBuf buffer__		if (!allocateForContent) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength)__		} else if (contentLength != -1) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)__		} else {_			_			buffer = allocator.directBuffer()__		}_		buffer.writeInt(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)_ _		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,message,header,length,additional,header,length,that,should,be,part,of,the,allocated,buffer,and,is,written,outside,of,this,method,param,content,length,content,length,or,tt,1,tt,if,unknown,param,allocate,for,content,whether,to,make,room,for,the,actual,content,in,the,buffer,tt,true,tt,or,whether,to,only,return,a,buffer,with,the,header,information,tt,false,tt,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,message,header,length,int,content,length,boolean,allocate,for,content,check,argument,content,length,integer,final,byte,buf,buffer,if,allocate,for,content,buffer,allocator,direct,buffer,message,header,length,else,if,content,length,1,buffer,allocator,direct,buffer,message,header,length,content,length,else,buffer,allocator,direct,buffer,buffer,write,int,message,header,length,content,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer( 			ByteBufAllocator allocator, 			byte id, 			int messageHeaderLength, 			int contentLength, 			boolean allocateForContent);1528796721;Allocates a new buffer and adds some header information for the frame decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param messageHeaderLength_additional header length that should be part of the allocated buffer and is written_outside of this method_@param contentLength_content length (or <tt>-1</tt> if unknown)_@param allocateForContent_whether to make room for the actual content in the buffer (<tt>true</tt>) or whether to_only return a buffer with the header information (<tt>false</tt>)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(_			ByteBufAllocator allocator,_			byte id,_			int messageHeaderLength,_			int contentLength,_			boolean allocateForContent) {_		checkArgument(contentLength <= Integer.MAX_VALUE - FRAME_HEADER_LENGTH)___		final ByteBuf buffer__		if (!allocateForContent) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength)__		} else if (contentLength != -1) {_			buffer = allocator.directBuffer(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)__		} else {_			_			buffer = allocator.directBuffer()__		}_		buffer.writeInt(FRAME_HEADER_LENGTH + messageHeaderLength + contentLength)_ _		buffer.writeInt(MAGIC_NUMBER)__		buffer.writeByte(id)___		return buffer__	};allocates,a,new,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,message,header,length,additional,header,length,that,should,be,part,of,the,allocated,buffer,and,is,written,outside,of,this,method,param,content,length,content,length,or,tt,1,tt,if,unknown,param,allocate,for,content,whether,to,make,room,for,the,actual,content,in,the,buffer,tt,true,tt,or,whether,to,only,return,a,buffer,with,the,header,information,tt,false,tt,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,message,header,length,int,content,length,boolean,allocate,for,content,check,argument,content,length,integer,final,byte,buf,buffer,if,allocate,for,content,buffer,allocator,direct,buffer,message,header,length,else,if,content,length,1,buffer,allocator,direct,buffer,message,header,length,content,length,else,buffer,allocator,direct,buffer,buffer,write,int,message,header,length,content,length,buffer,write,int,buffer,write,byte,id,return,buffer
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength);1516291532;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param contentLength_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength) {_		return allocateBuffer(allocator, id, 0, contentLength, true)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,content,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,content,length,return,allocate,buffer,allocator,id,0,content,length,true
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength);1518785736;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param contentLength_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength) {_		return allocateBuffer(allocator, id, 0, contentLength, true)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,content,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,content,length,return,allocate,buffer,allocator,id,0,content,length,true
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength);1528796721;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param contentLength_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength) {_		return allocateBuffer(allocator, id, 0, contentLength, true)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,content,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,content,length,return,allocate,buffer,allocator,id,0,content,length,true
NettyMessage -> private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength);1528796721;Allocates a new (header and contents) buffer and adds some header information for the frame_decoder.__<p>If the <tt>contentLength</tt> is unknown, you must write the actual length after adding_the contents as an integer to position <tt>0</tt>!__@param allocator_byte buffer allocator to use_@param id_{@link NettyMessage} subclass ID_@param contentLength_content length (or <tt>-1</tt> if unknown)__@return a newly allocated direct buffer with header data written for {@link_NettyMessageDecoder};private static ByteBuf allocateBuffer(ByteBufAllocator allocator, byte id, int contentLength) {_		return allocateBuffer(allocator, id, 0, contentLength, true)__	};allocates,a,new,header,and,contents,buffer,and,adds,some,header,information,for,the,frame,decoder,p,if,the,tt,content,length,tt,is,unknown,you,must,write,the,actual,length,after,adding,the,contents,as,an,integer,to,position,tt,0,tt,param,allocator,byte,buffer,allocator,to,use,param,id,link,netty,message,subclass,id,param,content,length,content,length,or,tt,1,tt,if,unknown,return,a,newly,allocated,direct,buffer,with,header,data,written,for,link,netty,message,decoder;private,static,byte,buf,allocate,buffer,byte,buf,allocator,allocator,byte,id,int,content,length,return,allocate,buffer,allocator,id,0,content,length,true
