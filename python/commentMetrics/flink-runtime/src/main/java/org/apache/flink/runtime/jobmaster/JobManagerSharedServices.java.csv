# id;timestamp;commentText;codeText;commentWords;codeWords
JobManagerSharedServices -> public void shutdown() throws Exception;1518393108;Shutdown the {@link JobMaster} services.__<p>This method makes sure all services are closed or shut down, even when an exception occurred_in the shutdown of one component. The first encountered exception is thrown, with successive_exceptions added as suppressed exceptions.__@throws Exception The first Exception encountered during shutdown.;public void shutdown() throws Exception {_		Throwable firstException = null___		try {_			scheduledExecutorService.shutdownNow()__		} catch (Throwable t) {_			firstException = t__		}__		libraryCacheManager.shutdown()__		stackTraceSampleCoordinator.shutDown()__		backPressureStatsTracker.shutDown()___		if (firstException != null) {_			ExceptionUtils.rethrowException(firstException, "Error while shutting down JobManager services")__		}_	};shutdown,the,link,job,master,services,p,this,method,makes,sure,all,services,are,closed,or,shut,down,even,when,an,exception,occurred,in,the,shutdown,of,one,component,the,first,encountered,exception,is,thrown,with,successive,exceptions,added,as,suppressed,exceptions,throws,exception,the,first,exception,encountered,during,shutdown;public,void,shutdown,throws,exception,throwable,first,exception,null,try,scheduled,executor,service,shutdown,now,catch,throwable,t,first,exception,t,library,cache,manager,shutdown,stack,trace,sample,coordinator,shut,down,back,pressure,stats,tracker,shut,down,if,first,exception,null,exception,utils,rethrow,exception,first,exception,error,while,shutting,down,job,manager,services
JobManagerSharedServices -> public void shutdown() throws Exception;1518532391;Shutdown the {@link JobMaster} services.__<p>This method makes sure all services are closed or shut down, even when an exception occurred_in the shutdown of one component. The first encountered exception is thrown, with successive_exceptions added as suppressed exceptions.__@throws Exception The first Exception encountered during shutdown.;public void shutdown() throws Exception {_		Throwable firstException = null___		try {_			scheduledExecutorService.shutdownNow()__		} catch (Throwable t) {_			firstException = t__		}__		libraryCacheManager.shutdown()__		stackTraceSampleCoordinator.shutDown()__		backPressureStatsTracker.shutDown()___		if (firstException != null) {_			ExceptionUtils.rethrowException(firstException, "Error while shutting down JobManager services")__		}_	};shutdown,the,link,job,master,services,p,this,method,makes,sure,all,services,are,closed,or,shut,down,even,when,an,exception,occurred,in,the,shutdown,of,one,component,the,first,encountered,exception,is,thrown,with,successive,exceptions,added,as,suppressed,exceptions,throws,exception,the,first,exception,encountered,during,shutdown;public,void,shutdown,throws,exception,throwable,first,exception,null,try,scheduled,executor,service,shutdown,now,catch,throwable,t,first,exception,t,library,cache,manager,shutdown,stack,trace,sample,coordinator,shut,down,back,pressure,stats,tracker,shut,down,if,first,exception,null,exception,utils,rethrow,exception,first,exception,error,while,shutting,down,job,manager,services
JobManagerSharedServices -> public void shutdown() throws Exception;1519221322;Shutdown the {@link JobMaster} services.__<p>This method makes sure all services are closed or shut down, even when an exception occurred_in the shutdown of one component. The first encountered exception is thrown, with successive_exceptions added as suppressed exceptions.__@throws Exception The first Exception encountered during shutdown.;public void shutdown() throws Exception {_		Throwable firstException = null___		try {_			scheduledExecutorService.shutdownNow()__		} catch (Throwable t) {_			firstException = t__		}__		libraryCacheManager.shutdown()__		stackTraceSampleCoordinator.shutDown()__		backPressureStatsTracker.shutDown()___		if (firstException != null) {_			ExceptionUtils.rethrowException(firstException, "Error while shutting down JobManager services")__		}_	};shutdown,the,link,job,master,services,p,this,method,makes,sure,all,services,are,closed,or,shut,down,even,when,an,exception,occurred,in,the,shutdown,of,one,component,the,first,encountered,exception,is,thrown,with,successive,exceptions,added,as,suppressed,exceptions,throws,exception,the,first,exception,encountered,during,shutdown;public,void,shutdown,throws,exception,throwable,first,exception,null,try,scheduled,executor,service,shutdown,now,catch,throwable,t,first,exception,t,library,cache,manager,shutdown,stack,trace,sample,coordinator,shut,down,back,pressure,stats,tracker,shut,down,if,first,exception,null,exception,utils,rethrow,exception,first,exception,error,while,shutting,down,job,manager,services
JobManagerSharedServices -> public void shutdown() throws Exception;1547809385;Shutdown the {@link JobMaster} services.__<p>This method makes sure all services are closed or shut down, even when an exception occurred_in the shutdown of one component. The first encountered exception is thrown, with successive_exceptions added as suppressed exceptions.__@throws Exception The first Exception encountered during shutdown.;public void shutdown() throws Exception {_		Throwable firstException = null___		try {_			scheduledExecutorService.shutdownNow()__		} catch (Throwable t) {_			firstException = t__		}__		libraryCacheManager.shutdown()__		stackTraceSampleCoordinator.shutDown()__		backPressureStatsTracker.shutDown()___		if (firstException != null) {_			ExceptionUtils.rethrowException(firstException, "Error while shutting down JobManager services")__		}_	};shutdown,the,link,job,master,services,p,this,method,makes,sure,all,services,are,closed,or,shut,down,even,when,an,exception,occurred,in,the,shutdown,of,one,component,the,first,encountered,exception,is,thrown,with,successive,exceptions,added,as,suppressed,exceptions,throws,exception,the,first,exception,encountered,during,shutdown;public,void,shutdown,throws,exception,throwable,first,exception,null,try,scheduled,executor,service,shutdown,now,catch,throwable,t,first,exception,t,library,cache,manager,shutdown,stack,trace,sample,coordinator,shut,down,back,pressure,stats,tracker,shut,down,if,first,exception,null,exception,utils,rethrow,exception,first,exception,error,while,shutting,down,job,manager,services
