# id;timestamp;commentText;codeText;commentWords;codeWords
AllocatedSlot -> @Override 	public TaskManagerLocation getTaskManagerLocation();1538764056;Gets the location info of the TaskManager that offers this slot.__@return The location info of the TaskManager that offers this slot;@Override_	public TaskManagerLocation getTaskManagerLocation() {_		return taskManagerLocation__	};gets,the,location,info,of,the,task,manager,that,offers,this,slot,return,the,location,info,of,the,task,manager,that,offers,this,slot;override,public,task,manager,location,get,task,manager,location,return,task,manager,location
AllocatedSlot -> @Override 	public TaskManagerLocation getTaskManagerLocation();1549467949;Gets the location info of the TaskManager that offers this slot.__@return The location info of the TaskManager that offers this slot;@Override_	public TaskManagerLocation getTaskManagerLocation() {_		return taskManagerLocation__	};gets,the,location,info,of,the,task,manager,that,offers,this,slot,return,the,location,info,of,the,task,manager,that,offers,this,slot;override,public,task,manager,location,get,task,manager,location,return,task,manager,location
AllocatedSlot -> public boolean isUsed();1513261475;Returns true if this slot is not being used (e.g. a logical slot is allocated from this slot).__@return true if a logical slot is allocated from this slot, otherwise false;public boolean isUsed() {_		return payloadReference.get() != null__	};returns,true,if,this,slot,is,not,being,used,e,g,a,logical,slot,is,allocated,from,this,slot,return,true,if,a,logical,slot,is,allocated,from,this,slot,otherwise,false;public,boolean,is,used,return,payload,reference,get,null
AllocatedSlot -> public boolean isUsed();1525379117;Returns true if this slot is not being used (e.g. a logical slot is allocated from this slot).__@return true if a logical slot is allocated from this slot, otherwise false;public boolean isUsed() {_		return payloadReference.get() != null__	};returns,true,if,this,slot,is,not,being,used,e,g,a,logical,slot,is,allocated,from,this,slot,return,true,if,a,logical,slot,is,allocated,from,this,slot,otherwise,false;public,boolean,is,used,return,payload,reference,get,null
AllocatedSlot -> public boolean isUsed();1525872576;Returns true if this slot is not being used (e.g. a logical slot is allocated from this slot).__@return true if a logical slot is allocated from this slot, otherwise false;public boolean isUsed() {_		return payloadReference.get() != null__	};returns,true,if,this,slot,is,not,being,used,e,g,a,logical,slot,is,allocated,from,this,slot,return,true,if,a,logical,slot,is,allocated,from,this,slot,otherwise,false;public,boolean,is,used,return,payload,reference,get,null
AllocatedSlot -> public boolean isUsed();1538764056;Returns true if this slot is not being used (e.g. a logical slot is allocated from this slot).__@return true if a logical slot is allocated from this slot, otherwise false;public boolean isUsed() {_		return payloadReference.get() != null__	};returns,true,if,this,slot,is,not,being,used,e,g,a,logical,slot,is,allocated,from,this,slot,return,true,if,a,logical,slot,is,allocated,from,this,slot,otherwise,false;public,boolean,is,used,return,payload,reference,get,null
AllocatedSlot -> public boolean isUsed();1538764056;Returns true if this slot is being used (e.g. a logical slot is allocated from this slot).__@return true if a logical slot is allocated from this slot, otherwise false;public boolean isUsed() {_		return payloadReference.get() != null__	};returns,true,if,this,slot,is,being,used,e,g,a,logical,slot,is,allocated,from,this,slot,return,true,if,a,logical,slot,is,allocated,from,this,slot,otherwise,false;public,boolean,is,used,return,payload,reference,get,null
AllocatedSlot -> public boolean isUsed();1549467949;Returns true if this slot is being used (e.g. a logical slot is allocated from this slot).__@return true if a logical slot is allocated from this slot, otherwise false;public boolean isUsed() {_		return payloadReference.get() != null__	};returns,true,if,this,slot,is,being,used,e,g,a,logical,slot,is,allocated,from,this,slot,return,true,if,a,logical,slot,is,allocated,from,this,slot,otherwise,false;public,boolean,is,used,return,payload,reference,get,null
AllocatedSlot -> public boolean releasePayload(Throwable cause);1513261475;Triggers the release of the assigned payload. If the payload could be released,_then it is removed from the slot.__@param cause of the release operation_@return true if the payload could be released and was removed from the slot, otherwise false;public boolean releasePayload(Throwable cause) {_		final Payload payload = payloadReference.get()___		if (payload != null) {_			if (payload.release(cause)) {_				payloadReference.set(null)___				return true__			} else {_				return false__			}_		} else {_			return true__		}_	};triggers,the,release,of,the,assigned,payload,if,the,payload,could,be,released,then,it,is,removed,from,the,slot,param,cause,of,the,release,operation,return,true,if,the,payload,could,be,released,and,was,removed,from,the,slot,otherwise,false;public,boolean,release,payload,throwable,cause,final,payload,payload,payload,reference,get,if,payload,null,if,payload,release,cause,payload,reference,set,null,return,true,else,return,false,else,return,true
AllocatedSlot -> public boolean releasePayload(Throwable cause);1525379117;Triggers the release of the assigned payload. If the payload could be released,_then it is removed from the slot.__@param cause of the release operation_@return true if the payload could be released and was removed from the slot, otherwise false;public boolean releasePayload(Throwable cause) {_		final Payload payload = payloadReference.get()___		if (payload != null) {_			if (payload.release(cause)) {_				payloadReference.set(null)___				return true__			} else {_				return false__			}_		} else {_			return true__		}_	};triggers,the,release,of,the,assigned,payload,if,the,payload,could,be,released,then,it,is,removed,from,the,slot,param,cause,of,the,release,operation,return,true,if,the,payload,could,be,released,and,was,removed,from,the,slot,otherwise,false;public,boolean,release,payload,throwable,cause,final,payload,payload,payload,reference,get,if,payload,null,if,payload,release,cause,payload,reference,set,null,return,true,else,return,false,else,return,true
AllocatedSlot -> @Override 	public TaskManagerGateway getTaskManagerGateway();1538764056;Gets the actor gateway that can be used to send messages to the TaskManager._<p>_This method should be removed once the new interface-based RPC abstraction is in place__@return The actor gateway that can be used to send messages to the TaskManager.;@Override_	public TaskManagerGateway getTaskManagerGateway() {_		return taskManagerGateway__	};gets,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager,p,this,method,should,be,removed,once,the,new,interface,based,rpc,abstraction,is,in,place,return,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager;override,public,task,manager,gateway,get,task,manager,gateway,return,task,manager,gateway
AllocatedSlot -> @Override 	public TaskManagerGateway getTaskManagerGateway();1549467949;Gets the actor gateway that can be used to send messages to the TaskManager._<p>_This method should be removed once the new interface-based RPC abstraction is in place__@return The actor gateway that can be used to send messages to the TaskManager.;@Override_	public TaskManagerGateway getTaskManagerGateway() {_		return taskManagerGateway__	};gets,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager,p,this,method,should,be,removed,once,the,new,interface,based,rpc,abstraction,is,in,place,return,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager;override,public,task,manager,gateway,get,task,manager,gateway,return,task,manager,gateway
AllocatedSlot -> public void releasePayload(Throwable cause);1525872576;Triggers the release of the assigned payload. If the payload could be released,_then it is removed from the slot.__@param cause of the release operation;public void releasePayload(Throwable cause) {_		final Payload payload = payloadReference.get()___		if (payload != null) {_			payload.release(cause)__			payloadReference.set(null)__		}_	};triggers,the,release,of,the,assigned,payload,if,the,payload,could,be,released,then,it,is,removed,from,the,slot,param,cause,of,the,release,operation;public,void,release,payload,throwable,cause,final,payload,payload,payload,reference,get,if,payload,null,payload,release,cause,payload,reference,set,null
AllocatedSlot -> public void releasePayload(Throwable cause);1538764056;Triggers the release of the assigned payload. If the payload could be released,_then it is removed from the slot.__@param cause of the release operation;public void releasePayload(Throwable cause) {_		final Payload payload = payloadReference.get()___		if (payload != null) {_			payload.release(cause)__			payloadReference.set(null)__		}_	};triggers,the,release,of,the,assigned,payload,if,the,payload,could,be,released,then,it,is,removed,from,the,slot,param,cause,of,the,release,operation;public,void,release,payload,throwable,cause,final,payload,payload,payload,reference,get,if,payload,null,payload,release,cause,payload,reference,set,null
AllocatedSlot -> public void releasePayload(Throwable cause);1538764056;Triggers the release of the assigned payload. If the payload could be released,_then it is removed from the slot.__@param cause of the release operation;public void releasePayload(Throwable cause) {_		final Payload payload = payloadReference.get()___		if (payload != null) {_			payload.release(cause)__			payloadReference.set(null)__		}_	};triggers,the,release,of,the,assigned,payload,if,the,payload,could,be,released,then,it,is,removed,from,the,slot,param,cause,of,the,release,operation;public,void,release,payload,throwable,cause,final,payload,payload,payload,reference,get,if,payload,null,payload,release,cause,payload,reference,set,null
AllocatedSlot -> public void releasePayload(Throwable cause);1549467949;Triggers the release of the assigned payload. If the payload could be released,_then it is removed from the slot.__@param cause of the release operation;public void releasePayload(Throwable cause) {_		final Payload payload = payloadReference.get()___		if (payload != null) {_			payload.release(cause)__			payloadReference.set(null)__		}_	};triggers,the,release,of,the,assigned,payload,if,the,payload,could,be,released,then,it,is,removed,from,the,slot,param,cause,of,the,release,operation;public,void,release,payload,throwable,cause,final,payload,payload,payload,reference,get,if,payload,null,payload,release,cause,payload,reference,set,null
AllocatedSlot -> @Override 	public AllocationID getAllocationId();1538764056;Gets the ID under which the slot is allocated, which uniquely identifies the slot.__@return The ID under which the slot is allocated;@Override_	public AllocationID getAllocationId() {_		return allocationId__	};gets,the,id,under,which,the,slot,is,allocated,which,uniquely,identifies,the,slot,return,the,id,under,which,the,slot,is,allocated;override,public,allocation,id,get,allocation,id,return,allocation,id
AllocatedSlot -> @Override 	public AllocationID getAllocationId();1549467949;Gets the ID under which the slot is allocated, which uniquely identifies the slot.__@return The ID under which the slot is allocated;@Override_	public AllocationID getAllocationId() {_		return allocationId__	};gets,the,id,under,which,the,slot,is,allocated,which,uniquely,identifies,the,slot,return,the,id,under,which,the,slot,is,allocated;override,public,allocation,id,get,allocation,id,return,allocation,id
AllocatedSlot -> Payload -> void release(Throwable cause)_;1525872576;Releases the payload__@param cause of the payload release;void release(Throwable cause)_;releases,the,payload,param,cause,of,the,payload,release;void,release,throwable,cause
AllocatedSlot -> Payload -> void release(Throwable cause)_;1538764056;Releases the payload__@param cause of the payload release;void release(Throwable cause)_;releases,the,payload,param,cause,of,the,payload,release;void,release,throwable,cause
AllocatedSlot -> Payload -> void release(Throwable cause)_;1549467949;Releases the payload__@param cause of the payload release;void release(Throwable cause)_;releases,the,payload,param,cause,of,the,payload,release;void,release,throwable,cause
AllocatedSlot -> public ResourceProfile getResourceProfile();1513261475;Gets the resource profile of the slot.__@return The resource profile of the slot.;public ResourceProfile getResourceProfile() {_		return resourceProfile__	};gets,the,resource,profile,of,the,slot,return,the,resource,profile,of,the,slot;public,resource,profile,get,resource,profile,return,resource,profile
AllocatedSlot -> public ResourceProfile getResourceProfile();1525379117;Gets the resource profile of the slot.__@return The resource profile of the slot.;public ResourceProfile getResourceProfile() {_		return resourceProfile__	};gets,the,resource,profile,of,the,slot,return,the,resource,profile,of,the,slot;public,resource,profile,get,resource,profile,return,resource,profile
AllocatedSlot -> public ResourceProfile getResourceProfile();1525872576;Gets the resource profile of the slot.__@return The resource profile of the slot.;public ResourceProfile getResourceProfile() {_		return resourceProfile__	};gets,the,resource,profile,of,the,slot,return,the,resource,profile,of,the,slot;public,resource,profile,get,resource,profile,return,resource,profile
AllocatedSlot -> public ResourceProfile getResourceProfile();1538764056;Gets the resource profile of the slot.__@return The resource profile of the slot.;public ResourceProfile getResourceProfile() {_		return resourceProfile__	};gets,the,resource,profile,of,the,slot,return,the,resource,profile,of,the,slot;public,resource,profile,get,resource,profile,return,resource,profile
AllocatedSlot -> public ResourceProfile getResourceProfile();1549467949;Gets the resource profile of the slot.__@return The resource profile of the slot.;public ResourceProfile getResourceProfile() {_		return resourceProfile__	};gets,the,resource,profile,of,the,slot,return,the,resource,profile,of,the,slot;public,resource,profile,get,resource,profile,return,resource,profile
AllocatedSlot -> public int getPhysicalSlotNumber();1513261475;Returns the physical slot number of the allocated slot. The physical slot number corresponds_to the slot index on the TaskExecutor.__@return Physical slot number of the allocated slot;public int getPhysicalSlotNumber() {_		return physicalSlotNumber__	};returns,the,physical,slot,number,of,the,allocated,slot,the,physical,slot,number,corresponds,to,the,slot,index,on,the,task,executor,return,physical,slot,number,of,the,allocated,slot;public,int,get,physical,slot,number,return,physical,slot,number
AllocatedSlot -> public int getPhysicalSlotNumber();1525379117;Returns the physical slot number of the allocated slot. The physical slot number corresponds_to the slot index on the TaskExecutor.__@return Physical slot number of the allocated slot;public int getPhysicalSlotNumber() {_		return physicalSlotNumber__	};returns,the,physical,slot,number,of,the,allocated,slot,the,physical,slot,number,corresponds,to,the,slot,index,on,the,task,executor,return,physical,slot,number,of,the,allocated,slot;public,int,get,physical,slot,number,return,physical,slot,number
AllocatedSlot -> public int getPhysicalSlotNumber();1525872576;Returns the physical slot number of the allocated slot. The physical slot number corresponds_to the slot index on the TaskExecutor.__@return Physical slot number of the allocated slot;public int getPhysicalSlotNumber() {_		return physicalSlotNumber__	};returns,the,physical,slot,number,of,the,allocated,slot,the,physical,slot,number,corresponds,to,the,slot,index,on,the,task,executor,return,physical,slot,number,of,the,allocated,slot;public,int,get,physical,slot,number,return,physical,slot,number
AllocatedSlot -> public SlotID getSlotId();1525379117;Gets the Slot's unique ID defined by its TaskManager.;public SlotID getSlotId() {_		return new SlotID(getTaskManagerId(), physicalSlotNumber)__	};gets,the,slot,s,unique,id,defined,by,its,task,manager;public,slot,id,get,slot,id,return,new,slot,id,get,task,manager,id,physical,slot,number
AllocatedSlot -> public SlotID getSlotId();1525872576;Gets the Slot's unique ID defined by its TaskManager.;public SlotID getSlotId() {_		return new SlotID(getTaskManagerId(), physicalSlotNumber)__	};gets,the,slot,s,unique,id,defined,by,its,task,manager;public,slot,id,get,slot,id,return,new,slot,id,get,task,manager,id,physical,slot,number
AllocatedSlot -> public SlotID getSlotId();1538764056;Gets the Slot's unique ID defined by its TaskManager.;public SlotID getSlotId() {_		return new SlotID(getTaskManagerId(), physicalSlotNumber)__	};gets,the,slot,s,unique,id,defined,by,its,task,manager;public,slot,id,get,slot,id,return,new,slot,id,get,task,manager,id,physical,slot,number
AllocatedSlot -> public SlotID getSlotId();1538764056;Gets the Slot's unique ID defined by its TaskManager.;public SlotID getSlotId() {_		return new SlotID(getTaskManagerId(), physicalSlotNumber)__	};gets,the,slot,s,unique,id,defined,by,its,task,manager;public,slot,id,get,slot,id,return,new,slot,id,get,task,manager,id,physical,slot,number
AllocatedSlot -> public SlotID getSlotId();1549467949;Gets the Slot's unique ID defined by its TaskManager.;public SlotID getSlotId() {_		return new SlotID(getTaskManagerId(), physicalSlotNumber)__	};gets,the,slot,s,unique,id,defined,by,its,task,manager;public,slot,id,get,slot,id,return,new,slot,id,get,task,manager,id,physical,slot,number
AllocatedSlot -> public TaskManagerLocation getTaskManagerLocation();1513261475;Gets the location info of the TaskManager that offers this slot.__@return The location info of the TaskManager that offers this slot;public TaskManagerLocation getTaskManagerLocation() {_		return taskManagerLocation__	};gets,the,location,info,of,the,task,manager,that,offers,this,slot,return,the,location,info,of,the,task,manager,that,offers,this,slot;public,task,manager,location,get,task,manager,location,return,task,manager,location
AllocatedSlot -> public TaskManagerLocation getTaskManagerLocation();1525379117;Gets the location info of the TaskManager that offers this slot.__@return The location info of the TaskManager that offers this slot;public TaskManagerLocation getTaskManagerLocation() {_		return taskManagerLocation__	};gets,the,location,info,of,the,task,manager,that,offers,this,slot,return,the,location,info,of,the,task,manager,that,offers,this,slot;public,task,manager,location,get,task,manager,location,return,task,manager,location
AllocatedSlot -> public TaskManagerLocation getTaskManagerLocation();1525872576;Gets the location info of the TaskManager that offers this slot.__@return The location info of the TaskManager that offers this slot;public TaskManagerLocation getTaskManagerLocation() {_		return taskManagerLocation__	};gets,the,location,info,of,the,task,manager,that,offers,this,slot,return,the,location,info,of,the,task,manager,that,offers,this,slot;public,task,manager,location,get,task,manager,location,return,task,manager,location
AllocatedSlot -> Payload -> boolean release(Throwable cause)_;1513261475;Releases the payload. If the payload could be released, then it returns true,_otherwise false.__@param cause of the payload release_@return true if the payload could be released, otherwise false;boolean release(Throwable cause)_;releases,the,payload,if,the,payload,could,be,released,then,it,returns,true,otherwise,false,param,cause,of,the,payload,release,return,true,if,the,payload,could,be,released,otherwise,false;boolean,release,throwable,cause
AllocatedSlot -> Payload -> boolean release(Throwable cause)_;1525379117;Releases the payload. If the payload could be released, then it returns true,_otherwise false.__@param cause of the payload release_@return true if the payload could be released, otherwise false;boolean release(Throwable cause)_;releases,the,payload,if,the,payload,could,be,released,then,it,returns,true,otherwise,false,param,cause,of,the,payload,release,return,true,if,the,payload,could,be,released,otherwise,false;boolean,release,throwable,cause
AllocatedSlot -> @Override 	public final int hashCode();1513261475;This always returns a reference hash code.;@Override_	public final int hashCode() {_		return super.hashCode()__	};this,always,returns,a,reference,hash,code;override,public,final,int,hash,code,return,super,hash,code
AllocatedSlot -> @Override 	public final int hashCode();1525379117;This always returns a reference hash code.;@Override_	public final int hashCode() {_		return super.hashCode()__	};this,always,returns,a,reference,hash,code;override,public,final,int,hash,code,return,super,hash,code
AllocatedSlot -> @Override 	public final int hashCode();1525872576;This always returns a reference hash code.;@Override_	public final int hashCode() {_		return super.hashCode()__	};this,always,returns,a,reference,hash,code;override,public,final,int,hash,code,return,super,hash,code
AllocatedSlot -> @Override 	public final int hashCode();1538764056;This always returns a reference hash code.;@Override_	public final int hashCode() {_		return super.hashCode()__	};this,always,returns,a,reference,hash,code;override,public,final,int,hash,code,return,super,hash,code
AllocatedSlot -> @Override 	public final int hashCode();1538764056;This always returns a reference hash code.;@Override_	public final int hashCode() {_		return super.hashCode()__	};this,always,returns,a,reference,hash,code;override,public,final,int,hash,code,return,super,hash,code
AllocatedSlot -> @Override 	public final int hashCode();1549467949;This always returns a reference hash code.;@Override_	public final int hashCode() {_		return super.hashCode()__	};this,always,returns,a,reference,hash,code;override,public,final,int,hash,code,return,super,hash,code
AllocatedSlot -> public boolean tryAssignPayload(Payload payload);1513261475;Tries to assign the given payload to this allocated slot. This only works if there has not_been another payload assigned to this slot.__@param payload to assign to this slot_@return true if the payload could be assigned, otherwise false;public boolean tryAssignPayload(Payload payload) {_		return payloadReference.compareAndSet(null, payload)__	};tries,to,assign,the,given,payload,to,this,allocated,slot,this,only,works,if,there,has,not,been,another,payload,assigned,to,this,slot,param,payload,to,assign,to,this,slot,return,true,if,the,payload,could,be,assigned,otherwise,false;public,boolean,try,assign,payload,payload,payload,return,payload,reference,compare,and,set,null,payload
AllocatedSlot -> public boolean tryAssignPayload(Payload payload);1525379117;Tries to assign the given payload to this allocated slot. This only works if there has not_been another payload assigned to this slot.__@param payload to assign to this slot_@return true if the payload could be assigned, otherwise false;public boolean tryAssignPayload(Payload payload) {_		return payloadReference.compareAndSet(null, payload)__	};tries,to,assign,the,given,payload,to,this,allocated,slot,this,only,works,if,there,has,not,been,another,payload,assigned,to,this,slot,param,payload,to,assign,to,this,slot,return,true,if,the,payload,could,be,assigned,otherwise,false;public,boolean,try,assign,payload,payload,payload,return,payload,reference,compare,and,set,null,payload
AllocatedSlot -> public boolean tryAssignPayload(Payload payload);1525872576;Tries to assign the given payload to this allocated slot. This only works if there has not_been another payload assigned to this slot.__@param payload to assign to this slot_@return true if the payload could be assigned, otherwise false;public boolean tryAssignPayload(Payload payload) {_		return payloadReference.compareAndSet(null, payload)__	};tries,to,assign,the,given,payload,to,this,allocated,slot,this,only,works,if,there,has,not,been,another,payload,assigned,to,this,slot,param,payload,to,assign,to,this,slot,return,true,if,the,payload,could,be,assigned,otherwise,false;public,boolean,try,assign,payload,payload,payload,return,payload,reference,compare,and,set,null,payload
AllocatedSlot -> public boolean tryAssignPayload(Payload payload);1538764056;Tries to assign the given payload to this allocated slot. This only works if there has not_been another payload assigned to this slot.__@param payload to assign to this slot_@return true if the payload could be assigned, otherwise false;public boolean tryAssignPayload(Payload payload) {_		return payloadReference.compareAndSet(null, payload)__	};tries,to,assign,the,given,payload,to,this,allocated,slot,this,only,works,if,there,has,not,been,another,payload,assigned,to,this,slot,param,payload,to,assign,to,this,slot,return,true,if,the,payload,could,be,assigned,otherwise,false;public,boolean,try,assign,payload,payload,payload,return,payload,reference,compare,and,set,null,payload
AllocatedSlot -> public boolean tryAssignPayload(Payload payload);1549467949;Tries to assign the given payload to this allocated slot. This only works if there has not_been another payload assigned to this slot.__@param payload to assign to this slot_@return true if the payload could be assigned, otherwise false;public boolean tryAssignPayload(Payload payload) {_		return payloadReference.compareAndSet(null, payload)__	};tries,to,assign,the,given,payload,to,this,allocated,slot,this,only,works,if,there,has,not,been,another,payload,assigned,to,this,slot,param,payload,to,assign,to,this,slot,return,true,if,the,payload,could,be,assigned,otherwise,false;public,boolean,try,assign,payload,payload,payload,return,payload,reference,compare,and,set,null,payload
AllocatedSlot -> public AllocationID getAllocationId();1513261475;Gets the ID under which the slot is allocated, which uniquely identifies the slot.__@return The ID under which the slot is allocated;public AllocationID getAllocationId() {_		return allocationId__	};gets,the,id,under,which,the,slot,is,allocated,which,uniquely,identifies,the,slot,return,the,id,under,which,the,slot,is,allocated;public,allocation,id,get,allocation,id,return,allocation,id
AllocatedSlot -> public AllocationID getAllocationId();1525379117;Gets the ID under which the slot is allocated, which uniquely identifies the slot.__@return The ID under which the slot is allocated;public AllocationID getAllocationId() {_		return allocationId__	};gets,the,id,under,which,the,slot,is,allocated,which,uniquely,identifies,the,slot,return,the,id,under,which,the,slot,is,allocated;public,allocation,id,get,allocation,id,return,allocation,id
AllocatedSlot -> public AllocationID getAllocationId();1525872576;Gets the ID under which the slot is allocated, which uniquely identifies the slot.__@return The ID under which the slot is allocated;public AllocationID getAllocationId() {_		return allocationId__	};gets,the,id,under,which,the,slot,is,allocated,which,uniquely,identifies,the,slot,return,the,id,under,which,the,slot,is,allocated;public,allocation,id,get,allocation,id,return,allocation,id
AllocatedSlot -> @Override 	public int getPhysicalSlotNumber();1538764056;Returns the physical slot number of the allocated slot. The physical slot number corresponds_to the slot index on the TaskExecutor.__@return Physical slot number of the allocated slot;@Override_	public int getPhysicalSlotNumber() {_		return physicalSlotNumber__	};returns,the,physical,slot,number,of,the,allocated,slot,the,physical,slot,number,corresponds,to,the,slot,index,on,the,task,executor,return,physical,slot,number,of,the,allocated,slot;override,public,int,get,physical,slot,number,return,physical,slot,number
AllocatedSlot -> @Override 	public int getPhysicalSlotNumber();1549467949;Returns the physical slot number of the allocated slot. The physical slot number corresponds_to the slot index on the TaskExecutor.__@return Physical slot number of the allocated slot;@Override_	public int getPhysicalSlotNumber() {_		return physicalSlotNumber__	};returns,the,physical,slot,number,of,the,allocated,slot,the,physical,slot,number,corresponds,to,the,slot,index,on,the,task,executor,return,physical,slot,number,of,the,allocated,slot;override,public,int,get,physical,slot,number,return,physical,slot,number
AllocatedSlot -> public ResourceID getTaskManagerId();1513261475;Gets the ID of the TaskManager on which this slot was allocated.__<p>This is equivalent to {@link #getTaskManagerLocation()#getTaskManagerId()}.__@return This slot's TaskManager's ID.;public ResourceID getTaskManagerId() {_		return getTaskManagerLocation().getResourceID()__	};gets,the,id,of,the,task,manager,on,which,this,slot,was,allocated,p,this,is,equivalent,to,link,get,task,manager,location,get,task,manager,id,return,this,slot,s,task,manager,s,id;public,resource,id,get,task,manager,id,return,get,task,manager,location,get,resource,id
AllocatedSlot -> public ResourceID getTaskManagerId();1525379117;Gets the ID of the TaskManager on which this slot was allocated.__<p>This is equivalent to {@link #getTaskManagerLocation()#getTaskManagerId()}.__@return This slot's TaskManager's ID.;public ResourceID getTaskManagerId() {_		return getTaskManagerLocation().getResourceID()__	};gets,the,id,of,the,task,manager,on,which,this,slot,was,allocated,p,this,is,equivalent,to,link,get,task,manager,location,get,task,manager,id,return,this,slot,s,task,manager,s,id;public,resource,id,get,task,manager,id,return,get,task,manager,location,get,resource,id
AllocatedSlot -> public ResourceID getTaskManagerId();1525872576;Gets the ID of the TaskManager on which this slot was allocated.__<p>This is equivalent to {@link #getTaskManagerLocation()#getTaskManagerId()}.__@return This slot's TaskManager's ID.;public ResourceID getTaskManagerId() {_		return getTaskManagerLocation().getResourceID()__	};gets,the,id,of,the,task,manager,on,which,this,slot,was,allocated,p,this,is,equivalent,to,link,get,task,manager,location,get,task,manager,id,return,this,slot,s,task,manager,s,id;public,resource,id,get,task,manager,id,return,get,task,manager,location,get,resource,id
AllocatedSlot -> public ResourceID getTaskManagerId();1538764056;Gets the ID of the TaskManager on which this slot was allocated.__<p>This is equivalent to {@link #getTaskManagerLocation()#getTaskManagerId()}.__@return This slot's TaskManager's ID.;public ResourceID getTaskManagerId() {_		return getTaskManagerLocation().getResourceID()__	};gets,the,id,of,the,task,manager,on,which,this,slot,was,allocated,p,this,is,equivalent,to,link,get,task,manager,location,get,task,manager,id,return,this,slot,s,task,manager,s,id;public,resource,id,get,task,manager,id,return,get,task,manager,location,get,resource,id
AllocatedSlot -> public ResourceID getTaskManagerId();1538764056;Gets the ID of the TaskManager on which this slot was allocated.__<p>This is equivalent to {@link #getTaskManagerLocation()#getTaskManagerId()}.__@return This slot's TaskManager's ID.;public ResourceID getTaskManagerId() {_		return getTaskManagerLocation().getResourceID()__	};gets,the,id,of,the,task,manager,on,which,this,slot,was,allocated,p,this,is,equivalent,to,link,get,task,manager,location,get,task,manager,id,return,this,slot,s,task,manager,s,id;public,resource,id,get,task,manager,id,return,get,task,manager,location,get,resource,id
AllocatedSlot -> public ResourceID getTaskManagerId();1549467949;Gets the ID of the TaskManager on which this slot was allocated.__<p>This is equivalent to {@link #getTaskManagerLocation()#getTaskManagerId()}.__@return This slot's TaskManager's ID.;public ResourceID getTaskManagerId() {_		return getTaskManagerLocation().getResourceID()__	};gets,the,id,of,the,task,manager,on,which,this,slot,was,allocated,p,this,is,equivalent,to,link,get,task,manager,location,get,task,manager,id,return,this,slot,s,task,manager,s,id;public,resource,id,get,task,manager,id,return,get,task,manager,location,get,resource,id
AllocatedSlot -> @Override 	public final boolean equals(Object obj);1513261475;This always checks based on reference equality.;@Override_	public final boolean equals(Object obj) {_		return this == obj__	};this,always,checks,based,on,reference,equality;override,public,final,boolean,equals,object,obj,return,this,obj
AllocatedSlot -> @Override 	public final boolean equals(Object obj);1525379117;This always checks based on reference equality.;@Override_	public final boolean equals(Object obj) {_		return this == obj__	};this,always,checks,based,on,reference,equality;override,public,final,boolean,equals,object,obj,return,this,obj
AllocatedSlot -> @Override 	public final boolean equals(Object obj);1525872576;This always checks based on reference equality.;@Override_	public final boolean equals(Object obj) {_		return this == obj__	};this,always,checks,based,on,reference,equality;override,public,final,boolean,equals,object,obj,return,this,obj
AllocatedSlot -> @Override 	public final boolean equals(Object obj);1538764056;This always checks based on reference equality.;@Override_	public final boolean equals(Object obj) {_		return this == obj__	};this,always,checks,based,on,reference,equality;override,public,final,boolean,equals,object,obj,return,this,obj
AllocatedSlot -> @Override 	public final boolean equals(Object obj);1538764056;This always checks based on reference equality.;@Override_	public final boolean equals(Object obj) {_		return this == obj__	};this,always,checks,based,on,reference,equality;override,public,final,boolean,equals,object,obj,return,this,obj
AllocatedSlot -> @Override 	public final boolean equals(Object obj);1549467949;This always checks based on reference equality.;@Override_	public final boolean equals(Object obj) {_		return this == obj__	};this,always,checks,based,on,reference,equality;override,public,final,boolean,equals,object,obj,return,this,obj
AllocatedSlot -> public TaskManagerGateway getTaskManagerGateway();1513261475;Gets the actor gateway that can be used to send messages to the TaskManager._<p>_This method should be removed once the new interface-based RPC abstraction is in place__@return The actor gateway that can be used to send messages to the TaskManager.;public TaskManagerGateway getTaskManagerGateway() {_		return taskManagerGateway__	};gets,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager,p,this,method,should,be,removed,once,the,new,interface,based,rpc,abstraction,is,in,place,return,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager;public,task,manager,gateway,get,task,manager,gateway,return,task,manager,gateway
AllocatedSlot -> public TaskManagerGateway getTaskManagerGateway();1525379117;Gets the actor gateway that can be used to send messages to the TaskManager._<p>_This method should be removed once the new interface-based RPC abstraction is in place__@return The actor gateway that can be used to send messages to the TaskManager.;public TaskManagerGateway getTaskManagerGateway() {_		return taskManagerGateway__	};gets,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager,p,this,method,should,be,removed,once,the,new,interface,based,rpc,abstraction,is,in,place,return,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager;public,task,manager,gateway,get,task,manager,gateway,return,task,manager,gateway
AllocatedSlot -> public TaskManagerGateway getTaskManagerGateway();1525872576;Gets the actor gateway that can be used to send messages to the TaskManager._<p>_This method should be removed once the new interface-based RPC abstraction is in place__@return The actor gateway that can be used to send messages to the TaskManager.;public TaskManagerGateway getTaskManagerGateway() {_		return taskManagerGateway__	};gets,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager,p,this,method,should,be,removed,once,the,new,interface,based,rpc,abstraction,is,in,place,return,the,actor,gateway,that,can,be,used,to,send,messages,to,the,task,manager;public,task,manager,gateway,get,task,manager,gateway,return,task,manager,gateway
