# id;timestamp;commentText;codeText;commentWords;codeWords
JobGraph -> private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked, 								final HashSet<JobVertexID> permanentlyMarked);1405024514;Auxiliary method for cycle detection. Performs a depth-first traversal with vertex markings to detect a cycle._If a node with a temporary marking is found, then there is a cycle. Once all children of a vertex have been_traversed the parent node cannot be part of another cycle and is thus permanently marked.__@param jv current job vertex to check_@param temporarilyMarked set of temporarily marked nodes_@param permanentlyMarked set of permanently marked nodes_@return <code>true</code> if there is a cycle, <code>false</code> otherwise;private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked,_								final HashSet<JobVertexID> permanentlyMarked){_		JobVertexID vertexID = jv.getID()___		if(permanentlyMarked.contains(vertexID)){_			return false__		}else if(temporarilyMarked.contains(vertexID)){_			return true__		}else{_			temporarilyMarked.add(vertexID)___			for(int i = 0_ i < jv.getNumberOfForwardConnections()_ i++){_				if(detectCycle(jv.getForwardConnection(i).getConnectedVertex(), temporarilyMarked, permanentlyMarked)){_					return true__				}_			}__			permanentlyMarked.add(vertexID)__			return false__		}_	};auxiliary,method,for,cycle,detection,performs,a,depth,first,traversal,with,vertex,markings,to,detect,a,cycle,if,a,node,with,a,temporary,marking,is,found,then,there,is,a,cycle,once,all,children,of,a,vertex,have,been,traversed,the,parent,node,cannot,be,part,of,another,cycle,and,is,thus,permanently,marked,param,jv,current,job,vertex,to,check,param,temporarily,marked,set,of,temporarily,marked,nodes,param,permanently,marked,set,of,permanently,marked,nodes,return,code,true,code,if,there,is,a,cycle,code,false,code,otherwise;private,boolean,detect,cycle,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,temporarily,marked,final,hash,set,job,vertex,id,permanently,marked,job,vertex,id,vertex,id,jv,get,id,if,permanently,marked,contains,vertex,id,return,false,else,if,temporarily,marked,contains,vertex,id,return,true,else,temporarily,marked,add,vertex,id,for,int,i,0,i,jv,get,number,of,forward,connections,i,if,detect,cycle,jv,get,forward,connection,i,get,connected,vertex,temporarily,marked,permanently,marked,return,true,permanently,marked,add,vertex,id,return,false
JobGraph -> private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked, 								final HashSet<JobVertexID> permanentlyMarked);1405090423;Auxiliary method for cycle detection. Performs a depth-first traversal with vertex markings to detect a cycle._If a node with a temporary marking is found, then there is a cycle. Once all children of a vertex have been_traversed the parent node cannot be part of another cycle and is thus permanently marked.__@param jv current job vertex to check_@param temporarilyMarked set of temporarily marked nodes_@param permanentlyMarked set of permanently marked nodes_@return <code>true</code> if there is a cycle, <code>false</code> otherwise;private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked,_								final HashSet<JobVertexID> permanentlyMarked){_		JobVertexID vertexID = jv.getID()___		if(permanentlyMarked.contains(vertexID)){_			return false__		}else if(temporarilyMarked.contains(vertexID)){_			return true__		}else{_			temporarilyMarked.add(vertexID)___			for(int i = 0_ i < jv.getNumberOfForwardConnections()_ i++){_				if(detectCycle(jv.getForwardConnection(i).getConnectedVertex(), temporarilyMarked, permanentlyMarked)){_					return true__				}_			}__			permanentlyMarked.add(vertexID)__			return false__		}_	};auxiliary,method,for,cycle,detection,performs,a,depth,first,traversal,with,vertex,markings,to,detect,a,cycle,if,a,node,with,a,temporary,marking,is,found,then,there,is,a,cycle,once,all,children,of,a,vertex,have,been,traversed,the,parent,node,cannot,be,part,of,another,cycle,and,is,thus,permanently,marked,param,jv,current,job,vertex,to,check,param,temporarily,marked,set,of,temporarily,marked,nodes,param,permanently,marked,set,of,permanently,marked,nodes,return,code,true,code,if,there,is,a,cycle,code,false,code,otherwise;private,boolean,detect,cycle,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,temporarily,marked,final,hash,set,job,vertex,id,permanently,marked,job,vertex,id,vertex,id,jv,get,id,if,permanently,marked,contains,vertex,id,return,false,else,if,temporarily,marked,contains,vertex,id,return,true,else,temporarily,marked,add,vertex,id,for,int,i,0,i,jv,get,number,of,forward,connections,i,if,detect,cycle,jv,get,forward,connection,i,get,connected,vertex,temporarily,marked,permanently,marked,return,true,permanently,marked,add,vertex,id,return,false
JobGraph -> private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked, 								final HashSet<JobVertexID> permanentlyMarked);1411236168;Auxiliary method for cycle detection. Performs a depth-first traversal with vertex markings to detect a cycle._If a node with a temporary marking is found, then there is a cycle. Once all children of a vertex have been_traversed the parent node cannot be part of another cycle and is thus permanently marked.__@param jv current job vertex to check_@param temporarilyMarked set of temporarily marked nodes_@param permanentlyMarked set of permanently marked nodes_@return <code>true</code> if there is a cycle, <code>false</code> otherwise;private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked,_								final HashSet<JobVertexID> permanentlyMarked){_		JobVertexID vertexID = jv.getID()___		if(permanentlyMarked.contains(vertexID)){_			return false__		}else if(temporarilyMarked.contains(vertexID)){_			return true__		}else{_			temporarilyMarked.add(vertexID)___			for(int i = 0_ i < jv.getNumberOfForwardConnections()_ i++){_				if(detectCycle(jv.getForwardConnection(i).getConnectedVertex(), temporarilyMarked, permanentlyMarked)){_					return true__				}_			}__			permanentlyMarked.add(vertexID)__			return false__		}_	};auxiliary,method,for,cycle,detection,performs,a,depth,first,traversal,with,vertex,markings,to,detect,a,cycle,if,a,node,with,a,temporary,marking,is,found,then,there,is,a,cycle,once,all,children,of,a,vertex,have,been,traversed,the,parent,node,cannot,be,part,of,another,cycle,and,is,thus,permanently,marked,param,jv,current,job,vertex,to,check,param,temporarily,marked,set,of,temporarily,marked,nodes,param,permanently,marked,set,of,permanently,marked,nodes,return,code,true,code,if,there,is,a,cycle,code,false,code,otherwise;private,boolean,detect,cycle,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,temporarily,marked,final,hash,set,job,vertex,id,permanently,marked,job,vertex,id,vertex,id,jv,get,id,if,permanently,marked,contains,vertex,id,return,false,else,if,temporarily,marked,contains,vertex,id,return,true,else,temporarily,marked,add,vertex,id,for,int,i,0,i,jv,get,number,of,forward,connections,i,if,detect,cycle,jv,get,forward,connection,i,get,connected,vertex,temporarily,marked,permanently,marked,return,true,permanently,marked,add,vertex,id,return,false
JobGraph -> private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked, 								final HashSet<JobVertexID> permanentlyMarked);1411236168;Auxiliary method for cycle detection. Performs a depth-first traversal with vertex markings to detect a cycle._If a node with a temporary marking is found, then there is a cycle. Once all children of a vertex have been_traversed the parent node cannot be part of another cycle and is thus permanently marked.__@param jv current job vertex to check_@param temporarilyMarked set of temporarily marked nodes_@param permanentlyMarked set of permanently marked nodes_@return <code>true</code> if there is a cycle, <code>false</code> otherwise;private boolean detectCycle(final AbstractJobVertex jv, final HashSet<JobVertexID> temporarilyMarked,_								final HashSet<JobVertexID> permanentlyMarked){_		JobVertexID vertexID = jv.getID()___		if(permanentlyMarked.contains(vertexID)){_			return false__		}else if(temporarilyMarked.contains(vertexID)){_			return true__		}else{_			temporarilyMarked.add(vertexID)___			for(int i = 0_ i < jv.getNumberOfForwardConnections()_ i++){_				if(detectCycle(jv.getForwardConnection(i).getConnectedVertex(), temporarilyMarked, permanentlyMarked)){_					return true__				}_			}__			permanentlyMarked.add(vertexID)__			return false__		}_	};auxiliary,method,for,cycle,detection,performs,a,depth,first,traversal,with,vertex,markings,to,detect,a,cycle,if,a,node,with,a,temporary,marking,is,found,then,there,is,a,cycle,once,all,children,of,a,vertex,have,been,traversed,the,parent,node,cannot,be,part,of,another,cycle,and,is,thus,permanently,marked,param,jv,current,job,vertex,to,check,param,temporarily,marked,set,of,temporarily,marked,nodes,param,permanently,marked,set,of,permanently,marked,nodes,return,code,true,code,if,there,is,a,cycle,code,false,code,otherwise;private,boolean,detect,cycle,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,temporarily,marked,final,hash,set,job,vertex,id,permanently,marked,job,vertex,id,vertex,id,jv,get,id,if,permanently,marked,contains,vertex,id,return,false,else,if,temporarily,marked,contains,vertex,id,return,true,else,temporarily,marked,add,vertex,id,for,int,i,0,i,jv,get,number,of,forward,connections,i,if,detect,cycle,jv,get,forward,connection,i,get,connected,vertex,temporarily,marked,permanently,marked,return,true,permanently,marked,add,vertex,id,return,false
JobGraph -> public long getExecutionRetryDelay();1444215406;Gets the delay of time the system will try to re-execute failed tasks. A value of_{@code -1} indicates the system default value (as defined in the configuration)_should be used._@return The delay of time in milliseconds the system will try to re-execute failed tasks.;public long getExecutionRetryDelay() {_		return executionRetryDelay__	};gets,the,delay,of,time,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,delay,of,time,in,milliseconds,the,system,will,try,to,re,execute,failed,tasks;public,long,get,execution,retry,delay,return,execution,retry,delay
JobGraph -> public long getExecutionRetryDelay();1444312509;Gets the delay of time the system will try to re-execute failed tasks. A value of_{@code -1} indicates the system default value (as defined in the configuration)_should be used._@return The delay of time in milliseconds the system will try to re-execute failed tasks.;public long getExecutionRetryDelay() {_		return executionRetryDelay__	};gets,the,delay,of,time,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,delay,of,time,in,milliseconds,the,system,will,try,to,re,execute,failed,tasks;public,long,get,execution,retry,delay,return,execution,retry,delay
JobGraph -> public long getExecutionRetryDelay();1445293011;Gets the delay of time the system will try to re-execute failed tasks. A value of_{@code -1} indicates the system default value (as defined in the configuration)_should be used._@return The delay of time in milliseconds the system will try to re-execute failed tasks.;public long getExecutionRetryDelay() {_		return executionRetryDelay__	};gets,the,delay,of,time,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,delay,of,time,in,milliseconds,the,system,will,try,to,re,execute,failed,tasks;public,long,get,execution,retry,delay,return,execution,retry,delay
JobGraph -> public long getExecutionRetryDelay();1448299950;Gets the delay of time the system will try to re-execute failed tasks. A value of_{@code -1} indicates the system default value (as defined in the configuration)_should be used._@return The delay of time in milliseconds the system will try to re-execute failed tasks.;public long getExecutionRetryDelay() {_		return executionRetryDelay__	};gets,the,delay,of,time,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,delay,of,time,in,milliseconds,the,system,will,try,to,re,execute,failed,tasks;public,long,get,execution,retry,delay,return,execution,retry,delay
JobGraph -> public long getExecutionRetryDelay();1452526243;Gets the delay of time the system will try to re-execute failed tasks. A value of_{@code -1} indicates the system default value (as defined in the configuration)_should be used._@return The delay of time in milliseconds the system will try to re-execute failed tasks.;public long getExecutionRetryDelay() {_		return executionRetryDelay__	};gets,the,delay,of,time,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,delay,of,time,in,milliseconds,the,system,will,try,to,re,execute,failed,tasks;public,long,get,execution,retry,delay,return,execution,retry,delay
JobGraph -> public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException;1412605211;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException {__		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {__			bc = new BlobClient(serverAddress)___			for (final Iterator<Path> it = this.userJars.iterator()_ it.hasNext()_) {__				final Path jar = it.next()__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				} finally {_					if (is != null) {_						is.close()__					}_				}_			}__		} finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,final,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,iterator,path,it,this,user,jars,iterator,it,has,next,final,path,jar,it,next,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException;1415027294;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException {__		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {__			bc = new BlobClient(serverAddress)___			for (final Iterator<Path> it = this.userJars.iterator()_ it.hasNext()_) {__				final Path jar = it.next()__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				} finally {_					if (is != null) {_						is.close()__					}_				}_			}__		} finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,final,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,iterator,path,it,this,user,jars,iterator,it,has,next,final,path,jar,it,next,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException;1416394616;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException {__		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {__			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				} finally {_					if (is != null) {_						is.close()__					}_				}_			}__		} finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,final,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException;1416482279;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException {__		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {__			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				} finally {_					if (is != null) {_						is.close()__					}_				}_			}__		} finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,final,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException;1418925508;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException {__		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {__			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				} finally {_					if (is != null) {_						is.close()__					}_				}_			}__		} finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,final,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException;1418925508;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException {__		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {__			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				} finally {_					if (is != null) {_						is.close()__					}_				}_			}__		} finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,final,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException;1418925511;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(final InetSocketAddress serverAddress) throws IOException {__		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {__			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				} finally {_					if (is != null) {_						is.close()__					}_				}_			}__		} finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,final,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void setExecutionRetryDelay(long executionRetryDelay);1444215406;Sets the delay that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param executionRetryDelay The delay of time the system will wait to re-execute failed tasks.;public void setExecutionRetryDelay(long executionRetryDelay){_		if (executionRetryDelay < -1) {_			throw new IllegalArgumentException(_					"The delay between reties must be non-negative, or -1 (use system default)")__		}_		this.executionRetryDelay = executionRetryDelay__	};sets,the,delay,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,execution,retry,delay,the,delay,of,time,the,system,will,wait,to,re,execute,failed,tasks;public,void,set,execution,retry,delay,long,execution,retry,delay,if,execution,retry,delay,1,throw,new,illegal,argument,exception,the,delay,between,reties,must,be,non,negative,or,1,use,system,default,this,execution,retry,delay,execution,retry,delay
JobGraph -> public void setExecutionRetryDelay(long executionRetryDelay);1444312509;Sets the delay that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param executionRetryDelay The delay of time the system will wait to re-execute failed tasks.;public void setExecutionRetryDelay(long executionRetryDelay){_		if (executionRetryDelay < -1) {_			throw new IllegalArgumentException(_					"The delay between reties must be non-negative, or -1 (use system default)")__		}_		this.executionRetryDelay = executionRetryDelay__	};sets,the,delay,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,execution,retry,delay,the,delay,of,time,the,system,will,wait,to,re,execute,failed,tasks;public,void,set,execution,retry,delay,long,execution,retry,delay,if,execution,retry,delay,1,throw,new,illegal,argument,exception,the,delay,between,reties,must,be,non,negative,or,1,use,system,default,this,execution,retry,delay,execution,retry,delay
JobGraph -> public void setExecutionRetryDelay(long executionRetryDelay);1445293011;Sets the delay that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param executionRetryDelay The delay of time the system will wait to re-execute failed tasks.;public void setExecutionRetryDelay(long executionRetryDelay){_		if (executionRetryDelay < -1) {_			throw new IllegalArgumentException(_					"The delay between reties must be non-negative, or -1 (use system default)")__		}_		this.executionRetryDelay = executionRetryDelay__	};sets,the,delay,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,execution,retry,delay,the,delay,of,time,the,system,will,wait,to,re,execute,failed,tasks;public,void,set,execution,retry,delay,long,execution,retry,delay,if,execution,retry,delay,1,throw,new,illegal,argument,exception,the,delay,between,reties,must,be,non,negative,or,1,use,system,default,this,execution,retry,delay,execution,retry,delay
JobGraph -> public void setExecutionRetryDelay(long executionRetryDelay);1448299950;Sets the delay that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param executionRetryDelay The delay of time the system will wait to re-execute failed tasks.;public void setExecutionRetryDelay(long executionRetryDelay){_		if (executionRetryDelay < -1) {_			throw new IllegalArgumentException(_					"The delay between reties must be non-negative, or -1 (use system default)")__		}_		this.executionRetryDelay = executionRetryDelay__	};sets,the,delay,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,execution,retry,delay,the,delay,of,time,the,system,will,wait,to,re,execute,failed,tasks;public,void,set,execution,retry,delay,long,execution,retry,delay,if,execution,retry,delay,1,throw,new,illegal,argument,exception,the,delay,between,reties,must,be,non,negative,or,1,use,system,default,this,execution,retry,delay,execution,retry,delay
JobGraph -> public void setExecutionRetryDelay(long executionRetryDelay);1452526243;Sets the delay that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param executionRetryDelay The delay of time the system will wait to re-execute failed tasks.;public void setExecutionRetryDelay(long executionRetryDelay){_		if (executionRetryDelay < -1) {_			throw new IllegalArgumentException(_					"The delay between reties must be non-negative, or -1 (use system default)")__		}_		this.executionRetryDelay = executionRetryDelay__	};sets,the,delay,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,execution,retry,delay,the,delay,of,time,the,system,will,wait,to,re,execute,failed,tasks;public,void,set,execution,retry,delay,long,execution,retry,delay,if,execution,retry,delay,1,throw,new,illegal,argument,exception,the,delay,between,reties,must,be,non,negative,or,1,use,system,default,this,execution,retry,delay,execution,retry,delay
JobGraph -> public int getNumberOfInputVertices();1405024514;Returns the number of input vertices registered with the job graph.__@return the number of input vertices registered with the job graph;public int getNumberOfInputVertices() {_		return this.inputVertices.size()__	};returns,the,number,of,input,vertices,registered,with,the,job,graph,return,the,number,of,input,vertices,registered,with,the,job,graph;public,int,get,number,of,input,vertices,return,this,input,vertices,size
JobGraph -> public int getNumberOfInputVertices();1405090423;Returns the number of input vertices registered with the job graph.__@return the number of input vertices registered with the job graph;public int getNumberOfInputVertices() {_		return this.inputVertices.size()__	};returns,the,number,of,input,vertices,registered,with,the,job,graph,return,the,number,of,input,vertices,registered,with,the,job,graph;public,int,get,number,of,input,vertices,return,this,input,vertices,size
JobGraph -> private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws 			IOException;1405024514;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@param jobVertices_array of job vertices whose required JAR file are to be written to the output stream_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws_			IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,param,job,vertices,array,of,job,vertices,whose,required,jar,file,are,to,be,written,to,the,output,stream,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,final,data,output,view,out,final,abstract,job,vertex,job,vertices,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws 			IOException;1405090423;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@param jobVertices_array of job vertices whose required JAR file are to be written to the output stream_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws_			IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,param,job,vertices,array,of,job,vertices,whose,required,jar,file,are,to,be,written,to,the,output,stream,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,final,data,output,view,out,final,abstract,job,vertex,job,vertices,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws 			IOException;1411236168;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@param jobVertices_array of job vertices whose required JAR file are to be written to the output stream_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws_			IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,param,job,vertices,array,of,job,vertices,whose,required,jar,file,are,to,be,written,to,the,output,stream,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,final,data,output,view,out,final,abstract,job,vertex,job,vertices,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws 			IOException;1411236168;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@param jobVertices_array of job vertices whose required JAR file are to be written to the output stream_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(final DataOutputView out, final AbstractJobVertex[] jobVertices) throws_			IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,param,job,vertices,array,of,job,vertices,whose,required,jar,file,are,to,be,written,to,the,output,stream,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,final,data,output,view,out,final,abstract,job,vertex,job,vertices,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1502355408;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			List<BlobKey> blobKeys = BlobClient.uploadJarFiles(blobServerAddress, blobClientConfig, userJars)___			for (BlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,blob,key,blob,keys,blob,client,upload,jar,files,blob,server,address,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1502355550;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			List<BlobKey> blobKeys = BlobClient.uploadJarFiles(blobServerAddress, blobClientConfig, userJars)___			for (BlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,blob,key,blob,keys,blob,client,upload,jar,files,blob,server,address,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1502701584;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			_			List<BlobKey> blobKeys = BlobClient.uploadJarFiles(blobServerAddress, blobClientConfig, userJars)___			for (BlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,blob,key,blob,keys,blob,client,upload,jar,files,blob,server,address,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1503041372;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			_			List<BlobKey> blobKeys = BlobClient.uploadJarFiles(blobServerAddress, blobClientConfig, jobID, userJars)___			for (BlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,blob,key,blob,keys,blob,client,upload,jar,files,blob,server,address,blob,client,config,job,id,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1507212387;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			List<BlobKey> blobKeys = BlobClient.uploadJarFiles(blobServerAddress, blobClientConfig, jobID, userJars)___			for (BlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,blob,key,blob,keys,blob,client,upload,jar,files,blob,server,address,blob,client,config,job,id,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1507212387;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			List<PermanentBlobKey> blobKeys = BlobClient.uploadJarFiles(_				blobServerAddress, blobClientConfig, jobID, userJars)___			for (PermanentBlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,permanent,blob,key,blob,keys,blob,client,upload,jar,files,blob,server,address,blob,client,config,job,id,user,jars,for,permanent,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1525420604;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			List<PermanentBlobKey> blobKeys = BlobClient.uploadFiles(_				blobServerAddress, blobClientConfig, jobID, userJars)___			for (PermanentBlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,permanent,blob,key,blob,keys,blob,client,upload,files,blob,server,address,blob,client,config,job,id,user,jars,for,permanent,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1529065669;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			List<PermanentBlobKey> blobKeys = BlobClient.uploadFiles(_				blobServerAddress, blobClientConfig, jobID, userJars)___			for (PermanentBlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,permanent,blob,key,blob,keys,blob,client,upload,files,blob,server,address,blob,client,config,job,id,user,jars,for,permanent,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1529583969;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The BLOB servers' address is given as a_parameter. This function issues a blocking call.__@param blobServerAddress of the blob server to upload the jars to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {_		if (!userJars.isEmpty()) {_			List<PermanentBlobKey> blobKeys = BlobClient.uploadFiles(_				blobServerAddress, blobClientConfig, jobID, userJars)___			for (PermanentBlobKey blobKey : blobKeys) {_				if (!userJarBlobKeys.contains(blobKey)) {_					userJarBlobKeys.add(blobKey)__				}_			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,blob,servers,address,is,given,as,a,parameter,this,function,issues,a,blocking,call,param,blob,server,address,of,the,blob,server,to,upload,the,jars,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,if,user,jars,is,empty,list,permanent,blob,key,blob,keys,blob,client,upload,files,blob,server,address,blob,client,config,job,id,user,jars,for,permanent,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1434467925;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1437494294;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1442492509;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1442944546;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1444215406;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1444312509;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1445293011;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1448299950;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)__		_		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1452526243;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1455548285;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1455549373;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1463155298;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1468854249;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1470677230;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1476696544;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1478068438;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1487616195;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1492678790;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1493975167;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1502355408;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1502355550;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1502701584;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1503041372;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1507212387;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1507212387;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1525420604;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1529065669;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1529583969;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1530181266;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, JobVertex... vertices);1531499577;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, JobVertex... vertices) {_		this(jobId, jobName)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,job,vertex,vertices,this,job,id,job,name,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1431459357;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1434467925;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1437494294;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1442492509;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1442944546;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1444215406;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1444312509;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1445293011;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1448299950;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1452526243;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1455548285;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1455549373;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1457737669;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1459526979;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1463155298;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1468854249;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1470677230;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1476696544;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1478068438;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobSnapshottingSettings settings);1487616195;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobSnapshottingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,snapshotting,settings,settings,this,snapshot,settings,settings
JobGraph -> public String getName();1405024514;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1405090423;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1411236168;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1411236168;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1411236168;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1411236169;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1411236170;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1411473593;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1412605211;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1415027294;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1416394616;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1416482279;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1418925508;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1418925508;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1418925511;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1420538822;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1422267177;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1424100906;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1424732907;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1425995929;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1427275843;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1427784999;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1430296870;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1431459357;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1434467925;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1437494294;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1442492509;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1442944546;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1444215406;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1444312509;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1445293011;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1448299950;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1452526243;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1455548285;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1455549373;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1457737669;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1459526979;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1463155298;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1468854249;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1470677230;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1476696544;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1478068438;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1487616195;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1492678790;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1493975167;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1502355408;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1502355550;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1502701584;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1503041372;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1507212387;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1507212387;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1525420604;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1529065669;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1529583969;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1530181266;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public String getName();1531499577;Returns the name assigned to the job graph.__@return the name assigned to the job graph;public String getName() {_		return this.jobName__	};returns,the,name,assigned,to,the,job,graph,return,the,name,assigned,to,the,job,graph;public,string,get,name,return,this,job,name
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1478068438;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1487616195;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1492678790;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1493975167;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1502355408;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1502355550;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1502701584;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1503041372;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1507212387;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1507212387;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1525420604;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1529065669;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1529583969;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1530181266;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void setSavepointRestoreSettings(SavepointRestoreSettings settings);1531499577;Sets the savepoint restore settings._@param settings The savepoint restore settings.;public void setSavepointRestoreSettings(SavepointRestoreSettings settings) {_		this.savepointRestoreSettings = checkNotNull(settings, "Savepoint restore settings")__	};sets,the,savepoint,restore,settings,param,settings,the,savepoint,restore,settings;public,void,set,savepoint,restore,settings,savepoint,restore,settings,settings,this,savepoint,restore,settings,check,not,null,settings,savepoint,restore,settings
JobGraph -> public void addVertex(AbstractJobVertex vertex);1411236168;Adds a new task vertex to the job graph if it is not already included.__@param taskVertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, vertex)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,task,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,vertex,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1411236168;Adds a new task vertex to the job graph if it is not already included.__@param taskVertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, vertex)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,task,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,vertex,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1411236168;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1411236169;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1411236170;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1411473593;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1412605211;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1415027294;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1416394616;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1416482279;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1418925508;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1418925508;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1418925511;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1420538822;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1422267177;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1424100906;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1424732907;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1425995929;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1427275843;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1427784999;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1430296870;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(AbstractJobVertex vertex);1431459357;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(AbstractJobVertex vertex) {_		final JobVertexID id = vertex.getID()__		AbstractJobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,abstract,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,abstract,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress, 			Configuration blobClientConfig) throws IOException;1476696544;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@param blobClientConfig_the blob client configuration_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress,_			Configuration blobClientConfig) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress, blobClientConfig)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,configuration,blob,client,config,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,blob,client,config,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress, 			Configuration blobClientConfig) throws IOException;1478068438;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@param blobClientConfig_the blob client configuration_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress,_			Configuration blobClientConfig) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress, blobClientConfig)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,configuration,blob,client,config,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,blob,client,config,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress, 			Configuration blobClientConfig) throws IOException;1487616195;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@param blobClientConfig_the blob client configuration_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress,_			Configuration blobClientConfig) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress, blobClientConfig)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,configuration,blob,client,config,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,blob,client,config,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress, 			Configuration blobClientConfig) throws IOException;1492678790;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@param blobClientConfig_the blob client configuration_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress,_			Configuration blobClientConfig) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress, blobClientConfig)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,configuration,blob,client,config,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,blob,client,config,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress, 			Configuration blobClientConfig) throws IOException;1493975167;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@param blobClientConfig_the blob client configuration_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress,_			Configuration blobClientConfig) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress, blobClientConfig)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,configuration,blob,client,config,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,blob,client,config,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1434467925;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1437494294;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1442492509;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1442944546;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1444215406;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1444312509;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1445293011;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1448299950;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1452526243;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1455548285;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1455549373;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1463155298;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1468854249;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1470677230;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1476696544;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1478068438;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1487616195;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1492678790;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1493975167;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1502355408;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1502355550;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1502701584;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1503041372;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1507212387;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1507212387;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1525420604;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1529065669;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1529583969;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1530181266;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, JobVertex... vertices);1531499577;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, JobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1411236168;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1411236169;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1411236170;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1411473593;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1412605211;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1415027294;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1416394616;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1416482279;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1418925508;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1418925508;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1418925511;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1420538822;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1422267177;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1424100906;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1424732907;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1425995929;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1427275843;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1427784999;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1430296870;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(AbstractJobVertex... vertices);1431459357;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(AbstractJobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,abstract,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1411236168;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1411236169;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1411236170;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1411473593;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1412605211;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1415027294;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1416394616;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1416482279;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1418925511;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1420538822;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1422267177;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1424100906;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1424732907;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1425995929;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1427275843;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1427784999;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1430296870;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices);1431459357;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job._@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, AbstractJobVertex... vertices) {_		this(jobId, jobName)__		_		for (AbstractJobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,abstract,job,vertex,vertices,this,job,id,job,name,for,abstract,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public void setSessionTimeout(long sessionTimeout);1442944546;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1444215406;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1444312509;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1445293011;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1448299950;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1452526243;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1455548285;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1455549373;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1457737669;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1459526979;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1463155298;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1468854249;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1470677230;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1476696544;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1478068438;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1487616195;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1492678790;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1493975167;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1502355408;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1502355550;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1502701584;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1503041372;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1507212387;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1507212387;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1525420604;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1529065669;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1529583969;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1530181266;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public void setSessionTimeout(long sessionTimeout);1531499577;Sets the timeout of the session in seconds. The timeout specifies how long a job will be kept_in the job manager after it finishes._@param sessionTimeout The timeout in seconds;public void setSessionTimeout(long sessionTimeout) {_		this.sessionTimeout = sessionTimeout__	};sets,the,timeout,of,the,session,in,seconds,the,timeout,specifies,how,long,a,job,will,be,kept,in,the,job,manager,after,it,finishes,param,session,timeout,the,timeout,in,seconds;public,void,set,session,timeout,long,session,timeout,this,session,timeout,session,timeout
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1412605211;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {__		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1415027294;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {__		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1416394616;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {__		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1416482279;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {__		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1418925508;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {__		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1418925508;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {__		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1418925511;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {__		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1420538822;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1422267177;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1424100906;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1424732907;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1425995929;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1427275843;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1427784999;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1430296870;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1431459357;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1434467925;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1437494294;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1442492509;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1442944546;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1444215406;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1444312509;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1445293011;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1448299950;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1452526243;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1455548285;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1455549373;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1457737669;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1459526979;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1463155298;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1468854249;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1470677230;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1476696544;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1478068438;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1487616195;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1492678790;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1493975167;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1502355408;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1502355550;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1502701584;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1503041372;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<BlobKey> getUserJarBlobKeys();1507212387;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<BlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public JobGraph(JobID jobId, String jobName, ExecutionConfig config);1457737669;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig}).__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param config The execution configuration of the job.;public JobGraph(JobID jobId, String jobName, ExecutionConfig config) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__		this.executionConfig = Preconditions.checkNotNull(config)__	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job;public,job,graph,job,id,job,id,string,job,name,execution,config,config,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,this,execution,config,preconditions,check,not,null,config
JobGraph -> public JobGraph(JobID jobId, String jobName, ExecutionConfig config);1459526979;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig}).__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param config The execution configuration of the job.;public JobGraph(JobID jobId, String jobName, ExecutionConfig config) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__		this.executionConfig = config == null ? new ExecutionConfig() : config__	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job;public,job,graph,job,id,job,id,string,job,name,execution,config,config,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,this,execution,config,config,null,new,execution,config,config
JobGraph -> public void uploadUserArtifacts( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1529065669;Configures JobGraph with user specified artifacts. If the files are in local system it uploads them_to the BLOB server, otherwise it just puts metadata for future remote access from within task executor.__@param blobServerAddress of the blob server to upload the files to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the Blob server failed.;public void uploadUserArtifacts(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {__		Set<Map.Entry<String, DistributedCache.DistributedCacheEntry>> uploadToBlobServer = new HashSet<>()__		Set<Map.Entry<String, DistributedCache.DistributedCacheEntry>> distributeViaDFS = new HashSet<>()___		for (Map.Entry<String, DistributedCache.DistributedCacheEntry> userArtifact : userArtifacts.entrySet()) {_			Path filePath = new Path(userArtifact.getValue().filePath)___			try {_				if (filePath.getFileSystem().isDistributedFS()) {_					distributeViaDFS.add(userArtifact)__				} else {_					uploadToBlobServer.add(userArtifact)__				}__			} catch (IOException ex) {_				distributeViaDFS.add(userArtifact)__			}_		}__		uploadViaBlob(blobServerAddress, blobClientConfig, uploadToBlobServer)___		for (Map.Entry<String, DistributedCache.DistributedCacheEntry> userArtifact : distributeViaDFS) {_			DistributedCache.writeFileInfoToConfig(_				userArtifact.getKey(),_				userArtifact.getValue(),_				jobConfiguration_			)__		}_	};configures,job,graph,with,user,specified,artifacts,if,the,files,are,in,local,system,it,uploads,them,to,the,blob,server,otherwise,it,just,puts,metadata,for,future,remote,access,from,within,task,executor,param,blob,server,address,of,the,blob,server,to,upload,the,files,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,blob,server,failed;public,void,upload,user,artifacts,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,set,map,entry,string,distributed,cache,distributed,cache,entry,upload,to,blob,server,new,hash,set,set,map,entry,string,distributed,cache,distributed,cache,entry,distribute,via,dfs,new,hash,set,for,map,entry,string,distributed,cache,distributed,cache,entry,user,artifact,user,artifacts,entry,set,path,file,path,new,path,user,artifact,get,value,file,path,try,if,file,path,get,file,system,is,distributed,fs,distribute,via,dfs,add,user,artifact,else,upload,to,blob,server,add,user,artifact,catch,ioexception,ex,distribute,via,dfs,add,user,artifact,upload,via,blob,blob,server,address,blob,client,config,upload,to,blob,server,for,map,entry,string,distributed,cache,distributed,cache,entry,user,artifact,distribute,via,dfs,distributed,cache,write,file,info,to,config,user,artifact,get,key,user,artifact,get,value,job,configuration
JobGraph -> public void uploadUserArtifacts( 			InetSocketAddress blobServerAddress, 			Configuration blobClientConfig) throws IOException;1529583969;Configures JobGraph with user specified artifacts. If the files are in local system it uploads them_to the BLOB server, otherwise it just puts metadata for future remote access from within task executor.__@param blobServerAddress of the blob server to upload the files to_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the Blob server failed.;public void uploadUserArtifacts(_			InetSocketAddress blobServerAddress,_			Configuration blobClientConfig) throws IOException {__		Set<Map.Entry<String, DistributedCache.DistributedCacheEntry>> uploadToBlobServer = new HashSet<>()__		Set<Map.Entry<String, DistributedCache.DistributedCacheEntry>> distributeViaDFS = new HashSet<>()___		for (Map.Entry<String, DistributedCache.DistributedCacheEntry> userArtifact : userArtifacts.entrySet()) {_			Path filePath = new Path(userArtifact.getValue().filePath)___			try {_				if (filePath.getFileSystem().isDistributedFS()) {_					distributeViaDFS.add(userArtifact)__				} else {_					uploadToBlobServer.add(userArtifact)__				}__			} catch (IOException ex) {_				distributeViaDFS.add(userArtifact)__			}_		}__		uploadViaBlob(blobServerAddress, blobClientConfig, uploadToBlobServer)___		for (Map.Entry<String, DistributedCache.DistributedCacheEntry> userArtifact : distributeViaDFS) {_			DistributedCache.writeFileInfoToConfig(_				userArtifact.getKey(),_				userArtifact.getValue(),_				jobConfiguration_			)__		}_	};configures,job,graph,with,user,specified,artifacts,if,the,files,are,in,local,system,it,uploads,them,to,the,blob,server,otherwise,it,just,puts,metadata,for,future,remote,access,from,within,task,executor,param,blob,server,address,of,the,blob,server,to,upload,the,files,to,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,blob,server,failed;public,void,upload,user,artifacts,inet,socket,address,blob,server,address,configuration,blob,client,config,throws,ioexception,set,map,entry,string,distributed,cache,distributed,cache,entry,upload,to,blob,server,new,hash,set,set,map,entry,string,distributed,cache,distributed,cache,entry,distribute,via,dfs,new,hash,set,for,map,entry,string,distributed,cache,distributed,cache,entry,user,artifact,user,artifacts,entry,set,path,file,path,new,path,user,artifact,get,value,file,path,try,if,file,path,get,file,system,is,distributed,fs,distribute,via,dfs,add,user,artifact,else,upload,to,blob,server,add,user,artifact,catch,ioexception,ex,distribute,via,dfs,add,user,artifact,upload,via,blob,blob,server,address,blob,client,config,upload,to,blob,server,for,map,entry,string,distributed,cache,distributed,cache,entry,user,artifact,distribute,via,dfs,distributed,cache,write,file,info,to,config,user,artifact,get,key,user,artifact,get,value,job,configuration
JobGraph -> public AbstractJobVertex[] getAllReachableJobVertices();1405024514;Returns an array of all job vertices than can be reached when traversing the job graph from the input vertices._Each job vertex is contained only one time.__@return an array of all job vertices than can be reached when traversing the job graph from the input vertices;public AbstractJobVertex[] getAllReachableJobVertices() {_		if(bufferedAllReachableJobVertices == null){_			final List<AbstractJobVertex> collector = new ArrayList<AbstractJobVertex>()__			final HashSet<JobVertexID> visited = new HashSet<JobVertexID>()___			final Iterator<AbstractJobInputVertex> inputs = getInputVertices()___			while(inputs.hasNext()){_				AbstractJobVertex vertex = inputs.next()___				if(!visited.contains(vertex.getID())){_					collectVertices(vertex, visited, collector)__				}_			}__			bufferedAllReachableJobVertices = collector.toArray(new AbstractJobVertex[0])__		}__		return bufferedAllReachableJobVertices__	};returns,an,array,of,all,job,vertices,than,can,be,reached,when,traversing,the,job,graph,from,the,input,vertices,each,job,vertex,is,contained,only,one,time,return,an,array,of,all,job,vertices,than,can,be,reached,when,traversing,the,job,graph,from,the,input,vertices;public,abstract,job,vertex,get,all,reachable,job,vertices,if,buffered,all,reachable,job,vertices,null,final,list,abstract,job,vertex,collector,new,array,list,abstract,job,vertex,final,hash,set,job,vertex,id,visited,new,hash,set,job,vertex,id,final,iterator,abstract,job,input,vertex,inputs,get,input,vertices,while,inputs,has,next,abstract,job,vertex,vertex,inputs,next,if,visited,contains,vertex,get,id,collect,vertices,vertex,visited,collector,buffered,all,reachable,job,vertices,collector,to,array,new,abstract,job,vertex,0,return,buffered,all,reachable,job,vertices
JobGraph -> public AbstractJobVertex[] getAllReachableJobVertices();1405090423;Returns an array of all job vertices than can be reached when traversing the job graph from the input vertices._Each job vertex is contained only one time.__@return an array of all job vertices than can be reached when traversing the job graph from the input vertices;public AbstractJobVertex[] getAllReachableJobVertices() {_		if(bufferedAllReachableJobVertices == null){_			final List<AbstractJobVertex> collector = new ArrayList<AbstractJobVertex>()__			final HashSet<JobVertexID> visited = new HashSet<JobVertexID>()___			final Iterator<AbstractJobInputVertex> inputs = getInputVertices()___			while(inputs.hasNext()){_				AbstractJobVertex vertex = inputs.next()___				if(!visited.contains(vertex.getID())){_					collectVertices(vertex, visited, collector)__				}_			}__			bufferedAllReachableJobVertices = collector.toArray(new AbstractJobVertex[0])__		}__		return bufferedAllReachableJobVertices__	};returns,an,array,of,all,job,vertices,than,can,be,reached,when,traversing,the,job,graph,from,the,input,vertices,each,job,vertex,is,contained,only,one,time,return,an,array,of,all,job,vertices,than,can,be,reached,when,traversing,the,job,graph,from,the,input,vertices;public,abstract,job,vertex,get,all,reachable,job,vertices,if,buffered,all,reachable,job,vertices,null,final,list,abstract,job,vertex,collector,new,array,list,abstract,job,vertex,final,hash,set,job,vertex,id,visited,new,hash,set,job,vertex,id,final,iterator,abstract,job,input,vertex,inputs,get,input,vertices,while,inputs,has,next,abstract,job,vertex,vertex,inputs,next,if,visited,contains,vertex,get,id,collect,vertices,vertex,visited,collector,buffered,all,reachable,job,vertices,collector,to,array,new,abstract,job,vertex,0,return,buffered,all,reachable,job,vertices
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1405024514;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1405090423;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1411236168;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1411236168;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1411236168;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1411236169;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1411236170;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> private void readRequiredJarFiles(final DataInputView in) throws IOException;1411473593;Reads required JAR files from an input stream and adds them to the_library cache manager.__@param in_the data stream to read the JAR files from_@throws IOException_thrown if an error occurs while reading the stream;private void readRequiredJarFiles(final DataInputView in) throws IOException {__		_		final int numJars = in.readInt()___		if (numJars > 0) {__			for (int i = 0_ i < numJars_ i++) {__				final Path p = new Path()__				p.read(in)__				this.userJars.add(p)___				_				final long sizeOfJar = in.readLong()___				_				LibraryCacheManager.addLibrary(this.jobID, p, sizeOfJar, in)__			}__		}__		_		LibraryCacheManager.register(this.jobID, this.userJars.toArray(new Path[0]))__	};reads,required,jar,files,from,an,input,stream,and,adds,them,to,the,library,cache,manager,param,in,the,data,stream,to,read,the,jar,files,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,required,jar,files,final,data,input,view,in,throws,ioexception,final,int,num,jars,in,read,int,if,num,jars,0,for,int,i,0,i,num,jars,i,final,path,p,new,path,p,read,in,this,user,jars,add,p,final,long,size,of,jar,in,read,long,library,cache,manager,add,library,this,job,id,p,size,of,jar,in,library,cache,manager,register,this,job,id,this,user,jars,to,array,new,path,0
JobGraph -> public JobVertex[] getVerticesAsArray();1434467925;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1437494294;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1442492509;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1442944546;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1444215406;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1444312509;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1445293011;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1448299950;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1452526243;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1455548285;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1455549373;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1457737669;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1459526979;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1463155298;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1468854249;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1470677230;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1476696544;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1478068438;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1487616195;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1492678790;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1493975167;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1502355408;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1502355550;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1502701584;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1503041372;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1507212387;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1507212387;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1525420604;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1529065669;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1529583969;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1530181266;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public JobVertex[] getVerticesAsArray();1531499577;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public JobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new JobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,job,vertex,this,task,vertices,size
JobGraph -> public boolean isWeaklyConnected();1405024514;Checks if the job graph is weakly connected.__@return <code>true</code> if the job graph is weakly connected, otherwise <code>false</code>;public boolean isWeaklyConnected() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()__		final AbstractJobVertex[] all = getAllJobVertices()___		_		if (reachable.length != all.length) {_			return false__		}__		return true__	};checks,if,the,job,graph,is,weakly,connected,return,code,true,code,if,the,job,graph,is,weakly,connected,otherwise,code,false,code;public,boolean,is,weakly,connected,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,abstract,job,vertex,all,get,all,job,vertices,if,reachable,length,all,length,return,false,return,true
JobGraph -> public boolean isWeaklyConnected();1405090423;Checks if the job graph is weakly connected.__@return <code>true</code> if the job graph is weakly connected, otherwise <code>false</code>;public boolean isWeaklyConnected() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()__		final AbstractJobVertex[] all = getAllJobVertices()___		_		if (reachable.length != all.length) {_			return false__		}__		return true__	};checks,if,the,job,graph,is,weakly,connected,return,code,true,code,if,the,job,graph,is,weakly,connected,otherwise,code,false,code;public,boolean,is,weakly,connected,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,abstract,job,vertex,all,get,all,job,vertices,if,reachable,length,all,length,return,false,return,true
JobGraph -> public boolean isWeaklyConnected();1411236168;Checks if the job graph is weakly connected.__@return <code>true</code> if the job graph is weakly connected, otherwise <code>false</code>;public boolean isWeaklyConnected() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()__		final AbstractJobVertex[] all = getAllJobVertices()___		_		if (reachable.length != all.length) {_			return false__		}__		return true__	};checks,if,the,job,graph,is,weakly,connected,return,code,true,code,if,the,job,graph,is,weakly,connected,otherwise,code,false,code;public,boolean,is,weakly,connected,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,abstract,job,vertex,all,get,all,job,vertices,if,reachable,length,all,length,return,false,return,true
JobGraph -> public boolean isWeaklyConnected();1411236168;Checks if the job graph is weakly connected.__@return <code>true</code> if the job graph is weakly connected, otherwise <code>false</code>;public boolean isWeaklyConnected() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()__		final AbstractJobVertex[] all = getAllJobVertices()___		_		if (reachable.length != all.length) {_			return false__		}__		return true__	};checks,if,the,job,graph,is,weakly,connected,return,code,true,code,if,the,job,graph,is,weakly,connected,otherwise,code,false,code;public,boolean,is,weakly,connected,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,abstract,job,vertex,all,get,all,job,vertices,if,reachable,length,all,length,return,false,return,true
JobGraph -> public AbstractJobVertex areVertexDegreesCorrect();1405024514;Checks for all registered job vertices if their in-/out-degree is correct.__@return <code>null</code> if the in-/out-degree of all vertices is correct or the first job vertex whose_in-/out-degree is incorrect.;public AbstractJobVertex areVertexDegreesCorrect() {__		_		final Iterator<AbstractJobInputVertex> iter = getInputVertices()__		while (iter.hasNext()) {__			final AbstractJobVertex jv = iter.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() > 0) {_				return jv__			}_		}__		_		final Iterator<JobTaskVertex> iter2 = getTaskVertices()__		while (iter2.hasNext()) {__			final AbstractJobVertex jv = iter2.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		_		final Iterator<AbstractJobOutputVertex> iter3 = getOutputVertices()__		while (iter3.hasNext()) {__			final AbstractJobVertex jv = iter3.next()___			if (jv.getNumberOfForwardConnections() > 0 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		return null__	};checks,for,all,registered,job,vertices,if,their,in,out,degree,is,correct,return,code,null,code,if,the,in,out,degree,of,all,vertices,is,correct,or,the,first,job,vertex,whose,in,out,degree,is,incorrect;public,abstract,job,vertex,are,vertex,degrees,correct,final,iterator,abstract,job,input,vertex,iter,get,input,vertices,while,iter,has,next,final,abstract,job,vertex,jv,iter,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,0,return,jv,final,iterator,job,task,vertex,iter2,get,task,vertices,while,iter2,has,next,final,abstract,job,vertex,jv,iter2,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,1,return,jv,final,iterator,abstract,job,output,vertex,iter3,get,output,vertices,while,iter3,has,next,final,abstract,job,vertex,jv,iter3,next,if,jv,get,number,of,forward,connections,0,jv,get,number,of,backward,connections,1,return,jv,return,null
JobGraph -> public AbstractJobVertex areVertexDegreesCorrect();1405090423;Checks for all registered job vertices if their in-/out-degree is correct.__@return <code>null</code> if the in-/out-degree of all vertices is correct or the first job vertex whose_in-/out-degree is incorrect.;public AbstractJobVertex areVertexDegreesCorrect() {__		_		final Iterator<AbstractJobInputVertex> iter = getInputVertices()__		while (iter.hasNext()) {__			final AbstractJobVertex jv = iter.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() > 0) {_				return jv__			}_		}__		_		final Iterator<JobTaskVertex> iter2 = getTaskVertices()__		while (iter2.hasNext()) {__			final AbstractJobVertex jv = iter2.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		_		final Iterator<AbstractJobOutputVertex> iter3 = getOutputVertices()__		while (iter3.hasNext()) {__			final AbstractJobVertex jv = iter3.next()___			if (jv.getNumberOfForwardConnections() > 0 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		return null__	};checks,for,all,registered,job,vertices,if,their,in,out,degree,is,correct,return,code,null,code,if,the,in,out,degree,of,all,vertices,is,correct,or,the,first,job,vertex,whose,in,out,degree,is,incorrect;public,abstract,job,vertex,are,vertex,degrees,correct,final,iterator,abstract,job,input,vertex,iter,get,input,vertices,while,iter,has,next,final,abstract,job,vertex,jv,iter,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,0,return,jv,final,iterator,job,task,vertex,iter2,get,task,vertices,while,iter2,has,next,final,abstract,job,vertex,jv,iter2,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,1,return,jv,final,iterator,abstract,job,output,vertex,iter3,get,output,vertices,while,iter3,has,next,final,abstract,job,vertex,jv,iter3,next,if,jv,get,number,of,forward,connections,0,jv,get,number,of,backward,connections,1,return,jv,return,null
JobGraph -> public AbstractJobVertex areVertexDegreesCorrect();1411236168;Checks for all registered job vertices if their in-/out-degree is correct.__@return <code>null</code> if the in-/out-degree of all vertices is correct or the first job vertex whose_in-/out-degree is incorrect.;public AbstractJobVertex areVertexDegreesCorrect() {__		_		final Iterator<AbstractJobInputVertex> iter = getInputVertices()__		while (iter.hasNext()) {__			final AbstractJobVertex jv = iter.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() > 0) {_				return jv__			}_		}__		_		final Iterator<JobTaskVertex> iter2 = getTaskVertices()__		while (iter2.hasNext()) {__			final AbstractJobVertex jv = iter2.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		_		final Iterator<AbstractJobOutputVertex> iter3 = getOutputVertices()__		while (iter3.hasNext()) {__			final AbstractJobVertex jv = iter3.next()___			if (jv.getNumberOfForwardConnections() > 0 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		return null__	};checks,for,all,registered,job,vertices,if,their,in,out,degree,is,correct,return,code,null,code,if,the,in,out,degree,of,all,vertices,is,correct,or,the,first,job,vertex,whose,in,out,degree,is,incorrect;public,abstract,job,vertex,are,vertex,degrees,correct,final,iterator,abstract,job,input,vertex,iter,get,input,vertices,while,iter,has,next,final,abstract,job,vertex,jv,iter,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,0,return,jv,final,iterator,job,task,vertex,iter2,get,task,vertices,while,iter2,has,next,final,abstract,job,vertex,jv,iter2,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,1,return,jv,final,iterator,abstract,job,output,vertex,iter3,get,output,vertices,while,iter3,has,next,final,abstract,job,vertex,jv,iter3,next,if,jv,get,number,of,forward,connections,0,jv,get,number,of,backward,connections,1,return,jv,return,null
JobGraph -> public AbstractJobVertex areVertexDegreesCorrect();1411236168;Checks for all registered job vertices if their in-/out-degree is correct.__@return <code>null</code> if the in-/out-degree of all vertices is correct or the first job vertex whose_in-/out-degree is incorrect.;public AbstractJobVertex areVertexDegreesCorrect() {__		_		final Iterator<AbstractJobInputVertex> iter = getInputVertices()__		while (iter.hasNext()) {__			final AbstractJobVertex jv = iter.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() > 0) {_				return jv__			}_		}__		_		final Iterator<JobTaskVertex> iter2 = getTaskVertices()__		while (iter2.hasNext()) {__			final AbstractJobVertex jv = iter2.next()___			if (jv.getNumberOfForwardConnections() < 1 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		_		final Iterator<AbstractJobOutputVertex> iter3 = getOutputVertices()__		while (iter3.hasNext()) {__			final AbstractJobVertex jv = iter3.next()___			if (jv.getNumberOfForwardConnections() > 0 || jv.getNumberOfBackwardConnections() < 1) {_				return jv__			}_		}__		return null__	};checks,for,all,registered,job,vertices,if,their,in,out,degree,is,correct,return,code,null,code,if,the,in,out,degree,of,all,vertices,is,correct,or,the,first,job,vertex,whose,in,out,degree,is,incorrect;public,abstract,job,vertex,are,vertex,degrees,correct,final,iterator,abstract,job,input,vertex,iter,get,input,vertices,while,iter,has,next,final,abstract,job,vertex,jv,iter,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,0,return,jv,final,iterator,job,task,vertex,iter2,get,task,vertices,while,iter2,has,next,final,abstract,job,vertex,jv,iter2,next,if,jv,get,number,of,forward,connections,1,jv,get,number,of,backward,connections,1,return,jv,final,iterator,abstract,job,output,vertex,iter3,get,output,vertices,while,iter3,has,next,final,abstract,job,vertex,jv,iter3,next,if,jv,get,number,of,forward,connections,0,jv,get,number,of,backward,connections,1,return,jv,return,null
JobGraph -> public Iterable<JobVertex> getVertices();1434467925;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1437494294;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1442492509;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1442944546;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1444215406;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1444312509;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1445293011;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1448299950;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1452526243;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1455548285;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1455549373;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1457737669;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1459526979;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1463155298;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1468854249;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1470677230;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1476696544;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1478068438;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1487616195;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1492678790;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1493975167;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1502355408;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1502355550;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1502701584;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1503041372;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1507212387;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1507212387;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1525420604;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1529065669;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1529583969;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1530181266;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<JobVertex> getVertices();1531499577;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<JobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public void addJar(final Path jar);1405024514;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(final Path jar) {__		if (jar == null) {_			return__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,final,path,jar,if,jar,null,return,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(final Path jar);1405090423;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(final Path jar) {__		if (jar == null) {_			return__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,final,path,jar,if,jar,null,return,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(final Path jar);1411236168;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(final Path jar) {__		if (jar == null) {_			return__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,final,path,jar,if,jar,null,return,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(final Path jar);1411236168;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(final Path jar) {__		if (jar == null) {_			return__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,final,path,jar,if,jar,null,return,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public int getMaximumParallelism();1448299950;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1452526243;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1455548285;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1455549373;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1457737669;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1459526979;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1463155298;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1468854249;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1470677230;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1476696544;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1478068438;Gets the maximum parallelism of all operations in this job graph._@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1487616195;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1492678790;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1493975167;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1502355408;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1502355550;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1502701584;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1503041372;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1507212387;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1507212387;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1525420604;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1529065669;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1529583969;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1530181266;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public int getMaximumParallelism();1531499577;Gets the maximum parallelism of all operations in this job graph.__@return The maximum parallelism of this job graph;public int getMaximumParallelism() {_		int maxParallelism = -1__		for (JobVertex vertex : taskVertices.values()) {_			maxParallelism = Math.max(vertex.getParallelism(), maxParallelism)__		}_		return maxParallelism__	};gets,the,maximum,parallelism,of,all,operations,in,this,job,graph,return,the,maximum,parallelism,of,this,job,graph;public,int,get,maximum,parallelism,int,max,parallelism,1,for,job,vertex,vertex,task,vertices,values,max,parallelism,math,max,vertex,get,parallelism,max,parallelism,return,max,parallelism
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1492678790;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1493975167;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1502355408;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1502355550;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1502701584;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1503041372;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1507212387;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1507212387;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1525420604;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1529065669;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1529583969;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1530181266;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings, or null, to disable snapshotting.;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings,or,null,to,disable,snapshotting;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public void setSnapshotSettings(JobCheckpointingSettings settings);1531499577;Sets the settings for asynchronous snapshots. A value of {@code null} means that_snapshotting is not enabled.__@param settings The snapshot settings;public void setSnapshotSettings(JobCheckpointingSettings settings) {_		this.snapshotSettings = settings__	};sets,the,settings,for,asynchronous,snapshots,a,value,of,code,null,means,that,snapshotting,is,not,enabled,param,settings,the,snapshot,settings;public,void,set,snapshot,settings,job,checkpointing,settings,settings,this,snapshot,settings,settings
JobGraph -> public int getNumberOfOutputVertices();1405024514;Returns the number of output vertices registered with the job graph.__@return the number of output vertices registered with the job graph;public int getNumberOfOutputVertices() {_		return this.outputVertices.size()__	};returns,the,number,of,output,vertices,registered,with,the,job,graph,return,the,number,of,output,vertices,registered,with,the,job,graph;public,int,get,number,of,output,vertices,return,this,output,vertices,size
JobGraph -> public int getNumberOfOutputVertices();1405090423;Returns the number of output vertices registered with the job graph.__@return the number of output vertices registered with the job graph;public int getNumberOfOutputVertices() {_		return this.outputVertices.size()__	};returns,the,number,of,output,vertices,registered,with,the,job,graph,return,the,number,of,output,vertices,registered,with,the,job,graph;public,int,get,number,of,output,vertices,return,this,output,vertices,size
JobGraph -> public JobGraph(ExecutionConfig config, JobVertex... vertices);1457737669;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices.__@param config The execution configuration of the job._@param vertices The vertices to add to the graph.;public JobGraph(ExecutionConfig config, JobVertex... vertices) {_		this(null, config, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,param,config,the,execution,configuration,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,execution,config,config,job,vertex,vertices,this,null,config,vertices
JobGraph -> public JobGraph(ExecutionConfig config, JobVertex... vertices);1459526979;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices.__@param config The execution configuration of the job._@param vertices The vertices to add to the graph.;public JobGraph(ExecutionConfig config, JobVertex... vertices) {_		this(null, config, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,param,config,the,execution,configuration,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,execution,config,config,job,vertex,vertices,this,null,config,vertices
JobGraph -> public int getNumberOfTaskVertices();1405024514;Returns the number of task vertices registered with the job graph.__@return the number of task vertices registered with the job graph;public int getNumberOfTaskVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,task,vertices,registered,with,the,job,graph,return,the,number,of,task,vertices,registered,with,the,job,graph;public,int,get,number,of,task,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfTaskVertices();1405090423;Returns the number of task vertices registered with the job graph.__@return the number of task vertices registered with the job graph;public int getNumberOfTaskVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,task,vertices,registered,with,the,job,graph,return,the,number,of,task,vertices,registered,with,the,job,graph;public,int,get,number,of,task,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfTaskVertices();1411236168;Returns the number of task vertices registered with the job graph.__@return the number of task vertices registered with the job graph;public int getNumberOfTaskVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,task,vertices,registered,with,the,job,graph,return,the,number,of,task,vertices,registered,with,the,job,graph;public,int,get,number,of,task,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfTaskVertices();1411236168;Returns the number of task vertices registered with the job graph.__@return the number of task vertices registered with the job graph;public int getNumberOfTaskVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,task,vertices,registered,with,the,job,graph,return,the,number,of,task,vertices,registered,with,the,job,graph;public,int,get,number,of,task,vertices,return,this,task,vertices,size
JobGraph -> public JobGraph(JobID jobId, String jobName);1411236168;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId___		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1411236169;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId___		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1411236170;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId___		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1411473593;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId___		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1412605211;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId___		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1415027294;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId___		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1416394616;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1416482279;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1418925511;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1420538822;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1422267177;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1424100906;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1424732907;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1425995929;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1427275843;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1427784999;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1430296870;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1431459357;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1434467925;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1437494294;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1442492509;Constructs a new job graph with the given name and a random job ID.__@param jobId The id of the job_@param jobName The name of the job;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,id,the,id,of,the,job,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1442944546;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1444215406;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1444312509;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1445293011;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1448299950;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1452526243;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1455548285;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1455549373;Constructs a new job graph with the given name and a random job ID if null supplied as an id.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,if,null,supplied,as,an,id,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName);1463155298;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__		setExecutionConfig(new ExecutionConfig())__	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,set,execution,config,new,execution,config
JobGraph -> public JobGraph(JobID jobId, String jobName);1468854249;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__		setExecutionConfig(new ExecutionConfig())__	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,set,execution,config,new,execution,config
JobGraph -> public JobGraph(JobID jobId, String jobName);1470677230;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__		setExecutionConfig(new ExecutionConfig())__	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,set,execution,config,new,execution,config
JobGraph -> public JobGraph(JobID jobId, String jobName);1476696544;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__		setExecutionConfig(new ExecutionConfig())__	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,set,execution,config,new,execution,config
JobGraph -> public JobGraph(JobID jobId, String jobName);1478068438;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName__		setExecutionConfig(new ExecutionConfig())__	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,set,execution,config,new,execution,config
JobGraph -> public JobGraph(JobID jobId, String jobName);1487616195;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1492678790;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1493975167;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1502355408;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1502355550;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1502701584;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1503041372;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1507212387;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1507212387;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1525420604;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1529065669;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1529583969;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1530181266;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public JobGraph(JobID jobId, String jobName);1531499577;Constructs a new job graph with the given job ID (or a random ID, if {@code null} is passed),_the given name and the given execution configuration (see {@link ExecutionConfig})._The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job.;public JobGraph(JobID jobId, String jobName) {_		this.jobID = jobId == null ? new JobID() : jobId__		this.jobName = jobName == null ? "(unnamed job)" : jobName___		try {_			setExecutionConfig(new ExecutionConfig())__		} catch (IOException e) {_			_			throw new RuntimeException("bug, empty execution config is not serializable")__		}_	};constructs,a,new,job,graph,with,the,given,job,id,or,a,random,id,if,code,null,is,passed,the,given,name,and,the,given,execution,configuration,see,link,execution,config,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job;public,job,graph,job,id,job,id,string,job,name,this,job,id,job,id,null,new,job,id,job,id,this,job,name,job,name,null,unnamed,job,job,name,try,set,execution,config,new,execution,config,catch,ioexception,e,throw,new,runtime,exception,bug,empty,execution,config,is,not,serializable
JobGraph -> public void addVertex(AbstractJobOutputVertex outputVertex);1405024514;Adds a new output vertex to the job graph if it is not already included.__@param outputVertex_the new output vertex to be added;public void addVertex(AbstractJobOutputVertex outputVertex) {_		if (!outputVertices.containsKey(outputVertex.getID())) {_			outputVertices.put(outputVertex.getID(), outputVertex)__		}_	};adds,a,new,output,vertex,to,the,job,graph,if,it,is,not,already,included,param,output,vertex,the,new,output,vertex,to,be,added;public,void,add,vertex,abstract,job,output,vertex,output,vertex,if,output,vertices,contains,key,output,vertex,get,id,output,vertices,put,output,vertex,get,id,output,vertex
JobGraph -> public void addVertex(AbstractJobOutputVertex outputVertex);1405090423;Adds a new output vertex to the job graph if it is not already included.__@param outputVertex_the new output vertex to be added;public void addVertex(AbstractJobOutputVertex outputVertex) {_		if (!outputVertices.containsKey(outputVertex.getID())) {_			outputVertices.put(outputVertex.getID(), outputVertex)__		}_	};adds,a,new,output,vertex,to,the,job,graph,if,it,is,not,already,included,param,output,vertex,the,new,output,vertex,to,be,added;public,void,add,vertex,abstract,job,output,vertex,output,vertex,if,output,vertices,contains,key,output,vertex,get,id,output,vertices,put,output,vertex,get,id,output,vertex
JobGraph -> public int getNumberOfExecutionRetries();1415027294;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1416394616;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1416482279;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1418925508;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1418925508;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1418925511;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1420538822;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1422267177;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1424100906;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1424732907;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1425995929;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1427275843;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1427784999;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1430296870;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1431459357;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1434467925;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1437494294;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1442492509;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1442944546;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1444215406;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1444312509;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1445293011;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1448299950;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public int getNumberOfExecutionRetries();1452526243;Gets the number of times the system will try to re-execute failed tasks. A value_of {@code -1} indicates that the system default value (as defined in the configuration)_should be used.__@return The number of times the system will try to re-execute failed tasks.;public int getNumberOfExecutionRetries() {_		return numExecutionRetries__	};gets,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,return,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,int,get,number,of,execution,retries,return,num,execution,retries
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1411236168;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1411236169;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1411236170;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1411473593;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1412605211;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1415027294;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1416394616;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1416482279;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1418925508;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1418925508;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1418925511;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1420538822;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1422267177;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1424100906;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1424732907;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1425995929;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1427275843;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1427784999;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1430296870;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getVertices();1431459357;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,vertices,return,this,task,vertices,values
JobGraph -> public JobGraph(final String jobName);1405024514;Constructs a new job graph with the given name and a random job ID.__@param jobName_the name for this job graph;public JobGraph(final String jobName) {_		this()__		this.jobName = jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,for,this,job,graph;public,job,graph,final,string,job,name,this,this,job,name,job,name
JobGraph -> public JobGraph(final String jobName);1405090423;Constructs a new job graph with the given name and a random job ID.__@param jobName_the name for this job graph;public JobGraph(final String jobName) {_		this()__		this.jobName = jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,for,this,job,graph;public,job,graph,final,string,job,name,this,this,job,name,job,name
JobGraph -> public void addVertex(AbstractJobInputVertex inputVertex);1405024514;Adds a new input vertex to the job graph if it is not already included.__@param inputVertex_the new input vertex to be added;public void addVertex(AbstractJobInputVertex inputVertex) {_		if (!inputVertices.containsKey(inputVertex.getID())) {_			inputVertices.put(inputVertex.getID(), inputVertex)__		}_	};adds,a,new,input,vertex,to,the,job,graph,if,it,is,not,already,included,param,input,vertex,the,new,input,vertex,to,be,added;public,void,add,vertex,abstract,job,input,vertex,input,vertex,if,input,vertices,contains,key,input,vertex,get,id,input,vertices,put,input,vertex,get,id,input,vertex
JobGraph -> public void addVertex(AbstractJobInputVertex inputVertex);1405090423;Adds a new input vertex to the job graph if it is not already included.__@param inputVertex_the new input vertex to be added;public void addVertex(AbstractJobInputVertex inputVertex) {_		if (!inputVertices.containsKey(inputVertex.getID())) {_			inputVertices.put(inputVertex.getID(), inputVertex)__		}_	};adds,a,new,input,vertex,to,the,job,graph,if,it,is,not,already,included,param,input,vertex,the,new,input,vertex,to,be,added;public,void,add,vertex,abstract,job,input,vertex,input,vertex,if,input,vertices,contains,key,input,vertex,get,id,input,vertices,put,input,vertex,get,id,input,vertex
JobGraph -> private void writeJarBlobKeys(final DataOutputView out) throws IOException;1412605211;Writes the BLOB keys of the jar files required to run this job to the given {@link org.apache.flink.core.memory.DataOutputView}.__@param out_the data output to write the BLOB keys to_@throws IOException_thrown if an error occurs while writing to the data output;private void writeJarBlobKeys(final DataOutputView out) throws IOException {__		out.writeInt(this.userJarBlobKeys.size())___		for (final Iterator<BlobKey> it = this.userJarBlobKeys.iterator()_ it.hasNext()_) {_			it.next().write(out)__		}_	};writes,the,blob,keys,of,the,jar,files,required,to,run,this,job,to,the,given,link,org,apache,flink,core,memory,data,output,view,param,out,the,data,output,to,write,the,blob,keys,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,data,output;private,void,write,jar,blob,keys,final,data,output,view,out,throws,ioexception,out,write,int,this,user,jar,blob,keys,size,for,final,iterator,blob,key,it,this,user,jar,blob,keys,iterator,it,has,next,it,next,write,out
JobGraph -> private void writeJarBlobKeys(final DataOutputView out) throws IOException;1415027294;Writes the BLOB keys of the jar files required to run this job to the given {@link org.apache.flink.core.memory.DataOutputView}.__@param out_the data output to write the BLOB keys to_@throws IOException_thrown if an error occurs while writing to the data output;private void writeJarBlobKeys(final DataOutputView out) throws IOException {__		out.writeInt(this.userJarBlobKeys.size())___		for (final Iterator<BlobKey> it = this.userJarBlobKeys.iterator()_ it.hasNext()_) {_			it.next().write(out)__		}_	};writes,the,blob,keys,of,the,jar,files,required,to,run,this,job,to,the,given,link,org,apache,flink,core,memory,data,output,view,param,out,the,data,output,to,write,the,blob,keys,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,data,output;private,void,write,jar,blob,keys,final,data,output,view,out,throws,ioexception,out,write,int,this,user,jar,blob,keys,size,for,final,iterator,blob,key,it,this,user,jar,blob,keys,iterator,it,has,next,it,next,write,out
JobGraph -> private void writeJarBlobKeys(final DataOutputView out) throws IOException;1416394616;Writes the BLOB keys of the jar files required to run this job to the given {@link org.apache.flink.core.memory.DataOutputView}.__@param out_the data output to write the BLOB keys to_@throws IOException_thrown if an error occurs while writing to the data output;private void writeJarBlobKeys(final DataOutputView out) throws IOException {__		out.writeInt(this.userJarBlobKeys.size())___		for (BlobKey userJarBlobKey : this.userJarBlobKeys) {_			userJarBlobKey.write(out)__		}_	};writes,the,blob,keys,of,the,jar,files,required,to,run,this,job,to,the,given,link,org,apache,flink,core,memory,data,output,view,param,out,the,data,output,to,write,the,blob,keys,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,data,output;private,void,write,jar,blob,keys,final,data,output,view,out,throws,ioexception,out,write,int,this,user,jar,blob,keys,size,for,blob,key,user,jar,blob,key,this,user,jar,blob,keys,user,jar,blob,key,write,out
JobGraph -> private void writeJarBlobKeys(final DataOutputView out) throws IOException;1416482279;Writes the BLOB keys of the jar files required to run this job to the given {@link org.apache.flink.core.memory.DataOutputView}.__@param out_the data output to write the BLOB keys to_@throws IOException_thrown if an error occurs while writing to the data output;private void writeJarBlobKeys(final DataOutputView out) throws IOException {__		out.writeInt(this.userJarBlobKeys.size())___		for (BlobKey userJarBlobKey : this.userJarBlobKeys) {_			userJarBlobKey.write(out)__		}_	};writes,the,blob,keys,of,the,jar,files,required,to,run,this,job,to,the,given,link,org,apache,flink,core,memory,data,output,view,param,out,the,data,output,to,write,the,blob,keys,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,data,output;private,void,write,jar,blob,keys,final,data,output,view,out,throws,ioexception,out,write,int,this,user,jar,blob,keys,size,for,blob,key,user,jar,blob,key,this,user,jar,blob,keys,user,jar,blob,key,write,out
JobGraph -> private void writeJarBlobKeys(final DataOutputView out) throws IOException;1418925508;Writes the BLOB keys of the jar files required to run this job to the given {@link org.apache.flink.core.memory.DataOutputView}.__@param out_the data output to write the BLOB keys to_@throws IOException_thrown if an error occurs while writing to the data output;private void writeJarBlobKeys(final DataOutputView out) throws IOException {__		out.writeInt(this.userJarBlobKeys.size())___		for (BlobKey userJarBlobKey : this.userJarBlobKeys) {_			userJarBlobKey.write(out)__		}_	};writes,the,blob,keys,of,the,jar,files,required,to,run,this,job,to,the,given,link,org,apache,flink,core,memory,data,output,view,param,out,the,data,output,to,write,the,blob,keys,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,data,output;private,void,write,jar,blob,keys,final,data,output,view,out,throws,ioexception,out,write,int,this,user,jar,blob,keys,size,for,blob,key,user,jar,blob,key,this,user,jar,blob,keys,user,jar,blob,key,write,out
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1487616195;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1492678790;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1493975167;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1502355408;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1502355550;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1502701584;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1503041372;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1507212387;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1507212387;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1525420604;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1529065669;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1529583969;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1530181266;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException;1531499577;Sets the execution config. This method eagerly serialized the ExecutionConfig for future RPC_transport. Further modification of the referenced ExecutionConfig object will not affect_this serialized copy.__@param executionConfig The ExecutionConfig to be serialized._@throws IOException Thrown if the serialization of the ExecutionConfig fails;public void setExecutionConfig(ExecutionConfig executionConfig) throws IOException {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__	};sets,the,execution,config,this,method,eagerly,serialized,the,execution,config,for,future,rpc,transport,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized,throws,ioexception,thrown,if,the,serialization,of,the,execution,config,fails;public,void,set,execution,config,execution,config,execution,config,throws,ioexception,check,not,null,execution,config,execution,config,must,not,be,null,this,serialized,execution,config,new,serialized,value,execution,config
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1431459357;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1434467925;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1437494294;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1442492509;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1442944546;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1444215406;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1444312509;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1445293011;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1448299950;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1452526243;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1455548285;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1455549373;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1457737669;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1459526979;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1463155298;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1468854249;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1470677230;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1476696544;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1478068438;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public JobSnapshottingSettings getSnapshotSettings();1487616195;Gets the settings for asynchronous snapshots. This method returns null, when_snapshotting is not enabled.__@return The snapshot settings, or null, if snapshotting is not enabled.;public JobSnapshottingSettings getSnapshotSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,snapshotting,is,not,enabled,return,the,snapshot,settings,or,null,if,snapshotting,is,not,enabled;public,job,snapshotting,settings,get,snapshot,settings,return,snapshot,settings
JobGraph -> public Configuration getJobConfiguration();1405024514;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {__		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1405090423;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {__		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1411236168;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1411236168;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1411236168;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1411236169;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1411236170;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1411473593;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1412605211;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1415027294;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1416394616;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1416482279;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1418925508;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1418925508;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1418925511;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1420538822;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1422267177;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1424100906;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1424732907;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1425995929;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1427275843;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1427784999;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1430296870;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1431459357;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1434467925;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1437494294;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1442492509;Returns the configuration object for this job if it is set.__@return the configuration object for this job, or <code>null</code> if it is not set;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,if,it,is,set,return,the,configuration,object,for,this,job,or,code,null,code,if,it,is,not,set;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1442944546;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1444215406;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1444312509;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1445293011;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1448299950;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1452526243;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1455548285;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1455549373;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1457737669;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1459526979;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1463155298;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1468854249;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1470677230;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1476696544;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1478068438;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1487616195;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1492678790;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1493975167;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1502355408;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1502355550;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1502701584;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1503041372;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1507212387;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1507212387;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1525420604;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1529065669;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1529583969;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1530181266;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public Configuration getJobConfiguration();1531499577;Returns the configuration object for this job. Job-wide parameters should be set into that_configuration object.__@return The configuration object for this job.;public Configuration getJobConfiguration() {_		return this.jobConfiguration__	};returns,the,configuration,object,for,this,job,job,wide,parameters,should,be,set,into,that,configuration,object,return,the,configuration,object,for,this,job;public,configuration,get,job,configuration,return,this,job,configuration
JobGraph -> public AbstractJobVertex findVertexWithNullEdges();1405024514;Checks if any vertex of this job graph has an outgoing edge which is set to <code>null</code>. If this is the_case the respective vertex is returned.__@return the vertex which has an outgoing edge set to <code>null</code> or <code>null</code> if no such vertex_exists;public AbstractJobVertex findVertexWithNullEdges() {__		final AbstractJobVertex[] allVertices = getAllJobVertices()___		for (int i = 0_ i < allVertices.length_ i++) {__			for (int j = 0_ j < allVertices[i].getNumberOfForwardConnections()_ j++) {_				if (allVertices[i].getForwardConnection(j) == null) {_					return allVertices[i]__				}_			}__			for (int j = 0_ j < allVertices[i].getNumberOfBackwardConnections()_ j++) {_				if (allVertices[i].getBackwardConnection(j) == null) {_					return allVertices[i]__				}_			}_		}__		return null__	};checks,if,any,vertex,of,this,job,graph,has,an,outgoing,edge,which,is,set,to,code,null,code,if,this,is,the,case,the,respective,vertex,is,returned,return,the,vertex,which,has,an,outgoing,edge,set,to,code,null,code,or,code,null,code,if,no,such,vertex,exists;public,abstract,job,vertex,find,vertex,with,null,edges,final,abstract,job,vertex,all,vertices,get,all,job,vertices,for,int,i,0,i,all,vertices,length,i,for,int,j,0,j,all,vertices,i,get,number,of,forward,connections,j,if,all,vertices,i,get,forward,connection,j,null,return,all,vertices,i,for,int,j,0,j,all,vertices,i,get,number,of,backward,connections,j,if,all,vertices,i,get,backward,connection,j,null,return,all,vertices,i,return,null
JobGraph -> public AbstractJobVertex findVertexWithNullEdges();1405090423;Checks if any vertex of this job graph has an outgoing edge which is set to <code>null</code>. If this is the_case the respective vertex is returned.__@return the vertex which has an outgoing edge set to <code>null</code> or <code>null</code> if no such vertex_exists;public AbstractJobVertex findVertexWithNullEdges() {__		final AbstractJobVertex[] allVertices = getAllJobVertices()___		for (int i = 0_ i < allVertices.length_ i++) {__			for (int j = 0_ j < allVertices[i].getNumberOfForwardConnections()_ j++) {_				if (allVertices[i].getForwardConnection(j) == null) {_					return allVertices[i]__				}_			}__			for (int j = 0_ j < allVertices[i].getNumberOfBackwardConnections()_ j++) {_				if (allVertices[i].getBackwardConnection(j) == null) {_					return allVertices[i]__				}_			}_		}__		return null__	};checks,if,any,vertex,of,this,job,graph,has,an,outgoing,edge,which,is,set,to,code,null,code,if,this,is,the,case,the,respective,vertex,is,returned,return,the,vertex,which,has,an,outgoing,edge,set,to,code,null,code,or,code,null,code,if,no,such,vertex,exists;public,abstract,job,vertex,find,vertex,with,null,edges,final,abstract,job,vertex,all,vertices,get,all,job,vertices,for,int,i,0,i,all,vertices,length,i,for,int,j,0,j,all,vertices,i,get,number,of,forward,connections,j,if,all,vertices,i,get,forward,connection,j,null,return,all,vertices,i,for,int,j,0,j,all,vertices,i,get,number,of,backward,connections,j,if,all,vertices,i,get,backward,connection,j,null,return,all,vertices,i,return,null
JobGraph -> public AbstractJobVertex findVertexWithNullEdges();1411236168;Checks if any vertex of this job graph has an outgoing edge which is set to <code>null</code>. If this is the_case the respective vertex is returned.__@return the vertex which has an outgoing edge set to <code>null</code> or <code>null</code> if no such vertex_exists;public AbstractJobVertex findVertexWithNullEdges() {__		final AbstractJobVertex[] allVertices = getAllJobVertices()___		for (int i = 0_ i < allVertices.length_ i++) {__			for (int j = 0_ j < allVertices[i].getNumberOfForwardConnections()_ j++) {_				if (allVertices[i].getForwardConnection(j) == null) {_					return allVertices[i]__				}_			}__			for (int j = 0_ j < allVertices[i].getNumberOfBackwardConnections()_ j++) {_				if (allVertices[i].getBackwardConnection(j) == null) {_					return allVertices[i]__				}_			}_		}__		return null__	};checks,if,any,vertex,of,this,job,graph,has,an,outgoing,edge,which,is,set,to,code,null,code,if,this,is,the,case,the,respective,vertex,is,returned,return,the,vertex,which,has,an,outgoing,edge,set,to,code,null,code,or,code,null,code,if,no,such,vertex,exists;public,abstract,job,vertex,find,vertex,with,null,edges,final,abstract,job,vertex,all,vertices,get,all,job,vertices,for,int,i,0,i,all,vertices,length,i,for,int,j,0,j,all,vertices,i,get,number,of,forward,connections,j,if,all,vertices,i,get,forward,connection,j,null,return,all,vertices,i,for,int,j,0,j,all,vertices,i,get,number,of,backward,connections,j,if,all,vertices,i,get,backward,connection,j,null,return,all,vertices,i,return,null
JobGraph -> public AbstractJobVertex findVertexWithNullEdges();1411236168;Checks if any vertex of this job graph has an outgoing edge which is set to <code>null</code>. If this is the_case the respective vertex is returned.__@return the vertex which has an outgoing edge set to <code>null</code> or <code>null</code> if no such vertex_exists;public AbstractJobVertex findVertexWithNullEdges() {__		final AbstractJobVertex[] allVertices = getAllJobVertices()___		for (int i = 0_ i < allVertices.length_ i++) {__			for (int j = 0_ j < allVertices[i].getNumberOfForwardConnections()_ j++) {_				if (allVertices[i].getForwardConnection(j) == null) {_					return allVertices[i]__				}_			}__			for (int j = 0_ j < allVertices[i].getNumberOfBackwardConnections()_ j++) {_				if (allVertices[i].getBackwardConnection(j) == null) {_					return allVertices[i]__				}_			}_		}__		return null__	};checks,if,any,vertex,of,this,job,graph,has,an,outgoing,edge,which,is,set,to,code,null,code,if,this,is,the,case,the,respective,vertex,is,returned,return,the,vertex,which,has,an,outgoing,edge,set,to,code,null,code,or,code,null,code,if,no,such,vertex,exists;public,abstract,job,vertex,find,vertex,with,null,edges,final,abstract,job,vertex,all,vertices,get,all,job,vertices,for,int,i,0,i,all,vertices,length,i,for,int,j,0,j,all,vertices,i,get,number,of,forward,connections,j,if,all,vertices,i,get,forward,connection,j,null,return,all,vertices,i,for,int,j,0,j,all,vertices,i,get,number,of,backward,connections,j,if,all,vertices,i,get,backward,connection,j,null,return,all,vertices,i,return,null
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1420538822;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1422267177;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1424100906;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1424732907;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1425995929;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1427275843;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1427784999;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1430296870;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1431459357;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1434467925;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1437494294;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1442492509;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1442944546;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1444215406;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1444312509;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1445293011;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1448299950;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1452526243;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1455548285;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1455549373;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1457737669;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1459526979;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1463155298;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1468854249;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException;1470677230;Uploads the previously added user jar file to the job manager through the job manager's BLOB server.__@param serverAddress_the network address of the BLOB server_@throws IOException_thrown if an I/O error occurs during the upload;public void uploadRequiredJarFiles(InetSocketAddress serverAddress) throws IOException {_		if (this.userJars.isEmpty()) {_			return__		}__		BlobClient bc = null__		try {_			bc = new BlobClient(serverAddress)___			for (final Path jar : this.userJars) {__				final FileSystem fs = jar.getFileSystem()__				FSDataInputStream is = null__				try {_					is = fs.open(jar)__					final BlobKey key = bc.put(is)__					this.userJarBlobKeys.add(key)__				}_				finally {_					if (is != null) {_						is.close()__					}_				}_			}_		}_		finally {_			if (bc != null) {_				bc.close()__			}_		}_	};uploads,the,previously,added,user,jar,file,to,the,job,manager,through,the,job,manager,s,blob,server,param,server,address,the,network,address,of,the,blob,server,throws,ioexception,thrown,if,an,i,o,error,occurs,during,the,upload;public,void,upload,required,jar,files,inet,socket,address,server,address,throws,ioexception,if,this,user,jars,is,empty,return,blob,client,bc,null,try,bc,new,blob,client,server,address,for,final,path,jar,this,user,jars,final,file,system,fs,jar,get,file,system,fsdata,input,stream,is,null,try,is,fs,open,jar,final,blob,key,key,bc,put,is,this,user,jar,blob,keys,add,key,finally,if,is,null,is,close,finally,if,bc,null,bc,close
JobGraph -> public JobGraph();1405024514;Constructs a new job graph with a random job ID.;public JobGraph() {_		this.jobID = new JobID()__	};constructs,a,new,job,graph,with,a,random,job,id;public,job,graph,this,job,id,new,job,id
JobGraph -> public JobGraph();1405090423;Constructs a new job graph with a random job ID.;public JobGraph() {_		this.jobID = new JobID()__	};constructs,a,new,job,graph,with,a,random,job,id;public,job,graph,this,job,id,new,job,id
JobGraph -> public JobGraph();1411236168;Constructs a new job graph with a random job ID.;public JobGraph() {_		this.jobID = new JobID()__	};constructs,a,new,job,graph,with,a,random,job,id;public,job,graph,this,job,id,new,job,id
JobGraph -> public JobGraph();1411236168;Constructs a new job graph with a random job ID.;public JobGraph() {_		this.jobID = new JobID()__	};constructs,a,new,job,graph,with,a,random,job,id;public,job,graph,this,job,id,new,job,id
JobGraph -> public JobGraph();1411236168;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1411236169;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1411236170;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1411473593;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1412605211;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1415027294;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1416394616;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1416482279;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1418925508;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1418925508;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1418925511;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1420538822;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1422267177;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1424100906;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1424732907;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1425995929;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1427275843;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1427784999;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1430296870;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1431459357;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1434467925;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1437494294;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1442492509;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1442944546;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1444215406;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1444312509;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1445293011;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1448299950;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1452526243;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1455548285;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public JobGraph();1455549373;Constructs a new job graph with no name and a random job ID.;public JobGraph() {_		this((String) null)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id;public,job,graph,this,string,null
JobGraph -> public void setSavepointPath(String savepointPath);1452526243;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1455548285;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1455549373;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1457737669;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1459526979;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1463155298;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1468854249;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1470677230;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public void setSavepointPath(String savepointPath);1476696544;Sets the savepoint path to rollback the deployment to.__@param savepointPath The savepoint path;public void setSavepointPath(String savepointPath) {_		if (savepointPath != null) {_			if (snapshotSettings == null) {_				throw new IllegalStateException("Checkpointing disabled")__			}_			else {_				snapshotSettings.setSavepointPath(savepointPath)__			}_		}_	};sets,the,savepoint,path,to,rollback,the,deployment,to,param,savepoint,path,the,savepoint,path;public,void,set,savepoint,path,string,savepoint,path,if,savepoint,path,null,if,snapshot,settings,null,throw,new,illegal,state,exception,checkpointing,disabled,else,snapshot,settings,set,savepoint,path,savepoint,path
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1463155298;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1468854249;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1470677230;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1476696544;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1478068438;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1487616195;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1492678790;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1493975167;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1502355408;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1502355550;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1502701584;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1503041372;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1507212387;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1507212387;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1525420604;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1529065669;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1529583969;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1530181266;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public SerializedValue<ExecutionConfig> getSerializedExecutionConfig();1531499577;Returns the {@link ExecutionConfig}__@return ExecutionConfig;public SerializedValue<ExecutionConfig> getSerializedExecutionConfig() {_		return serializedExecutionConfig__	};returns,the,link,execution,config,return,execution,config;public,serialized,value,execution,config,get,serialized,execution,config,return,serialized,execution,config
JobGraph -> public List<Path> getUserJars();1493975167;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1502355408;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1502355550;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1502701584;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1503041372;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1507212387;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1507212387;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1525420604;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1529065669;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1529583969;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1530181266;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public List<Path> getUserJars();1531499577;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public List<Path> getUserJars() {_		return userJars__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,list,path,get,user,jars,return,user,jars
JobGraph -> public JobGraph(String jobName, ExecutionConfig config);1457737669;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID.__@param jobName The name of the job._@param config The execution configuration of the job.;public JobGraph(String jobName, ExecutionConfig config) {_		this(null, jobName, config)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job;public,job,graph,string,job,name,execution,config,config,this,null,job,name,config
JobGraph -> public JobGraph(String jobName, ExecutionConfig config);1459526979;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID.__@param jobName The name of the job._@param config The execution configuration of the job.;public JobGraph(String jobName, ExecutionConfig config) {_		this(null, jobName, config)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job;public,job,graph,string,job,name,execution,config,config,this,null,job,name,config
JobGraph -> public void addVertex(JobVertex vertex);1434467925;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1437494294;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1442492509;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1442944546;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1444215406;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1444312509;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1445293011;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1448299950;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)__		_		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1452526243;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1455548285;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1455549373;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1457737669;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1459526979;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1463155298;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1468854249;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1470677230;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1476696544;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1478068438;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1487616195;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1492678790;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1493975167;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1502355408;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1502355550;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1502701584;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1503041372;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1507212387;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1507212387;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1525420604;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1529065669;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1529583969;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1530181266;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public void addVertex(JobVertex vertex);1531499577;Adds a new task vertex to the job graph if it is not already included.__@param vertex_the new task vertex to be added;public void addVertex(JobVertex vertex) {_		final JobVertexID id = vertex.getID()__		JobVertex previous = taskVertices.put(id, vertex)___		_		if (previous != null) {_			taskVertices.put(id, previous)__			throw new IllegalArgumentException("The JobGraph already contains a vertex with that id.")__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,vertex,vertex,final,job,vertex,id,id,vertex,get,id,job,vertex,previous,task,vertices,put,id,vertex,if,previous,null,task,vertices,put,id,previous,throw,new,illegal,argument,exception,the,job,graph,already,contains,a,vertex,with,that,id
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1478068438;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1487616195;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1492678790;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1493975167;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1502355408;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1502355550;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1502701584;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1503041372;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1507212387;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1507212387;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1525420604;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1529065669;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1529583969;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1530181266;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public SavepointRestoreSettings getSavepointRestoreSettings();1531499577;Returns the configured savepoint restore setting._@return The configured savepoint restore settings.;public SavepointRestoreSettings getSavepointRestoreSettings() {_		return savepointRestoreSettings__	};returns,the,configured,savepoint,restore,setting,return,the,configured,savepoint,restore,settings;public,savepoint,restore,settings,get,savepoint,restore,settings,return,savepoint,restore,settings
JobGraph -> public void addVertex(JobTaskVertex taskVertex);1405024514;Adds a new task vertex to the job graph if it is not already included.__@param taskVertex_the new task vertex to be added;public void addVertex(JobTaskVertex taskVertex) {_		if (!taskVertices.containsKey(taskVertex.getID())) {_			taskVertices.put(taskVertex.getID(), taskVertex)__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,task,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,task,vertex,task,vertex,if,task,vertices,contains,key,task,vertex,get,id,task,vertices,put,task,vertex,get,id,task,vertex
JobGraph -> public void addVertex(JobTaskVertex taskVertex);1405090423;Adds a new task vertex to the job graph if it is not already included.__@param taskVertex_the new task vertex to be added;public void addVertex(JobTaskVertex taskVertex) {_		if (!taskVertices.containsKey(taskVertex.getID())) {_			taskVertices.put(taskVertex.getID(), taskVertex)__		}_	};adds,a,new,task,vertex,to,the,job,graph,if,it,is,not,already,included,param,task,vertex,the,new,task,vertex,to,be,added;public,void,add,vertex,job,task,vertex,task,vertex,if,task,vertices,contains,key,task,vertex,get,id,task,vertices,put,task,vertex,get,id,task,vertex
JobGraph -> public boolean isInstanceDependencyChainAcyclic();1405024514;Checks if the instance dependency chain created with the <code>setVertexToShareInstancesWith</code> method is_acyclic.__@return <code>true</code> if the dependency chain is acyclic, <code>false</code> otherwise;public boolean isInstanceDependencyChainAcyclic() {__		final AbstractJobVertex[] allVertices = this.getAllJobVertices()__		final Set<AbstractJobVertex> alreadyVisited = new HashSet<AbstractJobVertex>()___		for (AbstractJobVertex vertex : allVertices) {__			if (alreadyVisited.contains(vertex)) {_				continue__			}__			AbstractJobVertex vertexToShareInstancesWith = vertex.getVertexToShareInstancesWith()__			if (vertexToShareInstancesWith != null) {__				final Set<AbstractJobVertex> cycleMap = new HashSet<AbstractJobVertex>()___				while (vertexToShareInstancesWith != null) {__					if (cycleMap.contains(vertexToShareInstancesWith)) {_						return false__					} else {_						alreadyVisited.add(vertexToShareInstancesWith)__						cycleMap.add(vertexToShareInstancesWith)__						vertexToShareInstancesWith = vertexToShareInstancesWith.getVertexToShareInstancesWith()__					}_				}_			}_		}__		return true__	};checks,if,the,instance,dependency,chain,created,with,the,code,set,vertex,to,share,instances,with,code,method,is,acyclic,return,code,true,code,if,the,dependency,chain,is,acyclic,code,false,code,otherwise;public,boolean,is,instance,dependency,chain,acyclic,final,abstract,job,vertex,all,vertices,this,get,all,job,vertices,final,set,abstract,job,vertex,already,visited,new,hash,set,abstract,job,vertex,for,abstract,job,vertex,vertex,all,vertices,if,already,visited,contains,vertex,continue,abstract,job,vertex,vertex,to,share,instances,with,vertex,get,vertex,to,share,instances,with,if,vertex,to,share,instances,with,null,final,set,abstract,job,vertex,cycle,map,new,hash,set,abstract,job,vertex,while,vertex,to,share,instances,with,null,if,cycle,map,contains,vertex,to,share,instances,with,return,false,else,already,visited,add,vertex,to,share,instances,with,cycle,map,add,vertex,to,share,instances,with,vertex,to,share,instances,with,vertex,to,share,instances,with,get,vertex,to,share,instances,with,return,true
JobGraph -> public boolean isInstanceDependencyChainAcyclic();1405090423;Checks if the instance dependency chain created with the <code>setVertexToShareInstancesWith</code> method is_acyclic.__@return <code>true</code> if the dependency chain is acyclic, <code>false</code> otherwise;public boolean isInstanceDependencyChainAcyclic() {__		final AbstractJobVertex[] allVertices = this.getAllJobVertices()__		final Set<AbstractJobVertex> alreadyVisited = new HashSet<AbstractJobVertex>()___		for (AbstractJobVertex vertex : allVertices) {__			if (alreadyVisited.contains(vertex)) {_				continue__			}__			AbstractJobVertex vertexToShareInstancesWith = vertex.getVertexToShareInstancesWith()__			if (vertexToShareInstancesWith != null) {__				final Set<AbstractJobVertex> cycleMap = new HashSet<AbstractJobVertex>()___				while (vertexToShareInstancesWith != null) {__					if (cycleMap.contains(vertexToShareInstancesWith)) {_						return false__					} else {_						alreadyVisited.add(vertexToShareInstancesWith)__						cycleMap.add(vertexToShareInstancesWith)__						vertexToShareInstancesWith = vertexToShareInstancesWith.getVertexToShareInstancesWith()__					}_				}_			}_		}__		return true__	};checks,if,the,instance,dependency,chain,created,with,the,code,set,vertex,to,share,instances,with,code,method,is,acyclic,return,code,true,code,if,the,dependency,chain,is,acyclic,code,false,code,otherwise;public,boolean,is,instance,dependency,chain,acyclic,final,abstract,job,vertex,all,vertices,this,get,all,job,vertices,final,set,abstract,job,vertex,already,visited,new,hash,set,abstract,job,vertex,for,abstract,job,vertex,vertex,all,vertices,if,already,visited,contains,vertex,continue,abstract,job,vertex,vertex,to,share,instances,with,vertex,get,vertex,to,share,instances,with,if,vertex,to,share,instances,with,null,final,set,abstract,job,vertex,cycle,map,new,hash,set,abstract,job,vertex,while,vertex,to,share,instances,with,null,if,cycle,map,contains,vertex,to,share,instances,with,return,false,else,already,visited,add,vertex,to,share,instances,with,cycle,map,add,vertex,to,share,instances,with,vertex,to,share,instances,with,vertex,to,share,instances,with,get,vertex,to,share,instances,with,return,true
JobGraph -> public boolean isInstanceDependencyChainAcyclic();1411236168;Checks if the instance dependency chain created with the <code>setVertexToShareInstancesWith</code> method is_acyclic.__@return <code>true</code> if the dependency chain is acyclic, <code>false</code> otherwise;public boolean isInstanceDependencyChainAcyclic() {__		final AbstractJobVertex[] allVertices = this.getAllJobVertices()__		final Set<AbstractJobVertex> alreadyVisited = new HashSet<AbstractJobVertex>()___		for (AbstractJobVertex vertex : allVertices) {__			if (alreadyVisited.contains(vertex)) {_				continue__			}__			AbstractJobVertex vertexToShareInstancesWith = vertex.getVertexToShareInstancesWith()__			if (vertexToShareInstancesWith != null) {__				final Set<AbstractJobVertex> cycleMap = new HashSet<AbstractJobVertex>()___				while (vertexToShareInstancesWith != null) {__					if (cycleMap.contains(vertexToShareInstancesWith)) {_						return false__					} else {_						alreadyVisited.add(vertexToShareInstancesWith)__						cycleMap.add(vertexToShareInstancesWith)__						vertexToShareInstancesWith = vertexToShareInstancesWith.getVertexToShareInstancesWith()__					}_				}_			}_		}__		return true__	};checks,if,the,instance,dependency,chain,created,with,the,code,set,vertex,to,share,instances,with,code,method,is,acyclic,return,code,true,code,if,the,dependency,chain,is,acyclic,code,false,code,otherwise;public,boolean,is,instance,dependency,chain,acyclic,final,abstract,job,vertex,all,vertices,this,get,all,job,vertices,final,set,abstract,job,vertex,already,visited,new,hash,set,abstract,job,vertex,for,abstract,job,vertex,vertex,all,vertices,if,already,visited,contains,vertex,continue,abstract,job,vertex,vertex,to,share,instances,with,vertex,get,vertex,to,share,instances,with,if,vertex,to,share,instances,with,null,final,set,abstract,job,vertex,cycle,map,new,hash,set,abstract,job,vertex,while,vertex,to,share,instances,with,null,if,cycle,map,contains,vertex,to,share,instances,with,return,false,else,already,visited,add,vertex,to,share,instances,with,cycle,map,add,vertex,to,share,instances,with,vertex,to,share,instances,with,vertex,to,share,instances,with,get,vertex,to,share,instances,with,return,true
JobGraph -> public boolean isInstanceDependencyChainAcyclic();1411236168;Checks if the instance dependency chain created with the <code>setVertexToShareInstancesWith</code> method is_acyclic.__@return <code>true</code> if the dependency chain is acyclic, <code>false</code> otherwise;public boolean isInstanceDependencyChainAcyclic() {__		final AbstractJobVertex[] allVertices = this.getAllJobVertices()__		final Set<AbstractJobVertex> alreadyVisited = new HashSet<AbstractJobVertex>()___		for (AbstractJobVertex vertex : allVertices) {__			if (alreadyVisited.contains(vertex)) {_				continue__			}__			AbstractJobVertex vertexToShareInstancesWith = vertex.getVertexToShareInstancesWith()__			if (vertexToShareInstancesWith != null) {__				final Set<AbstractJobVertex> cycleMap = new HashSet<AbstractJobVertex>()___				while (vertexToShareInstancesWith != null) {__					if (cycleMap.contains(vertexToShareInstancesWith)) {_						return false__					} else {_						alreadyVisited.add(vertexToShareInstancesWith)__						cycleMap.add(vertexToShareInstancesWith)__						vertexToShareInstancesWith = vertexToShareInstancesWith.getVertexToShareInstancesWith()__					}_				}_			}_		}__		return true__	};checks,if,the,instance,dependency,chain,created,with,the,code,set,vertex,to,share,instances,with,code,method,is,acyclic,return,code,true,code,if,the,dependency,chain,is,acyclic,code,false,code,otherwise;public,boolean,is,instance,dependency,chain,acyclic,final,abstract,job,vertex,all,vertices,this,get,all,job,vertices,final,set,abstract,job,vertex,already,visited,new,hash,set,abstract,job,vertex,for,abstract,job,vertex,vertex,all,vertices,if,already,visited,contains,vertex,continue,abstract,job,vertex,vertex,to,share,instances,with,vertex,get,vertex,to,share,instances,with,if,vertex,to,share,instances,with,null,final,set,abstract,job,vertex,cycle,map,new,hash,set,abstract,job,vertex,while,vertex,to,share,instances,with,null,if,cycle,map,contains,vertex,to,share,instances,with,return,false,else,already,visited,add,vertex,to,share,instances,with,cycle,map,add,vertex,to,share,instances,with,vertex,to,share,instances,with,vertex,to,share,instances,with,get,vertex,to,share,instances,with,return,true
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1415027294;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1416394616;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1416482279;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1418925508;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1418925508;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1418925511;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1420538822;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1422267177;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1424100906;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1424732907;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1425995929;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1427275843;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1427784999;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1430296870;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1431459357;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1434467925;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1437494294;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1442492509;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException("The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1442944546;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException(_					"The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1444215406;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException(_					"The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1444312509;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException(_					"The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1445293011;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException(_					"The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1448299950;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException(_					"The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void setNumberOfExecutionRetries(int numberOfExecutionRetries);1452526243;Sets the number of times that failed tasks are re-executed. A value of zero_effectively disables fault tolerance. A value of {@code -1} indicates that the system_default value (as defined in the configuration) should be used.__@param numberOfExecutionRetries The number of times the system will try to re-execute failed tasks.;public void setNumberOfExecutionRetries(int numberOfExecutionRetries) {_		if (numberOfExecutionRetries < -1) {_			throw new IllegalArgumentException(_					"The number of execution retries must be non-negative, or -1 (use system default)")__		}_		this.numExecutionRetries = numberOfExecutionRetries__	};sets,the,number,of,times,that,failed,tasks,are,re,executed,a,value,of,zero,effectively,disables,fault,tolerance,a,value,of,code,1,indicates,that,the,system,default,value,as,defined,in,the,configuration,should,be,used,param,number,of,execution,retries,the,number,of,times,the,system,will,try,to,re,execute,failed,tasks;public,void,set,number,of,execution,retries,int,number,of,execution,retries,if,number,of,execution,retries,1,throw,new,illegal,argument,exception,the,number,of,execution,retries,must,be,non,negative,or,1,use,system,default,this,num,execution,retries,number,of,execution,retries
JobGraph -> public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout, 			Configuration blobClientConfig) throws IOException;1476696544;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param jobManager JobManager actor gateway_@param askTimeout Ask timeout_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout,_			Configuration blobClientConfig) throws IOException {_		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(jobManager, askTimeout, blobClientConfig, userJars)___		for (BlobKey blobKey : blobKeys) {_			if (!userJarBlobKeys.contains(blobKey)) {_				userJarBlobKeys.add(blobKey)__			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,job,manager,job,manager,actor,gateway,param,ask,timeout,ask,timeout,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,actor,gateway,job,manager,finite,duration,ask,timeout,configuration,blob,client,config,throws,ioexception,list,blob,key,blob,keys,blob,client,upload,jar,files,job,manager,ask,timeout,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout, 			Configuration blobClientConfig) throws IOException;1478068438;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param jobManager JobManager actor gateway_@param askTimeout Ask timeout_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout,_			Configuration blobClientConfig) throws IOException {_		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(jobManager, askTimeout, blobClientConfig, userJars)___		for (BlobKey blobKey : blobKeys) {_			if (!userJarBlobKeys.contains(blobKey)) {_				userJarBlobKeys.add(blobKey)__			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,job,manager,job,manager,actor,gateway,param,ask,timeout,ask,timeout,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,actor,gateway,job,manager,finite,duration,ask,timeout,configuration,blob,client,config,throws,ioexception,list,blob,key,blob,keys,blob,client,upload,jar,files,job,manager,ask,timeout,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout, 			Configuration blobClientConfig) throws IOException;1487616195;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param jobManager JobManager actor gateway_@param askTimeout Ask timeout_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout,_			Configuration blobClientConfig) throws IOException {_		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(jobManager, askTimeout, blobClientConfig, userJars)___		for (BlobKey blobKey : blobKeys) {_			if (!userJarBlobKeys.contains(blobKey)) {_				userJarBlobKeys.add(blobKey)__			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,job,manager,job,manager,actor,gateway,param,ask,timeout,ask,timeout,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,actor,gateway,job,manager,finite,duration,ask,timeout,configuration,blob,client,config,throws,ioexception,list,blob,key,blob,keys,blob,client,upload,jar,files,job,manager,ask,timeout,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout, 			Configuration blobClientConfig) throws IOException;1492678790;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param jobManager JobManager actor gateway_@param askTimeout Ask timeout_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout,_			Configuration blobClientConfig) throws IOException {_		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(jobManager, askTimeout, blobClientConfig, userJars)___		for (BlobKey blobKey : blobKeys) {_			if (!userJarBlobKeys.contains(blobKey)) {_				userJarBlobKeys.add(blobKey)__			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,job,manager,job,manager,actor,gateway,param,ask,timeout,ask,timeout,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,actor,gateway,job,manager,finite,duration,ask,timeout,configuration,blob,client,config,throws,ioexception,list,blob,key,blob,keys,blob,client,upload,jar,files,job,manager,ask,timeout,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout, 			Configuration blobClientConfig) throws IOException;1493975167;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param jobManager JobManager actor gateway_@param askTimeout Ask timeout_@param blobClientConfig the blob client configuration_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout,_			Configuration blobClientConfig) throws IOException {_		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(jobManager, askTimeout, blobClientConfig, userJars)___		for (BlobKey blobKey : blobKeys) {_			if (!userJarBlobKeys.contains(blobKey)) {_				userJarBlobKeys.add(blobKey)__			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,job,manager,job,manager,actor,gateway,param,ask,timeout,ask,timeout,param,blob,client,config,the,blob,client,configuration,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,actor,gateway,job,manager,finite,duration,ask,timeout,configuration,blob,client,config,throws,ioexception,list,blob,key,blob,keys,blob,client,upload,jar,files,job,manager,ask,timeout,blob,client,config,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1411236168;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1411236169;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1411236170;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1411473593;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1412605211;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1415027294;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1416394616;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1416482279;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1418925508;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1418925508;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1418925511;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1420538822;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1422267177;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1424100906;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1424732907;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1425995929;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1427275843;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1427784999;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1430296870;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getVerticesAsArray();1431459357;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getVerticesAsArray() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,vertices,as,array,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public long getSessionTimeout();1442944546;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1444215406;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1444312509;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1445293011;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1448299950;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1452526243;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1455548285;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1455549373;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1457737669;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1459526979;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1463155298;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1468854249;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1470677230;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1476696544;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1478068438;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1487616195;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1492678790;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1493975167;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1502355408;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1502355550;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1502701584;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1503041372;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1507212387;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1507212387;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1525420604;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1529065669;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1529583969;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1530181266;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public long getSessionTimeout();1531499577;Gets the timeout after which the corresponding ExecutionGraph is removed at the_job manager after it has been executed._@return a timeout as a long in seconds.;public long getSessionTimeout() {_		return sessionTimeout__	};gets,the,timeout,after,which,the,corresponding,execution,graph,is,removed,at,the,job,manager,after,it,has,been,executed,return,a,timeout,as,a,long,in,seconds;public,long,get,session,timeout,return,session,timeout
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig);1463155298;Sets a serialized copy of the passed ExecutionConfig. Further modification of the referenced ExecutionConfig_object will not affect this serialized copy._@param executionConfig The ExecutionConfig to be serialized.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		Preconditions.checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		try {_			this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__		} catch (IOException e) {_			throw new RuntimeException("Could not serialize ExecutionConfig.", e)__		}_	};sets,a,serialized,copy,of,the,passed,execution,config,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized;public,void,set,execution,config,execution,config,execution,config,preconditions,check,not,null,execution,config,execution,config,must,not,be,null,try,this,serialized,execution,config,new,serialized,value,execution,config,catch,ioexception,e,throw,new,runtime,exception,could,not,serialize,execution,config,e
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig);1468854249;Sets a serialized copy of the passed ExecutionConfig. Further modification of the referenced ExecutionConfig_object will not affect this serialized copy._@param executionConfig The ExecutionConfig to be serialized.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		Preconditions.checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		try {_			this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__		} catch (IOException e) {_			throw new RuntimeException("Could not serialize ExecutionConfig.", e)__		}_	};sets,a,serialized,copy,of,the,passed,execution,config,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized;public,void,set,execution,config,execution,config,execution,config,preconditions,check,not,null,execution,config,execution,config,must,not,be,null,try,this,serialized,execution,config,new,serialized,value,execution,config,catch,ioexception,e,throw,new,runtime,exception,could,not,serialize,execution,config,e
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig);1470677230;Sets a serialized copy of the passed ExecutionConfig. Further modification of the referenced ExecutionConfig_object will not affect this serialized copy._@param executionConfig The ExecutionConfig to be serialized.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		Preconditions.checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		try {_			this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__		} catch (IOException e) {_			throw new RuntimeException("Could not serialize ExecutionConfig.", e)__		}_	};sets,a,serialized,copy,of,the,passed,execution,config,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized;public,void,set,execution,config,execution,config,execution,config,preconditions,check,not,null,execution,config,execution,config,must,not,be,null,try,this,serialized,execution,config,new,serialized,value,execution,config,catch,ioexception,e,throw,new,runtime,exception,could,not,serialize,execution,config,e
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig);1476696544;Sets a serialized copy of the passed ExecutionConfig. Further modification of the referenced ExecutionConfig_object will not affect this serialized copy._@param executionConfig The ExecutionConfig to be serialized.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		Preconditions.checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		try {_			this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__		} catch (IOException e) {_			throw new RuntimeException("Could not serialize ExecutionConfig.", e)__		}_	};sets,a,serialized,copy,of,the,passed,execution,config,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized;public,void,set,execution,config,execution,config,execution,config,preconditions,check,not,null,execution,config,execution,config,must,not,be,null,try,this,serialized,execution,config,new,serialized,value,execution,config,catch,ioexception,e,throw,new,runtime,exception,could,not,serialize,execution,config,e
JobGraph -> public void setExecutionConfig(ExecutionConfig executionConfig);1478068438;Sets a serialized copy of the passed ExecutionConfig. Further modification of the referenced ExecutionConfig_object will not affect this serialized copy._@param executionConfig The ExecutionConfig to be serialized.;public void setExecutionConfig(ExecutionConfig executionConfig) {_		checkNotNull(executionConfig, "ExecutionConfig must not be null.")__		try {_			this.serializedExecutionConfig = new SerializedValue<>(executionConfig)__		} catch (IOException e) {_			throw new RuntimeException("Could not serialize ExecutionConfig.", e)__		}_	};sets,a,serialized,copy,of,the,passed,execution,config,further,modification,of,the,referenced,execution,config,object,will,not,affect,this,serialized,copy,param,execution,config,the,execution,config,to,be,serialized;public,void,set,execution,config,execution,config,execution,config,check,not,null,execution,config,execution,config,must,not,be,null,try,this,serialized,execution,config,new,serialized,value,execution,config,catch,ioexception,e,throw,new,runtime,exception,could,not,serialize,execution,config,e
JobGraph -> public Path[] getJars();1405024514;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {__		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public Path[] getJars();1405090423;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {__		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public Path[] getJars();1411236168;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {__		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public Path[] getJars();1411236168;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {__		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public Path[] getJars();1411236168;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {_		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public Path[] getJars();1411236169;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {_		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public Path[] getJars();1411236170;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {_		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public Path[] getJars();1411473593;Returns a (possibly empty) array of paths to JAR files which are required to run the job on a task manager.__@return a (possibly empty) array of paths to JAR files which are required to run the job on a task manager;public Path[] getJars() {_		return userJars.toArray(new Path[userJars.size()])__	};returns,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager,return,a,possibly,empty,array,of,paths,to,jar,files,which,are,required,to,run,the,job,on,a,task,manager;public,path,get,jars,return,user,jars,to,array,new,path,user,jars,size
JobGraph -> public List<PermanentBlobKey> getUserJarBlobKeys();1507212387;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<PermanentBlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,permanent,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<PermanentBlobKey> getUserJarBlobKeys();1525420604;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<PermanentBlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,permanent,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<PermanentBlobKey> getUserJarBlobKeys();1529065669;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<PermanentBlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,permanent,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<PermanentBlobKey> getUserJarBlobKeys();1529583969;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<PermanentBlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,permanent,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<PermanentBlobKey> getUserJarBlobKeys();1530181266;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<PermanentBlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,permanent,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public List<PermanentBlobKey> getUserJarBlobKeys();1531499577;Returns a set of BLOB keys referring to the JAR files required to run this job.__@return set of BLOB keys referring to the JAR files required to run this job;public List<PermanentBlobKey> getUserJarBlobKeys() {_		return this.userJarBlobKeys__	};returns,a,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job,return,set,of,blob,keys,referring,to,the,jar,files,required,to,run,this,job;public,list,permanent,blob,key,get,user,jar,blob,keys,return,this,user,jar,blob,keys
JobGraph -> public JobGraph(String jobName);1411236168;Constructs a new job graph with the given name and a random job ID.__@param jobName_the name for this job graph;public JobGraph(String jobName) {_		this()__		this.jobName = jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,for,this,job,graph;public,job,graph,string,job,name,this,this,job,name,job,name
JobGraph -> public JobGraph(String jobName);1411236168;Constructs a new job graph with the given name and a random job ID.__@param jobName_the name for this job graph;public JobGraph(String jobName) {_		this()__		this.jobName = jobName__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,for,this,job,graph;public,job,graph,string,job,name,this,this,job,name,job,name
JobGraph -> public JobGraph(String jobName);1411236168;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1411236169;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1411236170;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1411473593;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1412605211;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1415027294;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1416394616;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1416482279;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1418925511;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1420538822;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1422267177;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1424100906;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1424732907;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1425995929;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1427275843;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1427784999;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1430296870;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1431459357;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1434467925;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1437494294;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1442492509;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1442944546;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1444215406;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1444312509;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1445293011;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1448299950;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1452526243;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1455548285;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1455549373;Constructs a new job graph with the given name, a random job ID.__@param jobName The name of the job;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,a,random,job,id,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1463155298;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1468854249;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1470677230;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1476696544;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1478068438;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1487616195;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1492678790;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1493975167;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1502355408;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1502355550;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1502701584;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1503041372;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1507212387;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1507212387;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1525420604;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1529065669;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1529583969;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1530181266;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(String jobName);1531499577;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_and a random job ID. The ExecutionConfig will be serialized and can't be modified afterwards.__@param jobName The name of the job.;public JobGraph(String jobName) {_		this(null, jobName)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,and,a,random,job,id,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,job,name,the,name,of,the,job;public,job,graph,string,job,name,this,null,job,name
JobGraph -> public JobGraph(JobID jobId, String jobName, ExecutionConfig config, JobVertex... vertices);1457737669;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param config The execution configuration of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, ExecutionConfig config, JobVertex... vertices) {_		this(jobId, jobName, config)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,execution,config,config,job,vertex,vertices,this,job,id,job,name,config,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public JobGraph(JobID jobId, String jobName, ExecutionConfig config, JobVertex... vertices);1459526979;Constructs a new job graph with the given name, the given {@link ExecutionConfig},_the given jobId or a random one if null supplied, and the given job vertices.__@param jobId The id of the job. A random ID is generated, if {@code null} is passed._@param jobName The name of the job._@param config The execution configuration of the job._@param vertices The vertices to add to the graph.;public JobGraph(JobID jobId, String jobName, ExecutionConfig config, JobVertex... vertices) {_		this(jobId, jobName, config)___		for (JobVertex vertex : vertices) {_			addVertex(vertex)__		}_	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,the,given,job,id,or,a,random,one,if,null,supplied,and,the,given,job,vertices,param,job,id,the,id,of,the,job,a,random,id,is,generated,if,code,null,is,passed,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,id,job,id,string,job,name,execution,config,config,job,vertex,vertices,this,job,id,job,name,config,for,job,vertex,vertex,vertices,add,vertex,vertex
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1411236168;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1411236168;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1411236168;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1411236169;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1411236170;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1411473593;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1412605211;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1415027294;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1416394616;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1416482279;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1418925508;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1418925508;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1418925511;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1420538822;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1422267177;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1424100906;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1424732907;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1425995929;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1427275843;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1427784999;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1430296870;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public AbstractJobVertex findVertexByID(JobVertexID id);1431459357;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file);1525420604;Adds the path of a custom file required to run the job on a task manager.__@param name a name under which this artifact will be accessible through {@link DistributedCache}_@param file path of a custom file required to run the job on a task manager;public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file) {_		if (file == null) {_			throw new IllegalArgumentException()__		}__		userArtifacts.putIfAbsent(name, file)__	};adds,the,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager,param,name,a,name,under,which,this,artifact,will,be,accessible,through,link,distributed,cache,param,file,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,artifact,string,name,distributed,cache,distributed,cache,entry,file,if,file,null,throw,new,illegal,argument,exception,user,artifacts,put,if,absent,name,file
JobGraph -> public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file);1529065669;Adds the path of a custom file required to run the job on a task manager.__@param name a name under which this artifact will be accessible through {@link DistributedCache}_@param file path of a custom file required to run the job on a task manager;public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file) {_		if (file == null) {_			throw new IllegalArgumentException()__		}__		userArtifacts.putIfAbsent(name, file)__	};adds,the,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager,param,name,a,name,under,which,this,artifact,will,be,accessible,through,link,distributed,cache,param,file,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,artifact,string,name,distributed,cache,distributed,cache,entry,file,if,file,null,throw,new,illegal,argument,exception,user,artifacts,put,if,absent,name,file
JobGraph -> public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file);1529583969;Adds the path of a custom file required to run the job on a task manager.__@param name a name under which this artifact will be accessible through {@link DistributedCache}_@param file path of a custom file required to run the job on a task manager;public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file) {_		if (file == null) {_			throw new IllegalArgumentException()__		}__		userArtifacts.putIfAbsent(name, file)__	};adds,the,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager,param,name,a,name,under,which,this,artifact,will,be,accessible,through,link,distributed,cache,param,file,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,artifact,string,name,distributed,cache,distributed,cache,entry,file,if,file,null,throw,new,illegal,argument,exception,user,artifacts,put,if,absent,name,file
JobGraph -> public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file);1530181266;Adds the path of a custom file required to run the job on a task manager.__@param name a name under which this artifact will be accessible through {@link DistributedCache}_@param file path of a custom file required to run the job on a task manager;public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file) {_		if (file == null) {_			throw new IllegalArgumentException()__		}__		userArtifacts.putIfAbsent(name, file)__	};adds,the,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager,param,name,a,name,under,which,this,artifact,will,be,accessible,through,link,distributed,cache,param,file,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,artifact,string,name,distributed,cache,distributed,cache,entry,file,if,file,null,throw,new,illegal,argument,exception,user,artifacts,put,if,absent,name,file
JobGraph -> public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file);1531499577;Adds the path of a custom file required to run the job on a task manager.__@param name a name under which this artifact will be accessible through {@link DistributedCache}_@param file path of a custom file required to run the job on a task manager;public void addUserArtifact(String name, DistributedCache.DistributedCacheEntry file) {_		if (file == null) {_			throw new IllegalArgumentException()__		}__		userArtifacts.putIfAbsent(name, file)__	};adds,the,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager,param,name,a,name,under,which,this,artifact,will,be,accessible,through,link,distributed,cache,param,file,path,of,a,custom,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,artifact,string,name,distributed,cache,distributed,cache,entry,file,if,file,null,throw,new,illegal,argument,exception,user,artifacts,put,if,absent,name,file
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1411236168;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1411236169;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1411236170;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1411473593;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1412605211;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1415027294;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1416394616;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1416482279;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1418925508;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1418925511;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1420538822;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1422267177;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1424100906;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1424732907;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1425995929;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1427275843;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1427784999;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1430296870;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> public JobGraph(String jobName, AbstractJobVertex... vertices);1431459357;Constructs a new job graph with the given name and a random job ID.__@param jobName The name of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, AbstractJobVertex... vertices) {_		this(null, jobName, vertices)__	};constructs,a,new,job,graph,with,the,given,name,and,a,random,job,id,param,job,name,the,name,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,abstract,job,vertex,vertices,this,null,job,name,vertices
JobGraph -> private void readJarBlobKeys(final DataInputView in) throws IOException;1412605211;Reads the BLOB keys for the JAR files required to run this job and registers them.__@param in_the data stream to read the BLOB keys from_@throws IOException_thrown if an error occurs while reading the stream;private void readJarBlobKeys(final DataInputView in) throws IOException {__		_		final int numberOfBlobKeys = in.readInt()___		for (int i = 0_ i < numberOfBlobKeys_ ++i) {_			final BlobKey key = new BlobKey()__			key.read(in)__			this.userJarBlobKeys.add(key)__		}_	};reads,the,blob,keys,for,the,jar,files,required,to,run,this,job,and,registers,them,param,in,the,data,stream,to,read,the,blob,keys,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,jar,blob,keys,final,data,input,view,in,throws,ioexception,final,int,number,of,blob,keys,in,read,int,for,int,i,0,i,number,of,blob,keys,i,final,blob,key,key,new,blob,key,key,read,in,this,user,jar,blob,keys,add,key
JobGraph -> private void readJarBlobKeys(final DataInputView in) throws IOException;1415027294;Reads the BLOB keys for the JAR files required to run this job and registers them.__@param in_the data stream to read the BLOB keys from_@throws IOException_thrown if an error occurs while reading the stream;private void readJarBlobKeys(final DataInputView in) throws IOException {__		_		final int numberOfBlobKeys = in.readInt()___		for (int i = 0_ i < numberOfBlobKeys_ ++i) {_			final BlobKey key = new BlobKey()__			key.read(in)__			this.userJarBlobKeys.add(key)__		}_	};reads,the,blob,keys,for,the,jar,files,required,to,run,this,job,and,registers,them,param,in,the,data,stream,to,read,the,blob,keys,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,jar,blob,keys,final,data,input,view,in,throws,ioexception,final,int,number,of,blob,keys,in,read,int,for,int,i,0,i,number,of,blob,keys,i,final,blob,key,key,new,blob,key,key,read,in,this,user,jar,blob,keys,add,key
JobGraph -> private void readJarBlobKeys(final DataInputView in) throws IOException;1416394616;Reads the BLOB keys for the JAR files required to run this job and registers them.__@param in_the data stream to read the BLOB keys from_@throws IOException_thrown if an error occurs while reading the stream;private void readJarBlobKeys(final DataInputView in) throws IOException {__		_		final int numberOfBlobKeys = in.readInt()___		for (int i = 0_ i < numberOfBlobKeys_ ++i) {_			final BlobKey key = new BlobKey()__			key.read(in)__			this.userJarBlobKeys.add(key)__		}_	};reads,the,blob,keys,for,the,jar,files,required,to,run,this,job,and,registers,them,param,in,the,data,stream,to,read,the,blob,keys,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,jar,blob,keys,final,data,input,view,in,throws,ioexception,final,int,number,of,blob,keys,in,read,int,for,int,i,0,i,number,of,blob,keys,i,final,blob,key,key,new,blob,key,key,read,in,this,user,jar,blob,keys,add,key
JobGraph -> private void readJarBlobKeys(final DataInputView in) throws IOException;1416482279;Reads the BLOB keys for the JAR files required to run this job and registers them.__@param in_the data stream to read the BLOB keys from_@throws IOException_thrown if an error occurs while reading the stream;private void readJarBlobKeys(final DataInputView in) throws IOException {__		_		final int numberOfBlobKeys = in.readInt()___		for (int i = 0_ i < numberOfBlobKeys_ ++i) {_			final BlobKey key = new BlobKey()__			key.read(in)__			this.userJarBlobKeys.add(key)__		}_	};reads,the,blob,keys,for,the,jar,files,required,to,run,this,job,and,registers,them,param,in,the,data,stream,to,read,the,blob,keys,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,jar,blob,keys,final,data,input,view,in,throws,ioexception,final,int,number,of,blob,keys,in,read,int,for,int,i,0,i,number,of,blob,keys,i,final,blob,key,key,new,blob,key,key,read,in,this,user,jar,blob,keys,add,key
JobGraph -> private void readJarBlobKeys(final DataInputView in) throws IOException;1418925508;Reads the BLOB keys for the JAR files required to run this job and registers them.__@param in_the data stream to read the BLOB keys from_@throws IOException_thrown if an error occurs while reading the stream;private void readJarBlobKeys(final DataInputView in) throws IOException {__		_		final int numberOfBlobKeys = in.readInt()___		for (int i = 0_ i < numberOfBlobKeys_ ++i) {_			final BlobKey key = new BlobKey()__			key.read(in)__			this.userJarBlobKeys.add(key)__		}_	};reads,the,blob,keys,for,the,jar,files,required,to,run,this,job,and,registers,them,param,in,the,data,stream,to,read,the,blob,keys,from,throws,ioexception,thrown,if,an,error,occurs,while,reading,the,stream;private,void,read,jar,blob,keys,final,data,input,view,in,throws,ioexception,final,int,number,of,blob,keys,in,read,int,for,int,i,0,i,number,of,blob,keys,i,final,blob,key,key,new,blob,key,key,read,in,this,user,jar,blob,keys,add,key
JobGraph -> public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts();1525420604;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts() {_		return userArtifacts__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,map,string,distributed,cache,distributed,cache,entry,get,user,artifacts,return,user,artifacts
JobGraph -> public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts();1529065669;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts() {_		return userArtifacts__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,map,string,distributed,cache,distributed,cache,entry,get,user,artifacts,return,user,artifacts
JobGraph -> public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts();1529583969;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts() {_		return userArtifacts__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,map,string,distributed,cache,distributed,cache,entry,get,user,artifacts,return,user,artifacts
JobGraph -> public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts();1530181266;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts() {_		return userArtifacts__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,map,string,distributed,cache,distributed,cache,entry,get,user,artifacts,return,user,artifacts
JobGraph -> public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts();1531499577;Gets the list of assigned user jar paths.__@return The list of assigned user jar paths;public Map<String, DistributedCache.DistributedCacheEntry> getUserArtifacts() {_		return userArtifacts__	};gets,the,list,of,assigned,user,jar,paths,return,the,list,of,assigned,user,jar,paths;public,map,string,distributed,cache,distributed,cache,entry,get,user,artifacts,return,user,artifacts
JobGraph -> public Iterator<AbstractJobInputVertex> getInputVertices();1405024514;Returns an iterator to iterate all input vertices registered with the job graph.__@return an iterator to iterate all input vertices registered with the job graph;public Iterator<AbstractJobInputVertex> getInputVertices() {__		final Collection<AbstractJobInputVertex> coll = this.inputVertices.values()___		return coll.iterator()__	};returns,an,iterator,to,iterate,all,input,vertices,registered,with,the,job,graph,return,an,iterator,to,iterate,all,input,vertices,registered,with,the,job,graph;public,iterator,abstract,job,input,vertex,get,input,vertices,final,collection,abstract,job,input,vertex,coll,this,input,vertices,values,return,coll,iterator
JobGraph -> public Iterator<AbstractJobInputVertex> getInputVertices();1405090423;Returns an iterator to iterate all input vertices registered with the job graph.__@return an iterator to iterate all input vertices registered with the job graph;public Iterator<AbstractJobInputVertex> getInputVertices() {__		final Collection<AbstractJobInputVertex> coll = this.inputVertices.values()___		return coll.iterator()__	};returns,an,iterator,to,iterate,all,input,vertices,registered,with,the,job,graph,return,an,iterator,to,iterate,all,input,vertices,registered,with,the,job,graph;public,iterator,abstract,job,input,vertex,get,input,vertices,final,collection,abstract,job,input,vertex,coll,this,input,vertices,values,return,coll,iterator
JobGraph -> public JobGraph(String jobName, ExecutionConfig config, JobVertex... vertices);1457737669;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices.__@param jobName The name of the job._@param config The execution configuration of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, ExecutionConfig config, JobVertex... vertices) {_		this(null, jobName, config, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,execution,config,config,job,vertex,vertices,this,null,job,name,config,vertices
JobGraph -> public JobGraph(String jobName, ExecutionConfig config, JobVertex... vertices);1459526979;Constructs a new job graph with the given name, the given {@link ExecutionConfig}, a random job ID,_and the given job vertices.__@param jobName The name of the job._@param config The execution configuration of the job._@param vertices The vertices to add to the graph.;public JobGraph(String jobName, ExecutionConfig config, JobVertex... vertices) {_		this(null, jobName, config, vertices)__	};constructs,a,new,job,graph,with,the,given,name,the,given,link,execution,config,a,random,job,id,and,the,given,job,vertices,param,job,name,the,name,of,the,job,param,config,the,execution,configuration,of,the,job,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,string,job,name,execution,config,config,job,vertex,vertices,this,null,job,name,config,vertices
JobGraph -> public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout) throws IOException;1468854249;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param jobManager JobManager actor gateway_@param askTimeout Ask timeout_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout) throws IOException {_		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(jobManager, askTimeout, userJars)___		for (BlobKey blobKey : blobKeys) {_			if (!userJarBlobKeys.contains(blobKey)) {_				userJarBlobKeys.add(blobKey)__			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,job,manager,job,manager,actor,gateway,param,ask,timeout,ask,timeout,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,actor,gateway,job,manager,finite,duration,ask,timeout,throws,ioexception,list,blob,key,blob,keys,blob,client,upload,jar,files,job,manager,ask,timeout,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout) throws IOException;1470677230;Uploads the previously added user JAR files to the job manager through_the job manager's BLOB server. The respective port is retrieved from the_JobManager. This function issues a blocking call.__@param jobManager JobManager actor gateway_@param askTimeout Ask timeout_@throws IOException Thrown, if the file upload to the JobManager failed.;public void uploadUserJars(ActorGateway jobManager, FiniteDuration askTimeout) throws IOException {_		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(jobManager, askTimeout, userJars)___		for (BlobKey blobKey : blobKeys) {_			if (!userJarBlobKeys.contains(blobKey)) {_				userJarBlobKeys.add(blobKey)__			}_		}_	};uploads,the,previously,added,user,jar,files,to,the,job,manager,through,the,job,manager,s,blob,server,the,respective,port,is,retrieved,from,the,job,manager,this,function,issues,a,blocking,call,param,job,manager,job,manager,actor,gateway,param,ask,timeout,ask,timeout,throws,ioexception,thrown,if,the,file,upload,to,the,job,manager,failed;public,void,upload,user,jars,actor,gateway,job,manager,finite,duration,ask,timeout,throws,ioexception,list,blob,key,blob,keys,blob,client,upload,jar,files,job,manager,ask,timeout,user,jars,for,blob,key,blob,key,blob,keys,if,user,jar,blob,keys,contains,blob,key,user,jar,blob,keys,add,blob,key
JobGraph -> private void writeRequiredJarFiles(DataOutputView out) throws IOException;1411236168;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(DataOutputView out) throws IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,data,output,view,out,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> private void writeRequiredJarFiles(DataOutputView out) throws IOException;1411236169;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(DataOutputView out) throws IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,data,output,view,out,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> private void writeRequiredJarFiles(DataOutputView out) throws IOException;1411236170;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(DataOutputView out) throws IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,data,output,view,out,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> private void writeRequiredJarFiles(DataOutputView out) throws IOException;1411473593;Writes the JAR files of all vertices in array <code>jobVertices</code> to the specified output stream.__@param out_the output stream to write the JAR files to_@throws IOException_thrown if an error occurs while writing to the stream;private void writeRequiredJarFiles(DataOutputView out) throws IOException {__		_		final FileSystem fs = FileSystem.getLocalFileSystem()___		for (int i = 0_ i < this.userJars.size()_ i++) {_			if (!fs.exists(this.userJars.get(i))) {_				throw new IOException("Cannot find jar file " + this.userJars.get(i))__			}_		}__		_		out.writeInt(this.userJars.size())___		for (int i = 0_ i < this.userJars.size()_ i++) {__			final Path jar = this.userJars.get(i)___			_			jar.write(out)___			_			final FileStatus file = fs.getFileStatus(jar)__			out.writeLong(file.getLen())___			_			final FSDataInputStream inStream = fs.open(this.userJars.get(i))__			final byte[] buf = new byte[BUFFERSIZE]__			int read = inStream.read(buf, 0, buf.length)__			while (read > 0) {_				out.write(buf, 0, read)__				read = inStream.read(buf, 0, buf.length)__			}_		}_	};writes,the,jar,files,of,all,vertices,in,array,code,job,vertices,code,to,the,specified,output,stream,param,out,the,output,stream,to,write,the,jar,files,to,throws,ioexception,thrown,if,an,error,occurs,while,writing,to,the,stream;private,void,write,required,jar,files,data,output,view,out,throws,ioexception,final,file,system,fs,file,system,get,local,file,system,for,int,i,0,i,this,user,jars,size,i,if,fs,exists,this,user,jars,get,i,throw,new,ioexception,cannot,find,jar,file,this,user,jars,get,i,out,write,int,this,user,jars,size,for,int,i,0,i,this,user,jars,size,i,final,path,jar,this,user,jars,get,i,jar,write,out,final,file,status,file,fs,get,file,status,jar,out,write,long,file,get,len,final,fsdata,input,stream,in,stream,fs,open,this,user,jars,get,i,final,byte,buf,new,byte,buffersize,int,read,in,stream,read,buf,0,buf,length,while,read,0,out,write,buf,0,read,read,in,stream,read,buf,0,buf,length
JobGraph -> public void addBlob(BlobKey key);1424732907;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1425995929;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1427275843;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1427784999;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1430296870;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1431459357;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1434467925;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1437494294;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1442492509;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1442944546;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1444215406;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1444312509;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1445293011;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1448299950;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1452526243;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1455548285;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1455549373;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1457737669;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1459526979;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1463155298;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1468854249;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1470677230;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1476696544;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1478068438;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1487616195;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1492678790;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1493975167;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1502355408;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1502355550;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1502701584;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1503041372;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addBlob(BlobKey key);1507212387;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addBlob(BlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,blob,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public int getNumberOfVertices();1405024514;Returns the number of all job vertices registered with this job graph.__@return the number of all job vertices registered with this job graph;public int getNumberOfVertices() {__		return this.inputVertices.size() + this.outputVertices.size() + this.taskVertices.size()__	};returns,the,number,of,all,job,vertices,registered,with,this,job,graph,return,the,number,of,all,job,vertices,registered,with,this,job,graph;public,int,get,number,of,vertices,return,this,input,vertices,size,this,output,vertices,size,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1405090423;Returns the number of all job vertices registered with this job graph.__@return the number of all job vertices registered with this job graph;public int getNumberOfVertices() {__		return this.inputVertices.size() + this.outputVertices.size() + this.taskVertices.size()__	};returns,the,number,of,all,job,vertices,registered,with,this,job,graph,return,the,number,of,all,job,vertices,registered,with,this,job,graph;public,int,get,number,of,vertices,return,this,input,vertices,size,this,output,vertices,size,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1411236168;Returns the number of all job vertices registered with this job graph.__@return the number of all job vertices registered with this job graph;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,job,vertices,registered,with,this,job,graph,return,the,number,of,all,job,vertices,registered,with,this,job,graph;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1411236168;Returns the number of all job vertices registered with this job graph.__@return the number of all job vertices registered with this job graph;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,job,vertices,registered,with,this,job,graph,return,the,number,of,all,job,vertices,registered,with,this,job,graph;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1411236168;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1411236169;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1411236170;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1411473593;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1412605211;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1415027294;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1416394616;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1416482279;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1418925508;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1418925508;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1418925511;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1420538822;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1422267177;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1424100906;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1424732907;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1425995929;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1427275843;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1427784999;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1430296870;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1431459357;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1434467925;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1437494294;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1442492509;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1442944546;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1444215406;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1444312509;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1445293011;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1448299950;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1452526243;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1455548285;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1455549373;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1457737669;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1459526979;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1463155298;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1468854249;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1470677230;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1476696544;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1478068438;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1487616195;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1492678790;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1493975167;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1502355408;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1502355550;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1502701584;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1503041372;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1507212387;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1507212387;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1525420604;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1529065669;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1529583969;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1530181266;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public int getNumberOfVertices();1531499577;Returns the number of all vertices.__@return The number of all vertices.;public int getNumberOfVertices() {_		return this.taskVertices.size()__	};returns,the,number,of,all,vertices,return,the,number,of,all,vertices;public,int,get,number,of,vertices,return,this,task,vertices,size
JobGraph -> public AbstractJobVertex[] getAllJobVertices();1405024514;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getAllJobVertices() {__		int i = 0__		final AbstractJobVertex[] vertices = new AbstractJobVertex[inputVertices.size() + outputVertices.size()_			+ taskVertices.size()]___		final Iterator<AbstractJobInputVertex> iv = getInputVertices()__		while (iv.hasNext()) {_			vertices[i++] = iv.next()__		}__		final Iterator<AbstractJobOutputVertex> ov = getOutputVertices()__		while (ov.hasNext()) {_			vertices[i++] = ov.next()__		}__		final Iterator<JobTaskVertex> tv = getTaskVertices()__		while (tv.hasNext()) {_			vertices[i++] = tv.next()__		}__		return vertices__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,all,job,vertices,int,i,0,final,abstract,job,vertex,vertices,new,abstract,job,vertex,input,vertices,size,output,vertices,size,task,vertices,size,final,iterator,abstract,job,input,vertex,iv,get,input,vertices,while,iv,has,next,vertices,i,iv,next,final,iterator,abstract,job,output,vertex,ov,get,output,vertices,while,ov,has,next,vertices,i,ov,next,final,iterator,job,task,vertex,tv,get,task,vertices,while,tv,has,next,vertices,i,tv,next,return,vertices
JobGraph -> public AbstractJobVertex[] getAllJobVertices();1405090423;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getAllJobVertices() {__		int i = 0__		final AbstractJobVertex[] vertices = new AbstractJobVertex[inputVertices.size() + outputVertices.size()_			+ taskVertices.size()]___		final Iterator<AbstractJobInputVertex> iv = getInputVertices()__		while (iv.hasNext()) {_			vertices[i++] = iv.next()__		}__		final Iterator<AbstractJobOutputVertex> ov = getOutputVertices()__		while (ov.hasNext()) {_			vertices[i++] = ov.next()__		}__		final Iterator<JobTaskVertex> tv = getTaskVertices()__		while (tv.hasNext()) {_			vertices[i++] = tv.next()__		}__		return vertices__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,all,job,vertices,int,i,0,final,abstract,job,vertex,vertices,new,abstract,job,vertex,input,vertices,size,output,vertices,size,task,vertices,size,final,iterator,abstract,job,input,vertex,iv,get,input,vertices,while,iv,has,next,vertices,i,iv,next,final,iterator,abstract,job,output,vertex,ov,get,output,vertices,while,ov,has,next,vertices,i,ov,next,final,iterator,job,task,vertex,tv,get,task,vertices,while,tv,has,next,vertices,i,tv,next,return,vertices
JobGraph -> public AbstractJobVertex[] getAllJobVertices();1411236168;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getAllJobVertices() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__		_		int i = 0__		final AbstractJobVertex[] vertices = new AbstractJobVertex[inputVertices.size() + outputVertices.size()_			+ taskVertices.size()]___		final Iterator<AbstractJobInputVertex> iv = getInputVertices()__		while (iv.hasNext()) {_			vertices[i++] = iv.next()__		}__		final Iterator<AbstractJobOutputVertex> ov = getOutputVertices()__		while (ov.hasNext()) {_			vertices[i++] = ov.next()__		}__		final Iterator<JobTaskVertex> tv = getTaskVertices()__		while (tv.hasNext()) {_			vertices[i++] = tv.next()__		}__		return vertices__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,all,job,vertices,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size,int,i,0,final,abstract,job,vertex,vertices,new,abstract,job,vertex,input,vertices,size,output,vertices,size,task,vertices,size,final,iterator,abstract,job,input,vertex,iv,get,input,vertices,while,iv,has,next,vertices,i,iv,next,final,iterator,abstract,job,output,vertex,ov,get,output,vertices,while,ov,has,next,vertices,i,ov,next,final,iterator,job,task,vertex,tv,get,task,vertices,while,tv,has,next,vertices,i,tv,next,return,vertices
JobGraph -> public AbstractJobVertex[] getAllJobVertices();1411236168;Returns an array of all job vertices that are registered with the job graph. The order in which the vertices_appear in the list is not defined.__@return an array of all job vertices that are registered with the job graph;public AbstractJobVertex[] getAllJobVertices() {_		return this.taskVertices.values().toArray(new AbstractJobVertex[this.taskVertices.size()])__	};returns,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph,the,order,in,which,the,vertices,appear,in,the,list,is,not,defined,return,an,array,of,all,job,vertices,that,are,registered,with,the,job,graph;public,abstract,job,vertex,get,all,job,vertices,return,this,task,vertices,values,to,array,new,abstract,job,vertex,this,task,vertices,size
JobGraph -> public void setRestartStrategyConfiguration(RestartStrategies.RestartStrategyConfiguration restartStrategyConfiguration);1455548285;Sets the restart strategy configuration. This configuration specifies the restart strategy_to be used by the ExecutionGraph in case of a restart.__@param restartStrategyConfiguration Restart strategy configuration to be set;public void setRestartStrategyConfiguration(RestartStrategies.RestartStrategyConfiguration restartStrategyConfiguration) {_		this.restartStrategyConfiguration = restartStrategyConfiguration__	};sets,the,restart,strategy,configuration,this,configuration,specifies,the,restart,strategy,to,be,used,by,the,execution,graph,in,case,of,a,restart,param,restart,strategy,configuration,restart,strategy,configuration,to,be,set;public,void,set,restart,strategy,configuration,restart,strategies,restart,strategy,configuration,restart,strategy,configuration,this,restart,strategy,configuration,restart,strategy,configuration
JobGraph -> public void setRestartStrategyConfiguration(RestartStrategies.RestartStrategyConfiguration restartStrategyConfiguration);1455549373;Sets the restart strategy configuration. This configuration specifies the restart strategy_to be used by the ExecutionGraph in case of a restart.__@param restartStrategyConfiguration Restart strategy configuration to be set;public void setRestartStrategyConfiguration(RestartStrategies.RestartStrategyConfiguration restartStrategyConfiguration) {_		this.restartStrategyConfiguration = restartStrategyConfiguration__	};sets,the,restart,strategy,configuration,this,configuration,specifies,the,restart,strategy,to,be,used,by,the,execution,graph,in,case,of,a,restart,param,restart,strategy,configuration,restart,strategy,configuration,to,be,set;public,void,set,restart,strategy,configuration,restart,strategies,restart,strategy,configuration,restart,strategy,configuration,this,restart,strategy,configuration,restart,strategy,configuration
JobGraph -> public JobID getJobID();1405024514;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1405090423;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1411236168;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1411236168;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1411236168;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1411236169;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1411236170;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1411473593;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1412605211;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1415027294;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1416394616;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1416482279;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1418925508;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1418925508;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1418925511;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1420538822;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1422267177;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1424100906;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1424732907;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1425995929;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1427275843;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1427784999;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1430296870;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1431459357;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1434467925;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1437494294;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1442492509;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1442944546;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1444215406;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1444312509;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1445293011;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1448299950;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1452526243;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1455548285;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1455549373;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1457737669;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1459526979;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1463155298;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1468854249;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1470677230;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1476696544;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1478068438;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1487616195;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1492678790;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1493975167;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1502355408;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1502355550;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1502701584;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1503041372;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1507212387;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1507212387;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1525420604;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1529065669;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1529583969;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1530181266;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public JobID getJobID();1531499577;Returns the ID of the job.__@return the ID of the job;public JobID getJobID() {_		return this.jobID__	};returns,the,id,of,the,job,return,the,id,of,the,job;public,job,id,get,job,id,return,this,job,id
JobGraph -> public Iterator<AbstractJobOutputVertex> getOutputVertices();1405024514;Returns an iterator to iterate all output vertices registered with the job graph.__@return an iterator to iterate all output vertices registered with the job graph;public Iterator<AbstractJobOutputVertex> getOutputVertices() {__		final Collection<AbstractJobOutputVertex> coll = this.outputVertices.values()___		return coll.iterator()__	};returns,an,iterator,to,iterate,all,output,vertices,registered,with,the,job,graph,return,an,iterator,to,iterate,all,output,vertices,registered,with,the,job,graph;public,iterator,abstract,job,output,vertex,get,output,vertices,final,collection,abstract,job,output,vertex,coll,this,output,vertices,values,return,coll,iterator
JobGraph -> public Iterator<AbstractJobOutputVertex> getOutputVertices();1405090423;Returns an iterator to iterate all output vertices registered with the job graph.__@return an iterator to iterate all output vertices registered with the job graph;public Iterator<AbstractJobOutputVertex> getOutputVertices() {__		final Collection<AbstractJobOutputVertex> coll = this.outputVertices.values()___		return coll.iterator()__	};returns,an,iterator,to,iterate,all,output,vertices,registered,with,the,job,graph,return,an,iterator,to,iterate,all,output,vertices,registered,with,the,job,graph;public,iterator,abstract,job,output,vertex,get,output,vertices,final,collection,abstract,job,output,vertex,coll,this,output,vertices,values,return,coll,iterator
JobGraph -> public JobGraph(ExecutionConfig config);1457737669;Constructs a new job graph with no name, a random job ID, and the given_{@link ExecutionConfig}.__@param config The {@link ExecutionConfig} for the job.;public JobGraph(ExecutionConfig config) {_		this((String) null, config)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,and,the,given,link,execution,config,param,config,the,link,execution,config,for,the,job;public,job,graph,execution,config,config,this,string,null,config
JobGraph -> public JobGraph(ExecutionConfig config);1459526979;Constructs a new job graph with no name, a random job ID, and the given_{@link ExecutionConfig}.__@param config The {@link ExecutionConfig} for the job.;public JobGraph(ExecutionConfig config) {_		this(null, config)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,and,the,given,link,execution,config,param,config,the,link,execution,config,for,the,job;public,job,graph,execution,config,config,this,null,config
JobGraph -> public JobGraph(JobVertex... vertices);1434467925;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1437494294;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1442492509;Constructs a new job graph with no name and a random job ID.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1442944546;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1444215406;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1444312509;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1445293011;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1448299950;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1452526243;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1455548285;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1455549373;Constructs a new job graph with no name and a random job ID if null supplied as an id.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,and,a,random,job,id,if,null,supplied,as,an,id,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1463155298;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1468854249;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1470677230;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1476696544;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1478068438;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1487616195;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1492678790;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1493975167;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1502355408;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1502355550;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1502701584;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1503041372;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1507212387;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1507212387;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1525420604;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1529065669;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1529583969;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1530181266;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobGraph(JobVertex... vertices);1531499577;Constructs a new job graph with no name, a random job ID, the given {@link ExecutionConfig}, and_the given job vertices. The ExecutionConfig will be serialized and can't be modified afterwards.__@param vertices The vertices to add to the graph.;public JobGraph(JobVertex... vertices) {_		this(null, vertices)__	};constructs,a,new,job,graph,with,no,name,a,random,job,id,the,given,link,execution,config,and,the,given,job,vertices,the,execution,config,will,be,serialized,and,can,t,be,modified,afterwards,param,vertices,the,vertices,to,add,to,the,graph;public,job,graph,job,vertex,vertices,this,null,vertices
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1492678790;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1493975167;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1502355408;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1502355550;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1502701584;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1503041372;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1507212387;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1507212387;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1525420604;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1529065669;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1529583969;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1530181266;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings, or null, if checkpointing is not enabled.;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings,or,null,if,checkpointing,is,not,enabled;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> public JobCheckpointingSettings getCheckpointingSettings();1531499577;Gets the settings for asynchronous snapshots. This method returns null, when_checkpointing is not enabled.__@return The snapshot settings;public JobCheckpointingSettings getCheckpointingSettings() {_		return snapshotSettings__	};gets,the,settings,for,asynchronous,snapshots,this,method,returns,null,when,checkpointing,is,not,enabled,return,the,snapshot,settings;public,job,checkpointing,settings,get,checkpointing,settings,return,snapshot,settings
JobGraph -> private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final 			List<AbstractJobVertex> collector);1405024514;Auxiliary method to collect all vertices which are reachable from the input vertices.__@param jv_the currently considered job vertex_@param collector_a temporary list to store the vertices that have already been visisted;private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final_			List<AbstractJobVertex> collector) {_		visited.add(jv.getID())__		collector.add(jv)___		for(int i =0_ i < jv.getNumberOfForwardConnections()_ i++){_			AbstractJobVertex vertex = jv.getForwardConnection(i).getConnectedVertex()___			if(!visited.contains(vertex.getID())){_				collectVertices(vertex, visited, collector)__			}_		}_	};auxiliary,method,to,collect,all,vertices,which,are,reachable,from,the,input,vertices,param,jv,the,currently,considered,job,vertex,param,collector,a,temporary,list,to,store,the,vertices,that,have,already,been,visisted;private,void,collect,vertices,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,visited,final,list,abstract,job,vertex,collector,visited,add,jv,get,id,collector,add,jv,for,int,i,0,i,jv,get,number,of,forward,connections,i,abstract,job,vertex,vertex,jv,get,forward,connection,i,get,connected,vertex,if,visited,contains,vertex,get,id,collect,vertices,vertex,visited,collector
JobGraph -> private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final 			List<AbstractJobVertex> collector);1405090423;Auxiliary method to collect all vertices which are reachable from the input vertices.__@param jv_the currently considered job vertex_@param collector_a temporary list to store the vertices that have already been visisted;private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final_			List<AbstractJobVertex> collector) {_		visited.add(jv.getID())__		collector.add(jv)___		for(int i =0_ i < jv.getNumberOfForwardConnections()_ i++){_			AbstractJobVertex vertex = jv.getForwardConnection(i).getConnectedVertex()___			if(!visited.contains(vertex.getID())){_				collectVertices(vertex, visited, collector)__			}_		}_	};auxiliary,method,to,collect,all,vertices,which,are,reachable,from,the,input,vertices,param,jv,the,currently,considered,job,vertex,param,collector,a,temporary,list,to,store,the,vertices,that,have,already,been,visisted;private,void,collect,vertices,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,visited,final,list,abstract,job,vertex,collector,visited,add,jv,get,id,collector,add,jv,for,int,i,0,i,jv,get,number,of,forward,connections,i,abstract,job,vertex,vertex,jv,get,forward,connection,i,get,connected,vertex,if,visited,contains,vertex,get,id,collect,vertices,vertex,visited,collector
JobGraph -> private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final 			List<AbstractJobVertex> collector);1411236168;Auxiliary method to collect all vertices which are reachable from the input vertices.__@param jv_the currently considered job vertex_@param collector_a temporary list to store the vertices that have already been visisted;private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final_			List<AbstractJobVertex> collector) {_		visited.add(jv.getID())__		collector.add(jv)___		for(int i =0_ i < jv.getNumberOfForwardConnections()_ i++){_			AbstractJobVertex vertex = jv.getForwardConnection(i).getConnectedVertex()___			if(!visited.contains(vertex.getID())){_				collectVertices(vertex, visited, collector)__			}_		}_	};auxiliary,method,to,collect,all,vertices,which,are,reachable,from,the,input,vertices,param,jv,the,currently,considered,job,vertex,param,collector,a,temporary,list,to,store,the,vertices,that,have,already,been,visisted;private,void,collect,vertices,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,visited,final,list,abstract,job,vertex,collector,visited,add,jv,get,id,collector,add,jv,for,int,i,0,i,jv,get,number,of,forward,connections,i,abstract,job,vertex,vertex,jv,get,forward,connection,i,get,connected,vertex,if,visited,contains,vertex,get,id,collect,vertices,vertex,visited,collector
JobGraph -> private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final 			List<AbstractJobVertex> collector);1411236168;Auxiliary method to collect all vertices which are reachable from the input vertices.__@param jv_the currently considered job vertex_@param collector_a temporary list to store the vertices that have already been visisted;private void collectVertices(final AbstractJobVertex jv, final HashSet<JobVertexID> visited, final_			List<AbstractJobVertex> collector) {_		visited.add(jv.getID())__		collector.add(jv)___		for(int i =0_ i < jv.getNumberOfForwardConnections()_ i++){_			AbstractJobVertex vertex = jv.getForwardConnection(i).getConnectedVertex()___			if(!visited.contains(vertex.getID())){_				collectVertices(vertex, visited, collector)__			}_		}_	};auxiliary,method,to,collect,all,vertices,which,are,reachable,from,the,input,vertices,param,jv,the,currently,considered,job,vertex,param,collector,a,temporary,list,to,store,the,vertices,that,have,already,been,visisted;private,void,collect,vertices,final,abstract,job,vertex,jv,final,hash,set,job,vertex,id,visited,final,list,abstract,job,vertex,collector,visited,add,jv,get,id,collector,add,jv,for,int,i,0,i,jv,get,number,of,forward,connections,i,abstract,job,vertex,vertex,jv,get,forward,connection,i,get,connected,vertex,if,visited,contains,vertex,get,id,collect,vertices,vertex,visited,collector
JobGraph -> public AbstractJobVertex findVertexByID(final JobVertexID id);1405024514;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(final JobVertexID id) {__		if (this.inputVertices.containsKey(id)) {_			return this.inputVertices.get(id)__		}__		if (this.outputVertices.containsKey(id)) {_			return this.outputVertices.get(id)__		}__		if (this.taskVertices.containsKey(id)) {_			return this.taskVertices.get(id)__		}__		return null__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,final,job,vertex,id,id,if,this,input,vertices,contains,key,id,return,this,input,vertices,get,id,if,this,output,vertices,contains,key,id,return,this,output,vertices,get,id,if,this,task,vertices,contains,key,id,return,this,task,vertices,get,id,return,null
JobGraph -> public AbstractJobVertex findVertexByID(final JobVertexID id);1405090423;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public AbstractJobVertex findVertexByID(final JobVertexID id) {__		if (this.inputVertices.containsKey(id)) {_			return this.inputVertices.get(id)__		}__		if (this.outputVertices.containsKey(id)) {_			return this.outputVertices.get(id)__		}__		if (this.taskVertices.containsKey(id)) {_			return this.taskVertices.get(id)__		}__		return null__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,abstract,job,vertex,find,vertex,by,id,final,job,vertex,id,id,if,this,input,vertices,contains,key,id,return,this,input,vertices,get,id,if,this,output,vertices,contains,key,id,return,this,output,vertices,get,id,if,this,task,vertices,contains,key,id,return,this,task,vertices,get,id,return,null
JobGraph -> public void addJar(Path jar);1411236168;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1411236169;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1411236170;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1411473593;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1412605211;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1415027294;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1416394616;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1416482279;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1418925508;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1418925508;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1418925511;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1420538822;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1422267177;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1424100906;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1424732907;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1425995929;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1427275843;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1427784999;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1430296870;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1431459357;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1434467925;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1437494294;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1442492509;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1442944546;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1444215406;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1444312509;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1445293011;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1448299950;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1452526243;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1455548285;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1455549373;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1457737669;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1459526979;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1463155298;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1468854249;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1470677230;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1476696544;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1478068438;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1487616195;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1492678790;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1493975167;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1502355408;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1502355550;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1502701584;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1503041372;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1507212387;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1507212387;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1525420604;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1529065669;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1529583969;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1530181266;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addJar(Path jar);1531499577;Adds the path of a JAR file required to run the job on a task manager.__@param jar_path of the JAR file required to run the job on a task manager;public void addJar(Path jar) {_		if (jar == null) {_			throw new IllegalArgumentException()__		}__		if (!userJars.contains(jar)) {_			userJars.add(jar)__		}_	};adds,the,path,of,a,jar,file,required,to,run,the,job,on,a,task,manager,param,jar,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,jar,path,jar,if,jar,null,throw,new,illegal,argument,exception,if,user,jars,contains,jar,user,jars,add,jar
JobGraph -> public void addUserJarBlobKey(PermanentBlobKey key);1525420604;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addUserJarBlobKey(PermanentBlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,jar,blob,key,permanent,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addUserJarBlobKey(PermanentBlobKey key);1529065669;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addUserJarBlobKey(PermanentBlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,jar,blob,key,permanent,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addUserJarBlobKey(PermanentBlobKey key);1529583969;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addUserJarBlobKey(PermanentBlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,jar,blob,key,permanent,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addUserJarBlobKey(PermanentBlobKey key);1530181266;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addUserJarBlobKey(PermanentBlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,jar,blob,key,permanent,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void addUserJarBlobKey(PermanentBlobKey key);1531499577;Adds the BLOB referenced by the key to the JobGraph's dependencies.__@param key_path of the JAR file required to run the job on a task manager;public void addUserJarBlobKey(PermanentBlobKey key) {_		if (key == null) {_			throw new IllegalArgumentException()__		}__		if (!userJarBlobKeys.contains(key)) {_			userJarBlobKeys.add(key)__		}_	};adds,the,blob,referenced,by,the,key,to,the,job,graph,s,dependencies,param,key,path,of,the,jar,file,required,to,run,the,job,on,a,task,manager;public,void,add,user,jar,blob,key,permanent,blob,key,key,if,key,null,throw,new,illegal,argument,exception,if,user,jar,blob,keys,contains,key,user,jar,blob,keys,add,key
JobGraph -> public void setClasspaths(List<URL> paths);1444312509;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1445293011;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1448299950;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1452526243;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1455548285;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1455549373;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1457737669;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1459526979;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1463155298;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1468854249;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1470677230;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1476696544;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1478068438;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1487616195;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1492678790;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1493975167;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1502355408;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1502355550;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1502701584;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1503041372;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1507212387;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1507212387;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1525420604;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1529065669;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1529583969;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1530181266;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public void setClasspaths(List<URL> paths);1531499577;Sets the classpaths required to run the job on a task manager.__@param paths paths of the directories/JAR files required to run the job on a task manager;public void setClasspaths(List<URL> paths) {_		classpaths = paths__	};sets,the,classpaths,required,to,run,the,job,on,a,task,manager,param,paths,paths,of,the,directories,jar,files,required,to,run,the,job,on,a,task,manager;public,void,set,classpaths,list,url,paths,classpaths,paths
JobGraph -> public Iterable<AbstractJobVertex> getTaskVertices();1411236168;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getTaskVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,task,vertices,return,this,task,vertices,values
JobGraph -> public Iterable<AbstractJobVertex> getTaskVertices();1411236168;Returns an Iterable to iterate all vertices registered with the job graph.__@return an Iterable to iterate all vertices registered with the job graph;public Iterable<AbstractJobVertex> getTaskVertices() {_		return this.taskVertices.values()__	};returns,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph,return,an,iterable,to,iterate,all,vertices,registered,with,the,job,graph;public,iterable,abstract,job,vertex,get,task,vertices,return,this,task,vertices,values
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1434467925;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1437494294;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1442492509;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1442944546;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1444215406;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1444312509;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1445293011;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1448299950;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1452526243;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1455548285;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1455549373;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1457737669;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1459526979;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1463155298;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1468854249;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1470677230;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1476696544;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1478068438;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1487616195;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1492678790;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1493975167;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1502355408;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1502355550;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1502701584;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1503041372;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1507212387;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1507212387;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1525420604;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1529065669;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1529583969;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1530181266;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public JobVertex findVertexByID(JobVertexID id);1531499577;Searches for a vertex with a matching ID and returns it.__@param id_the ID of the vertex to search for_@return the vertex with the matching ID or <code>null</code> if no vertex with such ID could be found;public JobVertex findVertexByID(JobVertexID id) {_		return this.taskVertices.get(id)__	};searches,for,a,vertex,with,a,matching,id,and,returns,it,param,id,the,id,of,the,vertex,to,search,for,return,the,vertex,with,the,matching,id,or,code,null,code,if,no,vertex,with,such,id,could,be,found;public,job,vertex,find,vertex,by,id,job,vertex,id,id,return,this,task,vertices,get,id
JobGraph -> public boolean hasUsercodeJarFiles();1424100906;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1424732907;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1425995929;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1427275843;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1427784999;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1430296870;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1431459357;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1434467925;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1437494294;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1442492509;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1442944546;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1444215406;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1444312509;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1445293011;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1448299950;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1452526243;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1455548285;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1455549373;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1457737669;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1459526979;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1463155298;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1468854249;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1470677230;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1476696544;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1478068438;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1487616195;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1492678790;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1493975167;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1502355408;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1502355550;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1502701584;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1503041372;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1507212387;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1507212387;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1525420604;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1529065669;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1529583969;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1530181266;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public boolean hasUsercodeJarFiles();1531499577;Checks whether the JobGraph has user code JAR files attached.__@return True, if the JobGraph has user code JAR files attached, false otherwise.;public boolean hasUsercodeJarFiles() {_		return this.userJars.size() > 0__	};checks,whether,the,job,graph,has,user,code,jar,files,attached,return,true,if,the,job,graph,has,user,code,jar,files,attached,false,otherwise;public,boolean,has,usercode,jar,files,return,this,user,jars,size,0
JobGraph -> public RestartStrategies.RestartStrategyConfiguration getRestartStrategyConfiguration();1455548285;Gets the restart strategy configuration__@return Restart strategy configuration to be used;public RestartStrategies.RestartStrategyConfiguration getRestartStrategyConfiguration() {_		return restartStrategyConfiguration__	};gets,the,restart,strategy,configuration,return,restart,strategy,configuration,to,be,used;public,restart,strategies,restart,strategy,configuration,get,restart,strategy,configuration,return,restart,strategy,configuration
JobGraph -> public RestartStrategies.RestartStrategyConfiguration getRestartStrategyConfiguration();1455549373;Gets the restart strategy configuration__@return Restart strategy configuration to be used;public RestartStrategies.RestartStrategyConfiguration getRestartStrategyConfiguration() {_		return restartStrategyConfiguration__	};gets,the,restart,strategy,configuration,return,restart,strategy,configuration,to,be,used;public,restart,strategies,restart,strategy,configuration,get,restart,strategy,configuration,return,restart,strategy,configuration
JobGraph -> public Iterator<JobTaskVertex> getTaskVertices();1405024514;Returns an iterator to iterate all task vertices registered with the job graph.__@return an iterator to iterate all task vertices registered with the job graph;public Iterator<JobTaskVertex> getTaskVertices() {__		final Collection<JobTaskVertex> coll = this.taskVertices.values()___		return coll.iterator()__	};returns,an,iterator,to,iterate,all,task,vertices,registered,with,the,job,graph,return,an,iterator,to,iterate,all,task,vertices,registered,with,the,job,graph;public,iterator,job,task,vertex,get,task,vertices,final,collection,job,task,vertex,coll,this,task,vertices,values,return,coll,iterator
JobGraph -> public Iterator<JobTaskVertex> getTaskVertices();1405090423;Returns an iterator to iterate all task vertices registered with the job graph.__@return an iterator to iterate all task vertices registered with the job graph;public Iterator<JobTaskVertex> getTaskVertices() {__		final Collection<JobTaskVertex> coll = this.taskVertices.values()___		return coll.iterator()__	};returns,an,iterator,to,iterate,all,task,vertices,registered,with,the,job,graph,return,an,iterator,to,iterate,all,task,vertices,registered,with,the,job,graph;public,iterator,job,task,vertex,get,task,vertices,final,collection,job,task,vertex,coll,this,task,vertices,values,return,coll,iterator
JobGraph -> public boolean isAcyclic();1405024514;Checks if the job graph is acyclic.__@return <code>true</code> if the job graph is acyclic, <code>false</code> otherwise;public boolean isAcyclic() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()___		final HashSet<JobVertexID> temporarilyMarked = new HashSet<JobVertexID>()__		final HashSet<JobVertexID> permanentlyMarked = new HashSet<JobVertexID>()___		for(int i = 0_ i < reachable.length_ i++){_			if(detectCycle(reachable[i], temporarilyMarked, permanentlyMarked)){_				return false__			}_		}__		return true__	};checks,if,the,job,graph,is,acyclic,return,code,true,code,if,the,job,graph,is,acyclic,code,false,code,otherwise;public,boolean,is,acyclic,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,hash,set,job,vertex,id,temporarily,marked,new,hash,set,job,vertex,id,final,hash,set,job,vertex,id,permanently,marked,new,hash,set,job,vertex,id,for,int,i,0,i,reachable,length,i,if,detect,cycle,reachable,i,temporarily,marked,permanently,marked,return,false,return,true
JobGraph -> public boolean isAcyclic();1405090423;Checks if the job graph is acyclic.__@return <code>true</code> if the job graph is acyclic, <code>false</code> otherwise;public boolean isAcyclic() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()___		final HashSet<JobVertexID> temporarilyMarked = new HashSet<JobVertexID>()__		final HashSet<JobVertexID> permanentlyMarked = new HashSet<JobVertexID>()___		for(int i = 0_ i < reachable.length_ i++){_			if(detectCycle(reachable[i], temporarilyMarked, permanentlyMarked)){_				return false__			}_		}__		return true__	};checks,if,the,job,graph,is,acyclic,return,code,true,code,if,the,job,graph,is,acyclic,code,false,code,otherwise;public,boolean,is,acyclic,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,hash,set,job,vertex,id,temporarily,marked,new,hash,set,job,vertex,id,final,hash,set,job,vertex,id,permanently,marked,new,hash,set,job,vertex,id,for,int,i,0,i,reachable,length,i,if,detect,cycle,reachable,i,temporarily,marked,permanently,marked,return,false,return,true
JobGraph -> public boolean isAcyclic();1411236168;Checks if the job graph is acyclic.__@return <code>true</code> if the job graph is acyclic, <code>false</code> otherwise;public boolean isAcyclic() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()___		final HashSet<JobVertexID> temporarilyMarked = new HashSet<JobVertexID>()__		final HashSet<JobVertexID> permanentlyMarked = new HashSet<JobVertexID>()___		for(int i = 0_ i < reachable.length_ i++){_			if(detectCycle(reachable[i], temporarilyMarked, permanentlyMarked)){_				return false__			}_		}__		return true__	};checks,if,the,job,graph,is,acyclic,return,code,true,code,if,the,job,graph,is,acyclic,code,false,code,otherwise;public,boolean,is,acyclic,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,hash,set,job,vertex,id,temporarily,marked,new,hash,set,job,vertex,id,final,hash,set,job,vertex,id,permanently,marked,new,hash,set,job,vertex,id,for,int,i,0,i,reachable,length,i,if,detect,cycle,reachable,i,temporarily,marked,permanently,marked,return,false,return,true
JobGraph -> public boolean isAcyclic();1411236168;Checks if the job graph is acyclic.__@return <code>true</code> if the job graph is acyclic, <code>false</code> otherwise;public boolean isAcyclic() {__		final AbstractJobVertex[] reachable = getAllReachableJobVertices()___		final HashSet<JobVertexID> temporarilyMarked = new HashSet<JobVertexID>()__		final HashSet<JobVertexID> permanentlyMarked = new HashSet<JobVertexID>()___		for(int i = 0_ i < reachable.length_ i++){_			if(detectCycle(reachable[i], temporarilyMarked, permanentlyMarked)){_				return false__			}_		}__		return true__	};checks,if,the,job,graph,is,acyclic,return,code,true,code,if,the,job,graph,is,acyclic,code,false,code,otherwise;public,boolean,is,acyclic,final,abstract,job,vertex,reachable,get,all,reachable,job,vertices,final,hash,set,job,vertex,id,temporarily,marked,new,hash,set,job,vertex,id,final,hash,set,job,vertex,id,permanently,marked,new,hash,set,job,vertex,id,for,int,i,0,i,reachable,length,i,if,detect,cycle,reachable,i,temporarily,marked,permanently,marked,return,false,return,true
