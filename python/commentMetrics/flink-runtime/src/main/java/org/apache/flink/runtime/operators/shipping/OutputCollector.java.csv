# id;timestamp;commentText;codeText;commentWords;codeWords
OutputCollector -> @SuppressWarnings("unchecked") 	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer);1405024514;Initializes the output collector with a set of writers._To specify for a writer that it must be fed with a deep-copy, set the bit in the copy flag bit mask to 1 that_corresponds to the position of the writer within the {@link List}.__@param writers List of all writers.;@SuppressWarnings("unchecked")_	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer)_	{_		this.delegate = new SerializationDelegate<T>(serializer)__		this.writers = (RecordWriter<SerializationDelegate<T>>[]) writers.toArray(new RecordWriter[writers.size()])__	};initializes,the,output,collector,with,a,set,of,writers,to,specify,for,a,writer,that,it,must,be,fed,with,a,deep,copy,set,the,bit,in,the,copy,flag,bit,mask,to,1,that,corresponds,to,the,position,of,the,writer,within,the,link,list,param,writers,list,of,all,writers;suppress,warnings,unchecked,public,output,collector,list,record,writer,serialization,delegate,t,writers,type,serializer,t,serializer,this,delegate,new,serialization,delegate,t,serializer,this,writers,record,writer,serialization,delegate,t,writers,to,array,new,record,writer,writers,size
OutputCollector -> @SuppressWarnings("unchecked") 	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer);1405090423;Initializes the output collector with a set of writers._To specify for a writer that it must be fed with a deep-copy, set the bit in the copy flag bit mask to 1 that_corresponds to the position of the writer within the {@link List}.__@param writers List of all writers.;@SuppressWarnings("unchecked")_	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer)_	{_		this.delegate = new SerializationDelegate<T>(serializer)__		this.writers = (RecordWriter<SerializationDelegate<T>>[]) writers.toArray(new RecordWriter[writers.size()])__	};initializes,the,output,collector,with,a,set,of,writers,to,specify,for,a,writer,that,it,must,be,fed,with,a,deep,copy,set,the,bit,in,the,copy,flag,bit,mask,to,1,that,corresponds,to,the,position,of,the,writer,within,the,link,list,param,writers,list,of,all,writers;suppress,warnings,unchecked,public,output,collector,list,record,writer,serialization,delegate,t,writers,type,serializer,t,serializer,this,delegate,new,serialization,delegate,t,serializer,this,writers,record,writer,serialization,delegate,t,writers,to,array,new,record,writer,writers,size
OutputCollector -> @SuppressWarnings("unchecked") 	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer);1411473593;Initializes the output collector with a set of writers._To specify for a writer that it must be fed with a deep-copy, set the bit in the copy flag bit mask to 1 that_corresponds to the position of the writer within the {@link List}.__@param writers List of all writers.;@SuppressWarnings("unchecked")_	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer)_	{_		this.delegate = new SerializationDelegate<T>(serializer)__		this.writers = (RecordWriter<SerializationDelegate<T>>[]) writers.toArray(new RecordWriter[writers.size()])__	};initializes,the,output,collector,with,a,set,of,writers,to,specify,for,a,writer,that,it,must,be,fed,with,a,deep,copy,set,the,bit,in,the,copy,flag,bit,mask,to,1,that,corresponds,to,the,position,of,the,writer,within,the,link,list,param,writers,list,of,all,writers;suppress,warnings,unchecked,public,output,collector,list,record,writer,serialization,delegate,t,writers,type,serializer,t,serializer,this,delegate,new,serialization,delegate,t,serializer,this,writers,record,writer,serialization,delegate,t,writers,to,array,new,record,writer,writers,size
OutputCollector -> @SuppressWarnings("unchecked") 	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer);1421050512;Initializes the output collector with a set of writers._To specify for a writer that it must be fed with a deep-copy, set the bit in the copy flag bit mask to 1 that_corresponds to the position of the writer within the {@link List}.__@param writers List of all writers.;@SuppressWarnings("unchecked")_	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer)_	{_		this.delegate = new SerializationDelegate<T>(serializer)__		this.writers = (RecordWriter<SerializationDelegate<T>>[]) writers.toArray(new RecordWriter[writers.size()])__	};initializes,the,output,collector,with,a,set,of,writers,to,specify,for,a,writer,that,it,must,be,fed,with,a,deep,copy,set,the,bit,in,the,copy,flag,bit,mask,to,1,that,corresponds,to,the,position,of,the,writer,within,the,link,list,param,writers,list,of,all,writers;suppress,warnings,unchecked,public,output,collector,list,record,writer,serialization,delegate,t,writers,type,serializer,t,serializer,this,delegate,new,serialization,delegate,t,serializer,this,writers,record,writer,serialization,delegate,t,writers,to,array,new,record,writer,writers,size
OutputCollector -> @SuppressWarnings("unchecked") 	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer);1425558415;Initializes the output collector with a set of writers._To specify for a writer that it must be fed with a deep-copy, set the bit in the copy flag bit mask to 1 that_corresponds to the position of the writer within the {@link List}.__@param writers List of all writers.;@SuppressWarnings("unchecked")_	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer) {_		this.delegate = new SerializationDelegate<T>(serializer)__		this.writers = (RecordWriter<SerializationDelegate<T>>[]) writers.toArray(new RecordWriter[writers.size()])__	};initializes,the,output,collector,with,a,set,of,writers,to,specify,for,a,writer,that,it,must,be,fed,with,a,deep,copy,set,the,bit,in,the,copy,flag,bit,mask,to,1,that,corresponds,to,the,position,of,the,writer,within,the,link,list,param,writers,list,of,all,writers;suppress,warnings,unchecked,public,output,collector,list,record,writer,serialization,delegate,t,writers,type,serializer,t,serializer,this,delegate,new,serialization,delegate,t,serializer,this,writers,record,writer,serialization,delegate,t,writers,to,array,new,record,writer,writers,size
OutputCollector -> @SuppressWarnings("unchecked") 	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer);1519039301;Initializes the output collector with a set of writers._To specify for a writer that it must be fed with a deep-copy, set the bit in the copy flag bit mask to 1 that_corresponds to the position of the writer within the {@link List}.__@param writers List of all writers.;@SuppressWarnings("unchecked")_	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer) {_		this.delegate = new SerializationDelegate<T>(serializer)__		this.writers = (RecordWriter<SerializationDelegate<T>>[]) writers.toArray(new RecordWriter[writers.size()])__	};initializes,the,output,collector,with,a,set,of,writers,to,specify,for,a,writer,that,it,must,be,fed,with,a,deep,copy,set,the,bit,in,the,copy,flag,bit,mask,to,1,that,corresponds,to,the,position,of,the,writer,within,the,link,list,param,writers,list,of,all,writers;suppress,warnings,unchecked,public,output,collector,list,record,writer,serialization,delegate,t,writers,type,serializer,t,serializer,this,delegate,new,serialization,delegate,t,serializer,this,writers,record,writer,serialization,delegate,t,writers,to,array,new,record,writer,writers,size
OutputCollector -> @SuppressWarnings("unchecked") 	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer);1519308961;Initializes the output collector with a set of writers._To specify for a writer that it must be fed with a deep-copy, set the bit in the copy flag bit mask to 1 that_corresponds to the position of the writer within the {@link List}.__@param writers List of all writers.;@SuppressWarnings("unchecked")_	public OutputCollector(List<RecordWriter<SerializationDelegate<T>>> writers, TypeSerializer<T> serializer) {_		this.delegate = new SerializationDelegate<T>(serializer)__		this.writers = (RecordWriter<SerializationDelegate<T>>[]) writers.toArray(new RecordWriter[writers.size()])__	};initializes,the,output,collector,with,a,set,of,writers,to,specify,for,a,writer,that,it,must,be,fed,with,a,deep,copy,set,the,bit,in,the,copy,flag,bit,mask,to,1,that,corresponds,to,the,position,of,the,writer,within,the,link,list,param,writers,list,of,all,writers;suppress,warnings,unchecked,public,output,collector,list,record,writer,serialization,delegate,t,writers,type,serializer,t,serializer,this,delegate,new,serialization,delegate,t,serializer,this,writers,record,writer,serialization,delegate,t,writers,to,array,new,record,writer,writers,size
OutputCollector -> public List<RecordWriter<SerializationDelegate<T>>> getWriters();1405024514;List of writers that are associated with this output collector_@return list of writers;public List<RecordWriter<SerializationDelegate<T>>> getWriters() {_		return Collections.unmodifiableList(Arrays.asList(this.writers))__	};list,of,writers,that,are,associated,with,this,output,collector,return,list,of,writers;public,list,record,writer,serialization,delegate,t,get,writers,return,collections,unmodifiable,list,arrays,as,list,this,writers
OutputCollector -> public List<RecordWriter<SerializationDelegate<T>>> getWriters();1405090423;List of writers that are associated with this output collector_@return list of writers;public List<RecordWriter<SerializationDelegate<T>>> getWriters() {_		return Collections.unmodifiableList(Arrays.asList(this.writers))__	};list,of,writers,that,are,associated,with,this,output,collector,return,list,of,writers;public,list,record,writer,serialization,delegate,t,get,writers,return,collections,unmodifiable,list,arrays,as,list,this,writers
OutputCollector -> public List<RecordWriter<SerializationDelegate<T>>> getWriters();1411473593;List of writers that are associated with this output collector_@return list of writers;public List<RecordWriter<SerializationDelegate<T>>> getWriters() {_		return Collections.unmodifiableList(Arrays.asList(this.writers))__	};list,of,writers,that,are,associated,with,this,output,collector,return,list,of,writers;public,list,record,writer,serialization,delegate,t,get,writers,return,collections,unmodifiable,list,arrays,as,list,this,writers
OutputCollector -> public List<RecordWriter<SerializationDelegate<T>>> getWriters();1421050512;List of writers that are associated with this output collector_@return list of writers;public List<RecordWriter<SerializationDelegate<T>>> getWriters() {_		return Collections.unmodifiableList(Arrays.asList(this.writers))__	};list,of,writers,that,are,associated,with,this,output,collector,return,list,of,writers;public,list,record,writer,serialization,delegate,t,get,writers,return,collections,unmodifiable,list,arrays,as,list,this,writers
OutputCollector -> @SuppressWarnings("unchecked") 	public List<RecordWriter<SerializationDelegate<T>>> getWriters();1425558415;List of writers that are associated with this output collector_@return list of writers;@SuppressWarnings("unchecked")_	public List<RecordWriter<SerializationDelegate<T>>> getWriters() {_		return Collections.unmodifiableList(Arrays.asList(this.writers))__	};list,of,writers,that,are,associated,with,this,output,collector,return,list,of,writers;suppress,warnings,unchecked,public,list,record,writer,serialization,delegate,t,get,writers,return,collections,unmodifiable,list,arrays,as,list,this,writers
OutputCollector -> @SuppressWarnings("unchecked") 	public List<RecordWriter<SerializationDelegate<T>>> getWriters();1519039301;List of writers that are associated with this output collector_@return list of writers;@SuppressWarnings("unchecked")_	public List<RecordWriter<SerializationDelegate<T>>> getWriters() {_		return Collections.unmodifiableList(Arrays.asList(this.writers))__	};list,of,writers,that,are,associated,with,this,output,collector,return,list,of,writers;suppress,warnings,unchecked,public,list,record,writer,serialization,delegate,t,get,writers,return,collections,unmodifiable,list,arrays,as,list,this,writers
OutputCollector -> @SuppressWarnings("unchecked") 	public List<RecordWriter<SerializationDelegate<T>>> getWriters();1519308961;List of writers that are associated with this output collector_@return list of writers;@SuppressWarnings("unchecked")_	public List<RecordWriter<SerializationDelegate<T>>> getWriters() {_		return Collections.unmodifiableList(Arrays.asList(this.writers))__	};list,of,writers,that,are,associated,with,this,output,collector,return,list,of,writers;suppress,warnings,unchecked,public,list,record,writer,serialization,delegate,t,get,writers,return,collections,unmodifiable,list,arrays,as,list,this,writers
OutputCollector -> @SuppressWarnings("unchecked") 	public void addWriter(RecordWriter<SerializationDelegate<T>> writer);1405024514;Adds a writer to the OutputCollector.__@param writer The writer to add.;@SuppressWarnings("unchecked")_	public void addWriter(RecordWriter<SerializationDelegate<T>> writer)_	{_		_		if (this.writers == null) {_			this.writers = new RecordWriter[] {writer}__		}_		else {_			RecordWriter<SerializationDelegate<T>>[] ws = new RecordWriter[this.writers.length + 1]__			System.arraycopy(this.writers, 0, ws, 0, this.writers.length)__			ws[this.writers.length] = writer__			this.writers = ws__		}_	};adds,a,writer,to,the,output,collector,param,writer,the,writer,to,add;suppress,warnings,unchecked,public,void,add,writer,record,writer,serialization,delegate,t,writer,if,this,writers,null,this,writers,new,record,writer,writer,else,record,writer,serialization,delegate,t,ws,new,record,writer,this,writers,length,1,system,arraycopy,this,writers,0,ws,0,this,writers,length,ws,this,writers,length,writer,this,writers,ws
OutputCollector -> @SuppressWarnings("unchecked") 	public void addWriter(RecordWriter<SerializationDelegate<T>> writer);1405090423;Adds a writer to the OutputCollector.__@param writer The writer to add.;@SuppressWarnings("unchecked")_	public void addWriter(RecordWriter<SerializationDelegate<T>> writer)_	{_		_		if (this.writers == null) {_			this.writers = new RecordWriter[] {writer}__		}_		else {_			RecordWriter<SerializationDelegate<T>>[] ws = new RecordWriter[this.writers.length + 1]__			System.arraycopy(this.writers, 0, ws, 0, this.writers.length)__			ws[this.writers.length] = writer__			this.writers = ws__		}_	};adds,a,writer,to,the,output,collector,param,writer,the,writer,to,add;suppress,warnings,unchecked,public,void,add,writer,record,writer,serialization,delegate,t,writer,if,this,writers,null,this,writers,new,record,writer,writer,else,record,writer,serialization,delegate,t,ws,new,record,writer,this,writers,length,1,system,arraycopy,this,writers,0,ws,0,this,writers,length,ws,this,writers,length,writer,this,writers,ws
OutputCollector -> @SuppressWarnings("unchecked") 	public void addWriter(RecordWriter<SerializationDelegate<T>> writer);1411473593;Adds a writer to the OutputCollector.__@param writer The writer to add.;@SuppressWarnings("unchecked")_	public void addWriter(RecordWriter<SerializationDelegate<T>> writer)_	{_		_		if (this.writers == null) {_			this.writers = new RecordWriter[] {writer}__		}_		else {_			RecordWriter<SerializationDelegate<T>>[] ws = new RecordWriter[this.writers.length + 1]__			System.arraycopy(this.writers, 0, ws, 0, this.writers.length)__			ws[this.writers.length] = writer__			this.writers = ws__		}_	};adds,a,writer,to,the,output,collector,param,writer,the,writer,to,add;suppress,warnings,unchecked,public,void,add,writer,record,writer,serialization,delegate,t,writer,if,this,writers,null,this,writers,new,record,writer,writer,else,record,writer,serialization,delegate,t,ws,new,record,writer,this,writers,length,1,system,arraycopy,this,writers,0,ws,0,this,writers,length,ws,this,writers,length,writer,this,writers,ws
OutputCollector -> @SuppressWarnings("unchecked") 	public void addWriter(RecordWriter<SerializationDelegate<T>> writer);1421050512;Adds a writer to the OutputCollector.__@param writer The writer to add.;@SuppressWarnings("unchecked")_	public void addWriter(RecordWriter<SerializationDelegate<T>> writer)_	{_		_		if (this.writers == null) {_			this.writers = new RecordWriter[] {writer}__		}_		else {_			RecordWriter<SerializationDelegate<T>>[] ws = new RecordWriter[this.writers.length + 1]__			System.arraycopy(this.writers, 0, ws, 0, this.writers.length)__			ws[this.writers.length] = writer__			this.writers = ws__		}_	};adds,a,writer,to,the,output,collector,param,writer,the,writer,to,add;suppress,warnings,unchecked,public,void,add,writer,record,writer,serialization,delegate,t,writer,if,this,writers,null,this,writers,new,record,writer,writer,else,record,writer,serialization,delegate,t,ws,new,record,writer,this,writers,length,1,system,arraycopy,this,writers,0,ws,0,this,writers,length,ws,this,writers,length,writer,this,writers,ws
OutputCollector -> @Override 	public void collect(T record);1405024514;Collects a record and emits it to all writers.;@Override_	public void collect(T record)_	{_		this.delegate.setInstance(record)__		try {_			for (int i = 0_ i < writers.length_ i++) {_				this.writers[i].emit(this.delegate)__			}_		}_		catch (IOException e) {_			throw new RuntimeException("Emitting the record caused an I/O exception: " + e.getMessage(), e)__		}_		catch (InterruptedException e) {_			throw new RuntimeException("Emitting the record was interrupted: " + e.getMessage(), e)__		}_	};collects,a,record,and,emits,it,to,all,writers;override,public,void,collect,t,record,this,delegate,set,instance,record,try,for,int,i,0,i,writers,length,i,this,writers,i,emit,this,delegate,catch,ioexception,e,throw,new,runtime,exception,emitting,the,record,caused,an,i,o,exception,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,exception,emitting,the,record,was,interrupted,e,get,message,e
OutputCollector -> @Override 	public void collect(T record);1405090423;Collects a record and emits it to all writers.;@Override_	public void collect(T record)_	{_		this.delegate.setInstance(record)__		try {_			for (int i = 0_ i < writers.length_ i++) {_				this.writers[i].emit(this.delegate)__			}_		}_		catch (IOException e) {_			throw new RuntimeException("Emitting the record caused an I/O exception: " + e.getMessage(), e)__		}_		catch (InterruptedException e) {_			throw new RuntimeException("Emitting the record was interrupted: " + e.getMessage(), e)__		}_	};collects,a,record,and,emits,it,to,all,writers;override,public,void,collect,t,record,this,delegate,set,instance,record,try,for,int,i,0,i,writers,length,i,this,writers,i,emit,this,delegate,catch,ioexception,e,throw,new,runtime,exception,emitting,the,record,caused,an,i,o,exception,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,exception,emitting,the,record,was,interrupted,e,get,message,e
OutputCollector -> @Override 	public void collect(T record);1411473593;Collects a record and emits it to all writers.;@Override_	public void collect(T record)_	{_		this.delegate.setInstance(record)__		try {_			for (int i = 0_ i < writers.length_ i++) {_				this.writers[i].emit(this.delegate)__			}_		}_		catch (IOException e) {_			throw new RuntimeException("Emitting the record caused an I/O exception: " + e.getMessage(), e)__		}_		catch (InterruptedException e) {_			throw new RuntimeException("Emitting the record was interrupted: " + e.getMessage(), e)__		}_	};collects,a,record,and,emits,it,to,all,writers;override,public,void,collect,t,record,this,delegate,set,instance,record,try,for,int,i,0,i,writers,length,i,this,writers,i,emit,this,delegate,catch,ioexception,e,throw,new,runtime,exception,emitting,the,record,caused,an,i,o,exception,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,exception,emitting,the,record,was,interrupted,e,get,message,e
OutputCollector -> @Override 	public void collect(T record);1421050512;Collects a record and emits it to all writers.;@Override_	public void collect(T record)_	{_		this.delegate.setInstance(record)__		try {_			for (int i = 0_ i < writers.length_ i++) {_				this.writers[i].emit(this.delegate)__			}_		}_		catch (IOException e) {_			throw new RuntimeException("Emitting the record caused an I/O exception: " + e.getMessage(), e)__		}_		catch (InterruptedException e) {_			throw new RuntimeException("Emitting the record was interrupted: " + e.getMessage(), e)__		}_	};collects,a,record,and,emits,it,to,all,writers;override,public,void,collect,t,record,this,delegate,set,instance,record,try,for,int,i,0,i,writers,length,i,this,writers,i,emit,this,delegate,catch,ioexception,e,throw,new,runtime,exception,emitting,the,record,caused,an,i,o,exception,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,exception,emitting,the,record,was,interrupted,e,get,message,e
OutputCollector -> @Override 	public void collect(T record);1425558415;Collects a record and emits it to all writers.;@Override_	public void collect(T record)  {_		if (record != null) {_			this.delegate.setInstance(record)__			try {_				for (RecordWriter<SerializationDelegate<T>> writer : writers) {_					writer.emit(this.delegate)__				}_			}_			catch (IOException e) {_				throw new RuntimeException("Emitting the record caused an I/O exception: " + e.getMessage(), e)__			}_			catch (InterruptedException e) {_				throw new RuntimeException("Emitting the record was interrupted: " + e.getMessage(), e)__			}_		}_		else {_			throw new NullPointerException("The system does not support records that are null."_								+ "Null values are only supported as fields inside other objects.")__		}_	};collects,a,record,and,emits,it,to,all,writers;override,public,void,collect,t,record,if,record,null,this,delegate,set,instance,record,try,for,record,writer,serialization,delegate,t,writer,writers,writer,emit,this,delegate,catch,ioexception,e,throw,new,runtime,exception,emitting,the,record,caused,an,i,o,exception,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,exception,emitting,the,record,was,interrupted,e,get,message,e,else,throw,new,null,pointer,exception,the,system,does,not,support,records,that,are,null,null,values,are,only,supported,as,fields,inside,other,objects
OutputCollector -> @Override 	public void collect(T record);1519039301;Collects a record and emits it to all writers.;@Override_	public void collect(T record)  {_		if (record != null) {_			this.delegate.setInstance(record)__			try {_				for (RecordWriter<SerializationDelegate<T>> writer : writers) {_					writer.emit(this.delegate)__				}_			}_			catch (IOException e) {_				throw new RuntimeException("Emitting the record caused an I/O exception: " + e.getMessage(), e)__			}_			catch (InterruptedException e) {_				throw new RuntimeException("Emitting the record was interrupted: " + e.getMessage(), e)__			}_		}_		else {_			throw new NullPointerException("The system does not support records that are null."_								+ "Null values are only supported as fields inside other objects.")__		}_	};collects,a,record,and,emits,it,to,all,writers;override,public,void,collect,t,record,if,record,null,this,delegate,set,instance,record,try,for,record,writer,serialization,delegate,t,writer,writers,writer,emit,this,delegate,catch,ioexception,e,throw,new,runtime,exception,emitting,the,record,caused,an,i,o,exception,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,exception,emitting,the,record,was,interrupted,e,get,message,e,else,throw,new,null,pointer,exception,the,system,does,not,support,records,that,are,null,null,values,are,only,supported,as,fields,inside,other,objects
OutputCollector -> @Override 	public void collect(T record);1519308961;Collects a record and emits it to all writers.;@Override_	public void collect(T record)  {_		if (record != null) {_			this.delegate.setInstance(record)__			try {_				for (RecordWriter<SerializationDelegate<T>> writer : writers) {_					writer.emit(this.delegate)__				}_			}_			catch (IOException e) {_				throw new RuntimeException("Emitting the record caused an I/O exception: " + e.getMessage(), e)__			}_			catch (InterruptedException e) {_				throw new RuntimeException("Emitting the record was interrupted: " + e.getMessage(), e)__			}_		}_		else {_			throw new NullPointerException("The system does not support records that are null."_								+ "Null values are only supported as fields inside other objects.")__		}_	};collects,a,record,and,emits,it,to,all,writers;override,public,void,collect,t,record,if,record,null,this,delegate,set,instance,record,try,for,record,writer,serialization,delegate,t,writer,writers,writer,emit,this,delegate,catch,ioexception,e,throw,new,runtime,exception,emitting,the,record,caused,an,i,o,exception,e,get,message,e,catch,interrupted,exception,e,throw,new,runtime,exception,emitting,the,record,was,interrupted,e,get,message,e,else,throw,new,null,pointer,exception,the,system,does,not,support,records,that,are,null,null,values,are,only,supported,as,fields,inside,other,objects
