# id;timestamp;commentText;codeText;commentWords;codeWords
SuperstepBarrier -> public void setup();1404986750;setup the barrier, has to be called at the beginning of each superstep;public void setup() {_		latch = new CountDownLatch(1)__	};setup,the,barrier,has,to,be,called,at,the,beginning,of,each,superstep;public,void,setup,latch,new,count,down,latch,1
SuperstepBarrier -> public void setup();1405088715;setup the barrier, has to be called at the beginning of each superstep;public void setup() {_		latch = new CountDownLatch(1)__	};setup,the,barrier,has,to,be,called,at,the,beginning,of,each,superstep;public,void,setup,latch,new,count,down,latch,1
SuperstepBarrier -> public void setup();1411473561;setup the barrier, has to be called at the beginning of each superstep;public void setup() {_		latch = new CountDownLatch(1)__	};setup,the,barrier,has,to,be,called,at,the,beginning,of,each,superstep;public,void,setup,latch,new,count,down,latch,1
SuperstepBarrier -> public void setup();1412761231;setup the barrier, has to be called at the beginning of each superstep;public void setup() {_		latch = new CountDownLatch(1)__	};setup,the,barrier,has,to,be,called,at,the,beginning,of,each,superstep;public,void,setup,latch,new,count,down,latch,1
SuperstepBarrier -> public void setup();1438275734;setup the barrier, has to be called at the beginning of each superstep;public void setup() {_		latch = new CountDownLatch(1)__	};setup,the,barrier,has,to,be,called,at,the,beginning,of,each,superstep;public,void,setup,latch,new,count,down,latch,1
SuperstepBarrier -> public void setup();1497027221;Setup the barrier, has to be called at the beginning of each superstep.;public void setup() {_		latch = new CountDownLatch(1)__	};setup,the,barrier,has,to,be,called,at,the,beginning,of,each,superstep;public,void,setup,latch,new,count,down,latch,1
SuperstepBarrier -> public void waitForOtherWorkers() throws InterruptedException;1404986750;wait on the barrier;public void waitForOtherWorkers() throws InterruptedException {_		latch.await()__	};wait,on,the,barrier;public,void,wait,for,other,workers,throws,interrupted,exception,latch,await
SuperstepBarrier -> public void waitForOtherWorkers() throws InterruptedException;1405088715;wait on the barrier;public void waitForOtherWorkers() throws InterruptedException {_		latch.await()__	};wait,on,the,barrier;public,void,wait,for,other,workers,throws,interrupted,exception,latch,await
SuperstepBarrier -> public void waitForOtherWorkers() throws InterruptedException;1411473561;wait on the barrier;public void waitForOtherWorkers() throws InterruptedException {_		latch.await()__	};wait,on,the,barrier;public,void,wait,for,other,workers,throws,interrupted,exception,latch,await
SuperstepBarrier -> public void waitForOtherWorkers() throws InterruptedException;1412761231;wait on the barrier;public void waitForOtherWorkers() throws InterruptedException {_		latch.await()__	};wait,on,the,barrier;public,void,wait,for,other,workers,throws,interrupted,exception,latch,await
SuperstepBarrier -> public void waitForOtherWorkers() throws InterruptedException;1438275734;wait on the barrier;public void waitForOtherWorkers() throws InterruptedException {_		latch.await()__	};wait,on,the,barrier;public,void,wait,for,other,workers,throws,interrupted,exception,latch,await
SuperstepBarrier -> public void waitForOtherWorkers() throws InterruptedException;1497027221;Wait on the barrier.;public void waitForOtherWorkers() throws InterruptedException {_		latch.await()__	};wait,on,the,barrier;public,void,wait,for,other,workers,throws,interrupted,exception,latch,await
SuperstepBarrier -> @Override 	public void eventOccurred(AbstractTaskEvent event);1404986750;barrier will release the waiting thread if an event occurs;@Override_	public void eventOccurred(AbstractTaskEvent event) {_		if (event instanceof TerminationEvent) {_			terminationSignaled = true__		}_		else if (event instanceof AllWorkersDoneEvent) {_			AllWorkersDoneEvent wde = (AllWorkersDoneEvent) event__			aggregatorNames = wde.getAggregatorNames()__			aggregates = wde.getAggregates(userCodeClassLoader)__		}_		else {_			throw new IllegalArgumentException("Unknown event type.")__		}__		latch.countDown()__	};barrier,will,release,the,waiting,thread,if,an,event,occurs;override,public,void,event,occurred,abstract,task,event,event,if,event,instanceof,termination,event,termination,signaled,true,else,if,event,instanceof,all,workers,done,event,all,workers,done,event,wde,all,workers,done,event,event,aggregator,names,wde,get,aggregator,names,aggregates,wde,get,aggregates,user,code,class,loader,else,throw,new,illegal,argument,exception,unknown,event,type,latch,count,down
SuperstepBarrier -> @Override 	public void eventOccurred(AbstractTaskEvent event);1405088715;barrier will release the waiting thread if an event occurs;@Override_	public void eventOccurred(AbstractTaskEvent event) {_		if (event instanceof TerminationEvent) {_			terminationSignaled = true__		}_		else if (event instanceof AllWorkersDoneEvent) {_			AllWorkersDoneEvent wde = (AllWorkersDoneEvent) event__			aggregatorNames = wde.getAggregatorNames()__			aggregates = wde.getAggregates(userCodeClassLoader)__		}_		else {_			throw new IllegalArgumentException("Unknown event type.")__		}__		latch.countDown()__	};barrier,will,release,the,waiting,thread,if,an,event,occurs;override,public,void,event,occurred,abstract,task,event,event,if,event,instanceof,termination,event,termination,signaled,true,else,if,event,instanceof,all,workers,done,event,all,workers,done,event,wde,all,workers,done,event,event,aggregator,names,wde,get,aggregator,names,aggregates,wde,get,aggregates,user,code,class,loader,else,throw,new,illegal,argument,exception,unknown,event,type,latch,count,down
SuperstepBarrier -> @Override 	public void eventOccurred(AbstractTaskEvent event);1411473561;barrier will release the waiting thread if an event occurs;@Override_	public void eventOccurred(AbstractTaskEvent event) {_		if (event instanceof TerminationEvent) {_			terminationSignaled = true__		}_		else if (event instanceof AllWorkersDoneEvent) {_			AllWorkersDoneEvent wde = (AllWorkersDoneEvent) event__			aggregatorNames = wde.getAggregatorNames()__			aggregates = wde.getAggregates(userCodeClassLoader)__		}_		else {_			throw new IllegalArgumentException("Unknown event type.")__		}__		latch.countDown()__	};barrier,will,release,the,waiting,thread,if,an,event,occurs;override,public,void,event,occurred,abstract,task,event,event,if,event,instanceof,termination,event,termination,signaled,true,else,if,event,instanceof,all,workers,done,event,all,workers,done,event,wde,all,workers,done,event,event,aggregator,names,wde,get,aggregator,names,aggregates,wde,get,aggregates,user,code,class,loader,else,throw,new,illegal,argument,exception,unknown,event,type,latch,count,down
SuperstepBarrier -> @Override 	public void onEvent(TaskEvent event);1412761231;barrier will release the waiting thread if an event occurs_@param event;@Override_	public void onEvent(TaskEvent event) {_		if (event instanceof TerminationEvent) {_			terminationSignaled = true__		}_		else if (event instanceof AllWorkersDoneEvent) {_			AllWorkersDoneEvent wde = (AllWorkersDoneEvent) event__			aggregatorNames = wde.getAggregatorNames()__			aggregates = wde.getAggregates(userCodeClassLoader)__		}_		else {_			throw new IllegalArgumentException("Unknown event type.")__		}__		latch.countDown()__	};barrier,will,release,the,waiting,thread,if,an,event,occurs,param,event;override,public,void,on,event,task,event,event,if,event,instanceof,termination,event,termination,signaled,true,else,if,event,instanceof,all,workers,done,event,all,workers,done,event,wde,all,workers,done,event,event,aggregator,names,wde,get,aggregator,names,aggregates,wde,get,aggregates,user,code,class,loader,else,throw,new,illegal,argument,exception,unknown,event,type,latch,count,down
SuperstepBarrier -> @Override 	public void onEvent(TaskEvent event);1438275734;barrier will release the waiting thread if an event occurs_@param event;@Override_	public void onEvent(TaskEvent event) {_		if (event instanceof TerminationEvent) {_			terminationSignaled = true__		}_		else if (event instanceof AllWorkersDoneEvent) {_			AllWorkersDoneEvent wde = (AllWorkersDoneEvent) event__			aggregatorNames = wde.getAggregatorNames()__			aggregates = wde.getAggregates(userCodeClassLoader)__		}_		else {_			throw new IllegalArgumentException("Unknown event type.")__		}__		latch.countDown()__	};barrier,will,release,the,waiting,thread,if,an,event,occurs,param,event;override,public,void,on,event,task,event,event,if,event,instanceof,termination,event,termination,signaled,true,else,if,event,instanceof,all,workers,done,event,all,workers,done,event,wde,all,workers,done,event,event,aggregator,names,wde,get,aggregator,names,aggregates,wde,get,aggregates,user,code,class,loader,else,throw,new,illegal,argument,exception,unknown,event,type,latch,count,down
SuperstepBarrier -> @Override 	public void onEvent(TaskEvent event);1497027221;Barrier will release the waiting thread if an event occurs.;@Override_	public void onEvent(TaskEvent event) {_		if (event instanceof TerminationEvent) {_			terminationSignaled = true__		}_		else if (event instanceof AllWorkersDoneEvent) {_			AllWorkersDoneEvent wde = (AllWorkersDoneEvent) event__			aggregatorNames = wde.getAggregatorNames()__			aggregates = wde.getAggregates(userCodeClassLoader)__		}_		else {_			throw new IllegalArgumentException("Unknown event type.")__		}__		latch.countDown()__	};barrier,will,release,the,waiting,thread,if,an,event,occurs;override,public,void,on,event,task,event,event,if,event,instanceof,termination,event,termination,signaled,true,else,if,event,instanceof,all,workers,done,event,all,workers,done,event,wde,all,workers,done,event,event,aggregator,names,wde,get,aggregator,names,aggregates,wde,get,aggregates,user,code,class,loader,else,throw,new,illegal,argument,exception,unknown,event,type,latch,count,down
