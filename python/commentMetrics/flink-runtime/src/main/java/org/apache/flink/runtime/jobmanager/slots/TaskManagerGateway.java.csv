# id;timestamp;commentText;codeText;commentWords;codeWords
TaskManagerGateway -> String getAddress()_;1477213607;Return the address of the task manager with which the gateway is associated.__@return Address of the task manager with which this gateway is associated.;String getAddress()_;return,the,address,of,the,task,manager,with,which,the,gateway,is,associated,return,address,of,the,task,manager,with,which,this,gateway,is,associated;string,get,address
TaskManagerGateway -> String getAddress()_;1487264183;Return the address of the task manager with which the gateway is associated.__@return Address of the task manager with which this gateway is associated.;String getAddress()_;return,the,address,of,the,task,manager,with,which,the,gateway,is,associated,return,address,of,the,task,manager,with,which,this,gateway,is,associated;string,get,address
TaskManagerGateway -> String getAddress()_;1501580028;Return the address of the task manager with which the gateway is associated.__@return Address of the task manager with which this gateway is associated.;String getAddress()_;return,the,address,of,the,task,manager,with,which,the,gateway,is,associated,return,address,of,the,task,manager,with,which,this,gateway,is,associated;string,get,address
TaskManagerGateway -> String getAddress()_;1505901925;Return the address of the task manager with which the gateway is associated.__@return Address of the task manager with which this gateway is associated.;String getAddress()_;return,the,address,of,the,task,manager,with,which,the,gateway,is,associated,return,address,of,the,task,manager,with,which,this,gateway,is,associated;string,get,address
TaskManagerGateway -> String getAddress()_;1512136929;Return the address of the task manager with which the gateway is associated.__@return Address of the task manager with which this gateway is associated.;String getAddress()_;return,the,address,of,the,task,manager,with,which,the,gateway,is,associated,return,address,of,the,task,manager,with,which,this,gateway,is,associated;string,get,address
TaskManagerGateway -> String getAddress()_;1550573580;Return the address of the task manager with which the gateway is associated.__@return Address of the task manager with which this gateway is associated.;String getAddress()_;return,the,address,of,the,task,manager,with,which,the,gateway,is,associated,return,address,of,the,task,manager,with,which,this,gateway,is,associated;string,get,address
TaskManagerGateway -> Future<Acknowledge> stopTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1477213607;Stop the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> Future<Acknowledge> stopTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1487264183;Stop the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> void stopCluster(final ApplicationStatus applicationStatus, final String message)_;1477213607;Stop the cluster.__@param applicationStatus to stop the cluster with_@param message to deliver;void stopCluster(final ApplicationStatus applicationStatus, final String message)_;stop,the,cluster,param,application,status,to,stop,the,cluster,with,param,message,to,deliver;void,stop,cluster,final,application,status,application,status,final,string,message
TaskManagerGateway -> void stopCluster(final ApplicationStatus applicationStatus, final String message)_;1487264183;Stop the cluster.__@param applicationStatus to stop the cluster with_@param message to deliver;void stopCluster(final ApplicationStatus applicationStatus, final String message)_;stop,the,cluster,param,application,status,to,stop,the,cluster,with,param,message,to,deliver;void,stop,cluster,final,application,status,application,status,final,string,message
TaskManagerGateway -> void stopCluster(final ApplicationStatus applicationStatus, final String message)_;1501580028;Stop the cluster.__@param applicationStatus to stop the cluster with_@param message to deliver;void stopCluster(final ApplicationStatus applicationStatus, final String message)_;stop,the,cluster,param,application,status,to,stop,the,cluster,with,param,message,to,deliver;void,stop,cluster,final,application,status,application,status,final,string,message
TaskManagerGateway -> void stopCluster(final ApplicationStatus applicationStatus, final String message)_;1505901925;Stop the cluster.__@param applicationStatus to stop the cluster with_@param message to deliver;void stopCluster(final ApplicationStatus applicationStatus, final String message)_;stop,the,cluster,param,application,status,to,stop,the,cluster,with,param,message,to,deliver;void,stop,cluster,final,application,status,application,status,final,string,message
TaskManagerGateway -> void stopCluster(final ApplicationStatus applicationStatus, final String message)_;1512136929;Stop the cluster.__@param applicationStatus to stop the cluster with_@param message to deliver;void stopCluster(final ApplicationStatus applicationStatus, final String message)_;stop,the,cluster,param,application,status,to,stop,the,cluster,with,param,message,to,deliver;void,stop,cluster,final,application,status,application,status,final,string,message
TaskManagerGateway -> CompletableFuture<StackTrace> requestStackTrace(final Time timeout)_;1501580028;Request the stack trace from the task manager.__@param timeout for the stack trace request_@return Future for a stack trace;CompletableFuture<StackTrace> requestStackTrace(final Time timeout)_;request,the,stack,trace,from,the,task,manager,param,timeout,for,the,stack,trace,request,return,future,for,a,stack,trace;completable,future,stack,trace,request,stack,trace,final,time,timeout
TaskManagerGateway -> CompletableFuture<StackTrace> requestStackTrace(final Time timeout)_;1505901925;Request the stack trace from the task manager.__@param timeout for the stack trace request_@return Future for a stack trace;CompletableFuture<StackTrace> requestStackTrace(final Time timeout)_;request,the,stack,trace,from,the,task,manager,param,timeout,for,the,stack,trace,request,return,future,for,a,stack,trace;completable,future,stack,trace,request,stack,trace,final,time,timeout
TaskManagerGateway -> CompletableFuture<StackTrace> requestStackTrace(final Time timeout)_;1512136929;Request the stack trace from the task manager.__@param timeout for the stack trace request_@return Future for a stack trace;CompletableFuture<StackTrace> requestStackTrace(final Time timeout)_;request,the,stack,trace,from,the,task,manager,param,timeout,for,the,stack,trace,request,return,future,for,a,stack,trace;completable,future,stack,trace,request,stack,trace,final,time,timeout
TaskManagerGateway -> void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;1477213607;Disconnect the task manager from the job manager.__@param instanceId identifying the task manager_@param cause of the disconnection;void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;disconnect,the,task,manager,from,the,job,manager,param,instance,id,identifying,the,task,manager,param,cause,of,the,disconnection;void,disconnect,from,job,manager,instance,id,instance,id,exception,cause
TaskManagerGateway -> void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;1487264183;Disconnect the task manager from the job manager.__@param instanceId identifying the task manager_@param cause of the disconnection;void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;disconnect,the,task,manager,from,the,job,manager,param,instance,id,identifying,the,task,manager,param,cause,of,the,disconnection;void,disconnect,from,job,manager,instance,id,instance,id,exception,cause
TaskManagerGateway -> void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;1501580028;Disconnect the task manager from the job manager.__@param instanceId identifying the task manager_@param cause of the disconnection;void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;disconnect,the,task,manager,from,the,job,manager,param,instance,id,identifying,the,task,manager,param,cause,of,the,disconnection;void,disconnect,from,job,manager,instance,id,instance,id,exception,cause
TaskManagerGateway -> void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;1505901925;Disconnect the task manager from the job manager.__@param instanceId identifying the task manager_@param cause of the disconnection;void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;disconnect,the,task,manager,from,the,job,manager,param,instance,id,identifying,the,task,manager,param,cause,of,the,disconnection;void,disconnect,from,job,manager,instance,id,instance,id,exception,cause
TaskManagerGateway -> void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;1512136929;Disconnect the task manager from the job manager.__@param instanceId identifying the task manager_@param cause of the disconnection;void disconnectFromJobManager(InstanceID instanceId, Exception cause)_;disconnect,the,task,manager,from,the,job,manager,param,instance,id,identifying,the,task,manager,param,cause,of,the,disconnection;void,disconnect,from,job,manager,instance,id,instance,id,exception,cause
TaskManagerGateway -> Future<BlobKey> requestTaskManagerLog(final Time timeout)_;1477213607;Request the task manager log from the task manager.__@param timeout for the request_@return Future blob key under which the task manager log has been stored;Future<BlobKey> requestTaskManagerLog(final Time timeout)_;request,the,task,manager,log,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,log,has,been,stored;future,blob,key,request,task,manager,log,final,time,timeout
TaskManagerGateway -> Future<BlobKey> requestTaskManagerLog(final Time timeout)_;1487264183;Request the task manager log from the task manager.__@param timeout for the request_@return Future blob key under which the task manager log has been stored;Future<BlobKey> requestTaskManagerLog(final Time timeout)_;request,the,task,manager,log,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,log,has,been,stored;future,blob,key,request,task,manager,log,final,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1512136929;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1550573580;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskManagerGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1477213607;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskManagerGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1487264183;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskManagerGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1501580028;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskManagerGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1505901925;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskManagerGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1512136929;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskManagerGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1550573580;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskManagerGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		Time timeout)_;1477213607;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout of the submit operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,time,timeout
TaskManagerGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		Time timeout)_;1487264183;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout of the submit operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,time,timeout
TaskManagerGateway -> Future<StackTrace> requestStackTrace(final Time timeout)_;1477213607;Request the stack trace from the task manager.__@param timeout for the stack trace request_@return Future for a stack trace;Future<StackTrace> requestStackTrace(final Time timeout)_;request,the,stack,trace,from,the,task,manager,param,timeout,for,the,stack,trace,request,return,future,for,a,stack,trace;future,stack,trace,request,stack,trace,final,time,timeout
TaskManagerGateway -> Future<StackTrace> requestStackTrace(final Time timeout)_;1487264183;Request the stack trace from the task manager.__@param timeout for the stack trace request_@return Future for a stack trace;Future<StackTrace> requestStackTrace(final Time timeout)_;request,the,stack,trace,from,the,task,manager,param,timeout,for,the,stack,trace,request,return,future,for,a,stack,trace;future,stack,trace,request,stack,trace,final,time,timeout
TaskManagerGateway -> CompletableFuture<TransientBlobKey> requestTaskManagerLog(final Time timeout)_;1505901925;Request the task manager log from the task manager.__@param timeout for the request_@return Future blob key under which the task manager log has been stored;CompletableFuture<TransientBlobKey> requestTaskManagerLog(final Time timeout)_;request,the,task,manager,log,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,log,has,been,stored;completable,future,transient,blob,key,request,task,manager,log,final,time,timeout
TaskManagerGateway -> CompletableFuture<TransientBlobKey> requestTaskManagerLog(final Time timeout)_;1512136929;Request the task manager log from the task manager.__@param timeout for the request_@return Future blob key under which the task manager log has been stored;CompletableFuture<TransientBlobKey> requestTaskManagerLog(final Time timeout)_;request,the,task,manager,log,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,log,has,been,stored;completable,future,transient,blob,key,request,task,manager,log,final,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		Time timeout)_;1501580028;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout of the submit operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		Time timeout)_;1505901925;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout of the submit operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		Time timeout)_;1512136929;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout of the submit operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		Time timeout)_;1550573580;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout of the submit operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		Time timeout)_;1501580028;Submit a task to the task manager.__@param tdd describing the task to submit_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		Time timeout)_;submit,a,task,to,the,task,manager,param,tdd,describing,the,task,to,submit,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		Time timeout)_;1505901925;Submit a task to the task manager.__@param tdd describing the task to submit_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		Time timeout)_;submit,a,task,to,the,task,manager,param,tdd,describing,the,task,to,submit,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		Time timeout)_;1512136929;Submit a task to the task manager.__@param tdd describing the task to submit_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		Time timeout)_;submit,a,task,to,the,task,manager,param,tdd,describing,the,task,to,submit,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		Time timeout)_;1550573580;Submit a task to the task manager.__@param tdd describing the task to submit_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		Time timeout)_;submit,a,task,to,the,task,manager,param,tdd,describing,the,task,to,submit,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,time,timeout
TaskManagerGateway -> Future<Acknowledge> cancelTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1477213607;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> Future<Acknowledge> cancelTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1487264183;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> stopTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1501580028;Stop the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> stopTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1505901925;Stop the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> stopTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1512136929;Stop the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> stopTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1550573580;Stop the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> cancelTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1501580028;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> cancelTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1505901925;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> cancelTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1512136929;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> CompletableFuture<Acknowledge> cancelTask( 		ExecutionAttemptID executionAttemptID, 		Time timeout)_;1550573580;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout of the submit operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(_		ExecutionAttemptID executionAttemptID,_		Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,of,the,submit,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,time,timeout
TaskManagerGateway -> Future<BlobKey> requestTaskManagerStdout(final Time timeout)_;1477213607;Request the task manager stdout from the task manager.__@param timeout for the request_@return Future blob key under which the task manager stdout file has been stored;Future<BlobKey> requestTaskManagerStdout(final Time timeout)_;request,the,task,manager,stdout,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,stdout,file,has,been,stored;future,blob,key,request,task,manager,stdout,final,time,timeout
TaskManagerGateway -> Future<BlobKey> requestTaskManagerStdout(final Time timeout)_;1487264183;Request the task manager stdout from the task manager.__@param timeout for the request_@return Future blob key under which the task manager stdout file has been stored;Future<BlobKey> requestTaskManagerStdout(final Time timeout)_;request,the,task,manager,stdout,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,stdout,file,has,been,stored;future,blob,key,request,task,manager,stdout,final,time,timeout
TaskManagerGateway -> void notifyCheckpointComplete( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp)_;1477213607;Notify the given task about a completed checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the completed checkpoint_@param timestamp of the completed checkpoint;void notifyCheckpointComplete(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp)_;notify,the,given,task,about,a,completed,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,completed,checkpoint,param,timestamp,of,the,completed,checkpoint;void,notify,checkpoint,complete,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp
TaskManagerGateway -> void notifyCheckpointComplete( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp)_;1487264183;Notify the given task about a completed checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the completed checkpoint_@param timestamp of the completed checkpoint;void notifyCheckpointComplete(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp)_;notify,the,given,task,about,a,completed,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,completed,checkpoint,param,timestamp,of,the,completed,checkpoint;void,notify,checkpoint,complete,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp
TaskManagerGateway -> void notifyCheckpointComplete( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp)_;1501580028;Notify the given task about a completed checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the completed checkpoint_@param timestamp of the completed checkpoint;void notifyCheckpointComplete(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp)_;notify,the,given,task,about,a,completed,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,completed,checkpoint,param,timestamp,of,the,completed,checkpoint;void,notify,checkpoint,complete,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp
TaskManagerGateway -> void notifyCheckpointComplete( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp)_;1505901925;Notify the given task about a completed checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the completed checkpoint_@param timestamp of the completed checkpoint;void notifyCheckpointComplete(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp)_;notify,the,given,task,about,a,completed,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,completed,checkpoint,param,timestamp,of,the,completed,checkpoint;void,notify,checkpoint,complete,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp
TaskManagerGateway -> void notifyCheckpointComplete( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp)_;1512136929;Notify the given task about a completed checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the completed checkpoint_@param timestamp of the completed checkpoint;void notifyCheckpointComplete(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp)_;notify,the,given,task,about,a,completed,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,completed,checkpoint,param,timestamp,of,the,completed,checkpoint;void,notify,checkpoint,complete,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp
TaskManagerGateway -> void notifyCheckpointComplete( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp)_;1550573580;Notify the given task about a completed checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the completed checkpoint_@param timestamp of the completed checkpoint;void notifyCheckpointComplete(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp)_;notify,the,given,task,about,a,completed,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,completed,checkpoint,param,timestamp,of,the,completed,checkpoint;void,notify,checkpoint,complete,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp
TaskManagerGateway -> Future<StackTraceSampleResponse> requestStackTraceSample( 		final ExecutionAttemptID executionAttemptID, 		final int sampleId, 		final int numSamples, 		final Time delayBetweenSamples, 		final int maxStackTraceDepth, 		final Time timeout)_;1477213607;Request a stack trace sample from the given task.__@param executionAttemptID identifying the task to sample_@param sampleId of the sample_@param numSamples to take from the given task_@param delayBetweenSamples to wait for_@param maxStackTraceDepth of the returned sample_@param timeout of the request_@return Future of stack trace sample response;Future<StackTraceSampleResponse> requestStackTraceSample(_		final ExecutionAttemptID executionAttemptID,_		final int sampleId,_		final int numSamples,_		final Time delayBetweenSamples,_		final int maxStackTraceDepth,_		final Time timeout)_;request,a,stack,trace,sample,from,the,given,task,param,execution,attempt,id,identifying,the,task,to,sample,param,sample,id,of,the,sample,param,num,samples,to,take,from,the,given,task,param,delay,between,samples,to,wait,for,param,max,stack,trace,depth,of,the,returned,sample,param,timeout,of,the,request,return,future,of,stack,trace,sample,response;future,stack,trace,sample,response,request,stack,trace,sample,final,execution,attempt,id,execution,attempt,id,final,int,sample,id,final,int,num,samples,final,time,delay,between,samples,final,int,max,stack,trace,depth,final,time,timeout
TaskManagerGateway -> Future<StackTraceSampleResponse> requestStackTraceSample( 		final ExecutionAttemptID executionAttemptID, 		final int sampleId, 		final int numSamples, 		final Time delayBetweenSamples, 		final int maxStackTraceDepth, 		final Time timeout)_;1487264183;Request a stack trace sample from the given task.__@param executionAttemptID identifying the task to sample_@param sampleId of the sample_@param numSamples to take from the given task_@param delayBetweenSamples to wait for_@param maxStackTraceDepth of the returned sample_@param timeout of the request_@return Future of stack trace sample response;Future<StackTraceSampleResponse> requestStackTraceSample(_		final ExecutionAttemptID executionAttemptID,_		final int sampleId,_		final int numSamples,_		final Time delayBetweenSamples,_		final int maxStackTraceDepth,_		final Time timeout)_;request,a,stack,trace,sample,from,the,given,task,param,execution,attempt,id,identifying,the,task,to,sample,param,sample,id,of,the,sample,param,num,samples,to,take,from,the,given,task,param,delay,between,samples,to,wait,for,param,max,stack,trace,depth,of,the,returned,sample,param,timeout,of,the,request,return,future,of,stack,trace,sample,response;future,stack,trace,sample,response,request,stack,trace,sample,final,execution,attempt,id,execution,attempt,id,final,int,sample,id,final,int,num,samples,final,time,delay,between,samples,final,int,max,stack,trace,depth,final,time,timeout
TaskManagerGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		Time timeout)_;1477213607;Submit a task to the task manager.__@param tdd describing the task to submit_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		Time timeout)_;submit,a,task,to,the,task,manager,param,tdd,describing,the,task,to,submit,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,time,timeout
TaskManagerGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		Time timeout)_;1487264183;Submit a task to the task manager.__@param tdd describing the task to submit_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		Time timeout)_;submit,a,task,to,the,task,manager,param,tdd,describing,the,task,to,submit,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,time,timeout
TaskManagerGateway -> void triggerCheckpoint( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp, 		CheckpointOptions checkpointOptions)_;1487264183;Trigger for the given task a checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the checkpoint to trigger_@param timestamp of the checkpoint to trigger_@param checkpointOptions of the checkpoint to trigger;void triggerCheckpoint(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp,_		CheckpointOptions checkpointOptions)_;trigger,for,the,given,task,a,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,checkpoint,to,trigger,param,timestamp,of,the,checkpoint,to,trigger,param,checkpoint,options,of,the,checkpoint,to,trigger;void,trigger,checkpoint,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp,checkpoint,options,checkpoint,options
TaskManagerGateway -> void triggerCheckpoint( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp, 		CheckpointOptions checkpointOptions)_;1501580028;Trigger for the given task a checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the checkpoint to trigger_@param timestamp of the checkpoint to trigger_@param checkpointOptions of the checkpoint to trigger;void triggerCheckpoint(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp,_		CheckpointOptions checkpointOptions)_;trigger,for,the,given,task,a,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,checkpoint,to,trigger,param,timestamp,of,the,checkpoint,to,trigger,param,checkpoint,options,of,the,checkpoint,to,trigger;void,trigger,checkpoint,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp,checkpoint,options,checkpoint,options
TaskManagerGateway -> void triggerCheckpoint( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp, 		CheckpointOptions checkpointOptions)_;1505901925;Trigger for the given task a checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the checkpoint to trigger_@param timestamp of the checkpoint to trigger_@param checkpointOptions of the checkpoint to trigger;void triggerCheckpoint(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp,_		CheckpointOptions checkpointOptions)_;trigger,for,the,given,task,a,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,checkpoint,to,trigger,param,timestamp,of,the,checkpoint,to,trigger,param,checkpoint,options,of,the,checkpoint,to,trigger;void,trigger,checkpoint,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp,checkpoint,options,checkpoint,options
TaskManagerGateway -> void triggerCheckpoint( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp, 		CheckpointOptions checkpointOptions)_;1512136929;Trigger for the given task a checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the checkpoint to trigger_@param timestamp of the checkpoint to trigger_@param checkpointOptions of the checkpoint to trigger;void triggerCheckpoint(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp,_		CheckpointOptions checkpointOptions)_;trigger,for,the,given,task,a,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,checkpoint,to,trigger,param,timestamp,of,the,checkpoint,to,trigger,param,checkpoint,options,of,the,checkpoint,to,trigger;void,trigger,checkpoint,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp,checkpoint,options,checkpoint,options
TaskManagerGateway -> void triggerCheckpoint( 		ExecutionAttemptID executionAttemptID, 		JobID jobId, 		long checkpointId, 		long timestamp, 		CheckpointOptions checkpointOptions)_;1550573580;Trigger for the given task a checkpoint.__@param executionAttemptID identifying the task_@param jobId identifying the job to which the task belongs_@param checkpointId of the checkpoint to trigger_@param timestamp of the checkpoint to trigger_@param checkpointOptions of the checkpoint to trigger;void triggerCheckpoint(_		ExecutionAttemptID executionAttemptID,_		JobID jobId,_		long checkpointId,_		long timestamp,_		CheckpointOptions checkpointOptions)_;trigger,for,the,given,task,a,checkpoint,param,execution,attempt,id,identifying,the,task,param,job,id,identifying,the,job,to,which,the,task,belongs,param,checkpoint,id,of,the,checkpoint,to,trigger,param,timestamp,of,the,checkpoint,to,trigger,param,checkpoint,options,of,the,checkpoint,to,trigger;void,trigger,checkpoint,execution,attempt,id,execution,attempt,id,job,id,job,id,long,checkpoint,id,long,timestamp,checkpoint,options,checkpoint,options
TaskManagerGateway -> CompletableFuture<StackTraceSampleResponse> requestStackTraceSample( 		final ExecutionAttemptID executionAttemptID, 		final int sampleId, 		final int numSamples, 		final Time delayBetweenSamples, 		final int maxStackTraceDepth, 		final Time timeout)_;1501580028;Request a stack trace sample from the given task.__@param executionAttemptID identifying the task to sample_@param sampleId of the sample_@param numSamples to take from the given task_@param delayBetweenSamples to wait for_@param maxStackTraceDepth of the returned sample_@param timeout of the request_@return Future of stack trace sample response;CompletableFuture<StackTraceSampleResponse> requestStackTraceSample(_		final ExecutionAttemptID executionAttemptID,_		final int sampleId,_		final int numSamples,_		final Time delayBetweenSamples,_		final int maxStackTraceDepth,_		final Time timeout)_;request,a,stack,trace,sample,from,the,given,task,param,execution,attempt,id,identifying,the,task,to,sample,param,sample,id,of,the,sample,param,num,samples,to,take,from,the,given,task,param,delay,between,samples,to,wait,for,param,max,stack,trace,depth,of,the,returned,sample,param,timeout,of,the,request,return,future,of,stack,trace,sample,response;completable,future,stack,trace,sample,response,request,stack,trace,sample,final,execution,attempt,id,execution,attempt,id,final,int,sample,id,final,int,num,samples,final,time,delay,between,samples,final,int,max,stack,trace,depth,final,time,timeout
TaskManagerGateway -> CompletableFuture<StackTraceSampleResponse> requestStackTraceSample( 		final ExecutionAttemptID executionAttemptID, 		final int sampleId, 		final int numSamples, 		final Time delayBetweenSamples, 		final int maxStackTraceDepth, 		final Time timeout)_;1505901925;Request a stack trace sample from the given task.__@param executionAttemptID identifying the task to sample_@param sampleId of the sample_@param numSamples to take from the given task_@param delayBetweenSamples to wait for_@param maxStackTraceDepth of the returned sample_@param timeout of the request_@return Future of stack trace sample response;CompletableFuture<StackTraceSampleResponse> requestStackTraceSample(_		final ExecutionAttemptID executionAttemptID,_		final int sampleId,_		final int numSamples,_		final Time delayBetweenSamples,_		final int maxStackTraceDepth,_		final Time timeout)_;request,a,stack,trace,sample,from,the,given,task,param,execution,attempt,id,identifying,the,task,to,sample,param,sample,id,of,the,sample,param,num,samples,to,take,from,the,given,task,param,delay,between,samples,to,wait,for,param,max,stack,trace,depth,of,the,returned,sample,param,timeout,of,the,request,return,future,of,stack,trace,sample,response;completable,future,stack,trace,sample,response,request,stack,trace,sample,final,execution,attempt,id,execution,attempt,id,final,int,sample,id,final,int,num,samples,final,time,delay,between,samples,final,int,max,stack,trace,depth,final,time,timeout
TaskManagerGateway -> CompletableFuture<StackTraceSampleResponse> requestStackTraceSample( 		final ExecutionAttemptID executionAttemptID, 		final int sampleId, 		final int numSamples, 		final Time delayBetweenSamples, 		final int maxStackTraceDepth, 		final Time timeout)_;1512136929;Request a stack trace sample from the given task.__@param executionAttemptID identifying the task to sample_@param sampleId of the sample_@param numSamples to take from the given task_@param delayBetweenSamples to wait for_@param maxStackTraceDepth of the returned sample_@param timeout of the request_@return Future of stack trace sample response;CompletableFuture<StackTraceSampleResponse> requestStackTraceSample(_		final ExecutionAttemptID executionAttemptID,_		final int sampleId,_		final int numSamples,_		final Time delayBetweenSamples,_		final int maxStackTraceDepth,_		final Time timeout)_;request,a,stack,trace,sample,from,the,given,task,param,execution,attempt,id,identifying,the,task,to,sample,param,sample,id,of,the,sample,param,num,samples,to,take,from,the,given,task,param,delay,between,samples,to,wait,for,param,max,stack,trace,depth,of,the,returned,sample,param,timeout,of,the,request,return,future,of,stack,trace,sample,response;completable,future,stack,trace,sample,response,request,stack,trace,sample,final,execution,attempt,id,execution,attempt,id,final,int,sample,id,final,int,num,samples,final,time,delay,between,samples,final,int,max,stack,trace,depth,final,time,timeout
TaskManagerGateway -> CompletableFuture<StackTraceSampleResponse> requestStackTraceSample( 		final ExecutionAttemptID executionAttemptID, 		final int sampleId, 		final int numSamples, 		final Time delayBetweenSamples, 		final int maxStackTraceDepth, 		final Time timeout)_;1550573580;Request a stack trace sample from the given task.__@param executionAttemptID identifying the task to sample_@param sampleId of the sample_@param numSamples to take from the given task_@param delayBetweenSamples to wait for_@param maxStackTraceDepth of the returned sample_@param timeout of the request_@return Future of stack trace sample response;CompletableFuture<StackTraceSampleResponse> requestStackTraceSample(_		final ExecutionAttemptID executionAttemptID,_		final int sampleId,_		final int numSamples,_		final Time delayBetweenSamples,_		final int maxStackTraceDepth,_		final Time timeout)_;request,a,stack,trace,sample,from,the,given,task,param,execution,attempt,id,identifying,the,task,to,sample,param,sample,id,of,the,sample,param,num,samples,to,take,from,the,given,task,param,delay,between,samples,to,wait,for,param,max,stack,trace,depth,of,the,returned,sample,param,timeout,of,the,request,return,future,of,stack,trace,sample,response;completable,future,stack,trace,sample,response,request,stack,trace,sample,final,execution,attempt,id,execution,attempt,id,final,int,sample,id,final,int,num,samples,final,time,delay,between,samples,final,int,max,stack,trace,depth,final,time,timeout
TaskManagerGateway -> CompletableFuture<TransientBlobKey> requestTaskManagerStdout(final Time timeout)_;1505901925;Request the task manager stdout from the task manager.__@param timeout for the request_@return Future blob key under which the task manager stdout file has been stored;CompletableFuture<TransientBlobKey> requestTaskManagerStdout(final Time timeout)_;request,the,task,manager,stdout,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,stdout,file,has,been,stored;completable,future,transient,blob,key,request,task,manager,stdout,final,time,timeout
TaskManagerGateway -> CompletableFuture<TransientBlobKey> requestTaskManagerStdout(final Time timeout)_;1512136929;Request the task manager stdout from the task manager.__@param timeout for the request_@return Future blob key under which the task manager stdout file has been stored;CompletableFuture<TransientBlobKey> requestTaskManagerStdout(final Time timeout)_;request,the,task,manager,stdout,from,the,task,manager,param,timeout,for,the,request,return,future,blob,key,under,which,the,task,manager,stdout,file,has,been,stored;completable,future,transient,blob,key,request,task,manager,stdout,final,time,timeout
