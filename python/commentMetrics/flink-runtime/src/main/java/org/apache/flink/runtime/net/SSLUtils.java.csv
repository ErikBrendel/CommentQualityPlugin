# id;timestamp;commentText;codeText;commentWords;codeWords
SSLUtils -> public static SSLEngineFactory createRestClientSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a {@link SSLEngineFactory} to be used by the REST Clients.__@param config The application configuration.;public static SSLEngineFactory createRestClientSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createRestClientSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for REST endpoints.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				true)__	};creates,a,link,sslengine,factory,to,be,used,by,the,rest,clients,param,config,the,application,configuration;public,static,sslengine,factory,create,rest,client,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,rest,client,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,rest,endpoints,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,true
SSLUtils -> public static SSLEngineFactory createRestClientSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a {@link SSLEngineFactory} to be used by the REST Clients.__@param config The application configuration.;public static SSLEngineFactory createRestClientSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createRestClientSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for REST endpoints.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				true,_				false)__	};creates,a,link,sslengine,factory,to,be,used,by,the,rest,clients,param,config,the,application,configuration;public,static,sslengine,factory,create,rest,client,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,rest,client,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,rest,endpoints,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,true,false
SSLUtils -> public static SSLEngineFactory createRestClientSSLEngineFactory(final Configuration config) throws Exception;1538485302;Creates a {@link SSLEngineFactory} to be used by the REST Clients.__@param config The application configuration.;public static SSLEngineFactory createRestClientSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createRestClientSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for REST endpoints.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				true,_				isRestSSLAuthenticationEnabled(config))__	};creates,a,link,sslengine,factory,to,be,used,by,the,rest,clients,param,config,the,application,configuration;public,static,sslengine,factory,create,rest,client,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,rest,client,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,rest,endpoints,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,true,is,rest,sslauthentication,enabled,config
SSLUtils -> public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1476696544;Creates the SSL Context for the server if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE,_				null)___			String keystorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD,_				null)___			String certPassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEY_PASSWORD,_				null)___			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			FileInputStream keyStoreFile = null__			try {_				keyStoreFile = new FileInputStream(new File(keystoreFilePath))__				ks.load(keyStoreFile, keystorePassword.toCharArray())__			} finally {_				if (keyStoreFile != null) {_					keyStoreFile.close()__				}_			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,config,constants,null,string,keystore,password,ssl,config,get,string,config,constants,null,string,cert,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,key,store,ks,key,store,get,instance,key,store,get,default,type,file,input,stream,key,store,file,null,try,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,finally,if,key,store,file,null,key,store,file,close,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1489748538;Creates the SSL Context for the server if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE,_				null)___			String keystorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD,_				null)___			String certPassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEY_PASSWORD,_				null)___			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			FileInputStream keyStoreFile = null__			try {_				keyStoreFile = new FileInputStream(new File(keystoreFilePath))__				ks.load(keyStoreFile, keystorePassword.toCharArray())__			} finally {_				if (keyStoreFile != null) {_					keyStoreFile.close()__				}_			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,config,constants,null,string,keystore,password,ssl,config,get,string,config,constants,null,string,cert,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,key,store,ks,key,store,get,instance,key,store,get,default,type,file,input,stream,key,store,file,null,try,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,finally,if,key,store,file,null,key,store,file,close,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1491456886;Creates the SSL Context for the server if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE,_				null)___			String keystorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD,_				null)___			String certPassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEY_PASSWORD,_				null)___			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			Preconditions.checkNotNull(keystoreFilePath, ConfigConstants.SECURITY_SSL_KEYSTORE + " was not configured.")__			Preconditions.checkNotNull(keystorePassword, ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD + " was not configured.")__			Preconditions.checkNotNull(certPassword, ConfigConstants.SECURITY_SSL_KEY_PASSWORD + " was not configured.")___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			FileInputStream keyStoreFile = null__			try {_				keyStoreFile = new FileInputStream(new File(keystoreFilePath))__				ks.load(keyStoreFile, keystorePassword.toCharArray())__			} finally {_				if (keyStoreFile != null) {_					keyStoreFile.close()__				}_			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,config,constants,null,string,keystore,password,ssl,config,get,string,config,constants,null,string,cert,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,preconditions,check,not,null,keystore,file,path,config,constants,was,not,configured,preconditions,check,not,null,keystore,password,config,constants,was,not,configured,preconditions,check,not,null,cert,password,config,constants,was,not,configured,key,store,ks,key,store,get,instance,key,store,get,default,type,file,input,stream,key,store,file,null,try,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,finally,if,key,store,file,null,key,store,file,close,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1493758186;Creates the SSL Context for the server if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE,_				null)___			String keystorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD,_				null)___			String certPassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_KEY_PASSWORD,_				null)___			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			Preconditions.checkNotNull(keystoreFilePath, ConfigConstants.SECURITY_SSL_KEYSTORE + " was not configured.")__			Preconditions.checkNotNull(keystorePassword, ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD + " was not configured.")__			Preconditions.checkNotNull(certPassword, ConfigConstants.SECURITY_SSL_KEY_PASSWORD + " was not configured.")___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			FileInputStream keyStoreFile = null__			try {_				keyStoreFile = new FileInputStream(new File(keystoreFilePath))__				ks.load(keyStoreFile, keystorePassword.toCharArray())__			} finally {_				if (keyStoreFile != null) {_					keyStoreFile.close()__				}_			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,config,constants,null,string,keystore,password,ssl,config,get,string,config,constants,null,string,cert,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,preconditions,check,not,null,keystore,file,path,config,constants,was,not,configured,preconditions,check,not,null,keystore,password,config,constants,was,not,configured,preconditions,check,not,null,cert,password,config,constants,was,not,configured,key,store,ks,key,store,get,instance,key,store,get,default,type,file,input,stream,key,store,file,null,try,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,finally,if,key,store,file,null,key,store,file,close,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1498894422;Creates the SSL Context for the server if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(SecurityOptions.SSL_KEYSTORE)___			String keystorePassword = sslConfig.getString(SecurityOptions.SSL_KEYSTORE_PASSWORD)___			String certPassword = sslConfig.getString(SecurityOptions.SSL_KEY_PASSWORD)___			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(keystoreFilePath, SecurityOptions.SSL_KEYSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(keystorePassword, SecurityOptions.SSL_KEYSTORE_PASSWORD.key() + " was not configured.")__			Preconditions.checkNotNull(certPassword, SecurityOptions.SSL_KEY_PASSWORD.key() + " was not configured.")___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			FileInputStream keyStoreFile = null__			try {_				keyStoreFile = new FileInputStream(new File(keystoreFilePath))__				ks.load(keyStoreFile, keystorePassword.toCharArray())__			} finally {_				if (keyStoreFile != null) {_					keyStoreFile.close()__				}_			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,security,options,string,keystore,password,ssl,config,get,string,security,options,string,cert,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,keystore,file,path,security,options,key,was,not,configured,preconditions,check,not,null,keystore,password,security,options,key,was,not,configured,preconditions,check,not,null,cert,password,security,options,key,was,not,configured,key,store,ks,key,store,get,instance,key,store,get,default,type,file,input,stream,key,store,file,null,try,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,finally,if,key,store,file,null,key,store,file,close,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1499164413;Creates the SSL Context for the server if SSL is configured.__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(SecurityOptions.SSL_KEYSTORE)___			String keystorePassword = sslConfig.getString(SecurityOptions.SSL_KEYSTORE_PASSWORD)___			String certPassword = sslConfig.getString(SecurityOptions.SSL_KEY_PASSWORD)___			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(keystoreFilePath, SecurityOptions.SSL_KEYSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(keystorePassword, SecurityOptions.SSL_KEYSTORE_PASSWORD.key() + " was not configured.")__			Preconditions.checkNotNull(certPassword, SecurityOptions.SSL_KEY_PASSWORD.key() + " was not configured.")___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			FileInputStream keyStoreFile = null__			try {_				keyStoreFile = new FileInputStream(new File(keystoreFilePath))__				ks.load(keyStoreFile, keystorePassword.toCharArray())__			} finally {_				if (keyStoreFile != null) {_					keyStoreFile.close()__				}_			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,security,options,string,keystore,password,ssl,config,get,string,security,options,string,cert,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,keystore,file,path,security,options,key,was,not,configured,preconditions,check,not,null,keystore,password,security,options,key,was,not,configured,preconditions,check,not,null,cert,password,security,options,key,was,not,configured,key,store,ks,key,store,get,instance,key,store,get,default,type,file,input,stream,key,store,file,null,try,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,finally,if,key,store,file,null,key,store,file,close,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception;1531721446;Creates a factory for SSL Client Sockets from the given configuration.;public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createSSLServerContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		return sslContext.getSocketFactory()__	};creates,a,factory,for,ssl,client,sockets,from,the,given,configuration;public,static,socket,factory,create,sslclient,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,sslserver,context,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,return,ssl,context,get,socket,factory
SSLUtils -> public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception;1531721446;Creates a factory for SSL Client Sockets from the given configuration._SSL Client Sockets are always part of internal communication.;public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		return sslContext.getSocketFactory()__	};creates,a,factory,for,ssl,client,sockets,from,the,given,configuration,ssl,client,sockets,are,always,part,of,internal,communication;public,static,socket,factory,create,sslclient,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,return,ssl,context,get,socket,factory
SSLUtils -> public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception;1531721446;Creates a factory for SSL Client Sockets from the given configuration._SSL Client Sockets are always part of internal communication.;public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		return sslContext.getSocketFactory()__	};creates,a,factory,for,ssl,client,sockets,from,the,given,configuration,ssl,client,sockets,are,always,part,of,internal,communication;public,static,socket,factory,create,sslclient,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,return,ssl,context,get,socket,factory
SSLUtils -> public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception;1538485302;Creates a factory for SSL Client Sockets from the given configuration._SSL Client Sockets are always part of internal communication.;public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		return sslContext.getSocketFactory()__	};creates,a,factory,for,ssl,client,sockets,from,the,given,configuration,ssl,client,sockets,are,always,part,of,internal,communication;public,static,socket,factory,create,sslclient,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,return,ssl,context,get,socket,factory
SSLUtils -> public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception;1540215410;Creates a factory for SSL Client Sockets from the given configuration._SSL Client Sockets are always part of internal communication.;public static SocketFactory createSSLClientSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		return sslContext.getSocketFactory()__	};creates,a,factory,for,ssl,client,sockets,from,the,given,configuration,ssl,client,sockets,are,always,part,of,internal,communication;public,static,socket,factory,create,sslclient,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,return,ssl,context,get,socket,factory
SSLUtils -> @Deprecated 	public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config);1525904579;Sets SSL version and cipher suites for SSLEngine.__@param engine SSLEngine to be handled_@param config The application configuration_@deprecated Use {@link #createClientSSLEngineFactory(Configuration)} or_{@link #createServerSSLEngineFactory(Configuration)}.;@Deprecated_	public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config) {_		engine.setEnabledProtocols(getEnabledProtocols(config))__		engine.setEnabledCipherSuites(getEnabledCipherSuites(config))__	};sets,ssl,version,and,cipher,suites,for,sslengine,param,engine,sslengine,to,be,handled,param,config,the,application,configuration,deprecated,use,link,create,client,sslengine,factory,configuration,or,link,create,server,sslengine,factory,configuration;deprecated,public,static,void,set,sslver,and,cipher,suites,sslengine,engine,configuration,config,engine,set,enabled,protocols,get,enabled,protocols,config,engine,set,enabled,cipher,suites,get,enabled,cipher,suites,config
SSLUtils -> @Deprecated 	public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config);1531721446;Sets SSL version and cipher suites for SSLEngine.__@param engine SSLEngine to be handled_@param config The application configuration_@deprecated Use {@link #createClientSSLEngineFactory(Configuration)} or_{@link #createServerSSLEngineFactory(Configuration)}.;@Deprecated_	public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config) {_		engine.setEnabledProtocols(getEnabledProtocols(config))__		engine.setEnabledCipherSuites(getEnabledCipherSuites(config))__	};sets,ssl,version,and,cipher,suites,for,sslengine,param,engine,sslengine,to,be,handled,param,config,the,application,configuration,deprecated,use,link,create,client,sslengine,factory,configuration,or,link,create,server,sslengine,factory,configuration;deprecated,public,static,void,set,sslver,and,cipher,suites,sslengine,engine,configuration,config,engine,set,enabled,protocols,get,enabled,protocols,config,engine,set,enabled,cipher,suites,get,enabled,cipher,suites,config
SSLUtils -> public static boolean isInternalSSLEnabled(Configuration sslConfig);1531721446;Checks whether SSL for internal communication (rpc, data transport, blob server) is enabled.;public static boolean isInternalSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,internal,communication,rpc,data,transport,blob,server,is,enabled;public,static,boolean,is,internal,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> public static boolean isInternalSSLEnabled(Configuration sslConfig);1531721446;Checks whether SSL for internal communication (rpc, data transport, blob server) is enabled.;public static boolean isInternalSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,internal,communication,rpc,data,transport,blob,server,is,enabled;public,static,boolean,is,internal,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> public static boolean isInternalSSLEnabled(Configuration sslConfig);1538485302;Checks whether SSL for internal communication (rpc, data transport, blob server) is enabled.;public static boolean isInternalSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,internal,communication,rpc,data,transport,blob,server,is,enabled;public,static,boolean,is,internal,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> public static boolean isInternalSSLEnabled(Configuration sslConfig);1540215410;Checks whether SSL for internal communication (rpc, data transport, blob server) is enabled.;public static boolean isInternalSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,internal,communication,rpc,data,transport,blob,server,is,enabled;public,static,boolean,is,internal,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> @Nullable 	public static SSLContext createInternalSSLContext(Configuration config) throws Exception;1531721446;Creates the SSL Context for internal SSL, if internal SSL is configured._For internal SSL, the client and server side configuration are identical, because_of mutual authentication.;@Nullable_	public static SSLContext createInternalSSLContext(Configuration config) throws Exception {_		checkNotNull(config, "config")___		if (!isInternalSSLEnabled(config)) {_			return null__		}_		String keystoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEYSTORE, SecurityOptions.SSL_KEYSTORE)___		String keystorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEYSTORE_PASSWORD, SecurityOptions.SSL_KEYSTORE_PASSWORD)___		String certPassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEY_PASSWORD, SecurityOptions.SSL_KEY_PASSWORD)___		String trustStoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_TRUSTSTORE, SecurityOptions.SSL_TRUSTSTORE)___		String trustStorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_TRUSTSTORE_PASSWORD, SecurityOptions.SSL_TRUSTSTORE_PASSWORD)___		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)___		KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream keyStoreFile = Files.newInputStream(new File(keystoreFilePath).toPath())) {_			keyStore.load(keyStoreFile, keystorePassword.toCharArray())__		}__		KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream trustStoreFile = Files.newInputStream(new File(trustStoreFilePath).toPath())) {_			trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__		}__		KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())__		kmf.init(keyStore, certPassword.toCharArray())___		TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())__		tmf.init(trustStore)___		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null)___		return sslContext__	};creates,the,ssl,context,for,internal,ssl,if,internal,ssl,is,configured,for,internal,ssl,the,client,and,server,side,configuration,are,identical,because,of,mutual,authentication;nullable,public,static,sslcontext,create,internal,sslcontext,configuration,config,throws,exception,check,not,null,config,config,if,is,internal,sslenabled,config,return,null,string,keystore,file,path,get,and,check,option,config,security,options,security,options,string,keystore,password,get,and,check,option,config,security,options,security,options,string,cert,password,get,and,check,option,config,security,options,security,options,string,trust,store,file,path,get,and,check,option,config,security,options,security,options,string,trust,store,password,get,and,check,option,config,security,options,security,options,string,ssl,protocol,version,config,get,string,security,options,key,store,key,store,key,store,get,instance,key,store,get,default,type,try,input,stream,key,store,file,files,new,input,stream,new,file,keystore,file,path,to,path,key,store,load,key,store,file,keystore,password,to,char,array,key,store,trust,store,key,store,get,instance,key,store,get,default,type,try,input,stream,trust,store,file,files,new,input,stream,new,file,trust,store,file,path,to,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,key,store,cert,password,to,char,array,trust,manager,factory,tmf,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,tmf,init,trust,store,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,kmf,get,key,managers,tmf,get,trust,managers,null,return,ssl,context
SSLUtils -> @Nullable 	public static SSLContext createInternalSSLContext(Configuration config) throws Exception;1531721446;Creates the SSL Context for internal SSL, if internal SSL is configured._For internal SSL, the client and server side configuration are identical, because_of mutual authentication.;@Nullable_	public static SSLContext createInternalSSLContext(Configuration config) throws Exception {_		checkNotNull(config, "config")___		if (!isInternalSSLEnabled(config)) {_			return null__		}_		String keystoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEYSTORE, SecurityOptions.SSL_KEYSTORE)___		String keystorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEYSTORE_PASSWORD, SecurityOptions.SSL_KEYSTORE_PASSWORD)___		String certPassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEY_PASSWORD, SecurityOptions.SSL_KEY_PASSWORD)___		String trustStoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_TRUSTSTORE, SecurityOptions.SSL_TRUSTSTORE)___		String trustStorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_TRUSTSTORE_PASSWORD, SecurityOptions.SSL_TRUSTSTORE_PASSWORD)___		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)___		KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream keyStoreFile = Files.newInputStream(new File(keystoreFilePath).toPath())) {_			keyStore.load(keyStoreFile, keystorePassword.toCharArray())__		}__		KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream trustStoreFile = Files.newInputStream(new File(trustStoreFilePath).toPath())) {_			trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__		}__		KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())__		kmf.init(keyStore, certPassword.toCharArray())___		TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())__		tmf.init(trustStore)___		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null)___		return sslContext__	};creates,the,ssl,context,for,internal,ssl,if,internal,ssl,is,configured,for,internal,ssl,the,client,and,server,side,configuration,are,identical,because,of,mutual,authentication;nullable,public,static,sslcontext,create,internal,sslcontext,configuration,config,throws,exception,check,not,null,config,config,if,is,internal,sslenabled,config,return,null,string,keystore,file,path,get,and,check,option,config,security,options,security,options,string,keystore,password,get,and,check,option,config,security,options,security,options,string,cert,password,get,and,check,option,config,security,options,security,options,string,trust,store,file,path,get,and,check,option,config,security,options,security,options,string,trust,store,password,get,and,check,option,config,security,options,security,options,string,ssl,protocol,version,config,get,string,security,options,key,store,key,store,key,store,get,instance,key,store,get,default,type,try,input,stream,key,store,file,files,new,input,stream,new,file,keystore,file,path,to,path,key,store,load,key,store,file,keystore,password,to,char,array,key,store,trust,store,key,store,get,instance,key,store,get,default,type,try,input,stream,trust,store,file,files,new,input,stream,new,file,trust,store,file,path,to,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,key,store,cert,password,to,char,array,trust,manager,factory,tmf,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,tmf,init,trust,store,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,kmf,get,key,managers,tmf,get,trust,managers,null,return,ssl,context
SSLUtils -> @Nullable 	public static SSLContext createInternalSSLContext(Configuration config) throws Exception;1538485302;Creates the SSL Context for internal SSL, if internal SSL is configured._For internal SSL, the client and server side configuration are identical, because_of mutual authentication.;@Nullable_	public static SSLContext createInternalSSLContext(Configuration config) throws Exception {_		checkNotNull(config, "config")___		if (!isInternalSSLEnabled(config)) {_			return null__		}_		String keystoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEYSTORE, SecurityOptions.SSL_KEYSTORE)___		String keystorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEYSTORE_PASSWORD, SecurityOptions.SSL_KEYSTORE_PASSWORD)___		String certPassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_KEY_PASSWORD, SecurityOptions.SSL_KEY_PASSWORD)___		String trustStoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_TRUSTSTORE, SecurityOptions.SSL_TRUSTSTORE)___		String trustStorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_INTERNAL_TRUSTSTORE_PASSWORD, SecurityOptions.SSL_TRUSTSTORE_PASSWORD)___		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)___		KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream keyStoreFile = Files.newInputStream(new File(keystoreFilePath).toPath())) {_			keyStore.load(keyStoreFile, keystorePassword.toCharArray())__		}__		KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream trustStoreFile = Files.newInputStream(new File(trustStoreFilePath).toPath())) {_			trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__		}__		KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())__		kmf.init(keyStore, certPassword.toCharArray())___		TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())__		tmf.init(trustStore)___		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null)___		return sslContext__	};creates,the,ssl,context,for,internal,ssl,if,internal,ssl,is,configured,for,internal,ssl,the,client,and,server,side,configuration,are,identical,because,of,mutual,authentication;nullable,public,static,sslcontext,create,internal,sslcontext,configuration,config,throws,exception,check,not,null,config,config,if,is,internal,sslenabled,config,return,null,string,keystore,file,path,get,and,check,option,config,security,options,security,options,string,keystore,password,get,and,check,option,config,security,options,security,options,string,cert,password,get,and,check,option,config,security,options,security,options,string,trust,store,file,path,get,and,check,option,config,security,options,security,options,string,trust,store,password,get,and,check,option,config,security,options,security,options,string,ssl,protocol,version,config,get,string,security,options,key,store,key,store,key,store,get,instance,key,store,get,default,type,try,input,stream,key,store,file,files,new,input,stream,new,file,keystore,file,path,to,path,key,store,load,key,store,file,keystore,password,to,char,array,key,store,trust,store,key,store,get,instance,key,store,get,default,type,try,input,stream,trust,store,file,files,new,input,stream,new,file,trust,store,file,path,to,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,key,store,cert,password,to,char,array,trust,manager,factory,tmf,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,tmf,init,trust,store,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,kmf,get,key,managers,tmf,get,trust,managers,null,return,ssl,context
SSLUtils -> public static SSLEngineFactory createServerSSLEngineFactory(final Configuration config) throws Exception;1525904579;Creates a {@link SSLEngineFactory} to be used by the Server.__@param config The application configuration.;public static SSLEngineFactory createServerSSLEngineFactory(final Configuration config) throws Exception {_		return createSSLEngineFactory(config, false)__	};creates,a,link,sslengine,factory,to,be,used,by,the,server,param,config,the,application,configuration;public,static,sslengine,factory,create,server,sslengine,factory,final,configuration,config,throws,exception,return,create,sslengine,factory,config,false
SSLUtils -> public static SSLEngineFactory createServerSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a {@link SSLEngineFactory} to be used by the Server.__@param config The application configuration.;public static SSLEngineFactory createServerSSLEngineFactory(final Configuration config) throws Exception {_		return createSSLEngineFactory(config, false)__	};creates,a,link,sslengine,factory,to,be,used,by,the,server,param,config,the,application,configuration;public,static,sslengine,factory,create,server,sslengine,factory,final,configuration,config,throws,exception,return,create,sslengine,factory,config,false
SSLUtils -> public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1476696544;Creates the SSL Context for the client if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE,_				null)__			String trustStorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD,_				null)__			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,config,constants,null,string,trust,store,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1489748538;Creates the SSL Context for the client if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE,_				null)__			String trustStorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD,_				null)__			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,config,constants,null,string,trust,store,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1491456886;Creates the SSL Context for the client if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE,_				null)__			String trustStorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD,_				null)__			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			Preconditions.checkNotNull(trustStoreFilePath, ConfigConstants.SECURITY_SSL_TRUSTSTORE + " was not configured.")__			Preconditions.checkNotNull(trustStorePassword, ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD + " was not configured.")___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,config,constants,null,string,trust,store,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,preconditions,check,not,null,trust,store,file,path,config,constants,was,not,configured,preconditions,check,not,null,trust,store,password,config,constants,was,not,configured,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1493758186;Creates the SSL Context for the client if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE,_				null)__			String trustStorePassword = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD,_				null)__			String sslProtocolVersion = sslConfig.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL)___			Preconditions.checkNotNull(trustStoreFilePath, ConfigConstants.SECURITY_SSL_TRUSTSTORE + " was not configured.")__			Preconditions.checkNotNull(trustStorePassword, ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD + " was not configured.")___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,config,constants,null,string,trust,store,password,ssl,config,get,string,config,constants,null,string,ssl,protocol,version,ssl,config,get,string,config,constants,config,constants,preconditions,check,not,null,trust,store,file,path,config,constants,was,not,configured,preconditions,check,not,null,trust,store,password,config,constants,was,not,configured,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1498894422;Creates the SSL Context for the client if SSL is configured__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE)__			String trustStorePassword = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD)__			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(trustStoreFilePath, SecurityOptions.SSL_TRUSTSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(trustStorePassword, SecurityOptions.SSL_TRUSTSTORE_PASSWORD.key() + " was not configured.")___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,security,options,string,trust,store,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,trust,store,file,path,security,options,key,was,not,configured,preconditions,check,not,null,trust,store,password,security,options,key,was,not,configured,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1499164413;Creates the SSL Context for the client if SSL is configured.__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE)__			String trustStorePassword = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD)__			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(trustStoreFilePath, SecurityOptions.SSL_TRUSTSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(trustStorePassword, SecurityOptions.SSL_TRUSTSTORE_PASSWORD.key() + " was not configured.")___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,security,options,string,trust,store,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,trust,store,file,path,security,options,key,was,not,configured,preconditions,check,not,null,trust,store,password,security,options,key,was,not,configured,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> @Nullable 	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception;1531721446;Creates an SSL context for clients against the external REST endpoint.;@Nullable_	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception {_		checkNotNull(config, "config")___		if (!isRestSSLEnabled(config)) {_			return null__		}__		String trustStoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE, SecurityOptions.SSL_TRUSTSTORE)___		String trustStorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, SecurityOptions.SSL_TRUSTSTORE_PASSWORD)___		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)___		KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream trustStoreFile = Files.newInputStream(new File(trustStoreFilePath).toPath())) {_			trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__		}__		TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())__		tmf.init(trustStore)___		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(null, tmf.getTrustManagers(), null)___		return sslContext__	};creates,an,ssl,context,for,clients,against,the,external,rest,endpoint;nullable,public,static,sslcontext,create,rest,client,sslcontext,configuration,config,throws,exception,check,not,null,config,config,if,is,rest,sslenabled,config,return,null,string,trust,store,file,path,get,and,check,option,config,security,options,security,options,string,trust,store,password,get,and,check,option,config,security,options,security,options,string,ssl,protocol,version,config,get,string,security,options,key,store,trust,store,key,store,get,instance,key,store,get,default,type,try,input,stream,trust,store,file,files,new,input,stream,new,file,trust,store,file,path,to,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,trust,manager,factory,tmf,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,tmf,init,trust,store,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,null,tmf,get,trust,managers,null,return,ssl,context
SSLUtils -> @Nullable 	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception;1531721446;Creates an SSL context for clients against the external REST endpoint.;@Nullable_	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception {_		checkNotNull(config, "config")___		if (!isRestSSLEnabled(config)) {_			return null__		}__		String trustStoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE, SecurityOptions.SSL_TRUSTSTORE)___		String trustStorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, SecurityOptions.SSL_TRUSTSTORE_PASSWORD)___		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)___		KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream trustStoreFile = Files.newInputStream(new File(trustStoreFilePath).toPath())) {_			trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__		}__		TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())__		tmf.init(trustStore)___		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(null, tmf.getTrustManagers(), null)___		return sslContext__	};creates,an,ssl,context,for,clients,against,the,external,rest,endpoint;nullable,public,static,sslcontext,create,rest,client,sslcontext,configuration,config,throws,exception,check,not,null,config,config,if,is,rest,sslenabled,config,return,null,string,trust,store,file,path,get,and,check,option,config,security,options,security,options,string,trust,store,password,get,and,check,option,config,security,options,security,options,string,ssl,protocol,version,config,get,string,security,options,key,store,trust,store,key,store,get,instance,key,store,get,default,type,try,input,stream,trust,store,file,files,new,input,stream,new,file,trust,store,file,path,to,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,trust,manager,factory,tmf,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,tmf,init,trust,store,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,null,tmf,get,trust,managers,null,return,ssl,context
SSLUtils -> @Nullable 	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception;1538485302;Creates an SSL context for clients against the external REST endpoint.;@Nullable_	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception {_		final RestSSLContextConfigMode configMode__		if (isRestSSLAuthenticationEnabled(config)) {_			configMode = RestSSLContextConfigMode.MUTUAL__		} else {_			configMode = RestSSLContextConfigMode.CLIENT__		}__		return createRestSSLContext(config, configMode)__	};creates,an,ssl,context,for,clients,against,the,external,rest,endpoint;nullable,public,static,sslcontext,create,rest,client,sslcontext,configuration,config,throws,exception,final,rest,sslcontext,config,mode,config,mode,if,is,rest,sslauthentication,enabled,config,config,mode,rest,sslcontext,config,mode,mutual,else,config,mode,rest,sslcontext,config,mode,client,return,create,rest,sslcontext,config,config,mode
SSLUtils -> @Nullable 	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception;1540215410;Creates an SSL context for clients against the external REST endpoint.;@Nullable_	public static SSLContext createRestClientSSLContext(Configuration config) throws Exception {_		final RestSSLContextConfigMode configMode__		if (isRestSSLAuthenticationEnabled(config)) {_			configMode = RestSSLContextConfigMode.MUTUAL__		} else {_			configMode = RestSSLContextConfigMode.CLIENT__		}__		return createRestSSLContext(config, configMode)__	};creates,an,ssl,context,for,clients,against,the,external,rest,endpoint;nullable,public,static,sslcontext,create,rest,client,sslcontext,configuration,config,throws,exception,final,rest,sslcontext,config,mode,config,mode,if,is,rest,sslauthentication,enabled,config,config,mode,rest,sslcontext,config,mode,mutual,else,config,mode,rest,sslcontext,config,mode,client,return,create,rest,sslcontext,config,config,mode
SSLUtils -> public static SSLEngineFactory createInternalServerSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a SSLEngineFactory to be used by internal communication server endpoints.;public static SSLEngineFactory createInternalServerSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for internal communication.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				false)__	};creates,a,sslengine,factory,to,be,used,by,internal,communication,server,endpoints;public,static,sslengine,factory,create,internal,server,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,internal,communication,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,false
SSLUtils -> public static SSLEngineFactory createInternalServerSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a SSLEngineFactory to be used by internal communication server endpoints.;public static SSLEngineFactory createInternalServerSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for internal communication.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				false,_				true)__	};creates,a,sslengine,factory,to,be,used,by,internal,communication,server,endpoints;public,static,sslengine,factory,create,internal,server,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,internal,communication,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,false,true
SSLUtils -> public static SSLEngineFactory createInternalServerSSLEngineFactory(final Configuration config) throws Exception;1538485302;Creates a SSLEngineFactory to be used by internal communication server endpoints.;public static SSLEngineFactory createInternalServerSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for internal communication.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				false,_				true)__	};creates,a,sslengine,factory,to,be,used,by,internal,communication,server,endpoints;public,static,sslengine,factory,create,internal,server,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,internal,communication,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,false,true
SSLUtils -> public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config);1489748538;Sets SSl version and cipher suites for SSLServerSocket_@param socket_Socket to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config) {_		if (socket instanceof SSLServerSocket) {_			((SSLServerSocket) socket).setEnabledProtocols(config.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL).split(","))__			((SSLServerSocket) socket).setEnabledCipherSuites(config.getString(_				ConfigConstants.SECURITY_SSL_ALGORITHMS,_				ConfigConstants.DEFAULT_SECURITY_SSL_ALGORITHMS).split(","))__		} else {_			LOG.warn("Not a SSL socket, will skip setting tls version and cipher suites.")__		}_	};sets,ssl,version,and,cipher,suites,for,sslserver,socket,param,socket,socket,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,server,socket,socket,configuration,config,if,socket,instanceof,sslserver,socket,sslserver,socket,socket,set,enabled,protocols,config,get,string,config,constants,config,constants,split,sslserver,socket,socket,set,enabled,cipher,suites,config,get,string,config,constants,config,constants,split,else,log,warn,not,a,ssl,socket,will,skip,setting,tls,version,and,cipher,suites
SSLUtils -> public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config);1491456886;Sets SSl version and cipher suites for SSLServerSocket_@param socket_Socket to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config) {_		if (socket instanceof SSLServerSocket) {_			((SSLServerSocket) socket).setEnabledProtocols(config.getString(_				ConfigConstants.SECURITY_SSL_PROTOCOL,_				ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL).split(","))__			((SSLServerSocket) socket).setEnabledCipherSuites(config.getString(_				ConfigConstants.SECURITY_SSL_ALGORITHMS,_				ConfigConstants.DEFAULT_SECURITY_SSL_ALGORITHMS).split(","))__		} else {_			LOG.warn("Not a SSL socket, will skip setting tls version and cipher suites.")__		}_	};sets,ssl,version,and,cipher,suites,for,sslserver,socket,param,socket,socket,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,server,socket,socket,configuration,config,if,socket,instanceof,sslserver,socket,sslserver,socket,socket,set,enabled,protocols,config,get,string,config,constants,config,constants,split,sslserver,socket,socket,set,enabled,cipher,suites,config,get,string,config,constants,config,constants,split,else,log,warn,not,a,ssl,socket,will,skip,setting,tls,version,and,cipher,suites
SSLUtils -> public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config);1493758186;Sets SSl version and cipher suites for SSLServerSocket_@param socket_Socket to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config) {_		if (socket instanceof SSLServerSocket) {_			final String[] protocols = config.getString(_					ConfigConstants.SECURITY_SSL_PROTOCOL,_					ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL).split(",")___			final String[] cipherSuites = config.getString(_					ConfigConstants.SECURITY_SSL_ALGORITHMS,_					ConfigConstants.DEFAULT_SECURITY_SSL_ALGORITHMS).split(",")___			if (LOG.isDebugEnabled()) {_				LOG.debug("Configuring TLS version and cipher suites on SSL socket {} / {}",_						Arrays.toString(protocols), Arrays.toString(cipherSuites))__			}__			((SSLServerSocket) socket).setEnabledProtocols(protocols)__			((SSLServerSocket) socket).setEnabledCipherSuites(cipherSuites)__		}_	};sets,ssl,version,and,cipher,suites,for,sslserver,socket,param,socket,socket,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,server,socket,socket,configuration,config,if,socket,instanceof,sslserver,socket,final,string,protocols,config,get,string,config,constants,config,constants,split,final,string,cipher,suites,config,get,string,config,constants,config,constants,split,if,log,is,debug,enabled,log,debug,configuring,tls,version,and,cipher,suites,on,ssl,socket,arrays,to,string,protocols,arrays,to,string,cipher,suites,sslserver,socket,socket,set,enabled,protocols,protocols,sslserver,socket,socket,set,enabled,cipher,suites,cipher,suites
SSLUtils -> public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config);1498894422;Sets SSl version and cipher suites for SSLServerSocket_@param socket_Socket to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config) {_		if (socket instanceof SSLServerSocket) {_			final String[] protocols = config.getString(SecurityOptions.SSL_PROTOCOL).split(",")___			final String[] cipherSuites = config.getString(SecurityOptions.SSL_ALGORITHMS).split(",")___			if (LOG.isDebugEnabled()) {_				LOG.debug("Configuring TLS version and cipher suites on SSL socket {} / {}",_						Arrays.toString(protocols), Arrays.toString(cipherSuites))__			}__			((SSLServerSocket) socket).setEnabledProtocols(protocols)__			((SSLServerSocket) socket).setEnabledCipherSuites(cipherSuites)__		}_	};sets,ssl,version,and,cipher,suites,for,sslserver,socket,param,socket,socket,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,server,socket,socket,configuration,config,if,socket,instanceof,sslserver,socket,final,string,protocols,config,get,string,security,options,split,final,string,cipher,suites,config,get,string,security,options,split,if,log,is,debug,enabled,log,debug,configuring,tls,version,and,cipher,suites,on,ssl,socket,arrays,to,string,protocols,arrays,to,string,cipher,suites,sslserver,socket,socket,set,enabled,protocols,protocols,sslserver,socket,socket,set,enabled,cipher,suites,cipher,suites
SSLUtils -> public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config);1499164413;Sets SSl version and cipher suites for SSLServerSocket._@param socket_Socket to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config) {_		if (socket instanceof SSLServerSocket) {_			final String[] protocols = config.getString(SecurityOptions.SSL_PROTOCOL).split(",")___			final String[] cipherSuites = config.getString(SecurityOptions.SSL_ALGORITHMS).split(",")___			if (LOG.isDebugEnabled()) {_				LOG.debug("Configuring TLS version and cipher suites on SSL socket {} / {}",_						Arrays.toString(protocols), Arrays.toString(cipherSuites))__			}__			((SSLServerSocket) socket).setEnabledProtocols(protocols)__			((SSLServerSocket) socket).setEnabledCipherSuites(cipherSuites)__		}_	};sets,ssl,version,and,cipher,suites,for,sslserver,socket,param,socket,socket,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,server,socket,socket,configuration,config,if,socket,instanceof,sslserver,socket,final,string,protocols,config,get,string,security,options,split,final,string,cipher,suites,config,get,string,security,options,split,if,log,is,debug,enabled,log,debug,configuring,tls,version,and,cipher,suites,on,ssl,socket,arrays,to,string,protocols,arrays,to,string,cipher,suites,sslserver,socket,socket,set,enabled,protocols,protocols,sslserver,socket,socket,set,enabled,cipher,suites,cipher,suites
SSLUtils -> public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config);1525904579;Sets SSl version and cipher suites for SSLServerSocket._@param socket_Socket to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(ServerSocket socket, Configuration config) {_		if (socket instanceof SSLServerSocket) {_			final String[] protocols = config.getString(SecurityOptions.SSL_PROTOCOL).split(",")___			final String[] cipherSuites = config.getString(SecurityOptions.SSL_ALGORITHMS).split(",")___			if (LOG.isDebugEnabled()) {_				LOG.debug("Configuring TLS version and cipher suites on SSL socket {} / {}",_						Arrays.toString(protocols), Arrays.toString(cipherSuites))__			}__			((SSLServerSocket) socket).setEnabledProtocols(protocols)__			((SSLServerSocket) socket).setEnabledCipherSuites(cipherSuites)__		}_	};sets,ssl,version,and,cipher,suites,for,sslserver,socket,param,socket,socket,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,server,socket,socket,configuration,config,if,socket,instanceof,sslserver,socket,final,string,protocols,config,get,string,security,options,split,final,string,cipher,suites,config,get,string,security,options,split,if,log,is,debug,enabled,log,debug,configuring,tls,version,and,cipher,suites,on,ssl,socket,arrays,to,string,protocols,arrays,to,string,cipher,suites,sslserver,socket,socket,set,enabled,protocols,protocols,sslserver,socket,socket,set,enabled,cipher,suites,cipher,suites
SSLUtils -> public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config);1489748538;Sets SSL version and cipher suites for SSLEngine_@param engine_SSLEngine to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config) {_		engine.setEnabledProtocols(config.getString(_			ConfigConstants.SECURITY_SSL_PROTOCOL,_			ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL).split(","))__		engine.setEnabledCipherSuites(config.getString(_			ConfigConstants.SECURITY_SSL_ALGORITHMS,_			ConfigConstants.DEFAULT_SECURITY_SSL_ALGORITHMS).split(","))__	};sets,ssl,version,and,cipher,suites,for,sslengine,param,engine,sslengine,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,sslengine,engine,configuration,config,engine,set,enabled,protocols,config,get,string,config,constants,config,constants,split,engine,set,enabled,cipher,suites,config,get,string,config,constants,config,constants,split
SSLUtils -> public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config);1491456886;Sets SSL version and cipher suites for SSLEngine_@param engine_SSLEngine to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config) {_		engine.setEnabledProtocols(config.getString(_			ConfigConstants.SECURITY_SSL_PROTOCOL,_			ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL).split(","))__		engine.setEnabledCipherSuites(config.getString(_			ConfigConstants.SECURITY_SSL_ALGORITHMS,_			ConfigConstants.DEFAULT_SECURITY_SSL_ALGORITHMS).split(","))__	};sets,ssl,version,and,cipher,suites,for,sslengine,param,engine,sslengine,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,sslengine,engine,configuration,config,engine,set,enabled,protocols,config,get,string,config,constants,config,constants,split,engine,set,enabled,cipher,suites,config,get,string,config,constants,config,constants,split
SSLUtils -> public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config);1493758186;Sets SSL version and cipher suites for SSLEngine_@param engine_SSLEngine to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config) {_		engine.setEnabledProtocols(config.getString(_			ConfigConstants.SECURITY_SSL_PROTOCOL,_			ConfigConstants.DEFAULT_SECURITY_SSL_PROTOCOL).split(","))__		engine.setEnabledCipherSuites(config.getString(_			ConfigConstants.SECURITY_SSL_ALGORITHMS,_			ConfigConstants.DEFAULT_SECURITY_SSL_ALGORITHMS).split(","))__	};sets,ssl,version,and,cipher,suites,for,sslengine,param,engine,sslengine,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,sslengine,engine,configuration,config,engine,set,enabled,protocols,config,get,string,config,constants,config,constants,split,engine,set,enabled,cipher,suites,config,get,string,config,constants,config,constants,split
SSLUtils -> public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config);1498894422;Sets SSL version and cipher suites for SSLEngine_@param engine_SSLEngine to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config) {_		engine.setEnabledProtocols(config.getString(SecurityOptions.SSL_PROTOCOL).split(","))__		engine.setEnabledCipherSuites(config.getString(SecurityOptions.SSL_ALGORITHMS).split(","))__	};sets,ssl,version,and,cipher,suites,for,sslengine,param,engine,sslengine,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,sslengine,engine,configuration,config,engine,set,enabled,protocols,config,get,string,security,options,split,engine,set,enabled,cipher,suites,config,get,string,security,options,split
SSLUtils -> public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config);1499164413;Sets SSL version and cipher suites for SSLEngine._@param engine_SSLEngine to be handled_@param config_The application configuration;public static void setSSLVerAndCipherSuites(SSLEngine engine, Configuration config) {_		engine.setEnabledProtocols(config.getString(SecurityOptions.SSL_PROTOCOL).split(","))__		engine.setEnabledCipherSuites(config.getString(SecurityOptions.SSL_ALGORITHMS).split(","))__	};sets,ssl,version,and,cipher,suites,for,sslengine,param,engine,sslengine,to,be,handled,param,config,the,application,configuration;public,static,void,set,sslver,and,cipher,suites,sslengine,engine,configuration,config,engine,set,enabled,protocols,config,get,string,security,options,split,engine,set,enabled,cipher,suites,config,get,string,security,options,split
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1476696544;Sets SSL options to verify peer's hostname in the certificate__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(ConfigConstants.SECURITY_SSL_VERIFY_HOSTNAME,_			ConfigConstants.DEFAULT_SECURITY_SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,config,constants,config,constants,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1489748538;Sets SSL options to verify peer's hostname in the certificate__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(ConfigConstants.SECURITY_SSL_VERIFY_HOSTNAME,_			ConfigConstants.DEFAULT_SECURITY_SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,config,constants,config,constants,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1491456886;Sets SSL options to verify peer's hostname in the certificate__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(ConfigConstants.SECURITY_SSL_VERIFY_HOSTNAME,_			ConfigConstants.DEFAULT_SECURITY_SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,config,constants,config,constants,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1493758186;Sets SSL options to verify peer's hostname in the certificate__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(ConfigConstants.SECURITY_SSL_VERIFY_HOSTNAME,_			ConfigConstants.DEFAULT_SECURITY_SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,config,constants,config,constants,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1498894422;Sets SSL options to verify peer's hostname in the certificate__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(SecurityOptions.SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,security,options,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1499164413;Sets SSL options to verify peer's hostname in the certificate.__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(SecurityOptions.SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,security,options,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1525904579;Sets SSL options to verify peer's hostname in the certificate.__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(SecurityOptions.SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,security,options,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams);1531721446;Sets SSL options to verify peer's hostname in the certificate.__@param sslConfig_The application configuration_@param sslParams_The SSL parameters that need to be updated;public static void setSSLVerifyHostname(Configuration sslConfig, SSLParameters sslParams) {__		Preconditions.checkNotNull(sslConfig)__		Preconditions.checkNotNull(sslParams)___		boolean verifyHostname = sslConfig.getBoolean(SecurityOptions.SSL_VERIFY_HOSTNAME)__		if (verifyHostname) {_			sslParams.setEndpointIdentificationAlgorithm("HTTPS")__		}_	};sets,ssl,options,to,verify,peer,s,hostname,in,the,certificate,param,ssl,config,the,application,configuration,param,ssl,params,the,ssl,parameters,that,need,to,be,updated;public,static,void,set,sslverify,hostname,configuration,ssl,config,sslparameters,ssl,params,preconditions,check,not,null,ssl,config,preconditions,check,not,null,ssl,params,boolean,verify,hostname,ssl,config,get,boolean,security,options,if,verify,hostname,ssl,params,set,endpoint,identification,algorithm,https
SSLUtils -> public static SSLEngineFactory createInternalClientSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a SSLEngineFactory to be used by internal communication client endpoints.;public static SSLEngineFactory createInternalClientSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for internal communication.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				true)__	};creates,a,sslengine,factory,to,be,used,by,internal,communication,client,endpoints;public,static,sslengine,factory,create,internal,client,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,internal,communication,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,true
SSLUtils -> public static SSLEngineFactory createInternalClientSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a SSLEngineFactory to be used by internal communication client endpoints.;public static SSLEngineFactory createInternalClientSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for internal communication.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				true,_				true)__	};creates,a,sslengine,factory,to,be,used,by,internal,communication,client,endpoints;public,static,sslengine,factory,create,internal,client,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,internal,communication,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,true,true
SSLUtils -> public static SSLEngineFactory createInternalClientSSLEngineFactory(final Configuration config) throws Exception;1538485302;Creates a SSLEngineFactory to be used by internal communication client endpoints.;public static SSLEngineFactory createInternalClientSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for internal communication.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				true,_				true)__	};creates,a,sslengine,factory,to,be,used,by,internal,communication,client,endpoints;public,static,sslengine,factory,create,internal,client,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,internal,communication,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,true,true
SSLUtils -> public static boolean isRestSSLAuthenticationEnabled(Configuration sslConfig);1538485302;Checks whether mutual SSL authentication for the external REST endpoint is enabled.;public static boolean isRestSSLAuthenticationEnabled(Configuration sslConfig) {_		checkNotNull(sslConfig, "sslConfig")__		return isRestSSLEnabled(sslConfig) &&_			sslConfig.getBoolean(SecurityOptions.SSL_REST_AUTHENTICATION_ENABLED)__	};checks,whether,mutual,ssl,authentication,for,the,external,rest,endpoint,is,enabled;public,static,boolean,is,rest,sslauthentication,enabled,configuration,ssl,config,check,not,null,ssl,config,ssl,config,return,is,rest,sslenabled,ssl,config,ssl,config,get,boolean,security,options
SSLUtils -> public static boolean isRestSSLAuthenticationEnabled(Configuration sslConfig);1540215410;Checks whether mutual SSL authentication for the external REST endpoint is enabled.;public static boolean isRestSSLAuthenticationEnabled(Configuration sslConfig) {_		checkNotNull(sslConfig, "sslConfig")__		return isRestSSLEnabled(sslConfig) &&_			sslConfig.getBoolean(SecurityOptions.SSL_REST_AUTHENTICATION_ENABLED)__	};checks,whether,mutual,ssl,authentication,for,the,external,rest,endpoint,is,enabled;public,static,boolean,is,rest,sslauthentication,enabled,configuration,ssl,config,check,not,null,ssl,config,ssl,config,return,is,rest,sslenabled,ssl,config,ssl,config,get,boolean,security,options
SSLUtils -> public static boolean isRestSSLEnabled(Configuration sslConfig);1531721446;Checks whether SSL for the external REST endpoint is enabled.;public static boolean isRestSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_REST_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,the,external,rest,endpoint,is,enabled;public,static,boolean,is,rest,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> public static boolean isRestSSLEnabled(Configuration sslConfig);1531721446;Checks whether SSL for the external REST endpoint is enabled.;public static boolean isRestSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_REST_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,the,external,rest,endpoint,is,enabled;public,static,boolean,is,rest,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> public static boolean isRestSSLEnabled(Configuration sslConfig);1538485302;Checks whether SSL for the external REST endpoint is enabled.;public static boolean isRestSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_REST_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,the,external,rest,endpoint,is,enabled;public,static,boolean,is,rest,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> public static boolean isRestSSLEnabled(Configuration sslConfig);1540215410;Checks whether SSL for the external REST endpoint is enabled.;public static boolean isRestSSLEnabled(Configuration sslConfig) {_		@SuppressWarnings("deprecation")_		final boolean fallbackFlag = sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__		return sslConfig.getBoolean(SecurityOptions.SSL_REST_ENABLED, fallbackFlag)__	};checks,whether,ssl,for,the,external,rest,endpoint,is,enabled;public,static,boolean,is,rest,sslenabled,configuration,ssl,config,suppress,warnings,deprecation,final,boolean,fallback,flag,ssl,config,get,boolean,security,options,return,ssl,config,get,boolean,security,options,fallback,flag
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1476696544;Retrieves the global ssl flag from configuration__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {__		Preconditions.checkNotNull(sslConfig)___		return sslConfig.getBoolean( ConfigConstants.SECURITY_SSL_ENABLED,_			ConfigConstants.DEFAULT_SECURITY_SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,preconditions,check,not,null,ssl,config,return,ssl,config,get,boolean,config,constants,config,constants
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1489748538;Retrieves the global ssl flag from configuration__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {__		Preconditions.checkNotNull(sslConfig)___		return sslConfig.getBoolean( ConfigConstants.SECURITY_SSL_ENABLED,_			ConfigConstants.DEFAULT_SECURITY_SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,preconditions,check,not,null,ssl,config,return,ssl,config,get,boolean,config,constants,config,constants
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1491456886;Retrieves the global ssl flag from configuration__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {__		Preconditions.checkNotNull(sslConfig)___		return sslConfig.getBoolean( ConfigConstants.SECURITY_SSL_ENABLED,_			ConfigConstants.DEFAULT_SECURITY_SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,preconditions,check,not,null,ssl,config,return,ssl,config,get,boolean,config,constants,config,constants
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1493758186;Retrieves the global ssl flag from configuration__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {__		Preconditions.checkNotNull(sslConfig)___		return sslConfig.getBoolean( ConfigConstants.SECURITY_SSL_ENABLED,_			ConfigConstants.DEFAULT_SECURITY_SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,preconditions,check,not,null,ssl,config,return,ssl,config,get,boolean,config,constants,config,constants
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1498894422;Retrieves the global ssl flag from configuration__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {__		Preconditions.checkNotNull(sslConfig)___		return sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,preconditions,check,not,null,ssl,config,return,ssl,config,get,boolean,security,options
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1499164413;Retrieves the global ssl flag from configuration.__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {__		Preconditions.checkNotNull(sslConfig)___		return sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,preconditions,check,not,null,ssl,config,return,ssl,config,get,boolean,security,options
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1525904579;Retrieves the global ssl flag from configuration.__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {__		Preconditions.checkNotNull(sslConfig)___		return sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,preconditions,check,not,null,ssl,config,return,ssl,config,get,boolean,security,options
SSLUtils -> public static boolean getSSLEnabled(Configuration sslConfig);1531721446;Retrieves the global ssl flag from configuration.__@param sslConfig_The application configuration_@return true if global ssl flag is set;public static boolean getSSLEnabled(Configuration sslConfig) {_		return sslConfig.getBoolean(SecurityOptions.SSL_ENABLED)__	};retrieves,the,global,ssl,flag,from,configuration,param,ssl,config,the,application,configuration,return,true,if,global,ssl,flag,is,set;public,static,boolean,get,sslenabled,configuration,ssl,config,return,ssl,config,get,boolean,security,options
SSLUtils -> @Nullable 	private static SSLContext createRestSSLContext(Configuration config, RestSSLContextConfigMode configMode) throws Exception;1538485302;Creates an SSL context for the external REST SSL._If mutual authentication is configured the client and the server side configuration are identical.;@Nullable_	private static SSLContext createRestSSLContext(Configuration config, RestSSLContextConfigMode configMode) throws Exception {_		checkNotNull(config, "config")___		if (!isRestSSLEnabled(config)) {_			return null__		}__		KeyManager[] keyManagers = null__		if (configMode == RestSSLContextConfigMode.SERVER || configMode == RestSSLContextConfigMode.MUTUAL) {_			String keystoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE, SecurityOptions.SSL_KEYSTORE)___			String keystorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, SecurityOptions.SSL_KEYSTORE_PASSWORD)___			String certPassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEY_PASSWORD, SecurityOptions.SSL_KEY_PASSWORD)___			KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__			try (InputStream keyStoreFile = Files.newInputStream(new File(keystoreFilePath).toPath())) {_				keyStore.load(keyStoreFile, keystorePassword.toCharArray())__			}__			KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(keyStore, certPassword.toCharArray())___			keyManagers = kmf.getKeyManagers()__		}__		TrustManager[] trustManagers = null__		if (configMode == RestSSLContextConfigMode.CLIENT || configMode == RestSSLContextConfigMode.MUTUAL) {_			String trustStoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE, SecurityOptions.SSL_TRUSTSTORE)___			String trustStorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, SecurityOptions.SSL_TRUSTSTORE_PASSWORD)___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__			try (InputStream trustStoreFile = Files.newInputStream(new File(trustStoreFilePath).toPath())) {_				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			}__			TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())__			tmf.init(trustStore)___			trustManagers = tmf.getTrustManagers()__		}__		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)__		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(keyManagers, trustManagers, null)___		return sslContext__	};creates,an,ssl,context,for,the,external,rest,ssl,if,mutual,authentication,is,configured,the,client,and,the,server,side,configuration,are,identical;nullable,private,static,sslcontext,create,rest,sslcontext,configuration,config,rest,sslcontext,config,mode,config,mode,throws,exception,check,not,null,config,config,if,is,rest,sslenabled,config,return,null,key,manager,key,managers,null,if,config,mode,rest,sslcontext,config,mode,server,config,mode,rest,sslcontext,config,mode,mutual,string,keystore,file,path,get,and,check,option,config,security,options,security,options,string,keystore,password,get,and,check,option,config,security,options,security,options,string,cert,password,get,and,check,option,config,security,options,security,options,key,store,key,store,key,store,get,instance,key,store,get,default,type,try,input,stream,key,store,file,files,new,input,stream,new,file,keystore,file,path,to,path,key,store,load,key,store,file,keystore,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,key,store,cert,password,to,char,array,key,managers,kmf,get,key,managers,trust,manager,trust,managers,null,if,config,mode,rest,sslcontext,config,mode,client,config,mode,rest,sslcontext,config,mode,mutual,string,trust,store,file,path,get,and,check,option,config,security,options,security,options,string,trust,store,password,get,and,check,option,config,security,options,security,options,key,store,trust,store,key,store,get,instance,key,store,get,default,type,try,input,stream,trust,store,file,files,new,input,stream,new,file,trust,store,file,path,to,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,trust,manager,factory,tmf,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,tmf,init,trust,store,trust,managers,tmf,get,trust,managers,string,ssl,protocol,version,config,get,string,security,options,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,key,managers,trust,managers,null,return,ssl,context
SSLUtils -> @Nullable 	private static SSLContext createRestSSLContext(Configuration config, RestSSLContextConfigMode configMode) throws Exception;1540215410;Creates an SSL context for the external REST SSL._If mutual authentication is configured the client and the server side configuration are identical.;@Nullable_	private static SSLContext createRestSSLContext(Configuration config, RestSSLContextConfigMode configMode) throws Exception {_		checkNotNull(config, "config")___		if (!isRestSSLEnabled(config)) {_			return null__		}__		KeyManager[] keyManagers = null__		if (configMode == RestSSLContextConfigMode.SERVER || configMode == RestSSLContextConfigMode.MUTUAL) {_			String keystoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE, SecurityOptions.SSL_KEYSTORE)___			String keystorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, SecurityOptions.SSL_KEYSTORE_PASSWORD)___			String certPassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEY_PASSWORD, SecurityOptions.SSL_KEY_PASSWORD)___			KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__			try (InputStream keyStoreFile = Files.newInputStream(new File(keystoreFilePath).toPath())) {_				keyStore.load(keyStoreFile, keystorePassword.toCharArray())__			}__			KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(keyStore, certPassword.toCharArray())___			keyManagers = kmf.getKeyManagers()__		}__		TrustManager[] trustManagers = null__		if (configMode == RestSSLContextConfigMode.CLIENT || configMode == RestSSLContextConfigMode.MUTUAL) {_			String trustStoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE, SecurityOptions.SSL_TRUSTSTORE)___			String trustStorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, SecurityOptions.SSL_TRUSTSTORE_PASSWORD)___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())__			try (InputStream trustStoreFile = Files.newInputStream(new File(trustStoreFilePath).toPath())) {_				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			}__			TrustManagerFactory tmf = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())__			tmf.init(trustStore)___			trustManagers = tmf.getTrustManagers()__		}__		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)__		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(keyManagers, trustManagers, null)___		return sslContext__	};creates,an,ssl,context,for,the,external,rest,ssl,if,mutual,authentication,is,configured,the,client,and,the,server,side,configuration,are,identical;nullable,private,static,sslcontext,create,rest,sslcontext,configuration,config,rest,sslcontext,config,mode,config,mode,throws,exception,check,not,null,config,config,if,is,rest,sslenabled,config,return,null,key,manager,key,managers,null,if,config,mode,rest,sslcontext,config,mode,server,config,mode,rest,sslcontext,config,mode,mutual,string,keystore,file,path,get,and,check,option,config,security,options,security,options,string,keystore,password,get,and,check,option,config,security,options,security,options,string,cert,password,get,and,check,option,config,security,options,security,options,key,store,key,store,key,store,get,instance,key,store,get,default,type,try,input,stream,key,store,file,files,new,input,stream,new,file,keystore,file,path,to,path,key,store,load,key,store,file,keystore,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,key,store,cert,password,to,char,array,key,managers,kmf,get,key,managers,trust,manager,trust,managers,null,if,config,mode,rest,sslcontext,config,mode,client,config,mode,rest,sslcontext,config,mode,mutual,string,trust,store,file,path,get,and,check,option,config,security,options,security,options,string,trust,store,password,get,and,check,option,config,security,options,security,options,key,store,trust,store,key,store,get,instance,key,store,get,default,type,try,input,stream,trust,store,file,files,new,input,stream,new,file,trust,store,file,path,to,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,trust,manager,factory,tmf,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,tmf,init,trust,store,trust,managers,tmf,get,trust,managers,string,ssl,protocol,version,config,get,string,security,options,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,key,managers,trust,managers,null,return,ssl,context
SSLUtils -> public static SSLEngineFactory createClientSSLEngineFactory(final Configuration config) throws Exception;1525904579;Creates a {@link SSLEngineFactory} to be used by the Client._@param config The application configuration.;public static SSLEngineFactory createClientSSLEngineFactory(final Configuration config) throws Exception {_		return createSSLEngineFactory(config, true)__	};creates,a,link,sslengine,factory,to,be,used,by,the,client,param,config,the,application,configuration;public,static,sslengine,factory,create,client,sslengine,factory,final,configuration,config,throws,exception,return,create,sslengine,factory,config,true
SSLUtils -> public static SSLEngineFactory createClientSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a {@link SSLEngineFactory} to be used by the Client._@param config The application configuration.;public static SSLEngineFactory createClientSSLEngineFactory(final Configuration config) throws Exception {_		return createSSLEngineFactory(config, true)__	};creates,a,link,sslengine,factory,to,be,used,by,the,client,param,config,the,application,configuration;public,static,sslengine,factory,create,client,sslengine,factory,final,configuration,config,throws,exception,return,create,sslengine,factory,config,true
SSLUtils -> @Nullable 	public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1525904579;Creates the SSL Context for the client if SSL is configured.__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;@Nullable_	public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE)__			String trustStorePassword = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD)__			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(trustStoreFilePath, SecurityOptions.SSL_TRUSTSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(trustStorePassword, SecurityOptions.SSL_TRUSTSTORE_PASSWORD.key() + " was not configured.")___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;nullable,public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,security,options,string,trust,store,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,trust,store,file,path,security,options,key,was,not,configured,preconditions,check,not,null,trust,store,password,security,options,key,was,not,configured,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> @Nullable 	public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception;1531721446;Creates the SSL Context for the client if SSL is configured.__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport client_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;@Nullable_	public static SSLContext createSSLClientContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext clientSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating client SSL context from configuration")___			String trustStoreFilePath = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE)__			String trustStorePassword = sslConfig.getString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD)__			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(trustStoreFilePath, SecurityOptions.SSL_TRUSTSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(trustStorePassword, SecurityOptions.SSL_TRUSTSTORE_PASSWORD.key() + " was not configured.")___			KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())___			FileInputStream trustStoreFile = null__			try {_				trustStoreFile = new FileInputStream(new File(trustStoreFilePath))__				trustStore.load(trustStoreFile, trustStorePassword.toCharArray())__			} finally {_				if (trustStoreFile != null) {_					trustStoreFile.close()__				}_			}__			TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(_				TrustManagerFactory.getDefaultAlgorithm())__			trustManagerFactory.init(trustStore)___			clientSSLContext = SSLContext.getInstance(sslProtocolVersion)__			clientSSLContext.init(null, trustManagerFactory.getTrustManagers(), null)__		}__		return clientSSLContext__	};creates,the,ssl,context,for,the,client,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,client,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;nullable,public,static,sslcontext,create,sslclient,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,client,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,client,ssl,context,from,configuration,string,trust,store,file,path,ssl,config,get,string,security,options,string,trust,store,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,trust,store,file,path,security,options,key,was,not,configured,preconditions,check,not,null,trust,store,password,security,options,key,was,not,configured,key,store,trust,store,key,store,get,instance,key,store,get,default,type,file,input,stream,trust,store,file,null,try,trust,store,file,new,file,input,stream,new,file,trust,store,file,path,trust,store,load,trust,store,file,trust,store,password,to,char,array,finally,if,trust,store,file,null,trust,store,file,close,trust,manager,factory,trust,manager,factory,trust,manager,factory,get,instance,trust,manager,factory,get,default,algorithm,trust,manager,factory,init,trust,store,client,sslcontext,sslcontext,get,instance,ssl,protocol,version,client,sslcontext,init,null,trust,manager,factory,get,trust,managers,null,return,client,sslcontext
SSLUtils -> public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception;1531721446;Creates a factory for SSL Server Sockets from the given configuration.;public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createSSLServerContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		String[] protocols = getEnabledProtocols(config)__		String[] cipherSuites = getEnabledCipherSuites(config)___		SSLServerSocketFactory factory = sslContext.getServerSocketFactory()__		return new ConfiguringSSLServerSocketFactory(factory, protocols, cipherSuites)__	};creates,a,factory,for,ssl,server,sockets,from,the,given,configuration;public,static,server,socket,factory,create,sslserver,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,sslserver,context,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,string,protocols,get,enabled,protocols,config,string,cipher,suites,get,enabled,cipher,suites,config,sslserver,socket,factory,factory,ssl,context,get,server,socket,factory,return,new,configuring,sslserver,socket,factory,factory,protocols,cipher,suites
SSLUtils -> public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception;1531721446;Creates a factory for SSL Server Sockets from the given configuration._SSL Server Sockets are always part of internal communication.;public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		String[] protocols = getEnabledProtocols(config)__		String[] cipherSuites = getEnabledCipherSuites(config)___		SSLServerSocketFactory factory = sslContext.getServerSocketFactory()__		return new ConfiguringSSLServerSocketFactory(factory, protocols, cipherSuites)__	};creates,a,factory,for,ssl,server,sockets,from,the,given,configuration,ssl,server,sockets,are,always,part,of,internal,communication;public,static,server,socket,factory,create,sslserver,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,string,protocols,get,enabled,protocols,config,string,cipher,suites,get,enabled,cipher,suites,config,sslserver,socket,factory,factory,ssl,context,get,server,socket,factory,return,new,configuring,sslserver,socket,factory,factory,protocols,cipher,suites
SSLUtils -> public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception;1531721446;Creates a factory for SSL Server Sockets from the given configuration._SSL Server Sockets are always part of internal communication.;public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		String[] protocols = getEnabledProtocols(config)__		String[] cipherSuites = getEnabledCipherSuites(config)___		SSLServerSocketFactory factory = sslContext.getServerSocketFactory()__		return new ConfiguringSSLServerSocketFactory(factory, protocols, cipherSuites)__	};creates,a,factory,for,ssl,server,sockets,from,the,given,configuration,ssl,server,sockets,are,always,part,of,internal,communication;public,static,server,socket,factory,create,sslserver,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,string,protocols,get,enabled,protocols,config,string,cipher,suites,get,enabled,cipher,suites,config,sslserver,socket,factory,factory,ssl,context,get,server,socket,factory,return,new,configuring,sslserver,socket,factory,factory,protocols,cipher,suites
SSLUtils -> public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception;1538485302;Creates a factory for SSL Server Sockets from the given configuration._SSL Server Sockets are always part of internal communication.;public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		String[] protocols = getEnabledProtocols(config)__		String[] cipherSuites = getEnabledCipherSuites(config)___		SSLServerSocketFactory factory = sslContext.getServerSocketFactory()__		return new ConfiguringSSLServerSocketFactory(factory, protocols, cipherSuites)__	};creates,a,factory,for,ssl,server,sockets,from,the,given,configuration,ssl,server,sockets,are,always,part,of,internal,communication;public,static,server,socket,factory,create,sslserver,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,string,protocols,get,enabled,protocols,config,string,cipher,suites,get,enabled,cipher,suites,config,sslserver,socket,factory,factory,ssl,context,get,server,socket,factory,return,new,configuring,sslserver,socket,factory,factory,protocols,cipher,suites
SSLUtils -> public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception;1540215410;Creates a factory for SSL Server Sockets from the given configuration._SSL Server Sockets are always part of internal communication.;public static ServerSocketFactory createSSLServerSocketFactory(Configuration config) throws Exception {_		SSLContext sslContext = createInternalSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled")__		}__		String[] protocols = getEnabledProtocols(config)__		String[] cipherSuites = getEnabledCipherSuites(config)___		SSLServerSocketFactory factory = sslContext.getServerSocketFactory()__		return new ConfiguringSSLServerSocketFactory(factory, protocols, cipherSuites)__	};creates,a,factory,for,ssl,server,sockets,from,the,given,configuration,ssl,server,sockets,are,always,part,of,internal,communication;public,static,server,socket,factory,create,sslserver,socket,factory,configuration,config,throws,exception,sslcontext,ssl,context,create,internal,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,string,protocols,get,enabled,protocols,config,string,cipher,suites,get,enabled,cipher,suites,config,sslserver,socket,factory,factory,ssl,context,get,server,socket,factory,return,new,configuring,sslserver,socket,factory,factory,protocols,cipher,suites
SSLUtils -> @Nullable 	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception;1531721446;Creates an SSL context for the external REST endpoint server.;@Nullable_	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception {_		checkNotNull(config, "config")___		if (!isRestSSLEnabled(config)) {_			return null__		}__		String keystoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE, SecurityOptions.SSL_KEYSTORE)___		String keystorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, SecurityOptions.SSL_KEYSTORE_PASSWORD)___		String certPassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEY_PASSWORD, SecurityOptions.SSL_KEY_PASSWORD)___		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)___		KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream keyStoreFile = Files.newInputStream(new File(keystoreFilePath).toPath())) {_			keyStore.load(keyStoreFile, keystorePassword.toCharArray())__		}__		KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())__		kmf.init(keyStore, certPassword.toCharArray())___		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(kmf.getKeyManagers(), null, null)___		return sslContext__	};creates,an,ssl,context,for,the,external,rest,endpoint,server;nullable,public,static,sslcontext,create,rest,server,sslcontext,configuration,config,throws,exception,check,not,null,config,config,if,is,rest,sslenabled,config,return,null,string,keystore,file,path,get,and,check,option,config,security,options,security,options,string,keystore,password,get,and,check,option,config,security,options,security,options,string,cert,password,get,and,check,option,config,security,options,security,options,string,ssl,protocol,version,config,get,string,security,options,key,store,key,store,key,store,get,instance,key,store,get,default,type,try,input,stream,key,store,file,files,new,input,stream,new,file,keystore,file,path,to,path,key,store,load,key,store,file,keystore,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,key,store,cert,password,to,char,array,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,kmf,get,key,managers,null,null,return,ssl,context
SSLUtils -> @Nullable 	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception;1531721446;Creates an SSL context for the external REST endpoint server.;@Nullable_	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception {_		checkNotNull(config, "config")___		if (!isRestSSLEnabled(config)) {_			return null__		}__		String keystoreFilePath = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE, SecurityOptions.SSL_KEYSTORE)___		String keystorePassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, SecurityOptions.SSL_KEYSTORE_PASSWORD)___		String certPassword = getAndCheckOption(_				config, SecurityOptions.SSL_REST_KEY_PASSWORD, SecurityOptions.SSL_KEY_PASSWORD)___		String sslProtocolVersion = config.getString(SecurityOptions.SSL_PROTOCOL)___		KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())__		try (InputStream keyStoreFile = Files.newInputStream(new File(keystoreFilePath).toPath())) {_			keyStore.load(keyStoreFile, keystorePassword.toCharArray())__		}__		KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())__		kmf.init(keyStore, certPassword.toCharArray())___		SSLContext sslContext = SSLContext.getInstance(sslProtocolVersion)__		sslContext.init(kmf.getKeyManagers(), null, null)___		return sslContext__	};creates,an,ssl,context,for,the,external,rest,endpoint,server;nullable,public,static,sslcontext,create,rest,server,sslcontext,configuration,config,throws,exception,check,not,null,config,config,if,is,rest,sslenabled,config,return,null,string,keystore,file,path,get,and,check,option,config,security,options,security,options,string,keystore,password,get,and,check,option,config,security,options,security,options,string,cert,password,get,and,check,option,config,security,options,security,options,string,ssl,protocol,version,config,get,string,security,options,key,store,key,store,key,store,get,instance,key,store,get,default,type,try,input,stream,key,store,file,files,new,input,stream,new,file,keystore,file,path,to,path,key,store,load,key,store,file,keystore,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,key,store,cert,password,to,char,array,sslcontext,ssl,context,sslcontext,get,instance,ssl,protocol,version,ssl,context,init,kmf,get,key,managers,null,null,return,ssl,context
SSLUtils -> @Nullable 	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception;1538485302;Creates an SSL context for the external REST endpoint server.;@Nullable_	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception {_		final RestSSLContextConfigMode configMode__		if (isRestSSLAuthenticationEnabled(config)) {_			configMode = RestSSLContextConfigMode.MUTUAL__		} else {_			configMode = RestSSLContextConfigMode.SERVER__		}__		return createRestSSLContext(config, configMode)__	};creates,an,ssl,context,for,the,external,rest,endpoint,server;nullable,public,static,sslcontext,create,rest,server,sslcontext,configuration,config,throws,exception,final,rest,sslcontext,config,mode,config,mode,if,is,rest,sslauthentication,enabled,config,config,mode,rest,sslcontext,config,mode,mutual,else,config,mode,rest,sslcontext,config,mode,server,return,create,rest,sslcontext,config,config,mode
SSLUtils -> @Nullable 	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception;1540215410;Creates an SSL context for the external REST endpoint server.;@Nullable_	public static SSLContext createRestServerSSLContext(Configuration config) throws Exception {_		final RestSSLContextConfigMode configMode__		if (isRestSSLAuthenticationEnabled(config)) {_			configMode = RestSSLContextConfigMode.MUTUAL__		} else {_			configMode = RestSSLContextConfigMode.SERVER__		}__		return createRestSSLContext(config, configMode)__	};creates,an,ssl,context,for,the,external,rest,endpoint,server;nullable,public,static,sslcontext,create,rest,server,sslcontext,configuration,config,throws,exception,final,rest,sslcontext,config,mode,config,mode,if,is,rest,sslauthentication,enabled,config,config,mode,rest,sslcontext,config,mode,mutual,else,config,mode,rest,sslcontext,config,mode,server,return,create,rest,sslcontext,config,config,mode
SSLUtils -> @Nullable 	public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1525904579;Creates the SSL Context for the server if SSL is configured.__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;@Nullable_	public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(SecurityOptions.SSL_KEYSTORE)___			String keystorePassword = sslConfig.getString(SecurityOptions.SSL_KEYSTORE_PASSWORD)___			String certPassword = sslConfig.getString(SecurityOptions.SSL_KEY_PASSWORD)___			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(keystoreFilePath, SecurityOptions.SSL_KEYSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(keystorePassword, SecurityOptions.SSL_KEYSTORE_PASSWORD.key() + " was not configured.")__			Preconditions.checkNotNull(certPassword, SecurityOptions.SSL_KEY_PASSWORD.key() + " was not configured.")___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			try (FileInputStream keyStoreFile = new FileInputStream(new File(keystoreFilePath))) {_				ks.load(keyStoreFile, keystorePassword.toCharArray())__			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;nullable,public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,security,options,string,keystore,password,ssl,config,get,string,security,options,string,cert,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,keystore,file,path,security,options,key,was,not,configured,preconditions,check,not,null,keystore,password,security,options,key,was,not,configured,preconditions,check,not,null,cert,password,security,options,key,was,not,configured,key,store,ks,key,store,get,instance,key,store,get,default,type,try,file,input,stream,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> @Nullable 	public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception;1531721446;Creates the SSL Context for the server if SSL is configured.__@param sslConfig_The application configuration_@return The SSLContext object which can be used by the ssl transport server_Returns null if SSL is disabled_@throws Exception_Thrown if there is any misconfiguration;@Nullable_	public static SSLContext createSSLServerContext(Configuration sslConfig) throws Exception {__		Preconditions.checkNotNull(sslConfig)__		SSLContext serverSSLContext = null___		if (getSSLEnabled(sslConfig)) {_			LOG.debug("Creating server SSL context from configuration")___			String keystoreFilePath = sslConfig.getString(SecurityOptions.SSL_KEYSTORE)___			String keystorePassword = sslConfig.getString(SecurityOptions.SSL_KEYSTORE_PASSWORD)___			String certPassword = sslConfig.getString(SecurityOptions.SSL_KEY_PASSWORD)___			String sslProtocolVersion = sslConfig.getString(SecurityOptions.SSL_PROTOCOL)___			Preconditions.checkNotNull(keystoreFilePath, SecurityOptions.SSL_KEYSTORE.key() + " was not configured.")__			Preconditions.checkNotNull(keystorePassword, SecurityOptions.SSL_KEYSTORE_PASSWORD.key() + " was not configured.")__			Preconditions.checkNotNull(certPassword, SecurityOptions.SSL_KEY_PASSWORD.key() + " was not configured.")___			KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType())__			try (FileInputStream keyStoreFile = new FileInputStream(new File(keystoreFilePath))) {_				ks.load(keyStoreFile, keystorePassword.toCharArray())__			}__			_			KeyManagerFactory kmf = KeyManagerFactory.getInstance(_					KeyManagerFactory.getDefaultAlgorithm())__			kmf.init(ks, certPassword.toCharArray())___			_			serverSSLContext = SSLContext.getInstance(sslProtocolVersion)__			serverSSLContext.init(kmf.getKeyManagers(), null, null)__		}__		return serverSSLContext__	};creates,the,ssl,context,for,the,server,if,ssl,is,configured,param,ssl,config,the,application,configuration,return,the,sslcontext,object,which,can,be,used,by,the,ssl,transport,server,returns,null,if,ssl,is,disabled,throws,exception,thrown,if,there,is,any,misconfiguration;nullable,public,static,sslcontext,create,sslserver,context,configuration,ssl,config,throws,exception,preconditions,check,not,null,ssl,config,sslcontext,server,sslcontext,null,if,get,sslenabled,ssl,config,log,debug,creating,server,ssl,context,from,configuration,string,keystore,file,path,ssl,config,get,string,security,options,string,keystore,password,ssl,config,get,string,security,options,string,cert,password,ssl,config,get,string,security,options,string,ssl,protocol,version,ssl,config,get,string,security,options,preconditions,check,not,null,keystore,file,path,security,options,key,was,not,configured,preconditions,check,not,null,keystore,password,security,options,key,was,not,configured,preconditions,check,not,null,cert,password,security,options,key,was,not,configured,key,store,ks,key,store,get,instance,key,store,get,default,type,try,file,input,stream,key,store,file,new,file,input,stream,new,file,keystore,file,path,ks,load,key,store,file,keystore,password,to,char,array,key,manager,factory,kmf,key,manager,factory,get,instance,key,manager,factory,get,default,algorithm,kmf,init,ks,cert,password,to,char,array,server,sslcontext,sslcontext,get,instance,ssl,protocol,version,server,sslcontext,init,kmf,get,key,managers,null,null,return,server,sslcontext
SSLUtils -> public static SSLEngineFactory createRestServerSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a {@link SSLEngineFactory} to be used by the REST Servers.__@param config The application configuration.;public static SSLEngineFactory createRestServerSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createRestServerSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for REST endpoints.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				false)__	};creates,a,link,sslengine,factory,to,be,used,by,the,rest,servers,param,config,the,application,configuration;public,static,sslengine,factory,create,rest,server,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,rest,server,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,rest,endpoints,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,false
SSLUtils -> public static SSLEngineFactory createRestServerSSLEngineFactory(final Configuration config) throws Exception;1531721446;Creates a {@link SSLEngineFactory} to be used by the REST Servers.__@param config The application configuration.;public static SSLEngineFactory createRestServerSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createRestServerSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for REST endpoints.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				false,_				false)__	};creates,a,link,sslengine,factory,to,be,used,by,the,rest,servers,param,config,the,application,configuration;public,static,sslengine,factory,create,rest,server,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,rest,server,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,rest,endpoints,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,false,false
SSLUtils -> public static SSLEngineFactory createRestServerSSLEngineFactory(final Configuration config) throws Exception;1538485302;Creates a {@link SSLEngineFactory} to be used by the REST Servers.__@param config The application configuration.;public static SSLEngineFactory createRestServerSSLEngineFactory(final Configuration config) throws Exception {_		SSLContext sslContext = createRestServerSSLContext(config)__		if (sslContext == null) {_			throw new IllegalConfigurationException("SSL is not enabled for REST endpoints.")__		}__		return new SSLEngineFactory(_				sslContext,_				getEnabledProtocols(config),_				getEnabledCipherSuites(config),_				false,_				isRestSSLAuthenticationEnabled(config))__	};creates,a,link,sslengine,factory,to,be,used,by,the,rest,servers,param,config,the,application,configuration;public,static,sslengine,factory,create,rest,server,sslengine,factory,final,configuration,config,throws,exception,sslcontext,ssl,context,create,rest,server,sslcontext,config,if,ssl,context,null,throw,new,illegal,configuration,exception,ssl,is,not,enabled,for,rest,endpoints,return,new,sslengine,factory,ssl,context,get,enabled,protocols,config,get,enabled,cipher,suites,config,false,is,rest,sslauthentication,enabled,config
