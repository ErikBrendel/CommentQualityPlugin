# id;timestamp;commentText;codeText;commentWords;codeWords
JobLeaderIdService -> public boolean isStarted();1476806580;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public boolean isStarted();1476954428;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public boolean isStarted();1480898072;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public boolean isStarted();1488228996;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public boolean isStarted();1488815863;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public boolean isStarted();1501580028;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public boolean isStarted();1503588382;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public boolean isStarted();1525374816;Checks whether the service has been started.__@return True if the service has been started_ otherwise false;public boolean isStarted() {_		return jobLeaderIdActions == null__	};checks,whether,the,service,has,been,started,return,true,if,the,service,has,been,started,otherwise,false;public,boolean,is,started,return,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1476806580;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1476954428;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1480898072;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1488228996;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1488815863;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1501580028;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1503588382;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void stop() throws Exception;1525374816;Stop the service.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void stop() throws Exception {_		clear()___		this.jobLeaderIdActions = null__	};stop,the,service,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,stop,throws,exception,clear,this,job,leader,id,actions,null
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1476806580;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobidListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobidListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,jobid,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,jobid,listener
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1476954428;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobidListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobidListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,jobid,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,jobid,listener
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1480898072;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobidListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobidListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,jobid,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,jobid,listener
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1488228996;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobidListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobidListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,jobid,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,jobid,listener
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1488815863;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobIdListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobIdListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,job,id,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,job,id,listener
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1501580028;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobIdListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobIdListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,job,id,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,job,id,listener
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1503588382;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobIdListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobIdListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,job,id,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,job,id,listener
JobLeaderIdService -> public void addJob(JobID jobId) throws Exception;1525374816;Add a job to be monitored to retrieve the job leader id.__@param jobId identifying the job to monitor_@throws Exception if the job could not be added to the service;public void addJob(JobID jobId) throws Exception {_		Preconditions.checkNotNull(jobLeaderIdActions)___		LOG.debug("Add job {} to job leader id monitoring.", jobId)___		if (!jobLeaderIdListeners.containsKey(jobId)) {_			LeaderRetrievalService leaderRetrievalService = highAvailabilityServices.getJobManagerLeaderRetriever(jobId)___			JobLeaderIdListener jobIdListener = new JobLeaderIdListener(jobId, jobLeaderIdActions, leaderRetrievalService)__			jobLeaderIdListeners.put(jobId, jobIdListener)__		}_	};add,a,job,to,be,monitored,to,retrieve,the,job,leader,id,param,job,id,identifying,the,job,to,monitor,throws,exception,if,the,job,could,not,be,added,to,the,service;public,void,add,job,job,id,job,id,throws,exception,preconditions,check,not,null,job,leader,id,actions,log,debug,add,job,to,job,leader,id,monitoring,job,id,if,job,leader,id,listeners,contains,key,job,id,leader,retrieval,service,leader,retrieval,service,high,availability,services,get,job,manager,leader,retriever,job,id,job,leader,id,listener,job,id,listener,new,job,leader,id,listener,job,id,job,leader,id,actions,leader,retrieval,service,job,leader,id,listeners,put,job,id,job,id,listener
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1476806580;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1476954428;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1480898072;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1488228996;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1488815863;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1501580028;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1503588382;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception;1525374816;Start the service with the given job leader actions.__@param initialJobLeaderIdActions to use for job leader id actions_@throws Exception which is thrown when clearing up old state;public void start(JobLeaderIdActions initialJobLeaderIdActions) throws Exception {_		if (isStarted()) {_			clear()__		}__		this.jobLeaderIdActions = Preconditions.checkNotNull(initialJobLeaderIdActions)__	};start,the,service,with,the,given,job,leader,actions,param,initial,job,leader,id,actions,to,use,for,job,leader,id,actions,throws,exception,which,is,thrown,when,clearing,up,old,state;public,void,start,job,leader,id,actions,initial,job,leader,id,actions,throws,exception,if,is,started,clear,this,job,leader,id,actions,preconditions,check,not,null,initial,job,leader,id,actions
JobLeaderIdService -> public void clear() throws Exception;1476806580;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void clear() throws Exception;1476954428;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void clear() throws Exception;1480898072;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void clear() throws Exception;1488228996;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void clear() throws Exception;1488815863;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void clear() throws Exception;1501580028;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void clear() throws Exception;1503588382;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void clear() throws Exception;1525374816;Stop and clear the currently registered job leader id listeners.__@throws Exception which is thrown in case a retrieval service cannot be stopped properly;public void clear() throws Exception {_		Exception exception = null___		for (JobLeaderIdListener listener: jobLeaderIdListeners.values()) {_			try {_				listener.stop()__			} catch (Exception e) {_				exception = ExceptionUtils.firstOrSuppressed(e, exception)__			}_		}__		if (exception != null) {_			ExceptionUtils.rethrowException(exception, "Could not properly stop the " +_				JobLeaderIdService.class.getSimpleName() + '.')__		}__		jobLeaderIdListeners.clear()__	};stop,and,clear,the,currently,registered,job,leader,id,listeners,throws,exception,which,is,thrown,in,case,a,retrieval,service,cannot,be,stopped,properly;public,void,clear,throws,exception,exception,exception,null,for,job,leader,id,listener,listener,job,leader,id,listeners,values,try,listener,stop,catch,exception,e,exception,exception,utils,first,or,suppressed,e,exception,if,exception,null,exception,utils,rethrow,exception,exception,could,not,properly,stop,the,job,leader,id,service,class,get,simple,name,job,leader,id,listeners,clear
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1476806580;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1476954428;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1480898072;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1488228996;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1488815863;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1501580028;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1503588382;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public void removeJob(JobID jobId) throws Exception;1525374816;Remove the given job from being monitored by the service.__@param jobId identifying the job to remove from monitor_@throws Exception if removing the job fails;public void removeJob(JobID jobId) throws Exception {_		LOG.debug("Remove job {} from job leader id monitoring.", jobId)___		JobLeaderIdListener listener = jobLeaderIdListeners.remove(jobId)___		if (listener != null) {_			listener.stop()__		}_	};remove,the,given,job,from,being,monitored,by,the,service,param,job,id,identifying,the,job,to,remove,from,monitor,throws,exception,if,removing,the,job,fails;public,void,remove,job,job,id,job,id,throws,exception,log,debug,remove,job,from,job,leader,id,monitoring,job,id,job,leader,id,listener,listener,job,leader,id,listeners,remove,job,id,if,listener,null,listener,stop
JobLeaderIdService -> public boolean containsJob(JobID jobId);1476806580;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
JobLeaderIdService -> public boolean containsJob(JobID jobId);1476954428;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
JobLeaderIdService -> public boolean containsJob(JobID jobId);1480898072;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
JobLeaderIdService -> public boolean containsJob(JobID jobId);1488228996;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
JobLeaderIdService -> public boolean containsJob(JobID jobId);1488815863;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
JobLeaderIdService -> public boolean containsJob(JobID jobId);1501580028;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
JobLeaderIdService -> public boolean containsJob(JobID jobId);1503588382;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
JobLeaderIdService -> public boolean containsJob(JobID jobId);1525374816;Check whether the given job is being monitored or not.__@param jobId identifying the job_@return True if the job is being monitored_ otherwise false;public boolean containsJob(JobID jobId) {_		return jobLeaderIdListeners.containsKey(jobId)__	};check,whether,the,given,job,is,being,monitored,or,not,param,job,id,identifying,the,job,return,true,if,the,job,is,being,monitored,otherwise,false;public,boolean,contains,job,job,id,job,id,return,job,leader,id,listeners,contains,key,job,id
