# id;timestamp;commentText;codeText;commentWords;codeWords
ManagedSnapshotContext -> long getCheckpointId()_;1476972861;Returns the Id of the checkpoint for which the snapshot is taken.;long getCheckpointId()_;returns,the,id,of,the,checkpoint,for,which,the,snapshot,is,taken;long,get,checkpoint,id
ManagedSnapshotContext -> long getCheckpointId()_;1485274812;Returns the ID of the checkpoint for which the snapshot is taken.__<p>The checkpoint ID is guaranteed to be strictly monotonously increasing across checkpoints._For two completed checkpoints <i>A</i> and <i>B</i>, {@code ID_B > ID_A} means that checkpoint_<i>B</i> subsumes checkpoint <i>A</i>, i.e., checkpoint <i>B</i>it contains a later state_than checkpoint <i>A</i>.;long getCheckpointId()_;returns,the,id,of,the,checkpoint,for,which,the,snapshot,is,taken,p,the,checkpoint,id,is,guaranteed,to,be,strictly,monotonously,increasing,across,checkpoints,for,two,completed,checkpoints,i,a,i,and,i,b,i,code,means,that,checkpoint,i,b,i,subsumes,checkpoint,i,a,i,i,e,checkpoint,i,b,i,it,contains,a,later,state,than,checkpoint,i,a,i;long,get,checkpoint,id
ManagedSnapshotContext -> long getCheckpointId()_;1509627722;Returns the ID of the checkpoint for which the snapshot is taken.__<p>The checkpoint ID is guaranteed to be strictly monotonously increasing across checkpoints._For two completed checkpoints <i>A</i> and <i>B</i>, {@code ID_B > ID_A} means that checkpoint_<i>B</i> subsumes checkpoint <i>A</i>, i.e., checkpoint <i>B</i> contains a later state_than checkpoint <i>A</i>.;long getCheckpointId()_;returns,the,id,of,the,checkpoint,for,which,the,snapshot,is,taken,p,the,checkpoint,id,is,guaranteed,to,be,strictly,monotonously,increasing,across,checkpoints,for,two,completed,checkpoints,i,a,i,and,i,b,i,code,means,that,checkpoint,i,b,i,subsumes,checkpoint,i,a,i,i,e,checkpoint,i,b,i,contains,a,later,state,than,checkpoint,i,a,i;long,get,checkpoint,id
ManagedSnapshotContext -> long getCheckpointTimestamp()_;1476972861;Returns the timestamp of the checkpoint for which the snapshot is taken.;long getCheckpointTimestamp()_;returns,the,timestamp,of,the,checkpoint,for,which,the,snapshot,is,taken;long,get,checkpoint,timestamp
ManagedSnapshotContext -> long getCheckpointTimestamp()_;1485274812;Returns timestamp (wall clock time) when the master node triggered the checkpoint for which_the state snapshot is taken.;long getCheckpointTimestamp()_;returns,timestamp,wall,clock,time,when,the,master,node,triggered,the,checkpoint,for,which,the,state,snapshot,is,taken;long,get,checkpoint,timestamp
ManagedSnapshotContext -> long getCheckpointTimestamp()_;1509627722;Returns timestamp (wall clock time) when the master node triggered the checkpoint for which_the state snapshot is taken.;long getCheckpointTimestamp()_;returns,timestamp,wall,clock,time,when,the,master,node,triggered,the,checkpoint,for,which,the,state,snapshot,is,taken;long,get,checkpoint,timestamp
