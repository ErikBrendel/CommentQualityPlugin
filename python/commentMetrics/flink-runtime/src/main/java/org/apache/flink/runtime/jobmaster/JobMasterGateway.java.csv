# id;timestamp;commentText;codeText;commentWords;codeWords
JobMasterGateway -> Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;1482522862;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param slots to offer to the job manager_@param leaderId identifying the job leader_@param timeout for the rpc call_@return Future set of accepted slots.;Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,allocation,id,offer,slots,final,iterable,allocation,id,slots,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;1482522863;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param slots to offer to the job manager_@param leaderId identifying the job leader_@param timeout for the rpc call_@return Future set of accepted slots.;Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,allocation,id,offer,slots,final,iterable,allocation,id,slots,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;1482522863;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param slots to offer to the job manager_@param leaderId identifying the job leader_@param timeout for the rpc call_@return Future set of accepted slots.;Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,allocation,id,offer,slots,final,iterable,allocation,id,slots,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1482522861;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1482522861;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1482522862;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1482522862;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1504608225;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1506376022;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1506553599;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1506553672;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1506967078;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1507825825;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1509037054;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1512061052;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1512229172;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1513258344;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1515588319;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1516970998;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1517914184;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1518712479;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1519317157;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1519481079;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1520032992;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1521555504;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1530472204;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1536327554;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1548350145;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1550228244;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1550366933;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1506553672;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1506967078;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1507825825;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1509037054;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1512061052;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1512229172;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1513258344;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1515588319;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1516970998;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1517914184;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1518712479;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1519317157;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1519481079;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1520032992;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1521555504;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1530472204;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1536327554;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1548350145;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1550228244;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1550366933;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			JobID jobId, 			IntermediateDataSetID intermediateResultId, 			ResultPartitionID partitionId)_;1482522862;Requests the current state of the producer of an intermediate result partition._The state of a partition is currently bound to the state of the producing execution.__@param jobId                TheID of job that the intermediate result partition belongs to._@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			JobID jobId,_			IntermediateDataSetID intermediateResultId,_			ResultPartitionID partitionId)_;requests,the,current,state,of,the,producer,of,an,intermediate,result,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,job,id,the,id,of,job,that,the,intermediate,result,partition,belongs,to,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,job,id,job,id,intermediate,data,set,id,intermediate,result,id,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			JobID jobId, 			IntermediateDataSetID intermediateResultId, 			ResultPartitionID partitionId)_;1482522862;Requests the current state of the producer of an intermediate result partition._The state of a partition is currently bound to the state of the producing execution.__@param jobId                TheID of job that the intermediate result partition belongs to._@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			JobID jobId,_			IntermediateDataSetID intermediateResultId,_			ResultPartitionID partitionId)_;requests,the,current,state,of,the,producer,of,an,intermediate,result,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,job,id,the,id,of,job,that,the,intermediate,result,partition,belongs,to,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,job,id,job,id,intermediate,data,set,id,intermediate,result,id,result,partition,id,partition,id
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1482522862;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1482522862;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1482522863;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1482522863;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1482522863;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1482522864;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1485118419;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1489766404;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1489766405;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1493308611;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1501760738;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1502452184;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1504472712;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1504525441;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1504608225;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1506376022;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1506553599;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1506553672;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1506967078;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1507825825;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1509037054;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1512061052;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1512229172;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1513258344;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1515588319;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1516970998;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519317157;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519481079;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1520032992;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1521555504;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1530472204;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1536327554;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1548350145;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1550228244;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1550366933;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1506553599;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1506553672;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1506967078;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1507825825;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1509037054;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1512061052;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1512229172;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1513258344;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1515588319;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1516970998;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1517914184;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1518712479;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1519317157;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1519481079;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1520032992;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1521555504;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1530472204;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1536327554;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1548350145;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1550228244;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1550366933;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1536327554;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1548350145;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1550228244;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1550366933;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1504608225;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1506376022;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1506553599;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1506553672;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1506967078;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1507825825;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1509037054;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1512061052;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1512229172;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1513258344;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1515588319;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1516970998;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1517914184;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1518712479;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1519317157;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1519481079;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1520032992;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1521555504;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1530472204;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1536327554;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1548350145;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1550228244;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1550366933;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1482522864;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1485118419;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1489766404;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1489766405;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1493308611;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1501760738;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1502452184;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1504472712;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void registerAtResourceManager(final String address)_;1482522858;Triggers the registration of the job master at the resource manager.__@param address Address of the resource manager;void registerAtResourceManager(final String address)_;triggers,the,registration,of,the,job,master,at,the,resource,manager,param,address,address,of,the,resource,manager;void,register,at,resource,manager,final,string,address
JobMasterGateway -> void registerAtResourceManager(final String address)_;1482522859;Triggers the registration of the job master at the resource manager.__@param address Address of the resource manager;void registerAtResourceManager(final String address)_;triggers,the,registration,of,the,job,master,at,the,resource,manager,param,address,address,of,the,resource,manager;void,register,at,resource,manager,final,string,address
JobMasterGateway -> void registerAtResourceManager(final String address)_;1482522860;Triggers the registration of the job master at the resource manager.__@param address Address of the resource manager;void registerAtResourceManager(final String address)_;triggers,the,registration,of,the,job,master,at,the,resource,manager,param,address,address,of,the,resource,manager;void,register,at,resource,manager,final,string,address
JobMasterGateway -> void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;1482522862;Fail the slot with the given allocation id and cause.__@param allocationId identifying the slot to fail_@param leaderId identifying the job leader_@param cause of the failing;void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,allocation,id,allocation,id,uuid,leader,id,exception,cause
JobMasterGateway -> void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;1482522863;Fail the slot with the given allocation id and cause.__@param allocationId identifying the slot to fail_@param leaderId identifying the job leader_@param cause of the failing;void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,allocation,id,allocation,id,uuid,leader,id,exception,cause
JobMasterGateway -> void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;1482522863;Fail the slot with the given allocation id and cause.__@param allocationId identifying the slot to fail_@param leaderId identifying the job leader_@param cause of the failing;void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,allocation,id,allocation,id,uuid,leader,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1501760738;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1502452184;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1504472712;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1504525441;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1482522862;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1482522862;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1482522863;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1482522863;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1482522863;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1482522864;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1485118419;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1489766404;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1489766405;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1493308611;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1489766405;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1493308611;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1501760738;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1502452184;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1504472712;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1504525441;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1504608225;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1506376022;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1506553599;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1506553672;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1506967078;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1507825825;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1509037054;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1512061052;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1512229172;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1513258344;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1482522862;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1482522862;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1482522863;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1482522863;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1482522863;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1482522864;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1485118419;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1489766404;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1489766405;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1493308611;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1482522858;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1482522859;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1482522860;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1482522861;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1482522862;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1482522862;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1482522863;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1482522863;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1482522864;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1485118419;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1489766404;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1489766405;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1493308611;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1482522863;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1482522864;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1485118419;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1489766404;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1489766405;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1493308611;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1515588319;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1516970998;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1517914184;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1518712479;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1519317157;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1519481079;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1520032992;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1521555504;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1530472204;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1536327554;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1548350145;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1550228244;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1550366933;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1482522862;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1482522862;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1482522862;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1482522863;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1482522863;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1482522863;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1482522864;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1485118419;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1489766404;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1489766405;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1493308611;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1482522863;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1482522864;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1485118419;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1489766404;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1489766405;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1493308611;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1501760738;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1502452184;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1504472712;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1504525441;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522862;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522862;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522862;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522862;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522863;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522863;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522863;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1482522864;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1485118419;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1489766404;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;1482522862;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID The partition which has already produced data_@param timeout before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;1482522862;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID The partition which has already produced data_@param timeout before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1521555504;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1530472204;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1536327554;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1548350145;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1550228244;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1550366933;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1504608225;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1506376022;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1506553599;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1506553672;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1506967078;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1507825825;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1509037054;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1512061052;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1512229172;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1513258344;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1515588319;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1516970998;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1517914184;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1518712479;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1519317157;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1519481079;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1520032992;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1521555504;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1530472204;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1536327554;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1548350145;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1550228244;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1550366933;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1501760738;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1502452184;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1504472712;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1504525441;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1504608225;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1506376022;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1506553599;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1506553672;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1506967078;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1507825825;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1509037054;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1512061052;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1512229172;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1513258344;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1515588319;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1516970998;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1517914184;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1518712479;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1519317157;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1519481079;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1520032992;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1521555504;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1530472204;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1536327554;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> void suspendJob(final Throwable cause)_;1482522860;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared. Should re-submit_the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1482522861;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1482522861;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1482522862;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1482522862;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1489766404;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1489766405;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1493308611;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1501760738;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1502452184;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1504472712;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1504525441;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1504608225;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1506376022;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1506553599;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1506553672;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1506967078;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1507825825;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1509037054;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1512061052;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1512229172;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1513258344;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1515588319;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1516970998;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1517914184;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1518712479;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1519317157;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1519481079;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1520032992;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1482522862;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1482522862;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1482522863;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1482522863;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1482522863;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1482522864;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1485118419;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1489766404;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1489766405;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1493308611;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1506967078;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1507825825;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1509037054;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1512061052;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1512229172;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1513258344;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1515588319;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1504608225;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1506376022;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1506553599;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1506553672;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1506967078;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1507825825;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1509037054;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1512061052;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1512229172;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1513258344;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1515588319;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1516970998;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1517914184;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1518712479;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1519317157;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1519481079;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1520032992;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1521555504;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1530472204;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1536327554;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1548350145;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1550228244;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1550366933;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1501760738;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1502452184;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1504472712;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1504525441;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1493308611;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1501760738;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1502452184;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1504472712;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1504525441;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1504608225;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1506376022;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1506553599;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1506553672;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1506967078;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1507825825;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1509037054;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1512061052;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1512229172;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1513258344;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1515588319;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1516970998;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1517914184;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1518712479;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1519317157;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1519481079;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1520032992;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1521555504;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1530472204;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1536327554;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1548350145;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1550228244;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1550366933;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519317157;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519481079;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1520032992;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1521555504;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1530472204;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1536327554;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1548350145;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1550228244;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1550366933;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1518712479;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1519317157;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1519481079;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1520032992;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1521555504;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1530472204;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1536327554;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1548350145;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1550228244;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse}.;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1550366933;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse}.;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1530472204;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1536327554;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1548350145;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1550228244;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1550366933;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1482522862;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1482522862;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1482522863;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1482522863;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1482522863;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1482522864;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1485118419;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1489766404;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1489766405;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1493308611;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1504608225;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1506376022;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1506553599;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1506553672;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1506967078;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1507825825;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1509037054;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1512061052;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1512229172;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1513258344;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1515588319;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1516970998;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1517914184;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1518712479;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1519317157;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1519481079;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1520032992;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1521555504;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1530472204;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1536327554;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1548350145;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1550228244;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1550366933;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1504608225;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1506376022;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1506553599;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1506553672;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1506967078;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1507825825;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1509037054;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1512061052;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1512229172;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1501760738;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1502452184;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1504472712;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1504525441;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1504608225;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1506376022;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1506553599;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1506553672;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1506967078;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1507825825;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1509037054;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1512061052;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1512229172;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1513258344;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1515588319;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1516970998;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1513258344;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1515588319;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1516970998;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1517914184;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1518712479;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1519317157;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1519481079;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1520032992;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1521555504;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1530472204;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1536327554;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1548350145;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1550228244;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1550366933;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1501760738;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1502452184;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1504472712;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1504525441;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1518712479;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1519317157;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1519481079;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1520032992;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1521555504;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1530472204;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1536327554;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1548350145;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1550228244;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1550366933;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 		final JobVertexID vertexID, 		final ExecutionAttemptID executionAttempt)_;1482522862;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_		final JobVertexID vertexID,_		final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 		final JobVertexID vertexID, 		final ExecutionAttemptID executionAttempt)_;1482522862;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_		final JobVertexID vertexID,_		final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1509037054;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1512061052;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1512229172;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1513258344;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1515588319;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1516970998;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1501760738;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1502452184;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1504472712;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1504525441;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1502452184;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1504472712;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1504525441;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1504608225;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1506376022;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1506553599;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1506553672;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1506967078;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1507825825;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1509037054;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1512061052;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1512229172;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1513258344;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1515588319;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1516970998;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1517914184;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1518712479;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1519317157;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1519481079;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1520032992;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1521555504;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1530472204;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1536327554;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1548350145;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1550228244;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1550366933;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1482522862;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1482522862;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1482522863;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1482522863;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1482522863;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1482522864;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1485118419;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1489766404;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1489766405;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1493308611;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1506967078;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1507825825;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1509037054;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1512061052;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1512229172;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1513258344;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1515588319;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1516970998;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1517914184;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1518712479;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1519317157;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1519481079;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1520032992;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1521555504;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1530472204;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1536327554;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1548350145;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1550228244;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1550366933;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1504608225;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1506376022;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1506553599;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1506553672;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1506967078;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1507825825;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1509037054;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1512061052;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1512229172;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1513258344;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1515588319;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1516970998;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1517914184;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1518712479;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1519317157;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1519481079;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1520032992;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1521555504;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1530472204;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1536327554;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1548350145;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1550228244;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1550366933;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		final Time timeout)_;1520032992;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		final Time timeout)_;1521555504;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		final Time timeout)_;1530472204;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,final,time,timeout
JobMasterGateway -> @Override 	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;1516970998;Requests the {@link ArchivedExecutionGraph} for the given jobId. If there is no such graph, then_the future is completed with a {@link FlinkJobNotFoundException}.__<p>Note: We enforce that the returned future contains a {@link ArchivedExecutionGraph} unlike_the super interface.__@param jobId identifying the job whose AccessExecutionGraph is requested_@param timeout for the asynchronous operation_@return Future containing the AccessExecutionGraph for the given jobId, otherwise {@link FlinkJobNotFoundException};@Override_	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,for,the,given,job,id,if,there,is,no,such,graph,then,the,future,is,completed,with,a,link,flink,job,not,found,exception,p,note,we,enforce,that,the,returned,future,contains,a,link,archived,execution,graph,unlike,the,super,interface,param,job,id,identifying,the,job,whose,access,execution,graph,is,requested,param,timeout,for,the,asynchronous,operation,return,future,containing,the,access,execution,graph,for,the,given,job,id,otherwise,link,flink,job,not,found,exception;override,completable,future,archived,execution,graph,request,job,job,id,job,id,rpc,timeout,time,timeout
JobMasterGateway -> @Override 	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;1517914184;Requests the {@link ArchivedExecutionGraph} for the given jobId. If there is no such graph, then_the future is completed with a {@link FlinkJobNotFoundException}.__<p>Note: We enforce that the returned future contains a {@link ArchivedExecutionGraph} unlike_the super interface.__@param jobId identifying the job whose AccessExecutionGraph is requested_@param timeout for the asynchronous operation_@return Future containing the AccessExecutionGraph for the given jobId, otherwise {@link FlinkJobNotFoundException};@Override_	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,for,the,given,job,id,if,there,is,no,such,graph,then,the,future,is,completed,with,a,link,flink,job,not,found,exception,p,note,we,enforce,that,the,returned,future,contains,a,link,archived,execution,graph,unlike,the,super,interface,param,job,id,identifying,the,job,whose,access,execution,graph,is,requested,param,timeout,for,the,asynchronous,operation,return,future,containing,the,access,execution,graph,for,the,given,job,id,otherwise,link,flink,job,not,found,exception;override,completable,future,archived,execution,graph,request,job,job,id,job,id,rpc,timeout,time,timeout
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1482522862;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1482522862;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1482522863;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1482522863;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1482522863;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1482522864;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1485118419;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1489766404;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1489766405;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1493308611;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1501760738;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1502452184;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1504472712;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1504525441;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1504608225;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1506376022;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1506553599;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1506553672;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1506967078;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1507825825;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		final String targetDirectory, 		final Time timeout)_;1518712479;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		final String targetDirectory,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,final,string,target,directory,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		final String targetDirectory, 		final Time timeout)_;1519317157;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		final String targetDirectory,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,final,string,target,directory,final,time,timeout
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1501760738;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1502452184;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1504472712;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1504525441;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1507825825;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1509037054;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1512061052;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1512229172;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1513258344;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1515588319;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1516970998;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1517914184;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1518712479;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1519317157;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1519481079;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1520032992;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1521555504;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1530472204;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1536327554;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1548350145;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1550228244;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1550366933;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
