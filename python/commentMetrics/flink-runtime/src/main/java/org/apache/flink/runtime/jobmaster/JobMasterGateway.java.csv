# id;timestamp;commentText;codeText;commentWords;codeWords
JobMasterGateway -> Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;1475679726;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param slots to offer to the job manager_@param leaderId identifying the job leader_@param timeout for the rpc call_@return Future set of accepted slots.;Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,allocation,id,offer,slots,final,iterable,allocation,id,slots,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;1476630057;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param slots to offer to the job manager_@param leaderId identifying the job leader_@param timeout for the rpc call_@return Future set of accepted slots.;Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,allocation,id,offer,slots,final,iterable,allocation,id,slots,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;1476668326;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param slots to offer to the job manager_@param leaderId identifying the job leader_@param timeout for the rpc call_@return Future set of accepted slots.;Future<Iterable<AllocationID>> offerSlots(final Iterable<AllocationID> slots, UUID leaderId, @RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,allocation,id,offer,slots,final,iterable,allocation,id,slots,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1474858756;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1475066391;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1475110587;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void startJob(final UUID leaderSessionID)_;1475593222;Starting the job under the given leader session ID.;void startJob(final UUID leaderSessionID)_;starting,the,job,under,the,given,leader,session,id;void,start,job,final,uuid,leader,session,id
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1503588382;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1505768302;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1505984004;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1506005238;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1506346199;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1507738083;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1508840168;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1510049320;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1510061826;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1511543029;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1512136929;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1516197717;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1516641064;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1518534881;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1518689135;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1519390630;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1519999896;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1521049936;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1525934187;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1534937354;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1547809055;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1549977405;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final ResourceManagerId resourceManagerId, 		final Exception cause)_;1550366933;Disconnects the resource manager from the job manager because of the given cause.__@param resourceManagerId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final ResourceManagerId resourceManagerId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,resource,manager,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,resource,manager,id,resource,manager,id,final,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1506005238;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1506346199;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1507738083;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1508840168;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1510049320;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1510061826;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1511543029;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1512136929;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1516197717;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1516641064;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1518534881;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1518689135;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1519390630;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1519999896;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1521049936;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1525934187;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1534937354;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1547809055;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1549977405;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;1550366933;Cancel the currently executed job.__@param timeout of this operation_@return Future acknowledge if the cancellation was successful;CompletableFuture<Acknowledge> stop(@RpcTimeout Time timeout)_;cancel,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,if,the,cancellation,was,successful;completable,future,acknowledge,stop,rpc,timeout,time,timeout
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			JobID jobId, 			IntermediateDataSetID intermediateResultId, 			ResultPartitionID partitionId)_;1475066391;Requests the current state of the producer of an intermediate result partition._The state of a partition is currently bound to the state of the producing execution.__@param jobId                TheID of job that the intermediate result partition belongs to._@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			JobID jobId,_			IntermediateDataSetID intermediateResultId,_			ResultPartitionID partitionId)_;requests,the,current,state,of,the,producer,of,an,intermediate,result,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,job,id,the,id,of,job,that,the,intermediate,result,partition,belongs,to,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,job,id,job,id,intermediate,data,set,id,intermediate,result,id,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			JobID jobId, 			IntermediateDataSetID intermediateResultId, 			ResultPartitionID partitionId)_;1475593222;Requests the current state of the producer of an intermediate result partition._The state of a partition is currently bound to the state of the producing execution.__@param jobId                TheID of job that the intermediate result partition belongs to._@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			JobID jobId,_			IntermediateDataSetID intermediateResultId,_			ResultPartitionID partitionId)_;requests,the,current,state,of,the,producer,of,an,intermediate,result,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,job,id,the,id,of,job,that,the,intermediate,result,partition,belongs,to,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,job,id,job,id,intermediate,data,set,id,intermediate,result,id,result,partition,id,partition,id
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1475679726;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1476307516;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1476630057;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1476668326;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1476699326;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1476806580;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1484317029;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1484737699;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1488923142;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1490805029;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1501580028;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1502196227;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1503412385;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1503580260;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1503588382;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1505768302;@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1505984004;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1506005238;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1506346199;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1507738083;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1508840168;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1510049320;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1510061826;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1511543029;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1512136929;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName)_;1516197717;Notifies that queryable state has been unregistered.__@param jobVertexId      JobVertexID the KvState instance belongs to._@param keyGroupRange    Key group index the KvState instance belongs to._@param registrationName Name under which the KvState has been registered.;void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName)_;notifies,that,queryable,state,has,been,unregistered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered;void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1518534881;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519390630;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519999896;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1521049936;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1525934187;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1534937354;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1547809055;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1549977405;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleOperators( 		Collection<JobVertexID> operators, 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1550366933;Triggers rescaling of the given set of operators.__@param operators set of operators which shall be rescaled_@param newParallelism new parallelism of the given set of operators_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleOperators(_		Collection<JobVertexID> operators,_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,given,set,of,operators,param,operators,set,of,operators,which,shall,be,rescaled,param,new,parallelism,new,parallelism,of,the,given,set,of,operators,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,operators,collection,job,vertex,id,operators,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1505984004;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1506005238;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1506346199;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1507738083;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1508840168;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1510049320;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1510061826;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1511543029;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1512136929;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1516197717;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1516641064;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1518534881;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1518689135;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1519390630;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1519999896;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1521049936;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1525934187;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1534937354;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1547809055;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1549977405;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;1550366933;Cancels the currently executed job.__@param timeout of this operation_@return Future acknowledge of the operation;CompletableFuture<Acknowledge> cancel(@RpcTimeout Time timeout)_;cancels,the,currently,executed,job,param,timeout,of,this,operation,return,future,acknowledge,of,the,operation;completable,future,acknowledge,cancel,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1534937354;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1547809055;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1549977405;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		@RpcTimeout final Time timeout)_;1550366933;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		@RpcTimeout final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1503588382;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1505768302;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1505984004;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1506005238;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1506346199;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1507738083;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1508840168;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1510049320;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1510061826;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1511543029;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1512136929;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1516197717;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1516641064;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1518534881;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1518689135;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1519390630;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1519999896;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1521049936;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1525934187;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1534937354;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1547809055;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1549977405;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1550366933;Notifies the JobManager about available data for a produced partition.__<p>There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions).__<p>The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1476806580;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1484317029;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1484737699;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1488923142;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1490805029;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1501580028;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1502196227;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void disconnectResourceManager( 		final UUID jobManagerLeaderId, 		final UUID resourceManagerLeaderId, 		final Exception cause)_;1503412385;Disconnects the resource manager from the job manager because of the given cause.__@param jobManagerLeaderId identifying the job manager leader id_@param resourceManagerLeaderId identifying the resource manager leader id_@param cause of the disconnect;void disconnectResourceManager(_		final UUID jobManagerLeaderId,_		final UUID resourceManagerLeaderId,_		final Exception cause)_;disconnects,the,resource,manager,from,the,job,manager,because,of,the,given,cause,param,job,manager,leader,id,identifying,the,job,manager,leader,id,param,resource,manager,leader,id,identifying,the,resource,manager,leader,id,param,cause,of,the,disconnect;void,disconnect,resource,manager,final,uuid,job,manager,leader,id,final,uuid,resource,manager,leader,id,final,exception,cause
JobMasterGateway -> void registerAtResourceManager(final String address)_;1472481329;Triggers the registration of the job master at the resource manager.__@param address Address of the resource manager;void registerAtResourceManager(final String address)_;triggers,the,registration,of,the,job,master,at,the,resource,manager,param,address,address,of,the,resource,manager;void,register,at,resource,manager,final,string,address
JobMasterGateway -> void registerAtResourceManager(final String address)_;1473307213;Triggers the registration of the job master at the resource manager.__@param address Address of the resource manager;void registerAtResourceManager(final String address)_;triggers,the,registration,of,the,job,master,at,the,resource,manager,param,address,address,of,the,resource,manager;void,register,at,resource,manager,final,string,address
JobMasterGateway -> void registerAtResourceManager(final String address)_;1474471581;Triggers the registration of the job master at the resource manager.__@param address Address of the resource manager;void registerAtResourceManager(final String address)_;triggers,the,registration,of,the,job,master,at,the,resource,manager,param,address,address,of,the,resource,manager;void,register,at,resource,manager,final,string,address
JobMasterGateway -> void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;1475679726;Fail the slot with the given allocation id and cause.__@param allocationId identifying the slot to fail_@param leaderId identifying the job leader_@param cause of the failing;void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,allocation,id,allocation,id,uuid,leader,id,exception,cause
JobMasterGateway -> void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;1476630057;Fail the slot with the given allocation id and cause.__@param allocationId identifying the slot to fail_@param leaderId identifying the job leader_@param cause of the failing;void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,allocation,id,allocation,id,uuid,leader,id,exception,cause
JobMasterGateway -> void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;1476668326;Fail the slot with the given allocation id and cause.__@param allocationId identifying the slot to fail_@param leaderId identifying the job leader_@param cause of the failing;void failSlot(final AllocationID allocationId, UUID leaderId, Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,allocation,id,allocation,id,uuid,leader,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1501580028;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1502196227;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1503412385;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1503580260;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1475679726;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1476307516;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1476630057;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1476668326;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1476699326;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1476806580;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1484317029;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1484737699;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1488923142;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> Future<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1490805029;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;Future<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1488923142;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1490805029;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1501580028;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1502196227;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1503412385;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1503580260;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1503588382;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1505768302;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1505984004;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1506005238;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1506346199;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1507738083;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1508840168;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1510049320;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1510061826;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID, Exception cause)_;1511543029;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager;void disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager;void,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1475679726;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1476307516;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1476630057;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1476668326;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1476699326;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1476806580;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1484317029;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1484737699;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1488923142;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1490805029;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1472481329;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1473307213;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1474471581;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1475066391;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1475110587;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future acknowledge of the task execution state update;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,acknowledge,of,the,task,execution,state,update;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;1475593222;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,task,execution,state,task,execution,state
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1476668326;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1476699326;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1476806580;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1484317029;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1484737699;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1488923142;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1490805029;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;Future<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1476699326;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1476806580;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1484317029;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1484737699;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1488923142;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Iterable<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1490805029;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;Future<Iterable<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;future,iterable,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1512136929;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1516197717;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1516641064;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1518534881;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1518689135;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1519390630;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1519999896;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1521049936;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1525934187;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1534937354;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1547809055;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1549977405;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;1550366933;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect_@param cause for the disconnection of the TaskManager_@return Future acknowledge once the JobMaster has been disconnected from the TaskManager;CompletableFuture<Acknowledge> disconnectTaskManager(ResourceID resourceID, Exception cause)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect,param,cause,for,the,disconnection,of,the,task,manager,return,future,acknowledge,once,the,job,master,has,been,disconnected,from,the,task,manager;completable,future,acknowledge,disconnect,task,manager,resource,id,resource,id,exception,cause
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1475593222;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1475679726;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1476307516;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1476630057;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1476668326;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1476699326;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1476806580;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1484317029;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1484737699;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1488923142;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> Future<ClassloadingProps> requestClassloadingProps()_;1490805029;Request the classloading props of this job.;Future<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;future,classloading,props,request,classloading,props
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1476699326;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1476806580;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1484317029;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1484737699;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1488923142;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1490805029;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1501580028;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1502196227;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1503412385;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final UUID leaderId, 			final Exception cause)_;1503580260;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param leaderId      identifying the job leader_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final UUID leaderId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,leader,id,identifying,the,job,leader,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,uuid,leader,id,final,exception,cause
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1475066391;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1475593222;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1475679726;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1476307516;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1476630057;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1476668326;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1476699326;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1476806580;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1484317029;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> void disconnectTaskManager(ResourceID resourceID)_;1484737699;Disconnects the given {@link org.apache.flink.runtime.taskexecutor.TaskExecutor} from the_{@link JobMaster}.__@param resourceID identifying the TaskManager to disconnect;void disconnectTaskManager(ResourceID resourceID)_;disconnects,the,given,link,org,apache,flink,runtime,taskexecutor,task,executor,from,the,link,job,master,param,resource,id,identifying,the,task,manager,to,disconnect;void,disconnect,task,manager,resource,id,resource,id
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;1475066391;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID The partition which has already produced data_@param timeout before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;1475593222;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param partitionID The partition which has already produced data_@param timeout before the rpc call fails_@return Future acknowledge of the schedule or update operation;Future<Acknowledge> scheduleOrUpdateConsumers(final ResultPartitionID partitionID, @RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;future,acknowledge,schedule,or,update,consumers,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1521049936;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1525934187;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1534937354;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1547809055;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1549977405;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> void heartbeatFromTaskManager( 		final ResourceID resourceID, 		final AccumulatorReport accumulatorReport)_;1550366933;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager_@param accumulatorReport report containing accumulator updates;void heartbeatFromTaskManager(_		final ResourceID resourceID,_		final AccumulatorReport accumulatorReport)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager,param,accumulator,report,report,containing,accumulator,updates;void,heartbeat,from,task,manager,final,resource,id,resource,id,final,accumulator,report,accumulator,report
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1503588382;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1505768302;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1505984004;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1506005238;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1506346199;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1507738083;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1508840168;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1510049320;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1510061826;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1511543029;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1512136929;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1516197717;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1516641064;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1518534881;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1518689135;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1519390630;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1519999896;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1521049936;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1525934187;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1534937354;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1547809055;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1549977405;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<Acknowledge> updateTaskExecutionState( 			final TaskExecutionState taskExecutionState)_;1550366933;Updates the task execution state for a given task.__@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;CompletableFuture<Acknowledge> updateTaskExecutionState(_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;completable,future,acknowledge,update,task,execution,state,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1501580028;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1502196227;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1503412385;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1503580260;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1503588382;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1505768302;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1505984004;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1506005238;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1506346199;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1507738083;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1508840168;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1510049320;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1510061826;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1511543029;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1512136929;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1516197717;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1516641064;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1518534881;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1518689135;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1519390630;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1519999896;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1521049936;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1525934187;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> CompletableFuture<ClassloadingProps> requestClassloadingProps()_;1534937354;Request the classloading props of this job.;CompletableFuture<ClassloadingProps> requestClassloadingProps()_;request,the,classloading,props,of,this,job;completable,future,classloading,props,request,classloading,props
JobMasterGateway -> void suspendJob(final Throwable cause)_;1473307213;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared. Should re-submit_the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1474858756;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1475066391;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1475110587;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void suspendJob(final Throwable cause)_;1475593222;Suspending job, all the running tasks will be cancelled, and runtime status will be cleared._Should re-submit the job before restarting it.__@param cause The reason of why this job been suspended.;void suspendJob(final Throwable cause)_;suspending,job,all,the,running,tasks,will,be,cancelled,and,runtime,status,will,be,cleared,should,re,submit,the,job,before,restarting,it,param,cause,the,reason,of,why,this,job,been,suspended;void,suspend,job,final,throwable,cause
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1484737699;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1488923142;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1490805029;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1501580028;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1502196227;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1503412385;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1503580260;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1503588382;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1505768302;Send the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;send,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1505984004;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1506005238;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1506346199;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1507738083;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1508840168;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1510049320;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1510061826;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1511543029;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1512136929;Sends the heartbeat to job manager from task manager__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1516197717;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1516641064;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1518534881;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1518689135;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1519390630;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromTaskManager(final ResourceID resourceID)_;1519999896;Sends the heartbeat to job manager from task manager.__@param resourceID unique id of the task manager;void heartbeatFromTaskManager(final ResourceID resourceID)_;sends,the,heartbeat,to,job,manager,from,task,manager,param,resource,id,unique,id,of,the,task,manager;void,heartbeat,from,task,manager,final,resource,id,resource,id
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1475679726;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1476307516;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1476630057;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1476668326;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1476699326;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1476806580;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1484317029;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1484737699;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1488923142;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> Future<Acknowledge> updateTaskExecutionState( 			final UUID leaderSessionID, 			final TaskExecutionState taskExecutionState)_;1490805029;Updates the task execution state for a given task.__@param leaderSessionID    The leader id of JobManager_@param taskExecutionState New task execution state for a given task_@return Future flag of the task execution state update result;Future<Acknowledge> updateTaskExecutionState(_			final UUID leaderSessionID,_			final TaskExecutionState taskExecutionState)_;updates,the,task,execution,state,for,a,given,task,param,leader,session,id,the,leader,id,of,job,manager,param,task,execution,state,new,task,execution,state,for,a,given,task,return,future,flag,of,the,task,execution,state,update,result;future,acknowledge,update,task,execution,state,final,uuid,leader,session,id,final,task,execution,state,task,execution,state
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1506346199;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1507738083;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1508840168;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1510049320;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1510061826;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1511543029;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;1512136929;Request the {@link ArchivedExecutionGraph} of the currently executed job.__@param timeout for the rpc call_@return Future archived execution graph derived from the currently executed job;CompletableFuture<AccessExecutionGraph> requestArchivedExecutionGraph(@RpcTimeout Time timeout)_;request,the,link,archived,execution,graph,of,the,currently,executed,job,param,timeout,for,the,rpc,call,return,future,archived,execution,graph,derived,from,the,currently,executed,job;completable,future,access,execution,graph,request,archived,execution,graph,rpc,timeout,time,timeout
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1503588382;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1505768302;Fail the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fail,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1505984004;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1506005238;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1506346199;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1507738083;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1508840168;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1510049320;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1510061826;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1511543029;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1512136929;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1516197717;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1516641064;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1518534881;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1518689135;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1519390630;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1519999896;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1521049936;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1525934187;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1534937354;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1547809055;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1549977405;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> void failSlot(final ResourceID taskManagerId, 			final AllocationID allocationId, 			final Exception cause)_;1550366933;Fails the slot with the given allocation id and cause.__@param taskManagerId identifying the task manager_@param allocationId  identifying the slot to fail_@param cause         of the failing;void failSlot(final ResourceID taskManagerId,_			final AllocationID allocationId,_			final Exception cause)_;fails,the,slot,with,the,given,allocation,id,and,cause,param,task,manager,id,identifying,the,task,manager,param,allocation,id,identifying,the,slot,to,fail,param,cause,of,the,failing;void,fail,slot,final,resource,id,task,manager,id,final,allocation,id,allocation,id,final,exception,cause
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1501580028;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1502196227;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1503412385;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1503580260;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1490805029;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1501580028;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1502196227;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1503412385;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1503580260;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1503588382;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1505768302;Heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1505984004;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1506005238;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1506346199;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1507738083;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1508840168;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1510049320;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1510061826;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1511543029;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1512136929;Sends heartbeat request from the resource manager__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1516197717;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1516641064;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1518534881;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1518689135;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1519390630;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1519999896;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1521049936;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1525934187;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1534937354;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1547809055;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1549977405;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> void heartbeatFromResourceManager(final ResourceID resourceID)_;1550366933;Sends heartbeat request from the resource manager.__@param resourceID unique id of the resource manager;void heartbeatFromResourceManager(final ResourceID resourceID)_;sends,heartbeat,request,from,the,resource,manager,param,resource,id,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,final,resource,id,resource,id
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1518534881;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519390630;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1519999896;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1521049936;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1525934187;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1534937354;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1547809055;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1549977405;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> rescaleJob( 		int newParallelism, 		RescalingBehaviour rescalingBehaviour, 		@RpcTimeout Time timeout)_;1550366933;Triggers rescaling of the executed job.__@param newParallelism new parallelism of the job_@param rescalingBehaviour defining how strict the rescaling has to be executed_@param timeout of this operation_@return Future which is completed with {@link Acknowledge} once the rescaling was successful;CompletableFuture<Acknowledge> rescaleJob(_		int newParallelism,_		RescalingBehaviour rescalingBehaviour,_		@RpcTimeout Time timeout)_;triggers,rescaling,of,the,executed,job,param,new,parallelism,new,parallelism,of,the,job,param,rescaling,behaviour,defining,how,strict,the,rescaling,has,to,be,executed,param,timeout,of,this,operation,return,future,which,is,completed,with,link,acknowledge,once,the,rescaling,was,successful;completable,future,acknowledge,rescale,job,int,new,parallelism,rescaling,behaviour,rescaling,behaviour,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1518534881;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1518689135;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1519390630;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1519999896;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1521049936;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1525934187;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1534937354;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1547809055;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse} or {@code null} if the stats are_not available (yet).;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response,or,code,null,if,the,stats,are,not,available,yet;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1549977405;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse}.;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;1550366933;Requests the statistics on operator back pressure.__@param jobVertexId JobVertex for which the stats are requested._@return A Future to the {@link OperatorBackPressureStatsResponse}.;CompletableFuture<OperatorBackPressureStatsResponse> requestOperatorBackPressureStats(JobVertexID jobVertexId)_;requests,the,statistics,on,operator,back,pressure,param,job,vertex,id,job,vertex,for,which,the,stats,are,requested,return,a,future,to,the,link,operator,back,pressure,stats,response;completable,future,operator,back,pressure,stats,response,request,operator,back,pressure,stats,job,vertex,id,job,vertex,id
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1525934187;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1534937354;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1547809055;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1549977405;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;1550366933;Notifies that the allocation has failed.__@param allocationID the failed allocation id._@param cause the reason that the allocation failed;void notifyAllocationFailure(AllocationID allocationID, Exception cause)_;notifies,that,the,allocation,has,failed,param,allocation,id,the,failed,allocation,id,param,cause,the,reason,that,the,allocation,failed;void,notify,allocation,failure,allocation,id,allocation,id,exception,cause
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1475679726;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1476307516;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1476630057;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1476668326;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1476699326;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1476806580;Requests a {@link KvStateLocation} for the specified {@link KvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link KvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1484317029;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1484737699;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1488923142;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1490805029;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;Future<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1503588382;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1505768302;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1505984004;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1506005238;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1506346199;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1507738083;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1508840168;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1510049320;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1510061826;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1511543029;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1512136929;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1516197717;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1516641064;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1518534881;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1518689135;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1519390630;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1519999896;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1521049936;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1525934187;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1534937354;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1547809055;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1549977405;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1550366933;Requests the current state of the partition. The state of a_partition is currently bound to the state of the producing execution.__@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1503588382;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1505768302;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1505984004;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1506005238;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1506346199;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1507738083;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1508840168;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1510049320;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1510061826;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1501580028;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1502196227;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1503412385;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1503580260;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1503588382;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1505768302;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1505984004;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1506005238;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1506346199;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1507738083;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1508840168;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1510049320;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1510061826;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1511543029;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1512136929;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;1516197717;Requests a {@link KvStateLocation} for the specified {@link InternalKvState} registration name.__@param registrationName Name under which the KvState has been registered._@return Future of the requested {@link InternalKvState} location;CompletableFuture<KvStateLocation> lookupKvStateLocation(final String registrationName)_;requests,a,link,kv,state,location,for,the,specified,link,internal,kv,state,registration,name,param,registration,name,name,under,which,the,kv,state,has,been,registered,return,future,of,the,requested,link,internal,kv,state,location;completable,future,kv,state,location,lookup,kv,state,location,final,string,registration,name
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1511543029;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1512136929;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1516197717;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1516641064;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1518534881;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1518689135;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1519390630;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1519999896;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1521049936;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1525934187;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1534937354;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1547809055;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1549977405;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Collection<SlotOffer> slots, 			@RpcTimeout final Time timeout)_;1550366933;Offers the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Collection<SlotOffer> slots,_			@RpcTimeout final Time timeout)_;offers,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,collection,slot,offer,slots,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1501580028;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1502196227;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1503412385;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Acknowledge> scheduleOrUpdateConsumers( 			final UUID leaderSessionID, 			final ResultPartitionID partitionID, 			@RpcTimeout final Time timeout)_;1503580260;Notifies the JobManager about available data for a produced partition._<p>_There is a call to this method for each {@link ExecutionVertex} instance once per produced_{@link ResultPartition} instance, either when first producing data (for pipelined executions)_or when all data has been produced (for staged executions)._<p>_The JobManager then can decide when to schedule the partition consumers of the given session.__@param leaderSessionID The leader id of JobManager_@param partitionID     The partition which has already produced data_@param timeout         before the rpc call fails_@return Future acknowledge of the schedule or update operation;CompletableFuture<Acknowledge> scheduleOrUpdateConsumers(_			final UUID leaderSessionID,_			final ResultPartitionID partitionID,_			@RpcTimeout final Time timeout)_;notifies,the,job,manager,about,available,data,for,a,produced,partition,p,there,is,a,call,to,this,method,for,each,link,execution,vertex,instance,once,per,produced,link,result,partition,instance,either,when,first,producing,data,for,pipelined,executions,or,when,all,data,has,been,produced,for,staged,executions,p,the,job,manager,then,can,decide,when,to,schedule,the,partition,consumers,of,the,given,session,param,leader,session,id,the,leader,id,of,job,manager,param,partition,id,the,partition,which,has,already,produced,data,param,timeout,before,the,rpc,call,fails,return,future,acknowledge,of,the,schedule,or,update,operation;completable,future,acknowledge,schedule,or,update,consumers,final,uuid,leader,session,id,final,result,partition,id,partition,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1518534881;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1518689135;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1519390630;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1519999896;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1521049936;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1525934187;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1534937354;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1547809055;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1549977405;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;1550366933;Requests the {@link ArchivedExecutionGraph} of the executed job.__@param timeout for the rpc call_@return Future which is completed with the {@link ArchivedExecutionGraph} of the executed job;CompletableFuture<ArchivedExecutionGraph> requestJob(@RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,link,archived,execution,graph,of,the,executed,job;completable,future,archived,execution,graph,request,job,rpc,timeout,time,timeout
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 		final JobVertexID vertexID, 		final ExecutionAttemptID executionAttempt)_;1475066391;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_		final JobVertexID vertexID,_		final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 		final JobVertexID vertexID, 		final ExecutionAttemptID executionAttempt)_;1475593222;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_		final JobVertexID vertexID,_		final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1508840168;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1510049320;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1510061826;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1511543029;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1512136929;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final InetSocketAddress kvStateServerAddress)_;1516197717;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final InetSocketAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,inet,socket,address,kv,state,server,address
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1501580028;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1502196227;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1503412385;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1503580260;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param leaderId              identifying the job leader_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1502196227;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1503412385;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<Collection<SlotOffer>> offerSlots( 			final ResourceID taskManagerId, 			final Iterable<SlotOffer> slots, 			final UUID leaderId, 			@RpcTimeout final Time timeout)_;1503580260;Offer the given slots to the job manager. The response contains the set of accepted slots.__@param taskManagerId identifying the task manager_@param slots         to offer to the job manager_@param leaderId      identifying the job leader_@param timeout       for the rpc call_@return Future set of accepted slots.;CompletableFuture<Collection<SlotOffer>> offerSlots(_			final ResourceID taskManagerId,_			final Iterable<SlotOffer> slots,_			final UUID leaderId,_			@RpcTimeout final Time timeout)_;offer,the,given,slots,to,the,job,manager,the,response,contains,the,set,of,accepted,slots,param,task,manager,id,identifying,the,task,manager,param,slots,to,offer,to,the,job,manager,param,leader,id,identifying,the,job,leader,param,timeout,for,the,rpc,call,return,future,set,of,accepted,slots;completable,future,collection,slot,offer,offer,slots,final,resource,id,task,manager,id,final,iterable,slot,offer,slots,final,uuid,leader,id,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1503588382;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1505768302;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1505984004;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1506005238;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1506346199;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1507738083;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1508840168;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1510049320;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1510061826;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1511543029;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1512136929;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1516197717;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1516641064;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1518534881;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1518689135;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1519390630;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1519999896;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1521049936;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1525934187;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1534937354;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1547809055;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1549977405;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<SerializedInputSplit> requestNextInputSplit( 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1550366933;Requests the next input split for the {@link ExecutionJobVertex}._The next input split is sent back to the sender as a_{@link SerializedInputSplit} message.__@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;CompletableFuture<SerializedInputSplit> requestNextInputSplit(_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requests,the,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;completable,future,serialized,input,split,request,next,input,split,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1475679726;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1476307516;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1476630057;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1476668326;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1476699326;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1476806580;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1484317029;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1484737699;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1488923142;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> Future<SerializedInputSplit> requestNextInputSplit( 			final UUID leaderSessionID, 			final JobVertexID vertexID, 			final ExecutionAttemptID executionAttempt)_;1490805029;Requesting next input split for the {@link ExecutionJobVertex}. The next input split is sent back to the sender_as a {@link SerializedInputSplit} message.__@param leaderSessionID  The leader id of JobManager_@param vertexID         The job vertex id_@param executionAttempt The execution attempt id_@return The future of the input split. If there is no further input split, will return an empty object.;Future<SerializedInputSplit> requestNextInputSplit(_			final UUID leaderSessionID,_			final JobVertexID vertexID,_			final ExecutionAttemptID executionAttempt)_;requesting,next,input,split,for,the,link,execution,job,vertex,the,next,input,split,is,sent,back,to,the,sender,as,a,link,serialized,input,split,message,param,leader,session,id,the,leader,id,of,job,manager,param,vertex,id,the,job,vertex,id,param,execution,attempt,the,execution,attempt,id,return,the,future,of,the,input,split,if,there,is,no,further,input,split,will,return,an,empty,object;future,serialized,input,split,request,next,input,split,final,uuid,leader,session,id,final,job,vertex,id,vertex,id,final,execution,attempt,id,execution,attempt
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1506346199;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1507738083;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1508840168;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1510049320;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1510061826;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1511543029;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1512136929;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1516197717;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1516641064;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1518534881;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1518689135;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1519390630;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1519999896;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1521049936;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1525934187;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1534937354;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1547809055;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1549977405;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;1550366933;Request the details of the executed job.__@param timeout for the rpc call_@return Future details of the executed job;CompletableFuture<JobDetails> requestJobDetails(@RpcTimeout Time timeout)_;request,the,details,of,the,executed,job,param,timeout,for,the,rpc,call,return,future,details,of,the,executed,job;completable,future,job,details,request,job,details,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1503588382;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1505768302;Register the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;register,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1505984004;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1506005238;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1506346199;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1507738083;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1508840168;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1510049320;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1510061826;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1511543029;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1512136929;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1516197717;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1516641064;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1518534881;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1518689135;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1519390630;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1519999896;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1521049936;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1525934187;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1534937354;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1547809055;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1549977405;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<RegistrationResponse> registerTaskManager( 			final String taskManagerRpcAddress, 			final TaskManagerLocation taskManagerLocation, 			@RpcTimeout final Time timeout)_;1550366933;Registers the task manager at the job manager.__@param taskManagerRpcAddress the rpc address of the task manager_@param taskManagerLocation   location of the task manager_@param timeout               for the rpc call_@return Future registration response indicating whether the registration was successful or not;CompletableFuture<RegistrationResponse> registerTaskManager(_			final String taskManagerRpcAddress,_			final TaskManagerLocation taskManagerLocation,_			@RpcTimeout final Time timeout)_;registers,the,task,manager,at,the,job,manager,param,task,manager,rpc,address,the,rpc,address,of,the,task,manager,param,task,manager,location,location,of,the,task,manager,param,timeout,for,the,rpc,call,return,future,registration,response,indicating,whether,the,registration,was,successful,or,not;completable,future,registration,response,register,task,manager,final,string,task,manager,rpc,address,final,task,manager,location,task,manager,location,rpc,timeout,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		final Time timeout)_;1519999896;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		final Time timeout)_;1521049936;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		@Nullable final String targetDirectory, 		final boolean cancelJob, 		final Time timeout)_;1525934187;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data or null if the_default savepoint directory should be used_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		@Nullable final String targetDirectory,_		final boolean cancelJob,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,or,null,if,the,default,savepoint,directory,should,be,used,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,nullable,final,string,target,directory,final,boolean,cancel,job,final,time,timeout
JobMasterGateway -> @Override 	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;1516197717;Requests the {@link ArchivedExecutionGraph} for the given jobId. If there is no such graph, then_the future is completed with a {@link FlinkJobNotFoundException}.__<p>Note: We enforce that the returned future contains a {@link ArchivedExecutionGraph} unlike_the super interface.__@param jobId identifying the job whose AccessExecutionGraph is requested_@param timeout for the asynchronous operation_@return Future containing the AccessExecutionGraph for the given jobId, otherwise {@link FlinkJobNotFoundException};@Override_	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,for,the,given,job,id,if,there,is,no,such,graph,then,the,future,is,completed,with,a,link,flink,job,not,found,exception,p,note,we,enforce,that,the,returned,future,contains,a,link,archived,execution,graph,unlike,the,super,interface,param,job,id,identifying,the,job,whose,access,execution,graph,is,requested,param,timeout,for,the,asynchronous,operation,return,future,containing,the,access,execution,graph,for,the,given,job,id,otherwise,link,flink,job,not,found,exception;override,completable,future,archived,execution,graph,request,job,job,id,job,id,rpc,timeout,time,timeout
JobMasterGateway -> @Override 	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;1516641064;Requests the {@link ArchivedExecutionGraph} for the given jobId. If there is no such graph, then_the future is completed with a {@link FlinkJobNotFoundException}.__<p>Note: We enforce that the returned future contains a {@link ArchivedExecutionGraph} unlike_the super interface.__@param jobId identifying the job whose AccessExecutionGraph is requested_@param timeout for the asynchronous operation_@return Future containing the AccessExecutionGraph for the given jobId, otherwise {@link FlinkJobNotFoundException};@Override_	CompletableFuture<ArchivedExecutionGraph> requestJob(JobID jobId, @RpcTimeout Time timeout)_;requests,the,link,archived,execution,graph,for,the,given,job,id,if,there,is,no,such,graph,then,the,future,is,completed,with,a,link,flink,job,not,found,exception,p,note,we,enforce,that,the,returned,future,contains,a,link,archived,execution,graph,unlike,the,super,interface,param,job,id,identifying,the,job,whose,access,execution,graph,is,requested,param,timeout,for,the,asynchronous,operation,return,future,containing,the,access,execution,graph,for,the,given,job,id,otherwise,link,flink,job,not,found,exception;override,completable,future,archived,execution,graph,request,job,job,id,job,id,rpc,timeout,time,timeout
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1475679726;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1476307516;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1476630057;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1476668326;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1476699326;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1476806580;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1484317029;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1484737699;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1488923142;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1490805029;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1501580028;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1502196227;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1503412385;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1503580260;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1503588382;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1505768302;@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1505984004;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1506005238;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1506346199;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> void notifyKvStateRegistered( 			final JobVertexID jobVertexId, 			final KeyGroupRange keyGroupRange, 			final String registrationName, 			final KvStateID kvStateId, 			final KvStateServerAddress kvStateServerAddress)_;1507738083;Notifies that queryable state has been registered.__@param jobVertexId          JobVertexID the KvState instance belongs to._@param keyGroupRange        Key group range the KvState instance belongs to._@param registrationName     Name under which the KvState has been registered._@param kvStateId            ID of the registered KvState instance._@param kvStateServerAddress Server address where to find the KvState instance.;void notifyKvStateRegistered(_			final JobVertexID jobVertexId,_			final KeyGroupRange keyGroupRange,_			final String registrationName,_			final KvStateID kvStateId,_			final KvStateServerAddress kvStateServerAddress)_;notifies,that,queryable,state,has,been,registered,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance;void,notify,kv,state,registered,final,job,vertex,id,job,vertex,id,final,key,group,range,key,group,range,final,string,registration,name,final,kv,state,id,kv,state,id,final,kv,state,server,address,kv,state,server,address
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		final String targetDirectory, 		final Time timeout)_;1518534881;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		final String targetDirectory,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,final,string,target,directory,final,time,timeout
JobMasterGateway -> CompletableFuture<String> triggerSavepoint( 		final String targetDirectory, 		final Time timeout)_;1518689135;Triggers taking a savepoint of the executed job.__@param targetDirectory to which to write the savepoint data_@param timeout for the rpc call_@return Future which is completed with the savepoint path once completed;CompletableFuture<String> triggerSavepoint(_		final String targetDirectory,_		final Time timeout)_;triggers,taking,a,savepoint,of,the,executed,job,param,target,directory,to,which,to,write,the,savepoint,data,param,timeout,for,the,rpc,call,return,future,which,is,completed,with,the,savepoint,path,once,completed;completable,future,string,trigger,savepoint,final,string,target,directory,final,time,timeout
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1501580028;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1502196227;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1503412385;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<ExecutionState> requestPartitionState( 			final UUID leaderSessionID, 			final IntermediateDataSetID intermediateResultId, 			final ResultPartitionID partitionId)_;1503580260;Requests the current state of the partition._The state of a partition is currently bound to the state of the producing execution.__@param leaderSessionID The leader id of JobManager_@param intermediateResultId The execution attempt ID of the task requesting the partition state._@param partitionId          The partition ID of the partition to request the state of._@return The future of the partition state;CompletableFuture<ExecutionState> requestPartitionState(_			final UUID leaderSessionID,_			final IntermediateDataSetID intermediateResultId,_			final ResultPartitionID partitionId)_;requests,the,current,state,of,the,partition,the,state,of,a,partition,is,currently,bound,to,the,state,of,the,producing,execution,param,leader,session,id,the,leader,id,of,job,manager,param,intermediate,result,id,the,execution,attempt,id,of,the,task,requesting,the,partition,state,param,partition,id,the,partition,id,of,the,partition,to,request,the,state,of,return,the,future,of,the,partition,state;completable,future,execution,state,request,partition,state,final,uuid,leader,session,id,final,intermediate,data,set,id,intermediate,result,id,final,result,partition,id,partition,id
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1507738083;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1508840168;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1510049320;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1510061826;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1511543029;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1512136929;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1516197717;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1516641064;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1518534881;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1518689135;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1519390630;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1519999896;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1521049936;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1525934187;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1534937354;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1547809055;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1549977405;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
JobMasterGateway -> CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;1550366933;Requests the current job status.__@param timeout for the rpc call_@return Future containing the current job status;CompletableFuture<JobStatus> requestJobStatus(@RpcTimeout Time timeout)_;requests,the,current,job,status,param,timeout,for,the,rpc,call,return,future,containing,the,current,job,status;completable,future,job,status,request,job,status,rpc,timeout,time,timeout
