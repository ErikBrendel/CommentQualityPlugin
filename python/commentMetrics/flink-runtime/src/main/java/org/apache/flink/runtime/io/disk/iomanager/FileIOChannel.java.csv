# id;timestamp;commentText;codeText;commentWords;codeWords
FileIOChannel -> void close() throws IOException_;1415702894;Closes the channel. For asynchronous implementations, this method waits until all pending requests are_handled. Even if an exception interrupts the closing, the underlying <tt>FileChannel</tt> is closed.__@throws IOException Thrown, if an error occurred while waiting for pending requests.;void close() throws IOException_;closes,the,channel,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,even,if,an,exception,interrupts,the,closing,the,underlying,tt,file,channel,tt,is,closed,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;void,close,throws,ioexception
FileIOChannel -> void close() throws IOException_;1421838095;Closes the channel. For asynchronous implementations, this method waits until all pending requests are_handled. Even if an exception interrupts the closing, the underlying <tt>FileChannel</tt> is closed.__@throws IOException Thrown, if an error occurred while waiting for pending requests.;void close() throws IOException_;closes,the,channel,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,even,if,an,exception,interrupts,the,closing,the,underlying,tt,file,channel,tt,is,closed,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;void,close,throws,ioexception
FileIOChannel -> void close() throws IOException_;1424338528;Closes the channel. For asynchronous implementations, this method waits until all pending requests are_handled. Even if an exception interrupts the closing, the underlying <tt>FileChannel</tt> is closed.__@throws IOException Thrown, if an error occurred while waiting for pending requests.;void close() throws IOException_;closes,the,channel,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,even,if,an,exception,interrupts,the,closing,the,underlying,tt,file,channel,tt,is,closed,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;void,close,throws,ioexception
FileIOChannel -> void close() throws IOException_;1424732907;Closes the channel. For asynchronous implementations, this method waits until all pending requests are_handled. Even if an exception interrupts the closing, the underlying <tt>FileChannel</tt> is closed.__@throws IOException Thrown, if an error occurred while waiting for pending requests.;void close() throws IOException_;closes,the,channel,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,even,if,an,exception,interrupts,the,closing,the,underlying,tt,file,channel,tt,is,closed,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;void,close,throws,ioexception
FileIOChannel -> void close() throws IOException_;1426697080;Closes the channel. For asynchronous implementations, this method waits until all pending requests are_handled. Even if an exception interrupts the closing, the underlying <tt>FileChannel</tt> is closed.__@throws IOException Thrown, if an error occurred while waiting for pending requests.;void close() throws IOException_;closes,the,channel,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,even,if,an,exception,interrupts,the,closing,the,underlying,tt,file,channel,tt,is,closed,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;void,close,throws,ioexception
FileIOChannel -> void close() throws IOException_;1445420766;Closes the channel. For asynchronous implementations, this method waits until all pending requests are_handled. Even if an exception interrupts the closing, the underlying <tt>FileChannel</tt> is closed.__@throws IOException Thrown, if an error occurred while waiting for pending requests.;void close() throws IOException_;closes,the,channel,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,even,if,an,exception,interrupts,the,closing,the,underlying,tt,file,channel,tt,is,closed,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;void,close,throws,ioexception
FileIOChannel -> long getSize() throws IOException_;1421838095;Gets the size (in bytes) of the file underlying the channel.__@return The size (in bytes) of the file underlying the channel.;long getSize() throws IOException_;gets,the,size,in,bytes,of,the,file,underlying,the,channel,return,the,size,in,bytes,of,the,file,underlying,the,channel;long,get,size,throws,ioexception
FileIOChannel -> long getSize() throws IOException_;1424338528;Gets the size (in bytes) of the file underlying the channel.__@return The size (in bytes) of the file underlying the channel.;long getSize() throws IOException_;gets,the,size,in,bytes,of,the,file,underlying,the,channel,return,the,size,in,bytes,of,the,file,underlying,the,channel;long,get,size,throws,ioexception
FileIOChannel -> long getSize() throws IOException_;1424732907;Gets the size (in bytes) of the file underlying the channel.__@return The size (in bytes) of the file underlying the channel.;long getSize() throws IOException_;gets,the,size,in,bytes,of,the,file,underlying,the,channel,return,the,size,in,bytes,of,the,file,underlying,the,channel;long,get,size,throws,ioexception
FileIOChannel -> long getSize() throws IOException_;1426697080;Gets the size (in bytes) of the file underlying the channel.__@return The size (in bytes) of the file underlying the channel.;long getSize() throws IOException_;gets,the,size,in,bytes,of,the,file,underlying,the,channel,return,the,size,in,bytes,of,the,file,underlying,the,channel;long,get,size,throws,ioexception
FileIOChannel -> long getSize() throws IOException_;1445420766;Gets the size (in bytes) of the file underlying the channel.__@return The size (in bytes) of the file underlying the channel.;long getSize() throws IOException_;gets,the,size,in,bytes,of,the,file,underlying,the,channel,return,the,size,in,bytes,of,the,file,underlying,the,channel;long,get,size,throws,ioexception
FileIOChannel -> ID -> public File getPathFile();1424338528;Returns the path to the underlying temporary file as a File._@return The path to the underlying temporary file as a File.;public File getPathFile() {_			return path__		};returns,the,path,to,the,underlying,temporary,file,as,a,file,return,the,path,to,the,underlying,temporary,file,as,a,file;public,file,get,path,file,return,path
FileIOChannel -> ID -> public File getPathFile();1424732907;Returns the path to the underlying temporary file as a File._@return The path to the underlying temporary file as a File.;public File getPathFile() {_			return path__		};returns,the,path,to,the,underlying,temporary,file,as,a,file,return,the,path,to,the,underlying,temporary,file,as,a,file;public,file,get,path,file,return,path
FileIOChannel -> ID -> public File getPathFile();1426697080;Returns the path to the underlying temporary file as a File._@return The path to the underlying temporary file as a File.;public File getPathFile() {_			return path__		};returns,the,path,to,the,underlying,temporary,file,as,a,file,return,the,path,to,the,underlying,temporary,file,as,a,file;public,file,get,path,file,return,path
FileIOChannel -> ID -> public File getPathFile();1445420766;Returns the path to the underlying temporary file as a File._@return The path to the underlying temporary file as a File.;public File getPathFile() {_			return path__		};returns,the,path,to,the,underlying,temporary,file,as,a,file,return,the,path,to,the,underlying,temporary,file,as,a,file;public,file,get,path,file,return,path
FileIOChannel -> ID -> public String getPath();1415702894;Returns the path to the underlying temporary file.;public String getPath() {_			return path__		};returns,the,path,to,the,underlying,temporary,file;public,string,get,path,return,path
FileIOChannel -> ID -> public String getPath();1421838095;Returns the path to the underlying temporary file.;public String getPath() {_			return path__		};returns,the,path,to,the,underlying,temporary,file;public,string,get,path,return,path
FileIOChannel -> ID -> public String getPath();1424338528;Returns the path to the underlying temporary file._@return The path to the underlying temporary file..;public String getPath() {_			return path.getAbsolutePath()__		};returns,the,path,to,the,underlying,temporary,file,return,the,path,to,the,underlying,temporary,file;public,string,get,path,return,path,get,absolute,path
FileIOChannel -> ID -> public String getPath();1424732907;Returns the path to the underlying temporary file._@return The path to the underlying temporary file..;public String getPath() {_			return path.getAbsolutePath()__		};returns,the,path,to,the,underlying,temporary,file,return,the,path,to,the,underlying,temporary,file;public,string,get,path,return,path,get,absolute,path
FileIOChannel -> ID -> public String getPath();1426697080;Returns the path to the underlying temporary file._@return The path to the underlying temporary file..;public String getPath() {_			return path.getAbsolutePath()__		};returns,the,path,to,the,underlying,temporary,file,return,the,path,to,the,underlying,temporary,file;public,string,get,path,return,path,get,absolute,path
FileIOChannel -> ID -> public String getPath();1445420766;Returns the path to the underlying temporary file._@return The path to the underlying temporary file..;public String getPath() {_			return path.getAbsolutePath()__		};returns,the,path,to,the,underlying,temporary,file,return,the,path,to,the,underlying,temporary,file;public,string,get,path,return,path,get,absolute,path
FileIOChannel -> boolean isClosed()_;1415702894;Checks whether the channel has been closed.__@return True if the channel has been closed, false otherwise.;boolean isClosed()_;checks,whether,the,channel,has,been,closed,return,true,if,the,channel,has,been,closed,false,otherwise;boolean,is,closed
FileIOChannel -> boolean isClosed()_;1421838095;Checks whether the channel has been closed.__@return True if the channel has been closed, false otherwise.;boolean isClosed()_;checks,whether,the,channel,has,been,closed,return,true,if,the,channel,has,been,closed,false,otherwise;boolean,is,closed
FileIOChannel -> boolean isClosed()_;1424338528;Checks whether the channel has been closed.__@return True if the channel has been closed, false otherwise.;boolean isClosed()_;checks,whether,the,channel,has,been,closed,return,true,if,the,channel,has,been,closed,false,otherwise;boolean,is,closed
FileIOChannel -> boolean isClosed()_;1424732907;Checks whether the channel has been closed.__@return True if the channel has been closed, false otherwise.;boolean isClosed()_;checks,whether,the,channel,has,been,closed,return,true,if,the,channel,has,been,closed,false,otherwise;boolean,is,closed
FileIOChannel -> boolean isClosed()_;1426697080;Checks whether the channel has been closed.__@return True if the channel has been closed, false otherwise.;boolean isClosed()_;checks,whether,the,channel,has,been,closed,return,true,if,the,channel,has,been,closed,false,otherwise;boolean,is,closed
FileIOChannel -> boolean isClosed()_;1445420766;Checks whether the channel has been closed.__@return True if the channel has been closed, false otherwise.;boolean isClosed()_;checks,whether,the,channel,has,been,closed,return,true,if,the,channel,has,been,closed,false,otherwise;boolean,is,closed
FileIOChannel -> public void closeAndDelete() throws IOException_;1415702894;Closes the channel and deletes the underlying file._For asynchronous implementations, this method waits until all pending requests are handled___@throws IOException Thrown, if an error occurred while waiting for pending requests.;public void closeAndDelete() throws IOException_;closes,the,channel,and,deletes,the,underlying,file,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;public,void,close,and,delete,throws,ioexception
FileIOChannel -> public void closeAndDelete() throws IOException_;1421838095;Closes the channel and deletes the underlying file._For asynchronous implementations, this method waits until all pending requests are handled___@throws IOException Thrown, if an error occurred while waiting for pending requests.;public void closeAndDelete() throws IOException_;closes,the,channel,and,deletes,the,underlying,file,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;public,void,close,and,delete,throws,ioexception
FileIOChannel -> public void closeAndDelete() throws IOException_;1424338528;Closes the channel and deletes the underlying file._For asynchronous implementations, this method waits until all pending requests are handled___@throws IOException Thrown, if an error occurred while waiting for pending requests.;public void closeAndDelete() throws IOException_;closes,the,channel,and,deletes,the,underlying,file,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;public,void,close,and,delete,throws,ioexception
FileIOChannel -> public void closeAndDelete() throws IOException_;1424732907;Closes the channel and deletes the underlying file._For asynchronous implementations, this method waits until all pending requests are handled___@throws IOException Thrown, if an error occurred while waiting for pending requests.;public void closeAndDelete() throws IOException_;closes,the,channel,and,deletes,the,underlying,file,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;public,void,close,and,delete,throws,ioexception
FileIOChannel -> public void closeAndDelete() throws IOException_;1426697080;Closes the channel and deletes the underlying file._For asynchronous implementations, this method waits until all pending requests are handled___@throws IOException Thrown, if an error occurred while waiting for pending requests.;public void closeAndDelete() throws IOException_;closes,the,channel,and,deletes,the,underlying,file,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;public,void,close,and,delete,throws,ioexception
FileIOChannel -> public void closeAndDelete() throws IOException_;1445420766;Closes the channel and deletes the underlying file._For asynchronous implementations, this method waits until all pending requests are handled___@throws IOException Thrown, if an error occurred while waiting for pending requests.;public void closeAndDelete() throws IOException_;closes,the,channel,and,deletes,the,underlying,file,for,asynchronous,implementations,this,method,waits,until,all,pending,requests,are,handled,throws,ioexception,thrown,if,an,error,occurred,while,waiting,for,pending,requests;public,void,close,and,delete,throws,ioexception
FileIOChannel -> FileIOChannel.ID getChannelID()_;1415702894;Gets the channel ID of this I/O channel.__@return The channel ID.;FileIOChannel.ID getChannelID()_;gets,the,channel,id,of,this,i,o,channel,return,the,channel,id;file,iochannel,id,get,channel,id
FileIOChannel -> FileIOChannel.ID getChannelID()_;1421838095;Gets the channel ID of this I/O channel.__@return The channel ID.;FileIOChannel.ID getChannelID()_;gets,the,channel,id,of,this,i,o,channel,return,the,channel,id;file,iochannel,id,get,channel,id
FileIOChannel -> FileIOChannel.ID getChannelID()_;1424338528;Gets the channel ID of this I/O channel.__@return The channel ID.;FileIOChannel.ID getChannelID()_;gets,the,channel,id,of,this,i,o,channel,return,the,channel,id;file,iochannel,id,get,channel,id
FileIOChannel -> FileIOChannel.ID getChannelID()_;1424732907;Gets the channel ID of this I/O channel.__@return The channel ID.;FileIOChannel.ID getChannelID()_;gets,the,channel,id,of,this,i,o,channel,return,the,channel,id;file,iochannel,id,get,channel,id
FileIOChannel -> FileIOChannel.ID getChannelID()_;1426697080;Gets the channel ID of this I/O channel.__@return The channel ID.;FileIOChannel.ID getChannelID()_;gets,the,channel,id,of,this,i,o,channel,return,the,channel,id;file,iochannel,id,get,channel,id
FileIOChannel -> FileIOChannel.ID getChannelID()_;1445420766;Gets the channel ID of this I/O channel.__@return The channel ID.;FileIOChannel.ID getChannelID()_;gets,the,channel,id,of,this,i,o,channel,return,the,channel,id;file,iochannel,id,get,channel,id
FileIOChannel -> void deleteChannel()_;1415702894;Deletes the file underlying this I/O channel.__@throws IllegalStateException Thrown, when the channel is still open.;void deleteChannel()_;deletes,the,file,underlying,this,i,o,channel,throws,illegal,state,exception,thrown,when,the,channel,is,still,open;void,delete,channel
FileIOChannel -> void deleteChannel()_;1421838095;Deletes the file underlying this I/O channel.__@throws IllegalStateException Thrown, when the channel is still open.;void deleteChannel()_;deletes,the,file,underlying,this,i,o,channel,throws,illegal,state,exception,thrown,when,the,channel,is,still,open;void,delete,channel
FileIOChannel -> void deleteChannel()_;1424338528;Deletes the file underlying this I/O channel.__@throws IllegalStateException Thrown, when the channel is still open.;void deleteChannel()_;deletes,the,file,underlying,this,i,o,channel,throws,illegal,state,exception,thrown,when,the,channel,is,still,open;void,delete,channel
FileIOChannel -> void deleteChannel()_;1424732907;Deletes the file underlying this I/O channel.__@throws IllegalStateException Thrown, when the channel is still open.;void deleteChannel()_;deletes,the,file,underlying,this,i,o,channel,throws,illegal,state,exception,thrown,when,the,channel,is,still,open;void,delete,channel
FileIOChannel -> void deleteChannel()_;1426697080;Deletes the file underlying this I/O channel.__@throws IllegalStateException Thrown, when the channel is still open.;void deleteChannel()_;deletes,the,file,underlying,this,i,o,channel,throws,illegal,state,exception,thrown,when,the,channel,is,still,open;void,delete,channel
FileIOChannel -> void deleteChannel()_;1445420766;Deletes the file underlying this I/O channel.__@throws IllegalStateException Thrown, when the channel is still open.;void deleteChannel()_;deletes,the,file,underlying,this,i,o,channel,throws,illegal,state,exception,thrown,when,the,channel,is,still,open;void,delete,channel
