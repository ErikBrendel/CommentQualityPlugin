# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable Path baseCheckpointPath, 			@Nullable Path baseSavepointPath, 			Configuration configuration);1508951050;Creates a new backend using the given checkpoint-/savepoint directories, or the values defined in_the given configuration. If a checkpoint-/savepoint parameter is not null, that value takes precedence_over the value in the configuration. If the configuration does not specify a value, it is possible_that the checkpoint-/savepoint directories in the backend will be null.__<p>This constructor can be used to create a backend that is based partially on a given backend_and partially on a configuration.__@param baseCheckpointPath The checkpoint base directory to use (or null)._@param baseSavepointPath The default savepoint directory to use (or null)._@param configuration The configuration to read values from;protected AbstractFileStateBackend(_			@Nullable Path baseCheckpointPath,_			@Nullable Path baseSavepointPath,_			Configuration configuration) {__		this(parameterOrConfigured(baseCheckpointPath, configuration, CheckpointingOptions.CHECKPOINTS_DIRECTORY),_				parameterOrConfigured(baseSavepointPath, configuration, CheckpointingOptions.SAVEPOINT_DIRECTORY))__	};creates,a,new,backend,using,the,given,checkpoint,savepoint,directories,or,the,values,defined,in,the,given,configuration,if,a,checkpoint,savepoint,parameter,is,not,null,that,value,takes,precedence,over,the,value,in,the,configuration,if,the,configuration,does,not,specify,a,value,it,is,possible,that,the,checkpoint,savepoint,directories,in,the,backend,will,be,null,p,this,constructor,can,be,used,to,create,a,backend,that,is,based,partially,on,a,given,backend,and,partially,on,a,configuration,param,base,checkpoint,path,the,checkpoint,base,directory,to,use,or,null,param,base,savepoint,path,the,default,savepoint,directory,to,use,or,null,param,configuration,the,configuration,to,read,values,from;protected,abstract,file,state,backend,nullable,path,base,checkpoint,path,nullable,path,base,savepoint,path,configuration,configuration,this,parameter,or,configured,base,checkpoint,path,configuration,checkpointing,options,parameter,or,configured,base,savepoint,path,configuration,checkpointing,options
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable Path baseCheckpointPath, 			@Nullable Path baseSavepointPath, 			Configuration configuration);1509045960;Creates a new backend using the given checkpoint-/savepoint directories, or the values defined in_the given configuration. If a checkpoint-/savepoint parameter is not null, that value takes precedence_over the value in the configuration. If the configuration does not specify a value, it is possible_that the checkpoint-/savepoint directories in the backend will be null.__<p>This constructor can be used to create a backend that is based partially on a given backend_and partially on a configuration.__@param baseCheckpointPath The checkpoint base directory to use (or null)._@param baseSavepointPath The default savepoint directory to use (or null)._@param configuration The configuration to read values from.;protected AbstractFileStateBackend(_			@Nullable Path baseCheckpointPath,_			@Nullable Path baseSavepointPath,_			Configuration configuration) {__		this(parameterOrConfigured(baseCheckpointPath, configuration, CheckpointingOptions.CHECKPOINTS_DIRECTORY),_				parameterOrConfigured(baseSavepointPath, configuration, CheckpointingOptions.SAVEPOINT_DIRECTORY))__	};creates,a,new,backend,using,the,given,checkpoint,savepoint,directories,or,the,values,defined,in,the,given,configuration,if,a,checkpoint,savepoint,parameter,is,not,null,that,value,takes,precedence,over,the,value,in,the,configuration,if,the,configuration,does,not,specify,a,value,it,is,possible,that,the,checkpoint,savepoint,directories,in,the,backend,will,be,null,p,this,constructor,can,be,used,to,create,a,backend,that,is,based,partially,on,a,given,backend,and,partially,on,a,configuration,param,base,checkpoint,path,the,checkpoint,base,directory,to,use,or,null,param,base,savepoint,path,the,default,savepoint,directory,to,use,or,null,param,configuration,the,configuration,to,read,values,from;protected,abstract,file,state,backend,nullable,path,base,checkpoint,path,nullable,path,base,savepoint,path,configuration,configuration,this,parameter,or,configured,base,checkpoint,path,configuration,checkpointing,options,parameter,or,configured,base,savepoint,path,configuration,checkpointing,options
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable Path baseCheckpointPath, 			@Nullable Path baseSavepointPath, 			Configuration configuration);1517414098;Creates a new backend using the given checkpoint-/savepoint directories, or the values defined in_the given configuration. If a checkpoint-/savepoint parameter is not null, that value takes precedence_over the value in the configuration. If the configuration does not specify a value, it is possible_that the checkpoint-/savepoint directories in the backend will be null.__<p>This constructor can be used to create a backend that is based partially on a given backend_and partially on a configuration.__@param baseCheckpointPath The checkpoint base directory to use (or null)._@param baseSavepointPath The default savepoint directory to use (or null)._@param configuration The configuration to read values from.;protected AbstractFileStateBackend(_			@Nullable Path baseCheckpointPath,_			@Nullable Path baseSavepointPath,_			Configuration configuration) {__		this(parameterOrConfigured(baseCheckpointPath, configuration, CheckpointingOptions.CHECKPOINTS_DIRECTORY),_				parameterOrConfigured(baseSavepointPath, configuration, CheckpointingOptions.SAVEPOINT_DIRECTORY))__	};creates,a,new,backend,using,the,given,checkpoint,savepoint,directories,or,the,values,defined,in,the,given,configuration,if,a,checkpoint,savepoint,parameter,is,not,null,that,value,takes,precedence,over,the,value,in,the,configuration,if,the,configuration,does,not,specify,a,value,it,is,possible,that,the,checkpoint,savepoint,directories,in,the,backend,will,be,null,p,this,constructor,can,be,used,to,create,a,backend,that,is,based,partially,on,a,given,backend,and,partially,on,a,configuration,param,base,checkpoint,path,the,checkpoint,base,directory,to,use,or,null,param,base,savepoint,path,the,default,savepoint,directory,to,use,or,null,param,configuration,the,configuration,to,read,values,from;protected,abstract,file,state,backend,nullable,path,base,checkpoint,path,nullable,path,base,savepoint,path,configuration,configuration,this,parameter,or,configured,base,checkpoint,path,configuration,checkpointing,options,parameter,or,configured,base,savepoint,path,configuration,checkpointing,options
AbstractFileStateBackend -> @Nullable 	public Path getCheckpointPath();1508951050;Gets the checkpoint base directory. Jobs will create job-specific subdirectories_for checkpoints within this directory. May be null, if not configured.__@return The checkpoint base directory;@Nullable_	public Path getCheckpointPath() {_		return baseCheckpointPath__	};gets,the,checkpoint,base,directory,jobs,will,create,job,specific,subdirectories,for,checkpoints,within,this,directory,may,be,null,if,not,configured,return,the,checkpoint,base,directory;nullable,public,path,get,checkpoint,path,return,base,checkpoint,path
AbstractFileStateBackend -> @Nullable 	public Path getCheckpointPath();1509045960;Gets the checkpoint base directory. Jobs will create job-specific subdirectories_for checkpoints within this directory. May be null, if not configured.__@return The checkpoint base directory;@Nullable_	public Path getCheckpointPath() {_		return baseCheckpointPath__	};gets,the,checkpoint,base,directory,jobs,will,create,job,specific,subdirectories,for,checkpoints,within,this,directory,may,be,null,if,not,configured,return,the,checkpoint,base,directory;nullable,public,path,get,checkpoint,path,return,base,checkpoint,path
AbstractFileStateBackend -> @Nullable 	public Path getCheckpointPath();1517414098;Gets the checkpoint base directory. Jobs will create job-specific subdirectories_for checkpoints within this directory. May be null, if not configured.__@return The checkpoint base directory;@Nullable_	public Path getCheckpointPath() {_		return baseCheckpointPath__	};gets,the,checkpoint,base,directory,jobs,will,create,job,specific,subdirectories,for,checkpoints,within,this,directory,may,be,null,if,not,configured,return,the,checkpoint,base,directory;nullable,public,path,get,checkpoint,path,return,base,checkpoint,path
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable URI baseCheckpointPath, 			@Nullable URI baseSavepointPath);1508951050;Creates a backend with the given optional checkpoint- and savepoint base directories.__@param baseCheckpointPath The base directory for checkpoints, or null, if none is configured._@param baseSavepointPath The default directory for savepoints, or null, if none is set.;protected AbstractFileStateBackend(_			@Nullable URI baseCheckpointPath,_			@Nullable URI baseSavepointPath) {__		this(baseCheckpointPath == null ? null : new Path(baseCheckpointPath),_				baseSavepointPath == null ? null : new Path(baseSavepointPath))__	};creates,a,backend,with,the,given,optional,checkpoint,and,savepoint,base,directories,param,base,checkpoint,path,the,base,directory,for,checkpoints,or,null,if,none,is,configured,param,base,savepoint,path,the,default,directory,for,savepoints,or,null,if,none,is,set;protected,abstract,file,state,backend,nullable,uri,base,checkpoint,path,nullable,uri,base,savepoint,path,this,base,checkpoint,path,null,null,new,path,base,checkpoint,path,base,savepoint,path,null,null,new,path,base,savepoint,path
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable URI baseCheckpointPath, 			@Nullable URI baseSavepointPath);1509045960;Creates a backend with the given optional checkpoint- and savepoint base directories.__@param baseCheckpointPath The base directory for checkpoints, or null, if none is configured._@param baseSavepointPath The default directory for savepoints, or null, if none is set.;protected AbstractFileStateBackend(_			@Nullable URI baseCheckpointPath,_			@Nullable URI baseSavepointPath) {__		this(baseCheckpointPath == null ? null : new Path(baseCheckpointPath),_				baseSavepointPath == null ? null : new Path(baseSavepointPath))__	};creates,a,backend,with,the,given,optional,checkpoint,and,savepoint,base,directories,param,base,checkpoint,path,the,base,directory,for,checkpoints,or,null,if,none,is,configured,param,base,savepoint,path,the,default,directory,for,savepoints,or,null,if,none,is,set;protected,abstract,file,state,backend,nullable,uri,base,checkpoint,path,nullable,uri,base,savepoint,path,this,base,checkpoint,path,null,null,new,path,base,checkpoint,path,base,savepoint,path,null,null,new,path,base,savepoint,path
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable URI baseCheckpointPath, 			@Nullable URI baseSavepointPath);1517414098;Creates a backend with the given optional checkpoint- and savepoint base directories.__@param baseCheckpointPath The base directory for checkpoints, or null, if none is configured._@param baseSavepointPath The default directory for savepoints, or null, if none is set.;protected AbstractFileStateBackend(_			@Nullable URI baseCheckpointPath,_			@Nullable URI baseSavepointPath) {__		this(baseCheckpointPath == null ? null : new Path(baseCheckpointPath),_				baseSavepointPath == null ? null : new Path(baseSavepointPath))__	};creates,a,backend,with,the,given,optional,checkpoint,and,savepoint,base,directories,param,base,checkpoint,path,the,base,directory,for,checkpoints,or,null,if,none,is,configured,param,base,savepoint,path,the,default,directory,for,savepoints,or,null,if,none,is,set;protected,abstract,file,state,backend,nullable,uri,base,checkpoint,path,nullable,uri,base,savepoint,path,this,base,checkpoint,path,null,null,new,path,base,checkpoint,path,base,savepoint,path,null,null,new,path,base,savepoint,path
AbstractFileStateBackend -> private static Path validatePath(Path path);1508951050;Checks the validity of the path's scheme and path.__@param path The path to check._@return The URI as a Path.__@throws IllegalArgumentException Thrown, if the URI misses scheme or path.;private static Path validatePath(Path path) {_		final URI uri = path.toUri()__		final String scheme = uri.getScheme()__		final String pathPart = uri.getPath()___		_		if (scheme == null) {_			throw new IllegalArgumentException("The scheme (hdfs://, file://, etc) is null. " +_					"Please specify the file system scheme explicitly in the URI.")__		}_		if (pathPart == null) {_			throw new IllegalArgumentException("The path to store the checkpoint data in is null. " +_					"Please specify a directory path for the checkpoint data.")__		}_		if (pathPart.length() == 0 || pathPart.equals("/")) {_			throw new IllegalArgumentException("Cannot use the root directory for checkpoints.")__		}__		return path__	};checks,the,validity,of,the,path,s,scheme,and,path,param,path,the,path,to,check,return,the,uri,as,a,path,throws,illegal,argument,exception,thrown,if,the,uri,misses,scheme,or,path;private,static,path,validate,path,path,path,final,uri,uri,path,to,uri,final,string,scheme,uri,get,scheme,final,string,path,part,uri,get,path,if,scheme,null,throw,new,illegal,argument,exception,the,scheme,hdfs,file,etc,is,null,please,specify,the,file,system,scheme,explicitly,in,the,uri,if,path,part,null,throw,new,illegal,argument,exception,the,path,to,store,the,checkpoint,data,in,is,null,please,specify,a,directory,path,for,the,checkpoint,data,if,path,part,length,0,path,part,equals,throw,new,illegal,argument,exception,cannot,use,the,root,directory,for,checkpoints,return,path
AbstractFileStateBackend -> private static Path validatePath(Path path);1509045960;Checks the validity of the path's scheme and path.__@param path The path to check._@return The URI as a Path.__@throws IllegalArgumentException Thrown, if the URI misses scheme or path.;private static Path validatePath(Path path) {_		final URI uri = path.toUri()__		final String scheme = uri.getScheme()__		final String pathPart = uri.getPath()___		_		if (scheme == null) {_			throw new IllegalArgumentException("The scheme (hdfs://, file://, etc) is null. " +_					"Please specify the file system scheme explicitly in the URI.")__		}_		if (pathPart == null) {_			throw new IllegalArgumentException("The path to store the checkpoint data in is null. " +_					"Please specify a directory path for the checkpoint data.")__		}_		if (pathPart.length() == 0 || pathPart.equals("/")) {_			throw new IllegalArgumentException("Cannot use the root directory for checkpoints.")__		}__		return path__	};checks,the,validity,of,the,path,s,scheme,and,path,param,path,the,path,to,check,return,the,uri,as,a,path,throws,illegal,argument,exception,thrown,if,the,uri,misses,scheme,or,path;private,static,path,validate,path,path,path,final,uri,uri,path,to,uri,final,string,scheme,uri,get,scheme,final,string,path,part,uri,get,path,if,scheme,null,throw,new,illegal,argument,exception,the,scheme,hdfs,file,etc,is,null,please,specify,the,file,system,scheme,explicitly,in,the,uri,if,path,part,null,throw,new,illegal,argument,exception,the,path,to,store,the,checkpoint,data,in,is,null,please,specify,a,directory,path,for,the,checkpoint,data,if,path,part,length,0,path,part,equals,throw,new,illegal,argument,exception,cannot,use,the,root,directory,for,checkpoints,return,path
AbstractFileStateBackend -> private static Path validatePath(Path path);1517414098;Checks the validity of the path's scheme and path.__@param path The path to check._@return The URI as a Path.__@throws IllegalArgumentException Thrown, if the URI misses scheme or path.;private static Path validatePath(Path path) {_		final URI uri = path.toUri()__		final String scheme = uri.getScheme()__		final String pathPart = uri.getPath()___		_		if (scheme == null) {_			throw new IllegalArgumentException("The scheme (hdfs://, file://, etc) is null. " +_					"Please specify the file system scheme explicitly in the URI.")__		}_		if (pathPart == null) {_			throw new IllegalArgumentException("The path to store the checkpoint data in is null. " +_					"Please specify a directory path for the checkpoint data.")__		}_		if (pathPart.length() == 0 || pathPart.equals("/")) {_			throw new IllegalArgumentException("Cannot use the root directory for checkpoints.")__		}__		return path__	};checks,the,validity,of,the,path,s,scheme,and,path,param,path,the,path,to,check,return,the,uri,as,a,path,throws,illegal,argument,exception,thrown,if,the,uri,misses,scheme,or,path;private,static,path,validate,path,path,path,final,uri,uri,path,to,uri,final,string,scheme,uri,get,scheme,final,string,path,part,uri,get,path,if,scheme,null,throw,new,illegal,argument,exception,the,scheme,hdfs,file,etc,is,null,please,specify,the,file,system,scheme,explicitly,in,the,uri,if,path,part,null,throw,new,illegal,argument,exception,the,path,to,store,the,checkpoint,data,in,is,null,please,specify,a,directory,path,for,the,checkpoint,data,if,path,part,length,0,path,part,equals,throw,new,illegal,argument,exception,cannot,use,the,root,directory,for,checkpoints,return,path
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable Path baseCheckpointPath, 			@Nullable Path baseSavepointPath);1508951050;Creates a backend with the given optional checkpoint- and savepoint base directories.__@param baseCheckpointPath The base directory for checkpoints, or null, if none is configured._@param baseSavepointPath The default directory for savepoints, or null, if none is set.;protected AbstractFileStateBackend(_			@Nullable Path baseCheckpointPath,_			@Nullable Path baseSavepointPath) {__		this.baseCheckpointPath = baseCheckpointPath == null ? null : validatePath(baseCheckpointPath)__		this.baseSavepointPath = baseSavepointPath == null ? null : validatePath(baseSavepointPath)__	};creates,a,backend,with,the,given,optional,checkpoint,and,savepoint,base,directories,param,base,checkpoint,path,the,base,directory,for,checkpoints,or,null,if,none,is,configured,param,base,savepoint,path,the,default,directory,for,savepoints,or,null,if,none,is,set;protected,abstract,file,state,backend,nullable,path,base,checkpoint,path,nullable,path,base,savepoint,path,this,base,checkpoint,path,base,checkpoint,path,null,null,validate,path,base,checkpoint,path,this,base,savepoint,path,base,savepoint,path,null,null,validate,path,base,savepoint,path
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable Path baseCheckpointPath, 			@Nullable Path baseSavepointPath);1509045960;Creates a backend with the given optional checkpoint- and savepoint base directories.__@param baseCheckpointPath The base directory for checkpoints, or null, if none is configured._@param baseSavepointPath The default directory for savepoints, or null, if none is set.;protected AbstractFileStateBackend(_			@Nullable Path baseCheckpointPath,_			@Nullable Path baseSavepointPath) {__		this.baseCheckpointPath = baseCheckpointPath == null ? null : validatePath(baseCheckpointPath)__		this.baseSavepointPath = baseSavepointPath == null ? null : validatePath(baseSavepointPath)__	};creates,a,backend,with,the,given,optional,checkpoint,and,savepoint,base,directories,param,base,checkpoint,path,the,base,directory,for,checkpoints,or,null,if,none,is,configured,param,base,savepoint,path,the,default,directory,for,savepoints,or,null,if,none,is,set;protected,abstract,file,state,backend,nullable,path,base,checkpoint,path,nullable,path,base,savepoint,path,this,base,checkpoint,path,base,checkpoint,path,null,null,validate,path,base,checkpoint,path,this,base,savepoint,path,base,savepoint,path,null,null,validate,path,base,savepoint,path
AbstractFileStateBackend -> protected AbstractFileStateBackend( 			@Nullable Path baseCheckpointPath, 			@Nullable Path baseSavepointPath);1517414098;Creates a backend with the given optional checkpoint- and savepoint base directories.__@param baseCheckpointPath The base directory for checkpoints, or null, if none is configured._@param baseSavepointPath The default directory for savepoints, or null, if none is set.;protected AbstractFileStateBackend(_			@Nullable Path baseCheckpointPath,_			@Nullable Path baseSavepointPath) {__		this.baseCheckpointPath = baseCheckpointPath == null ? null : validatePath(baseCheckpointPath)__		this.baseSavepointPath = baseSavepointPath == null ? null : validatePath(baseSavepointPath)__	};creates,a,backend,with,the,given,optional,checkpoint,and,savepoint,base,directories,param,base,checkpoint,path,the,base,directory,for,checkpoints,or,null,if,none,is,configured,param,base,savepoint,path,the,default,directory,for,savepoints,or,null,if,none,is,set;protected,abstract,file,state,backend,nullable,path,base,checkpoint,path,nullable,path,base,savepoint,path,this,base,checkpoint,path,base,checkpoint,path,null,null,validate,path,base,checkpoint,path,this,base,savepoint,path,base,savepoint,path,null,null,validate,path,base,savepoint,path
AbstractFileStateBackend -> @Nullable 	public Path getSavepointPath();1508951050;Gets the directory where savepoints are stored by default (when no custom path is given_to the savepoint trigger command).__@return The default directory for savepoints, or null, if no default directory has been configured.;@Nullable_	public Path getSavepointPath() {_		return baseSavepointPath__	};gets,the,directory,where,savepoints,are,stored,by,default,when,no,custom,path,is,given,to,the,savepoint,trigger,command,return,the,default,directory,for,savepoints,or,null,if,no,default,directory,has,been,configured;nullable,public,path,get,savepoint,path,return,base,savepoint,path
AbstractFileStateBackend -> @Nullable 	public Path getSavepointPath();1509045960;Gets the directory where savepoints are stored by default (when no custom path is given_to the savepoint trigger command).__@return The default directory for savepoints, or null, if no default directory has been configured.;@Nullable_	public Path getSavepointPath() {_		return baseSavepointPath__	};gets,the,directory,where,savepoints,are,stored,by,default,when,no,custom,path,is,given,to,the,savepoint,trigger,command,return,the,default,directory,for,savepoints,or,null,if,no,default,directory,has,been,configured;nullable,public,path,get,savepoint,path,return,base,savepoint,path
AbstractFileStateBackend -> @Nullable 	public Path getSavepointPath();1517414098;Gets the directory where savepoints are stored by default (when no custom path is given_to the savepoint trigger command).__@return The default directory for savepoints, or null, if no default directory has been configured.;@Nullable_	public Path getSavepointPath() {_		return baseSavepointPath__	};gets,the,directory,where,savepoints,are,stored,by,default,when,no,custom,path,is,given,to,the,savepoint,trigger,command,return,the,default,directory,for,savepoints,or,null,if,no,default,directory,has,been,configured;nullable,public,path,get,savepoint,path,return,base,savepoint,path
