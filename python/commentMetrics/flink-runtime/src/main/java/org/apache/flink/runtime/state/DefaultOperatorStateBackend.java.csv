# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultOperatorStateBackend -> @Override 	public RunnableFuture<OperatorStateHandle> snapshot( 			long checkpointId, long timestamp, CheckpointStreamFactory streamFactory) throws Exception;1472680767;@see SnapshotProvider;@Override_	public RunnableFuture<OperatorStateHandle> snapshot(_			long checkpointId, long timestamp, CheckpointStreamFactory streamFactory) throws Exception {__		if (registeredStates.isEmpty()) {_			return new DoneFuture<>(null)__		}__		Map<String, long[]> writtenStatesMetaData = new HashMap<>(registeredStates.size())___		CheckpointStreamFactory.CheckpointStateOutputStream out = streamFactory._				createCheckpointStateOutputStream(checkpointId, timestamp)___		try {_			closeStreamOnCancelRegistry.registerClosable(out)___			DataOutputView dov = new DataOutputViewStreamWrapper(out)___			dov.writeInt(registeredStates.size())__			for (Map.Entry<String, PartitionableListState<?>> entry : registeredStates.entrySet()) {__				long[] partitionOffsets = entry.getValue().write(out)__				writtenStatesMetaData.put(entry.getKey(), partitionOffsets)__			}__			OperatorStateHandle handle = new OperatorStateHandle(out.closeAndGetHandle(), writtenStatesMetaData)___			return new DoneFuture<>(handle)__		} finally {_			closeStreamOnCancelRegistry.unregisterClosable(out)__			out.close()__		}_	};see,snapshot,provider;override,public,runnable,future,operator,state,handle,snapshot,long,checkpoint,id,long,timestamp,checkpoint,stream,factory,stream,factory,throws,exception,if,registered,states,is,empty,return,new,done,future,null,map,string,long,written,states,meta,data,new,hash,map,registered,states,size,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,try,close,stream,on,cancel,registry,register,closable,out,data,output,view,dov,new,data,output,view,stream,wrapper,out,dov,write,int,registered,states,size,for,map,entry,string,partitionable,list,state,entry,registered,states,entry,set,long,partition,offsets,entry,get,value,write,out,written,states,meta,data,put,entry,get,key,partition,offsets,operator,state,handle,handle,new,operator,state,handle,out,close,and,get,handle,written,states,meta,data,return,new,done,future,handle,finally,close,stream,on,cancel,registry,unregister,closable,out,out,close
DefaultOperatorStateBackend -> @Override 	public RunnableFuture<OperatorStateHandle> snapshot( 			long checkpointId, long timestamp, CheckpointStreamFactory streamFactory) throws Exception;1475656513;@see SnapshotProvider;@Override_	public RunnableFuture<OperatorStateHandle> snapshot(_			long checkpointId, long timestamp, CheckpointStreamFactory streamFactory) throws Exception {__		if (registeredStates.isEmpty()) {_			return new DoneFuture<>(null)__		}__		Map<String, long[]> writtenStatesMetaData = new HashMap<>(registeredStates.size())___		CheckpointStreamFactory.CheckpointStateOutputStream out = streamFactory._				createCheckpointStateOutputStream(checkpointId, timestamp)___		try {_			closeStreamOnCancelRegistry.registerClosable(out)___			DataOutputView dov = new DataOutputViewStreamWrapper(out)___			dov.writeInt(registeredStates.size())__			for (Map.Entry<String, PartitionableListState<?>> entry : registeredStates.entrySet()) {__				long[] partitionOffsets = entry.getValue().write(out)__				writtenStatesMetaData.put(entry.getKey(), partitionOffsets)__			}__			OperatorStateHandle handle = new OperatorStateHandle(out.closeAndGetHandle(), writtenStatesMetaData)___			return new DoneFuture<>(handle)__		} finally {_			closeStreamOnCancelRegistry.unregisterClosable(out)__			out.close()__		}_	};see,snapshot,provider;override,public,runnable,future,operator,state,handle,snapshot,long,checkpoint,id,long,timestamp,checkpoint,stream,factory,stream,factory,throws,exception,if,registered,states,is,empty,return,new,done,future,null,map,string,long,written,states,meta,data,new,hash,map,registered,states,size,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,try,close,stream,on,cancel,registry,register,closable,out,data,output,view,dov,new,data,output,view,stream,wrapper,out,dov,write,int,registered,states,size,for,map,entry,string,partitionable,list,state,entry,registered,states,entry,set,long,partition,offsets,entry,get,value,write,out,written,states,meta,data,put,entry,get,key,partition,offsets,operator,state,handle,handle,new,operator,state,handle,out,close,and,get,handle,written,states,meta,data,return,new,done,future,handle,finally,close,stream,on,cancel,registry,unregister,closable,out,out,close
DefaultOperatorStateBackend -> @Override 	public RunnableFuture<OperatorStateHandle> snapshot( 			long checkpointId, long timestamp, CheckpointStreamFactory streamFactory) throws Exception;1475674226;@see SnapshotProvider;@Override_	public RunnableFuture<OperatorStateHandle> snapshot(_			long checkpointId, long timestamp, CheckpointStreamFactory streamFactory) throws Exception {__		if (registeredStates.isEmpty()) {_			return new DoneFuture<>(null)__		}__		Map<String, long[]> writtenStatesMetaData = new HashMap<>(registeredStates.size())___		CheckpointStreamFactory.CheckpointStateOutputStream out = streamFactory._				createCheckpointStateOutputStream(checkpointId, timestamp)___		try {_			closeStreamOnCancelRegistry.registerClosable(out)___			DataOutputView dov = new DataOutputViewStreamWrapper(out)___			dov.writeInt(registeredStates.size())__			for (Map.Entry<String, PartitionableListState<?>> entry : registeredStates.entrySet()) {__				long[] partitionOffsets = entry.getValue().write(out)__				writtenStatesMetaData.put(entry.getKey(), partitionOffsets)__			}__			OperatorStateHandle handle = new OperatorStateHandle(out.closeAndGetHandle(), writtenStatesMetaData)___			return new DoneFuture<>(handle)__		} finally {_			closeStreamOnCancelRegistry.unregisterClosable(out)__			out.close()__		}_	};see,snapshot,provider;override,public,runnable,future,operator,state,handle,snapshot,long,checkpoint,id,long,timestamp,checkpoint,stream,factory,stream,factory,throws,exception,if,registered,states,is,empty,return,new,done,future,null,map,string,long,written,states,meta,data,new,hash,map,registered,states,size,checkpoint,stream,factory,checkpoint,state,output,stream,out,stream,factory,create,checkpoint,state,output,stream,checkpoint,id,timestamp,try,close,stream,on,cancel,registry,register,closable,out,data,output,view,dov,new,data,output,view,stream,wrapper,out,dov,write,int,registered,states,size,for,map,entry,string,partitionable,list,state,entry,registered,states,entry,set,long,partition,offsets,entry,get,value,write,out,written,states,meta,data,put,entry,get,key,partition,offsets,operator,state,handle,handle,new,operator,state,handle,out,close,and,get,handle,written,states,meta,data,return,new,done,future,handle,finally,close,stream,on,cancel,registry,unregister,closable,out,out,close
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1489497957;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1492539588;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1492541611;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1494180263;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1494181354;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1494587485;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1495090293;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1495702448;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1496608826;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1504776252;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1506517852;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1507037878;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1509092480;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1513860695;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1515007198;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1515744895;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1516988262;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1517328376;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1517924641;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1518606260;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1524230142;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1524832953;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1527944704;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1528883776;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1531300271;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1532695767;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1533846222;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1540380319;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1540739847;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1544425667;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> @Deprecated 	@Override 	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception;1545550284;@deprecated This was deprecated as part of a refinement to the function names._Please use {@link #getListState(ListStateDescriptor)} instead.;@Deprecated_	@Override_	public <S> ListState<S> getOperatorState(ListStateDescriptor<S> stateDescriptor) throws Exception {_		return getListState(stateDescriptor)__	};deprecated,this,was,deprecated,as,part,of,a,refinement,to,the,function,names,please,use,link,get,list,state,list,state,descriptor,instead;deprecated,override,public,s,list,state,s,get,operator,state,list,state,descriptor,s,state,descriptor,throws,exception,return,get,list,state,state,descriptor
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend( 			ClassLoader userClassLoader, 			Collection<OperatorStateHandle> restoreSnapshots);1475571578;Restores a OperatorStateStore (lazily) using the provided snapshots.__@param restoreSnapshots snapshots that are available to restore partitionable states on request.;public DefaultOperatorStateBackend(_			ClassLoader userClassLoader,_			Collection<OperatorStateHandle> restoreSnapshots) {__		Preconditions.checkNotNull(userClassLoader)__		this.javaSerializer = new JavaSerializer<>(userClassLoader)__		this.restoreSnapshots = restoreSnapshots__		this.registeredStates = new HashMap<>()__		this.closeStreamOnCancelRegistry = new ClosableRegistry()__	};restores,a,operator,state,store,lazily,using,the,provided,snapshots,param,restore,snapshots,snapshots,that,are,available,to,restore,partitionable,states,on,request;public,default,operator,state,backend,class,loader,user,class,loader,collection,operator,state,handle,restore,snapshots,preconditions,check,not,null,user,class,loader,this,java,serializer,new,java,serializer,user,class,loader,this,restore,snapshots,restore,snapshots,this,registered,states,new,hash,map,this,close,stream,on,cancel,registry,new,closable,registry
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend( 			ClassLoader userClassLoader, 			Collection<OperatorStateHandle> restoreSnapshots);1475656513;Restores a OperatorStateStore (lazily) using the provided snapshots.__@param restoreSnapshots snapshots that are available to restore partitionable states on request.;public DefaultOperatorStateBackend(_			ClassLoader userClassLoader,_			Collection<OperatorStateHandle> restoreSnapshots) {__		Preconditions.checkNotNull(userClassLoader)__		this.javaSerializer = new JavaSerializer<>(userClassLoader)__		this.restoreSnapshots = restoreSnapshots__		this.registeredStates = new HashMap<>()__		this.closeStreamOnCancelRegistry = new ClosableRegistry()__	};restores,a,operator,state,store,lazily,using,the,provided,snapshots,param,restore,snapshots,snapshots,that,are,available,to,restore,partitionable,states,on,request;public,default,operator,state,backend,class,loader,user,class,loader,collection,operator,state,handle,restore,snapshots,preconditions,check,not,null,user,class,loader,this,java,serializer,new,java,serializer,user,class,loader,this,restore,snapshots,restore,snapshots,this,registered,states,new,hash,map,this,close,stream,on,cancel,registry,new,closable,registry
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend( 			ClassLoader userClassLoader, 			Collection<OperatorStateHandle> restoreSnapshots);1475674226;Restores a OperatorStateStore (lazily) using the provided snapshots.__@param restoreSnapshots snapshots that are available to restore partitionable states on request.;public DefaultOperatorStateBackend(_			ClassLoader userClassLoader,_			Collection<OperatorStateHandle> restoreSnapshots) {__		Preconditions.checkNotNull(userClassLoader)__		this.javaSerializer = new JavaSerializer<>(userClassLoader)__		this.restoreSnapshots = restoreSnapshots__		this.registeredStates = new HashMap<>()__		this.closeStreamOnCancelRegistry = new ClosableRegistry()__	};restores,a,operator,state,store,lazily,using,the,provided,snapshots,param,restore,snapshots,snapshots,that,are,available,to,restore,partitionable,states,on,request;public,default,operator,state,backend,class,loader,user,class,loader,collection,operator,state,handle,restore,snapshots,preconditions,check,not,null,user,class,loader,this,java,serializer,new,java,serializer,user,class,loader,this,restore,snapshots,restore,snapshots,this,registered,states,new,hash,map,this,close,stream,on,cancel,registry,new,closable,registry
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend( 			ClassLoader userClassLoader, 			Collection<OperatorStateHandle> restoreSnapshots);1477324194;Restores a OperatorStateStore (lazily) using the provided snapshots.__@param restoreSnapshots snapshots that are available to restore partitionable states on request.;public DefaultOperatorStateBackend(_			ClassLoader userClassLoader,_			Collection<OperatorStateHandle> restoreSnapshots) {__		Preconditions.checkNotNull(userClassLoader)__		this.javaSerializer = new JavaSerializer<>(userClassLoader)__		this.restoreSnapshots = restoreSnapshots__		this.registeredStates = new HashMap<>()__		this.closeStreamOnCancelRegistry = new CloseableRegistry()__	};restores,a,operator,state,store,lazily,using,the,provided,snapshots,param,restore,snapshots,snapshots,that,are,available,to,restore,partitionable,states,on,request;public,default,operator,state,backend,class,loader,user,class,loader,collection,operator,state,handle,restore,snapshots,preconditions,check,not,null,user,class,loader,this,java,serializer,new,java,serializer,user,class,loader,this,restore,snapshots,restore,snapshots,this,registered,states,new,hash,map,this,close,stream,on,cancel,registry,new,closeable,registry
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1489497957;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1492539588;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1492541611;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1494180263;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1494181354;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1494587485;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1495090293;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1495702448;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1496608826;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1504776252;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1506517852;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1507037878;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1509092480;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1513860695;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1515007198;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1515744895;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1516988262;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1517328376;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1517924641;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1518606260;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1524230142;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1524832953;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1527944704;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1528883776;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1531300271;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1532695767;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1533846222;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1540380319;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1540739847;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1544425667;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @SuppressWarnings("unchecked") 	@Deprecated 	@Override 	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception;1545550284;@deprecated Using Java serialization for persisting state is not encouraged._Please use {@link #getListState(ListStateDescriptor)} instead.;@SuppressWarnings("unchecked")_	@Deprecated_	@Override_	public <T extends Serializable> ListState<T> getSerializableListState(String stateName) throws Exception {_		return (ListState<T>) getListState(new ListStateDescriptor<>(stateName, javaSerializer))__	};deprecated,using,java,serialization,for,persisting,state,is,not,encouraged,please,use,link,get,list,state,list,state,descriptor,instead;suppress,warnings,unchecked,deprecated,override,public,t,extends,serializable,list,state,t,get,serializable,list,state,string,state,name,throws,exception,return,list,state,t,get,list,state,new,list,state,descriptor,state,name,java,serializer
DefaultOperatorStateBackend -> @Override 	public <S> ListState<S> getPartitionableState( 			ListStateDescriptor<S> stateDescriptor) throws IOException;1472680767;@see OperatorStateStore;@Override_	public <S> ListState<S> getPartitionableState(_			ListStateDescriptor<S> stateDescriptor) throws IOException {__		Preconditions.checkNotNull(stateDescriptor)___		String name = Preconditions.checkNotNull(stateDescriptor.getName())__		TypeSerializer<S> partitionStateSerializer = Preconditions.checkNotNull(stateDescriptor.getSerializer())___		@SuppressWarnings("unchecked")_		PartitionableListState<S> partitionableListState = (PartitionableListState<S>) registeredStates.get(name)___		if (null == partitionableListState) {__			partitionableListState = new PartitionableListState<>(partitionStateSerializer)___			registeredStates.put(name, partitionableListState)___			_			if (restoreSnapshots != null) {_				for (OperatorStateHandle stateHandle : restoreSnapshots) {__					long[] offsets = stateHandle.getStateNameToPartitionOffsets().get(name)___					if (offsets != null) {__						FSDataInputStream in = stateHandle.openInputStream()__						try {_							closeStreamOnCancelRegistry.registerClosable(in)___							DataInputView div = new DataInputViewStreamWrapper(in)___							for (int i = 0_ i < offsets.length_ ++i) {__								in.seek(offsets[i])__								S partitionState = partitionStateSerializer.deserialize(div)__								partitionableListState.add(partitionState)__							}_						} finally {_							closeStreamOnCancelRegistry.unregisterClosable(in)__							in.close()__						}_					}_				}_			}_		}__		return partitionableListState__	};see,operator,state,store;override,public,s,list,state,s,get,partitionable,state,list,state,descriptor,s,state,descriptor,throws,ioexception,preconditions,check,not,null,state,descriptor,string,name,preconditions,check,not,null,state,descriptor,get,name,type,serializer,s,partition,state,serializer,preconditions,check,not,null,state,descriptor,get,serializer,suppress,warnings,unchecked,partitionable,list,state,s,partitionable,list,state,partitionable,list,state,s,registered,states,get,name,if,null,partitionable,list,state,partitionable,list,state,new,partitionable,list,state,partition,state,serializer,registered,states,put,name,partitionable,list,state,if,restore,snapshots,null,for,operator,state,handle,state,handle,restore,snapshots,long,offsets,state,handle,get,state,name,to,partition,offsets,get,name,if,offsets,null,fsdata,input,stream,in,state,handle,open,input,stream,try,close,stream,on,cancel,registry,register,closable,in,data,input,view,div,new,data,input,view,stream,wrapper,in,for,int,i,0,i,offsets,length,i,in,seek,offsets,i,s,partition,state,partition,state,serializer,deserialize,div,partitionable,list,state,add,partition,state,finally,close,stream,on,cancel,registry,unregister,closable,in,in,close,return,partitionable,list,state
DefaultOperatorStateBackend -> @Override 	public <S> ListState<S> getPartitionableState( 			ListStateDescriptor<S> stateDescriptor) throws IOException;1475656513;@see OperatorStateStore;@Override_	public <S> ListState<S> getPartitionableState(_			ListStateDescriptor<S> stateDescriptor) throws IOException {__		Preconditions.checkNotNull(stateDescriptor)___		String name = Preconditions.checkNotNull(stateDescriptor.getName())__		TypeSerializer<S> partitionStateSerializer = Preconditions.checkNotNull(stateDescriptor.getSerializer())___		@SuppressWarnings("unchecked")_		PartitionableListState<S> partitionableListState = (PartitionableListState<S>) registeredStates.get(name)___		if (null == partitionableListState) {__			partitionableListState = new PartitionableListState<>(partitionStateSerializer)___			registeredStates.put(name, partitionableListState)___			_			if (restoreSnapshots != null) {_				for (OperatorStateHandle stateHandle : restoreSnapshots) {__					long[] offsets = stateHandle.getStateNameToPartitionOffsets().get(name)___					if (offsets != null) {__						FSDataInputStream in = stateHandle.openInputStream()__						try {_							closeStreamOnCancelRegistry.registerClosable(in)___							DataInputView div = new DataInputViewStreamWrapper(in)___							for (int i = 0_ i < offsets.length_ ++i) {__								in.seek(offsets[i])__								S partitionState = partitionStateSerializer.deserialize(div)__								partitionableListState.add(partitionState)__							}_						} finally {_							closeStreamOnCancelRegistry.unregisterClosable(in)__							in.close()__						}_					}_				}_			}_		}__		return partitionableListState__	};see,operator,state,store;override,public,s,list,state,s,get,partitionable,state,list,state,descriptor,s,state,descriptor,throws,ioexception,preconditions,check,not,null,state,descriptor,string,name,preconditions,check,not,null,state,descriptor,get,name,type,serializer,s,partition,state,serializer,preconditions,check,not,null,state,descriptor,get,serializer,suppress,warnings,unchecked,partitionable,list,state,s,partitionable,list,state,partitionable,list,state,s,registered,states,get,name,if,null,partitionable,list,state,partitionable,list,state,new,partitionable,list,state,partition,state,serializer,registered,states,put,name,partitionable,list,state,if,restore,snapshots,null,for,operator,state,handle,state,handle,restore,snapshots,long,offsets,state,handle,get,state,name,to,partition,offsets,get,name,if,offsets,null,fsdata,input,stream,in,state,handle,open,input,stream,try,close,stream,on,cancel,registry,register,closable,in,data,input,view,div,new,data,input,view,stream,wrapper,in,for,int,i,0,i,offsets,length,i,in,seek,offsets,i,s,partition,state,partition,state,serializer,deserialize,div,partitionable,list,state,add,partition,state,finally,close,stream,on,cancel,registry,unregister,closable,in,in,close,return,partitionable,list,state
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend(ClassLoader userClassLoader);1475571578;Creates an empty OperatorStateStore.;public DefaultOperatorStateBackend(ClassLoader userClassLoader) {_		this(userClassLoader, null)__	};creates,an,empty,operator,state,store;public,default,operator,state,backend,class,loader,user,class,loader,this,user,class,loader,null
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend(ClassLoader userClassLoader);1475656513;Creates an empty OperatorStateStore.;public DefaultOperatorStateBackend(ClassLoader userClassLoader) {_		this(userClassLoader, null)__	};creates,an,empty,operator,state,store;public,default,operator,state,backend,class,loader,user,class,loader,this,user,class,loader,null
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend(ClassLoader userClassLoader);1475674226;Creates an empty OperatorStateStore.;public DefaultOperatorStateBackend(ClassLoader userClassLoader) {_		this(userClassLoader, null)__	};creates,an,empty,operator,state,store;public,default,operator,state,backend,class,loader,user,class,loader,this,user,class,loader,null
DefaultOperatorStateBackend -> public DefaultOperatorStateBackend(ClassLoader userClassLoader);1477324194;Creates an empty OperatorStateStore.;public DefaultOperatorStateBackend(ClassLoader userClassLoader) {_		this(userClassLoader, null)__	};creates,an,empty,operator,state,store;public,default,operator,state,backend,class,loader,user,class,loader,this,user,class,loader,null
