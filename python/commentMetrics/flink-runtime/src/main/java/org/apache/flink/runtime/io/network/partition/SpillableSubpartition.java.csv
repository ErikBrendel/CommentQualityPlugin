# id;timestamp;commentText;codeText;commentWords;codeWords
SpillableSubpartition -> private void increaseBuffersInBacklog(Buffer buffer);1502969925;Increases the number of non-event buffers by one after adding a non-event_buffer into this subpartition.;private void increaseBuffersInBacklog(Buffer buffer) {_		assert Thread.holdsLock(buffers)___		if (buffer != null && buffer.isBuffer()) {_			buffersInBacklog++__		}_	};increases,the,number,of,non,event,buffers,by,one,after,adding,a,non,event,buffer,into,this,subpartition;private,void,increase,buffers,in,backlog,buffer,buffer,assert,thread,holds,lock,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog
SpillableSubpartition -> private void increaseBuffersInBacklog(Buffer buffer);1515162520;Increases the number of non-event buffers by one after adding a non-event_buffer into this subpartition.;private void increaseBuffersInBacklog(Buffer buffer) {_		assert Thread.holdsLock(buffers)___		if (buffer != null && buffer.isBuffer()) {_			buffersInBacklog++__		}_	};increases,the,number,of,non,event,buffers,by,one,after,adding,a,non,event,buffer,into,this,subpartition;private,void,increase,buffers,in,backlog,buffer,buffer,assert,thread,holds,lock,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog
SpillableSubpartition -> private void increaseBuffersInBacklog(Buffer buffer);1515172715;Increases the number of non-event buffers by one after adding a non-event_buffer into this subpartition.;private void increaseBuffersInBacklog(Buffer buffer) {_		assert Thread.holdsLock(buffers)___		if (buffer != null && buffer.isBuffer()) {_			buffersInBacklog++__		}_	};increases,the,number,of,non,event,buffers,by,one,after,adding,a,non,event,buffer,into,this,subpartition;private,void,increase,buffers,in,backlog,buffer,buffer,assert,thread,holds,lock,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog
SpillableSubpartition -> private void increaseBuffersInBacklog(Buffer buffer);1515534998;Increases the number of non-event buffers by one after adding a non-event_buffer into this subpartition.;private void increaseBuffersInBacklog(Buffer buffer) {_		assert Thread.holdsLock(buffers)___		if (buffer != null && buffer.isBuffer()) {_			buffersInBacklog++__		}_	};increases,the,number,of,non,event,buffers,by,one,after,adding,a,non,event,buffer,into,this,subpartition;private,void,increase,buffers,in,backlog,buffer,buffer,assert,thread,holds,lock,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog
SpillableSubpartition -> public int decreaseBuffersInBacklog(Buffer buffer);1502969925;Decreases the number of non-event buffers by one after fetching a non-event_buffer from this subpartition (for access by the subpartition views).__@return backlog after the operation;public int decreaseBuffersInBacklog(Buffer buffer) {_		synchronized (buffers) {_			if (buffer != null && buffer.isBuffer()) {_				buffersInBacklog--__			}_			return buffersInBacklog__		}_	};decreases,the,number,of,non,event,buffers,by,one,after,fetching,a,non,event,buffer,from,this,subpartition,for,access,by,the,subpartition,views,return,backlog,after,the,operation;public,int,decrease,buffers,in,backlog,buffer,buffer,synchronized,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog,return,buffers,in,backlog
SpillableSubpartition -> public int decreaseBuffersInBacklog(Buffer buffer);1515162520;Decreases the number of non-event buffers by one after fetching a non-event_buffer from this subpartition (for access by the subpartition views).__@return backlog after the operation;public int decreaseBuffersInBacklog(Buffer buffer) {_		synchronized (buffers) {_			if (buffer != null && buffer.isBuffer()) {_				buffersInBacklog--__			}_			return buffersInBacklog__		}_	};decreases,the,number,of,non,event,buffers,by,one,after,fetching,a,non,event,buffer,from,this,subpartition,for,access,by,the,subpartition,views,return,backlog,after,the,operation;public,int,decrease,buffers,in,backlog,buffer,buffer,synchronized,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog,return,buffers,in,backlog
SpillableSubpartition -> public int decreaseBuffersInBacklog(Buffer buffer);1515172715;Decreases the number of non-event buffers by one after fetching a non-event_buffer from this subpartition (for access by the subpartition views).__@return backlog after the operation;public int decreaseBuffersInBacklog(Buffer buffer) {_		synchronized (buffers) {_			if (buffer != null && buffer.isBuffer()) {_				buffersInBacklog--__			}_			return buffersInBacklog__		}_	};decreases,the,number,of,non,event,buffers,by,one,after,fetching,a,non,event,buffer,from,this,subpartition,for,access,by,the,subpartition,views,return,backlog,after,the,operation;public,int,decrease,buffers,in,backlog,buffer,buffer,synchronized,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog,return,buffers,in,backlog
SpillableSubpartition -> public int decreaseBuffersInBacklog(Buffer buffer);1515534998;Decreases the number of non-event buffers by one after fetching a non-event_buffer from this subpartition (for access by the subpartition views).__@return backlog after the operation;public int decreaseBuffersInBacklog(Buffer buffer) {_		synchronized (buffers) {_			if (buffer != null && buffer.isBuffer()) {_				buffersInBacklog--__			}_			return buffersInBacklog__		}_	};decreases,the,number,of,non,event,buffers,by,one,after,fetching,a,non,event,buffer,from,this,subpartition,for,access,by,the,subpartition,views,return,backlog,after,the,operation;public,int,decrease,buffers,in,backlog,buffer,buffer,synchronized,buffers,if,buffer,null,buffer,is,buffer,buffers,in,backlog,return,buffers,in,backlog
