# id;timestamp;commentText;codeText;commentWords;codeWords
Broker -> public void remove(String key);1404986750;blocking retrieval and removal of the object to share;public void remove(String key) {_		mediations.remove(key)__	};blocking,retrieval,and,removal,of,the,object,to,share;public,void,remove,string,key,mediations,remove,key
Broker -> public void remove(String key);1405088715;blocking retrieval and removal of the object to share;public void remove(String key) {_		mediations.remove(key)__	};blocking,retrieval,and,removal,of,the,object,to,share;public,void,remove,string,key,mediations,remove,key
Broker -> public void remove(String key);1411473561;blocking retrieval and removal of the object to share;public void remove(String key) {_		mediations.remove(key)__	};blocking,retrieval,and,removal,of,the,object,to,share;public,void,remove,string,key,mediations,remove,key
Broker -> public void remove(String key);1497027221;Blocking retrieval and removal of the object to share.;public void remove(String key) {_		mediations.remove(key)__	};blocking,retrieval,and,removal,of,the,object,to,share;public,void,remove,string,key,mediations,remove,key
Broker -> private BlockingQueue<V> retrieveSharedQueue(String key);1404986750;thread-safe call to get a shared {@link BlockingQueue};private BlockingQueue<V> retrieveSharedQueue(String key) {_		BlockingQueue<V> queue = mediations.get(key)__		if (queue == null) {_			queue = new ArrayBlockingQueue<V>(1)__			BlockingQueue<V> commonQueue = mediations.putIfAbsent(key, queue)__			return commonQueue != null ? commonQueue : queue__		} else {_			return queue__		}_	};thread,safe,call,to,get,a,shared,link,blocking,queue;private,blocking,queue,v,retrieve,shared,queue,string,key,blocking,queue,v,queue,mediations,get,key,if,queue,null,queue,new,array,blocking,queue,v,1,blocking,queue,v,common,queue,mediations,put,if,absent,key,queue,return,common,queue,null,common,queue,queue,else,return,queue
Broker -> private BlockingQueue<V> retrieveSharedQueue(String key);1405088715;thread-safe call to get a shared {@link BlockingQueue};private BlockingQueue<V> retrieveSharedQueue(String key) {_		BlockingQueue<V> queue = mediations.get(key)__		if (queue == null) {_			queue = new ArrayBlockingQueue<V>(1)__			BlockingQueue<V> commonQueue = mediations.putIfAbsent(key, queue)__			return commonQueue != null ? commonQueue : queue__		} else {_			return queue__		}_	};thread,safe,call,to,get,a,shared,link,blocking,queue;private,blocking,queue,v,retrieve,shared,queue,string,key,blocking,queue,v,queue,mediations,get,key,if,queue,null,queue,new,array,blocking,queue,v,1,blocking,queue,v,common,queue,mediations,put,if,absent,key,queue,return,common,queue,null,common,queue,queue,else,return,queue
Broker -> private BlockingQueue<V> retrieveSharedQueue(String key);1411473561;thread-safe call to get a shared {@link BlockingQueue};private BlockingQueue<V> retrieveSharedQueue(String key) {_		BlockingQueue<V> queue = mediations.get(key)__		if (queue == null) {_			queue = new ArrayBlockingQueue<V>(1)__			BlockingQueue<V> commonQueue = mediations.putIfAbsent(key, queue)__			return commonQueue != null ? commonQueue : queue__		} else {_			return queue__		}_	};thread,safe,call,to,get,a,shared,link,blocking,queue;private,blocking,queue,v,retrieve,shared,queue,string,key,blocking,queue,v,queue,mediations,get,key,if,queue,null,queue,new,array,blocking,queue,v,1,blocking,queue,v,common,queue,mediations,put,if,absent,key,queue,return,common,queue,null,common,queue,queue,else,return,queue
Broker -> private BlockingQueue<V> retrieveSharedQueue(String key);1497027221;Thread-safe call to get a shared {@link BlockingQueue}.;private BlockingQueue<V> retrieveSharedQueue(String key) {_		BlockingQueue<V> queue = mediations.get(key)__		if (queue == null) {_			queue = new ArrayBlockingQueue<V>(1)__			BlockingQueue<V> commonQueue = mediations.putIfAbsent(key, queue)__			return commonQueue != null ? commonQueue : queue__		} else {_			return queue__		}_	};thread,safe,call,to,get,a,shared,link,blocking,queue;private,blocking,queue,v,retrieve,shared,queue,string,key,blocking,queue,v,queue,mediations,get,key,if,queue,null,queue,new,array,blocking,queue,v,1,blocking,queue,v,common,queue,mediations,put,if,absent,key,queue,return,common,queue,null,common,queue,queue,else,return,queue
Broker -> public V get(String key);1404986750;blocking retrieval and removal of the object to share;public V get(String key) {_		try {_			BlockingQueue<V> queue = retrieveSharedQueue(key)__			V objToShare = queue.take()__			if (!queue.offer(objToShare)) {_				throw new RuntimeException("Error: Concurrent modification of the broker slot for key '" + key + "'.")__			}_			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,string,key,try,blocking,queue,v,queue,retrieve,shared,queue,key,v,obj,to,share,queue,take,if,queue,offer,obj,to,share,throw,new,runtime,exception,error,concurrent,modification,of,the,broker,slot,for,key,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public V get(String key);1405088715;blocking retrieval and removal of the object to share;public V get(String key) {_		try {_			BlockingQueue<V> queue = retrieveSharedQueue(key)__			V objToShare = queue.take()__			if (!queue.offer(objToShare)) {_				throw new RuntimeException("Error: Concurrent modification of the broker slot for key '" + key + "'.")__			}_			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,string,key,try,blocking,queue,v,queue,retrieve,shared,queue,key,v,obj,to,share,queue,take,if,queue,offer,obj,to,share,throw,new,runtime,exception,error,concurrent,modification,of,the,broker,slot,for,key,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public V get(String key);1411473561;blocking retrieval and removal of the object to share;public V get(String key) {_		try {_			BlockingQueue<V> queue = retrieveSharedQueue(key)__			V objToShare = queue.take()__			if (!queue.offer(objToShare)) {_				throw new RuntimeException("Error: Concurrent modification of the broker slot for key '" + key + "'.")__			}_			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,string,key,try,blocking,queue,v,queue,retrieve,shared,queue,key,v,obj,to,share,queue,take,if,queue,offer,obj,to,share,throw,new,runtime,exception,error,concurrent,modification,of,the,broker,slot,for,key,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public V get(String key);1497027221;Blocking retrieval and removal of the object to share.;public V get(String key) {_		try {_			BlockingQueue<V> queue = retrieveSharedQueue(key)__			V objToShare = queue.take()__			if (!queue.offer(objToShare)) {_				throw new RuntimeException("Error: Concurrent modification of the broker slot for key '" + key + "'.")__			}_			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,string,key,try,blocking,queue,v,queue,retrieve,shared,queue,key,v,obj,to,share,queue,take,if,queue,offer,obj,to,share,throw,new,runtime,exception,error,concurrent,modification,of,the,broker,slot,for,key,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public V getAndRemove(String key);1404986750;blocking retrieval and removal of the object to share;public V getAndRemove(String key) {_		try {_			V objToShare = retrieveSharedQueue(key).take()__			mediations.remove(key)__			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,and,remove,string,key,try,v,obj,to,share,retrieve,shared,queue,key,take,mediations,remove,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public V getAndRemove(String key);1405088715;blocking retrieval and removal of the object to share;public V getAndRemove(String key) {_		try {_			V objToShare = retrieveSharedQueue(key).take()__			mediations.remove(key)__			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,and,remove,string,key,try,v,obj,to,share,retrieve,shared,queue,key,take,mediations,remove,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public V getAndRemove(String key);1411473561;blocking retrieval and removal of the object to share;public V getAndRemove(String key) {_		try {_			V objToShare = retrieveSharedQueue(key).take()__			mediations.remove(key)__			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,and,remove,string,key,try,v,obj,to,share,retrieve,shared,queue,key,take,mediations,remove,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public V getAndRemove(String key);1497027221;Blocking retrieval and removal of the object to share.;public V getAndRemove(String key) {_		try {_			V objToShare = retrieveSharedQueue(key).take()__			mediations.remove(key)__			return objToShare__		} catch (InterruptedException e) {_			throw new RuntimeException(e)__		}_	};blocking,retrieval,and,removal,of,the,object,to,share;public,v,get,and,remove,string,key,try,v,obj,to,share,retrieve,shared,queue,key,take,mediations,remove,key,return,obj,to,share,catch,interrupted,exception,e,throw,new,runtime,exception,e
Broker -> public void handIn(String key, V obj);1404986750;hand in the object to share;public void handIn(String key, V obj) {_		if (!retrieveSharedQueue(key).offer(obj)) {_			throw new RuntimeException("Could not register the given element, broker slot is already occupied.")__		}_	};hand,in,the,object,to,share;public,void,hand,in,string,key,v,obj,if,retrieve,shared,queue,key,offer,obj,throw,new,runtime,exception,could,not,register,the,given,element,broker,slot,is,already,occupied
Broker -> public void handIn(String key, V obj);1405088715;hand in the object to share;public void handIn(String key, V obj) {_		if (!retrieveSharedQueue(key).offer(obj)) {_			throw new RuntimeException("Could not register the given element, broker slot is already occupied.")__		}_	};hand,in,the,object,to,share;public,void,hand,in,string,key,v,obj,if,retrieve,shared,queue,key,offer,obj,throw,new,runtime,exception,could,not,register,the,given,element,broker,slot,is,already,occupied
Broker -> public void handIn(String key, V obj);1411473561;hand in the object to share;public void handIn(String key, V obj) {_		if (!retrieveSharedQueue(key).offer(obj)) {_			throw new RuntimeException("Could not register the given element, broker slot is already occupied.")__		}_	};hand,in,the,object,to,share;public,void,hand,in,string,key,v,obj,if,retrieve,shared,queue,key,offer,obj,throw,new,runtime,exception,could,not,register,the,given,element,broker,slot,is,already,occupied
Broker -> public void handIn(String key, V obj);1497027221;Hand in the object to share.;public void handIn(String key, V obj) {_		if (!retrieveSharedQueue(key).offer(obj)) {_			throw new RuntimeException("Could not register the given element, broker slot is already occupied.")__		}_	};hand,in,the,object,to,share;public,void,hand,in,string,key,v,obj,if,retrieve,shared,queue,key,offer,obj,throw,new,runtime,exception,could,not,register,the,given,element,broker,slot,is,already,occupied
