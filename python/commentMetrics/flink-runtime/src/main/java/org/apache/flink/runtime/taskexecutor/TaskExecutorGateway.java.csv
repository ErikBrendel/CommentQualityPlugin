# id;timestamp;commentText;codeText;commentWords;codeWords
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1482522865;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1487871589;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1489766404;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1489766405;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1490273924;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1493386068;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1493386105;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID)_;1482522862;Cancel the given task.__@param executionAttemptID identifying the task_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID)_;1482522862;Cancel the given task.__@param executionAttemptID identifying the task_@return Future acknowledge if the task is successfully canceled;Future<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,return,future,acknowledge,if,the,task,is,successfully,canceled;future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1501760738;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1504525441;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1504608225;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1515588319;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1515588331;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1517920461;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1517920615;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1539176686;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1539176686;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;CompletableFuture<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;completable,future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;1517920461;Requests the file upload of the specified type to the cluster's {@link BlobServer}.__@param fileType to upload_@param timeout for the asynchronous operation_@return Future which is completed with the {@link TransientBlobKey} of the uploaded file.;CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;requests,the,file,upload,of,the,specified,type,to,the,cluster,s,link,blob,server,param,file,type,to,upload,param,timeout,for,the,asynchronous,operation,return,future,which,is,completed,with,the,link,transient,blob,key,of,the,uploaded,file;completable,future,transient,blob,key,request,file,upload,file,type,file,type,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;1517920615;Requests the file upload of the specified type to the cluster's {@link BlobServer}.__@param fileType to upload_@param timeout for the asynchronous operation_@return Future which is completed with the {@link TransientBlobKey} of the uploaded file.;CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;requests,the,file,upload,of,the,specified,type,to,the,cluster,s,link,blob,server,param,file,type,to,upload,param,timeout,for,the,asynchronous,operation,return,future,which,is,completed,with,the,link,transient,blob,key,of,the,uploaded,file;completable,future,transient,blob,key,request,file,upload,file,type,file,type,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;1539176686;Requests the file upload of the specified type to the cluster's {@link BlobServer}.__@param fileType to upload_@param timeout for the asynchronous operation_@return Future which is completed with the {@link TransientBlobKey} of the uploaded file.;CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;requests,the,file,upload,of,the,specified,type,to,the,cluster,s,link,blob,server,param,file,type,to,upload,param,timeout,for,the,asynchronous,operation,return,future,which,is,completed,with,the,link,transient,blob,key,of,the,uploaded,file;completable,future,transient,blob,key,request,file,upload,file,type,file,type,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;1539176686;Requests the file upload of the specified type to the cluster's {@link BlobServer}.__@param fileType to upload_@param timeout for the asynchronous operation_@return Future which is completed with the {@link TransientBlobKey} of the uploaded file.;CompletableFuture<TransientBlobKey> requestFileUpload(FileType fileType, @RpcTimeout Time timeout)_;requests,the,file,upload,of,the,specified,type,to,the,cluster,s,link,blob,server,param,file,type,to,upload,param,timeout,for,the,asynchronous,operation,return,future,which,is,completed,with,the,link,transient,blob,key,of,the,uploaded,file;completable,future,transient,blob,key,request,file,upload,file,type,file,type,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1482522862;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1482522862;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1482522865;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1487871589;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1489766404;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1489766405;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1490273924;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1493386068;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1493386105;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;Future<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<SlotRequestReply> requestSlot( 		AllocationID allocationID, 		UUID resourceManagerLeaderID, 		@RpcTimeout FiniteDuration timeout)_;1482522858;Send by the ResourceManager to the TaskExecutor_@param allocationID id for the request_@param resourceManagerLeaderID current leader id of the ResourceManager_@return SlotRequestReply Answer to the request;Future<SlotRequestReply> requestSlot(_		AllocationID allocationID,_		UUID resourceManagerLeaderID,_		@RpcTimeout FiniteDuration timeout)_;send,by,the,resource,manager,to,the,task,executor,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,return,slot,request,reply,answer,to,the,request;future,slot,request,reply,request,slot,allocation,id,allocation,id,uuid,resource,manager,leader,id,rpc,timeout,finite,duration,timeout
TaskExecutorGateway -> Future<SlotRequestReply> requestSlot( 		AllocationID allocationID, 		UUID resourceManagerLeaderID, 		@RpcTimeout FiniteDuration timeout)_;1482522859;Requests a slot from the TaskManager__@param allocationID id for the request_@param resourceManagerLeaderID current leader id of the ResourceManager_@return answer to the slot request;Future<SlotRequestReply> requestSlot(_		AllocationID allocationID,_		UUID resourceManagerLeaderID,_		@RpcTimeout FiniteDuration timeout)_;requests,a,slot,from,the,task,manager,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,return,answer,to,the,slot,request;future,slot,request,reply,request,slot,allocation,id,allocation,id,uuid,resource,manager,leader,id,rpc,timeout,finite,duration,timeout
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1487871589;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1489766404;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1489766405;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1490273924;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1493386068;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1493386105;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> Future<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1493386068;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@throws SlotAllocationException if the slot allocation fails_@return answer to the slot request;Future<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,throws,slot,allocation,exception,if,the,slot,allocation,fails,return,answer,to,the,slot,request;future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1493386105;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@return answer to the slot request;Future<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,return,answer,to,the,slot,request;future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1515588319;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1515588331;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1517920461;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1517920615;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1539176686;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> freeSlot( 		final AllocationID allocationId, 		final Throwable cause, 		@RpcTimeout final Time timeout)_;1539176686;Frees the slot with the given allocation ID.__@param allocationId identifying the slot to free_@param cause of the freeing operation_@param timeout for the operation_@return Future acknowledge which is returned once the slot has been freed;CompletableFuture<Acknowledge> freeSlot(_		final AllocationID allocationId,_		final Throwable cause,_		@RpcTimeout final Time timeout)_;frees,the,slot,with,the,given,allocation,id,param,allocation,id,identifying,the,slot,to,free,param,cause,of,the,freeing,operation,param,timeout,for,the,operation,return,future,acknowledge,which,is,returned,once,the,slot,has,been,freed;completable,future,acknowledge,free,slot,final,allocation,id,allocation,id,final,throwable,cause,rpc,timeout,final,time,timeout
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1490273924;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1493386068;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1493386105;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1501760738;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1504525441;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1504608225;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1515588319;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1515588331;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1517920461;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1517920615;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1539176686;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> void disconnectResourceManager(Exception cause)_;1539176686;Disconnects the ResourceManager from the TaskManager.__@param cause for the disconnection from the ResourceManager;void disconnectResourceManager(Exception cause)_;disconnects,the,resource,manager,from,the,task,manager,param,cause,for,the,disconnection,from,the,resource,manager;void,disconnect,resource,manager,exception,cause
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1501760738;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1504525441;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1504608225;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1515588319;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1515588331;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1517920461;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1517920615;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1539176686;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;1539176686;Confirm a checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointId unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully confirmed;CompletableFuture<Acknowledge> confirmCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointId, long checkpointTimestamp)_;confirm,a,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,confirmed;completable,future,acknowledge,confirm,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID)_;1482522862;Stop the given task.__@param executionAttemptID identifying the task_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID)_;1482522862;Stop the given task.__@param executionAttemptID identifying the task_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1482522862;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@throws SlotAllocationException if the slot allocation fails_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,throws,slot,allocation,exception,if,the,slot,allocation,fails,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1482522865;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@throws SlotAllocationException if the slot allocation fails_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,throws,slot,allocation,exception,if,the,slot,allocation,fails,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1487871589;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@throws SlotAllocationException if the slot allocation fails_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,throws,slot,allocation,exception,if,the,slot,allocation,fails,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1489766404;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@throws SlotAllocationException if the slot allocation fails_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,throws,slot,allocation,exception,if,the,slot,allocation,fails,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1489766405;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@throws SlotAllocationException if the slot allocation fails_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,throws,slot,allocation,exception,if,the,slot,allocation,fails,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		UUID resourceManagerLeaderId, 		@RpcTimeout Time timeout)_;1490273924;Requests a slot from the TaskManager__@param slotId slot id for the request_@param allocationId id for the request_@param resourceManagerLeaderId current leader id of the ResourceManager_@throws SlotAllocationException if the slot allocation fails_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		UUID resourceManagerLeaderId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,throws,slot,allocation,exception,if,the,slot,allocation,fails,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1501760738;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1504525441;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1504608225;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1515588319;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1515588331;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1517920461;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1517920615;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1539176686;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1539176686;Cancel the given task.__@param executionAttemptID identifying the task_@param timeout for the cancel operation_@return Future acknowledge if the task is successfully canceled;CompletableFuture<Acknowledge> cancelTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;cancel,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,cancel,operation,return,future,acknowledge,if,the,task,is,successfully,canceled;completable,future,acknowledge,cancel,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1482522862;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1482522862;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1482522865;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1487871589;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1489766404;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1489766405;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1490273924;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1493386068;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1493386105;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1501760738;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1504525441;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1504608225;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1515588319;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1515588331;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1517920461;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1517920615;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1539176686;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void failPartition(ExecutionAttemptID executionAttemptID)_;1539176686;Fail all intermediate result partitions of the given task.__@param executionAttemptID identifying the task;void failPartition(ExecutionAttemptID executionAttemptID)_;fail,all,intermediate,result,partitions,of,the,given,task,param,execution,attempt,id,identifying,the,task;void,fail,partition,execution,attempt,id,execution,attempt,id
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1489766405;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1490273924;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1493386068;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1493386105;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1501760738;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1504525441;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1504608225;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1515588319;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1515588331;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1517920461;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1517920615;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1539176686;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> void disconnectJobManager(JobID jobId, Exception cause)_;1539176686;Disconnects the given JobManager from the TaskManager.__@param jobId JobID for which the JobManager was the leader_@param cause for the disconnection from the JobManager;void disconnectJobManager(JobID jobId, Exception cause)_;disconnects,the,given,job,manager,from,the,task,manager,param,job,id,job,id,for,which,the,job,manager,was,the,leader,param,cause,for,the,disconnection,from,the,job,manager;void,disconnect,job,manager,job,id,job,id,exception,cause
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1504525441;Requests a slot from the TaskManager__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1504608225;Requests a slot from the TaskManager__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1515588319;Requests a slot from the TaskManager__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1515588331;Requests a slot from the TaskManager.__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1517920461;Requests a slot from the TaskManager.__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1517920615;Requests a slot from the TaskManager.__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1539176686;Requests a slot from the TaskManager.__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> requestSlot( 		SlotID slotId, 		JobID jobId, 		AllocationID allocationId, 		String targetAddress, 		ResourceManagerId resourceManagerId, 		@RpcTimeout Time timeout)_;1539176686;Requests a slot from the TaskManager.__@param slotId slot id for the request_@param jobId for which to request a slot_@param allocationId id for the request_@param targetAddress to which to offer the requested slots_@param resourceManagerId current leader id of the ResourceManager_@param timeout for the operation_@return answer to the slot request;CompletableFuture<Acknowledge> requestSlot(_		SlotID slotId,_		JobID jobId,_		AllocationID allocationId,_		String targetAddress,_		ResourceManagerId resourceManagerId,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,job,id,for,which,to,request,a,slot,param,allocation,id,id,for,the,request,param,target,address,to,which,to,offer,the,requested,slots,param,resource,manager,id,current,leader,id,of,the,resource,manager,param,timeout,for,the,operation,return,answer,to,the,slot,request;completable,future,acknowledge,request,slot,slot,id,slot,id,job,id,job,id,allocation,id,allocation,id,string,target,address,resource,manager,id,resource,manager,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp)_;1482522862;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp)_;1482522862;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp)_;1482522865;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@return Future acknowledge if the checkpoint has been successfully triggered;Future<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1501760738;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1504525441;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotID, 		AllocationID allocationID, 		UUID resourceManagerLeaderID, 		@RpcTimeout Time timeout)_;1482522861;Requests a slot from the TaskManager__@param slotID slot id for the request_@param allocationID id for the request_@param resourceManagerLeaderID current leader id of the ResourceManager_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotID,_		AllocationID allocationID,_		UUID resourceManagerLeaderID,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,allocation,id,allocation,id,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<TMSlotRequestReply> requestSlot( 		SlotID slotID, 		AllocationID allocationID, 		UUID resourceManagerLeaderID, 		@RpcTimeout Time timeout)_;1482522862;Requests a slot from the TaskManager__@param slotID slot id for the request_@param allocationID id for the request_@param resourceManagerLeaderID current leader id of the ResourceManager_@return answer to the slot request;Future<TMSlotRequestReply> requestSlot(_		SlotID slotID,_		AllocationID allocationID,_		UUID resourceManagerLeaderID,_		@RpcTimeout Time timeout)_;requests,a,slot,from,the,task,manager,param,slot,id,slot,id,for,the,request,param,allocation,id,id,for,the,request,param,resource,manager,leader,id,current,leader,id,of,the,resource,manager,return,answer,to,the,slot,request;future,tmslot,request,reply,request,slot,slot,id,slot,id,allocation,id,allocation,id,uuid,resource,manager,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1482522862;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1482522865;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1487871589;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1489766404;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1489766405;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1490273924;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1493386068;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		UUID leaderId, 		@RpcTimeout Time timeout)_;1493386105;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param leaderId of the job leader_@param timeout of the submit operation_@return Future acknowledge of the successful operation;Future<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		UUID leaderId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,leader,id,of,the,job,leader,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;future,acknowledge,submit,task,task,deployment,descriptor,tdd,uuid,leader,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1501760738;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1504525441;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1504608225;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1515588319;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1515588331;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1517920461;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1517920615;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1539176686;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;1539176686;Trigger the checkpoint for the given task. The checkpoint is identified by the checkpoint ID_and the checkpoint timestamp.__@param executionAttemptID identifying the task_@param checkpointID unique id for the checkpoint_@param checkpointTimestamp is the timestamp when the checkpoint has been initiated_@param checkpointOptions for performing the checkpoint_@return Future acknowledge if the checkpoint has been successfully triggered;CompletableFuture<Acknowledge> triggerCheckpoint(ExecutionAttemptID executionAttemptID, long checkpointID, long checkpointTimestamp, CheckpointOptions checkpointOptions)_;trigger,the,checkpoint,for,the,given,task,the,checkpoint,is,identified,by,the,checkpoint,id,and,the,checkpoint,timestamp,param,execution,attempt,id,identifying,the,task,param,checkpoint,id,unique,id,for,the,checkpoint,param,checkpoint,timestamp,is,the,timestamp,when,the,checkpoint,has,been,initiated,param,checkpoint,options,for,performing,the,checkpoint,return,future,acknowledge,if,the,checkpoint,has,been,successfully,triggered;completable,future,acknowledge,trigger,checkpoint,execution,attempt,id,execution,attempt,id,long,checkpoint,id,long,checkpoint,timestamp,checkpoint,options,checkpoint,options
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1482522865;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1487871589;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1489766404;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1489766405;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1490273924;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1493386068;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;1493386105;Stop the given task.__@param executionAttemptID identifying the task_@param timeout for the stop operation_@return Future acknowledge if the task is successfully stopped;Future<Acknowledge> stopTask(ExecutionAttemptID executionAttemptID, @RpcTimeout Time timeout)_;stop,the,given,task,param,execution,attempt,id,identifying,the,task,param,timeout,for,the,stop,operation,return,future,acknowledge,if,the,task,is,successfully,stopped;future,acknowledge,stop,task,execution,attempt,id,execution,attempt,id,rpc,timeout,time,timeout
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1489766405;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1490273924;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1493386068;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1493386105;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1501760738;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1504525441;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1504608225;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1515588319;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1515588331;Heartbeat request from the job manager__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1517920461;Heartbeat request from the job manager.__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1517920615;Heartbeat request from the job manager.__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1539176686;Heartbeat request from the job manager.__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;1539176686;Heartbeat request from the job manager.__@param heartbeatOrigin unique id of the job manager;void heartbeatFromJobManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,job,manager,param,heartbeat,origin,unique,id,of,the,job,manager;void,heartbeat,from,job,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1482522865;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1487871589;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1489766404;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1489766405;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1490273924;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1493386068;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> Future<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1493386105;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;Future<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1490273924;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1493386068;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1493386105;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1501760738;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1504525441;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1504608225;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1515588319;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1515588331;Heartbeat request from the resource manager__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1517920461;Heartbeat request from the resource manager.__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1517920615;Heartbeat request from the resource manager.__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1539176686;Heartbeat request from the resource manager.__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;1539176686;Heartbeat request from the resource manager.__@param heartbeatOrigin unique id of the resource manager;void heartbeatFromResourceManager(ResourceID heartbeatOrigin)_;heartbeat,request,from,the,resource,manager,param,heartbeat,origin,unique,id,of,the,resource,manager;void,heartbeat,from,resource,manager,resource,id,heartbeat,origin
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1501760738;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1504525441;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1504608225;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1515588319;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1515588331;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1517920461;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1517920615;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1539176686;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> updatePartitions( 		ExecutionAttemptID executionAttemptID, 		Iterable<PartitionInfo> partitionInfos, 		@RpcTimeout Time timeout)_;1539176686;Update the task where the given partitions can be found.__@param executionAttemptID identifying the task_@param partitionInfos telling where the partition can be retrieved from_@param timeout for the update partitions operation_@return Future acknowledge if the partitions have been successfully updated;CompletableFuture<Acknowledge> updatePartitions(_		ExecutionAttemptID executionAttemptID,_		Iterable<PartitionInfo> partitionInfos,_		@RpcTimeout Time timeout)_;update,the,task,where,the,given,partitions,can,be,found,param,execution,attempt,id,identifying,the,task,param,partition,infos,telling,where,the,partition,can,be,retrieved,from,param,timeout,for,the,update,partitions,operation,return,future,acknowledge,if,the,partitions,have,been,successfully,updated;completable,future,acknowledge,update,partitions,execution,attempt,id,execution,attempt,id,iterable,partition,info,partition,infos,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		JobMasterId jobMasterId, 		@RpcTimeout Time timeout)_;1504608225;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param jobMasterId identifying the submitting JobMaster_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		JobMasterId jobMasterId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,job,master,id,identifying,the,submitting,job,master,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,job,master,id,job,master,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		JobMasterId jobMasterId, 		@RpcTimeout Time timeout)_;1515588319;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param jobMasterId identifying the submitting JobMaster_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		JobMasterId jobMasterId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,job,master,id,identifying,the,submitting,job,master,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,job,master,id,job,master,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		JobMasterId jobMasterId, 		@RpcTimeout Time timeout)_;1515588331;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param jobMasterId identifying the submitting JobMaster_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		JobMasterId jobMasterId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,job,master,id,identifying,the,submitting,job,master,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,job,master,id,job,master,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		JobMasterId jobMasterId, 		@RpcTimeout Time timeout)_;1517920461;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param jobMasterId identifying the submitting JobMaster_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		JobMasterId jobMasterId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,job,master,id,identifying,the,submitting,job,master,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,job,master,id,job,master,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		JobMasterId jobMasterId, 		@RpcTimeout Time timeout)_;1517920615;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param jobMasterId identifying the submitting JobMaster_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		JobMasterId jobMasterId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,job,master,id,identifying,the,submitting,job,master,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,job,master,id,job,master,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		JobMasterId jobMasterId, 		@RpcTimeout Time timeout)_;1539176686;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param jobMasterId identifying the submitting JobMaster_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		JobMasterId jobMasterId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,job,master,id,identifying,the,submitting,job,master,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,job,master,id,job,master,id,rpc,timeout,time,timeout
TaskExecutorGateway -> CompletableFuture<Acknowledge> submitTask( 		TaskDeploymentDescriptor tdd, 		JobMasterId jobMasterId, 		@RpcTimeout Time timeout)_;1539176686;Submit a {@link Task} to the {@link TaskExecutor}.__@param tdd describing the task to submit_@param jobMasterId identifying the submitting JobMaster_@param timeout of the submit operation_@return Future acknowledge of the successful operation;CompletableFuture<Acknowledge> submitTask(_		TaskDeploymentDescriptor tdd,_		JobMasterId jobMasterId,_		@RpcTimeout Time timeout)_;submit,a,link,task,to,the,link,task,executor,param,tdd,describing,the,task,to,submit,param,job,master,id,identifying,the,submitting,job,master,param,timeout,of,the,submit,operation,return,future,acknowledge,of,the,successful,operation;completable,future,acknowledge,submit,task,task,deployment,descriptor,tdd,job,master,id,job,master,id,rpc,timeout,time,timeout
