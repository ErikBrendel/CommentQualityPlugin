# id;timestamp;commentText;codeText;commentWords;codeWords
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size);1516285456;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>)_@param size_current size of data in the buffer, i.e. the writer index to set;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size) {_		super(memorySegment.size())__		this.memorySegment = checkNotNull(memorySegment)__		this.recycler = checkNotNull(recycler)__		this.isBuffer = isBuffer__		this.currentSize = memorySegment.size()__		setSize(size)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt,param,size,current,size,of,data,in,the,buffer,i,e,the,writer,index,to,set;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,int,size,super,memory,segment,size,this,memory,segment,check,not,null,memory,segment,this,recycler,check,not,null,recycler,this,is,buffer,is,buffer,this,current,size,memory,segment,size,set,size,size
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size);1516285878;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>)_@param size_current size of data in the buffer, i.e. the writer index to set;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size) {_		super(memorySegment.size())__		this.memorySegment = checkNotNull(memorySegment)__		this.recycler = checkNotNull(recycler)__		this.isBuffer = isBuffer__		this.currentSize = memorySegment.size()__		setSize(size)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt,param,size,current,size,of,data,in,the,buffer,i,e,the,writer,index,to,set;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,int,size,super,memory,segment,size,this,memory,segment,check,not,null,memory,segment,this,recycler,check,not,null,recycler,this,is,buffer,is,buffer,this,current,size,memory,segment,size,set,size,size
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size);1516286125;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>)_@param size_current size of data in the buffer, i.e. the writer index to set;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size) {_		super(memorySegment.size())__		this.memorySegment = checkNotNull(memorySegment)__		this.recycler = checkNotNull(recycler)__		this.isBuffer = isBuffer__		this.currentSize = memorySegment.size()__		setSize(size)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt,param,size,current,size,of,data,in,the,buffer,i,e,the,writer,index,to,set;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,int,size,super,memory,segment,size,this,memory,segment,check,not,null,memory,segment,this,recycler,check,not,null,recycler,this,is,buffer,is,buffer,this,current,size,memory,segment,size,set,size,size
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size);1516291532;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>)_@param size_current size of data in the buffer, i.e. the writer index to set;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size) {_		super(memorySegment.size())__		this.memorySegment = checkNotNull(memorySegment)__		this.recycler = checkNotNull(recycler)__		this.isBuffer = isBuffer__		this.currentSize = memorySegment.size()__		setSize(size)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt,param,size,current,size,of,data,in,the,buffer,i,e,the,writer,index,to,set;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,int,size,super,memory,segment,size,this,memory,segment,check,not,null,memory,segment,this,recycler,check,not,null,recycler,this,is,buffer,is,buffer,this,current,size,memory,segment,size,set,size,size
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size);1519039299;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>)_@param size_current size of data in the buffer, i.e. the writer index to set;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size) {_		super(memorySegment.size())__		this.memorySegment = checkNotNull(memorySegment)__		this.recycler = checkNotNull(recycler)__		this.isBuffer = isBuffer__		this.currentSize = memorySegment.size()__		setSize(size)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt,param,size,current,size,of,data,in,the,buffer,i,e,the,writer,index,to,set;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,int,size,super,memory,segment,size,this,memory,segment,check,not,null,memory,segment,this,recycler,check,not,null,recycler,this,is,buffer,is,buffer,this,current,size,memory,segment,size,set,size,size
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size);1528876304;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>)_@param size_current size of data in the buffer, i.e. the writer index to set;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size) {_		super(memorySegment.size())__		this.memorySegment = checkNotNull(memorySegment)__		this.recycler = checkNotNull(recycler)__		this.isBuffer = isBuffer__		this.currentSize = memorySegment.size()__		setSize(size)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt,param,size,current,size,of,data,in,the,buffer,i,e,the,writer,index,to,set;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,int,size,super,memory,segment,size,this,memory,segment,check,not,null,memory,segment,this,recycler,check,not,null,recycler,this,is,buffer,is,buffer,this,current,size,memory,segment,size,set,size,size
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size);1537385496;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>size</tt> as <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>)_@param size_current size of data in the buffer, i.e. the writer index to set;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer, int size) {_		super(memorySegment.size())__		this.memorySegment = checkNotNull(memorySegment)__		this.recycler = checkNotNull(recycler)__		this.isBuffer = isBuffer__		this.currentSize = memorySegment.size()__		setSize(size)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,size,tt,as,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt,param,size,current,size,of,data,in,the,buffer,i,e,the,writer,index,to,set;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,int,size,super,memory,segment,size,this,memory,segment,check,not,null,memory,segment,this,recycler,check,not,null,recycler,this,is,buffer,is,buffer,this,current,size,memory,segment,size,set,size,size
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler);1516285456;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler) {_		this(memorySegment, recycler, true)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,this,memory,segment,recycler,true
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler);1516285878;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler) {_		this(memorySegment, recycler, true)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,this,memory,segment,recycler,true
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler);1516286125;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler) {_		this(memorySegment, recycler, true)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,this,memory,segment,recycler,true
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler);1516291532;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler) {_		this(memorySegment, recycler, true)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,this,memory,segment,recycler,true
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler);1519039299;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler) {_		this(memorySegment, recycler, true)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,this,memory,segment,recycler,true
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler);1528876304;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler) {_		this(memorySegment, recycler, true)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,this,memory,segment,recycler,true
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler);1537385496;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>;public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler) {_		this(memorySegment, recycler, true)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,this,memory,segment,recycler,true
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer);1516285456;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>);public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer) {_		this(memorySegment, recycler, isBuffer, 0)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,this,memory,segment,recycler,is,buffer,0
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer);1516285878;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>);public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer) {_		this(memorySegment, recycler, isBuffer, 0)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,this,memory,segment,recycler,is,buffer,0
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer);1516286125;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>);public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer) {_		this(memorySegment, recycler, isBuffer, 0)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,this,memory,segment,recycler,is,buffer,0
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer);1516291532;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>);public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer) {_		this(memorySegment, recycler, isBuffer, 0)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,this,memory,segment,recycler,is,buffer,0
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer);1519039299;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>);public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer) {_		this(memorySegment, recycler, isBuffer, 0)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,this,memory,segment,recycler,is,buffer,0
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer);1528876304;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>);public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer) {_		this(memorySegment, recycler, isBuffer, 0)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,this,memory,segment,recycler,is,buffer,0
NetworkBuffer -> public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer);1537385496;Creates a new buffer instance backed by the given <tt>memorySegment</tt> with <tt>0</tt> for_the <tt>readerIndex</tt> and <tt>writerIndex</tt>.__@param memorySegment_backing memory segment (defines {@link #maxCapacity})_@param recycler_will be called to recycle this buffer once the reference count is <tt>0</tt>_@param isBuffer_whether this buffer represents a buffer (<tt>true</tt>) or an event (<tt>false</tt>);public NetworkBuffer(MemorySegment memorySegment, BufferRecycler recycler, boolean isBuffer) {_		this(memorySegment, recycler, isBuffer, 0)__	};creates,a,new,buffer,instance,backed,by,the,given,tt,memory,segment,tt,with,tt,0,tt,for,the,tt,reader,index,tt,and,tt,writer,index,tt,param,memory,segment,backing,memory,segment,defines,link,max,capacity,param,recycler,will,be,called,to,recycle,this,buffer,once,the,reference,count,is,tt,0,tt,param,is,buffer,whether,this,buffer,represents,a,buffer,tt,true,tt,or,an,event,tt,false,tt;public,network,buffer,memory,segment,memory,segment,buffer,recycler,recycler,boolean,is,buffer,this,memory,segment,recycler,is,buffer,0
