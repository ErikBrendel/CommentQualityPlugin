# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointStorage -> boolean hasDefaultSavepointLocation()_;1509045960;Checks whether the storage has a default savepoint location configured.;boolean hasDefaultSavepointLocation()_;checks,whether,the,storage,has,a,default,savepoint,location,configured;boolean,has,default,savepoint,location
CheckpointStorage -> boolean hasDefaultSavepointLocation()_;1515600846;Checks whether the storage has a default savepoint location configured.;boolean hasDefaultSavepointLocation()_;checks,whether,the,storage,has,a,default,savepoint,location,configured;boolean,has,default,savepoint,location
CheckpointStorage -> boolean hasDefaultSavepointLocation()_;1517414098;Checks whether the storage has a default savepoint location configured.;boolean hasDefaultSavepointLocation()_;checks,whether,the,storage,has,a,default,savepoint,location,configured;boolean,has,default,savepoint,location
CheckpointStorage -> CheckpointStreamFactory resolveCheckpointStorageLocation( 			long checkpointId, 			CheckpointStorageLocationReference reference) throws IOException_;1515600846;Resolves a storage location reference into a CheckpointStreamFactory.__<p>The reference may be the {@link CheckpointStorageLocationReference#isDefaultReference() default reference},_in which case the method should return the default location, taking existing configuration_and checkpoint ID into account.__@param checkpointId The ID of the checkpoint that the location is initialized for._@param reference The checkpoint location reference.__@return A checkpoint storage location reflecting the reference and checkpoint ID.__@throws IOException Thrown, if the storage location cannot be initialized from the reference.;CheckpointStreamFactory resolveCheckpointStorageLocation(_			long checkpointId,_			CheckpointStorageLocationReference reference) throws IOException_;resolves,a,storage,location,reference,into,a,checkpoint,stream,factory,p,the,reference,may,be,the,link,checkpoint,storage,location,reference,is,default,reference,default,reference,in,which,case,the,method,should,return,the,default,location,taking,existing,configuration,and,checkpoint,id,into,account,param,checkpoint,id,the,id,of,the,checkpoint,that,the,location,is,initialized,for,param,reference,the,checkpoint,location,reference,return,a,checkpoint,storage,location,reflecting,the,reference,and,checkpoint,id,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,from,the,reference;checkpoint,stream,factory,resolve,checkpoint,storage,location,long,checkpoint,id,checkpoint,storage,location,reference,reference,throws,ioexception
CheckpointStorage -> CheckpointStreamFactory resolveCheckpointStorageLocation( 			long checkpointId, 			CheckpointStorageLocationReference reference) throws IOException_;1517414098;Resolves a storage location reference into a CheckpointStreamFactory.__<p>The reference may be the {@link CheckpointStorageLocationReference#isDefaultReference() default reference},_in which case the method should return the default location, taking existing configuration_and checkpoint ID into account.__@param checkpointId The ID of the checkpoint that the location is initialized for._@param reference The checkpoint location reference.__@return A checkpoint storage location reflecting the reference and checkpoint ID.__@throws IOException Thrown, if the storage location cannot be initialized from the reference.;CheckpointStreamFactory resolveCheckpointStorageLocation(_			long checkpointId,_			CheckpointStorageLocationReference reference) throws IOException_;resolves,a,storage,location,reference,into,a,checkpoint,stream,factory,p,the,reference,may,be,the,link,checkpoint,storage,location,reference,is,default,reference,default,reference,in,which,case,the,method,should,return,the,default,location,taking,existing,configuration,and,checkpoint,id,into,account,param,checkpoint,id,the,id,of,the,checkpoint,that,the,location,is,initialized,for,param,reference,the,checkpoint,location,reference,return,a,checkpoint,storage,location,reflecting,the,reference,and,checkpoint,id,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,from,the,reference;checkpoint,stream,factory,resolve,checkpoint,storage,location,long,checkpoint,id,checkpoint,storage,location,reference,reference,throws,ioexception
CheckpointStorage -> boolean supportsHighlyAvailableStorage()_;1509045960;Checks whether this backend supports highly available storage of data.__<p>Some state backends may offer support for that with default settings, which makes them_suitable for zero-config prototyping, but not for actual production setups.;boolean supportsHighlyAvailableStorage()_;checks,whether,this,backend,supports,highly,available,storage,of,data,p,some,state,backends,may,offer,support,for,that,with,default,settings,which,makes,them,suitable,for,zero,config,prototyping,but,not,for,actual,production,setups;boolean,supports,highly,available,storage
CheckpointStorage -> boolean supportsHighlyAvailableStorage()_;1515600846;Checks whether this backend supports highly available storage of data.__<p>Some state backends may not support highly-available durable storage, with default settings,_which makes them suitable for zero-config prototyping, but not for actual production setups.;boolean supportsHighlyAvailableStorage()_;checks,whether,this,backend,supports,highly,available,storage,of,data,p,some,state,backends,may,not,support,highly,available,durable,storage,with,default,settings,which,makes,them,suitable,for,zero,config,prototyping,but,not,for,actual,production,setups;boolean,supports,highly,available,storage
CheckpointStorage -> boolean supportsHighlyAvailableStorage()_;1517414098;Checks whether this backend supports highly available storage of data.__<p>Some state backends may not support highly-available durable storage, with default settings,_which makes them suitable for zero-config prototyping, but not for actual production setups.;boolean supportsHighlyAvailableStorage()_;checks,whether,this,backend,supports,highly,available,storage,of,data,p,some,state,backends,may,not,support,highly,available,durable,storage,with,default,settings,which,makes,them,suitable,for,zero,config,prototyping,but,not,for,actual,production,setups;boolean,supports,highly,available,storage
CheckpointStorage -> CheckpointStorageLocation initializeLocationForCheckpoint(long checkpointId) throws IOException_;1509045960;Initializes a storage location for new checkpoint with the given ID.__<p>The returned storage location can be used to write the checkpoint data and metadata_to and to obtain the pointers for the location(s) where the actual checkpoint data should be_stored.__@param checkpointId The ID (logical timestamp) of the checkpoint that should be persisted._@return A storage location for the data and metadata of the given checkpoint.__@throws IOException Thrown if the storage location cannot be initialized due to an I/O exception.;CheckpointStorageLocation initializeLocationForCheckpoint(long checkpointId) throws IOException_;initializes,a,storage,location,for,new,checkpoint,with,the,given,id,p,the,returned,storage,location,can,be,used,to,write,the,checkpoint,data,and,metadata,to,and,to,obtain,the,pointers,for,the,location,s,where,the,actual,checkpoint,data,should,be,stored,param,checkpoint,id,the,id,logical,timestamp,of,the,checkpoint,that,should,be,persisted,return,a,storage,location,for,the,data,and,metadata,of,the,given,checkpoint,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,due,to,an,i,o,exception;checkpoint,storage,location,initialize,location,for,checkpoint,long,checkpoint,id,throws,ioexception
CheckpointStorage -> CheckpointStorageLocation initializeLocationForCheckpoint(long checkpointId) throws IOException_;1515600846;Initializes a storage location for new checkpoint with the given ID.__<p>The returned storage location can be used to write the checkpoint data and metadata_to and to obtain the pointers for the location(s) where the actual checkpoint data should be_stored.__@param checkpointId The ID (logical timestamp) of the checkpoint that should be persisted._@return A storage location for the data and metadata of the given checkpoint.__@throws IOException Thrown if the storage location cannot be initialized due to an I/O exception.;CheckpointStorageLocation initializeLocationForCheckpoint(long checkpointId) throws IOException_;initializes,a,storage,location,for,new,checkpoint,with,the,given,id,p,the,returned,storage,location,can,be,used,to,write,the,checkpoint,data,and,metadata,to,and,to,obtain,the,pointers,for,the,location,s,where,the,actual,checkpoint,data,should,be,stored,param,checkpoint,id,the,id,logical,timestamp,of,the,checkpoint,that,should,be,persisted,return,a,storage,location,for,the,data,and,metadata,of,the,given,checkpoint,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,due,to,an,i,o,exception;checkpoint,storage,location,initialize,location,for,checkpoint,long,checkpoint,id,throws,ioexception
CheckpointStorage -> CheckpointStorageLocation initializeLocationForCheckpoint(long checkpointId) throws IOException_;1517414098;Initializes a storage location for new checkpoint with the given ID.__<p>The returned storage location can be used to write the checkpoint data and metadata_to and to obtain the pointers for the location(s) where the actual checkpoint data should be_stored.__@param checkpointId The ID (logical timestamp) of the checkpoint that should be persisted._@return A storage location for the data and metadata of the given checkpoint.__@throws IOException Thrown if the storage location cannot be initialized due to an I/O exception.;CheckpointStorageLocation initializeLocationForCheckpoint(long checkpointId) throws IOException_;initializes,a,storage,location,for,new,checkpoint,with,the,given,id,p,the,returned,storage,location,can,be,used,to,write,the,checkpoint,data,and,metadata,to,and,to,obtain,the,pointers,for,the,location,s,where,the,actual,checkpoint,data,should,be,stored,param,checkpoint,id,the,id,logical,timestamp,of,the,checkpoint,that,should,be,persisted,return,a,storage,location,for,the,data,and,metadata,of,the,given,checkpoint,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,due,to,an,i,o,exception;checkpoint,storage,location,initialize,location,for,checkpoint,long,checkpoint,id,throws,ioexception
CheckpointStorage -> StreamStateHandle resolveCheckpoint(String pointer) throws IOException_;1509045960;Resolves the given pointer to a checkpoint/savepoint into a state handle from which the_checkpoint metadata can be read. If the state backend cannot understand the format of_the pointer (for example because it was created by a different state backend) this method_should throw an {@code IOException}.__@param pointer The pointer to resolve._@return The state handler from which one can read the checkpoint metadata.__@throws IOException Thrown, if the state backend does not understand the pointer, or if_the pointer could not be resolved due to an I/O error.;StreamStateHandle resolveCheckpoint(String pointer) throws IOException_;resolves,the,given,pointer,to,a,checkpoint,savepoint,into,a,state,handle,from,which,the,checkpoint,metadata,can,be,read,if,the,state,backend,cannot,understand,the,format,of,the,pointer,for,example,because,it,was,created,by,a,different,state,backend,this,method,should,throw,an,code,ioexception,param,pointer,the,pointer,to,resolve,return,the,state,handler,from,which,one,can,read,the,checkpoint,metadata,throws,ioexception,thrown,if,the,state,backend,does,not,understand,the,pointer,or,if,the,pointer,could,not,be,resolved,due,to,an,i,o,error;stream,state,handle,resolve,checkpoint,string,pointer,throws,ioexception
CheckpointStorage -> StreamStateHandle resolveCheckpoint(String pointer) throws IOException_;1515600846;Resolves the given pointer to a checkpoint/savepoint into a state handle from which the_checkpoint metadata can be read. If the state backend cannot understand the format of_the pointer (for example because it was created by a different state backend) this method_should throw an {@code IOException}.__@param pointer The pointer to resolve._@return The state handler from which one can read the checkpoint metadata.__@throws IOException Thrown, if the state backend does not understand the pointer, or if_the pointer could not be resolved due to an I/O error.;StreamStateHandle resolveCheckpoint(String pointer) throws IOException_;resolves,the,given,pointer,to,a,checkpoint,savepoint,into,a,state,handle,from,which,the,checkpoint,metadata,can,be,read,if,the,state,backend,cannot,understand,the,format,of,the,pointer,for,example,because,it,was,created,by,a,different,state,backend,this,method,should,throw,an,code,ioexception,param,pointer,the,pointer,to,resolve,return,the,state,handler,from,which,one,can,read,the,checkpoint,metadata,throws,ioexception,thrown,if,the,state,backend,does,not,understand,the,pointer,or,if,the,pointer,could,not,be,resolved,due,to,an,i,o,error;stream,state,handle,resolve,checkpoint,string,pointer,throws,ioexception
CheckpointStorage -> CheckpointStorageLocation initializeLocationForSavepoint( 			long checkpointId, 			@Nullable String externalLocationPointer) throws IOException_;1509045960;Initializes a storage location for new savepoint with the given ID.__<p>If an external location pointer is passed, the savepoint storage location_will be initialized at the location of that pointer. If the external location pointer is null,_the default savepoint location will be used. If no default savepoint location is configured,_this will throw an exception. Whether a default savepoint location is configured can be_checked via {@link #hasDefaultSavepointLocation()}.__@param checkpointId The ID (logical timestamp) of the savepoint's checkpoint._@param externalLocationPointer Optionally, a pointer to the location where the savepoint should_be stored. May be null.__@return A storage location for the data and metadata of the savepoint.__@throws IOException Thrown if the storage location cannot be initialized due to an I/O exception.;CheckpointStorageLocation initializeLocationForSavepoint(_			long checkpointId,_			@Nullable String externalLocationPointer) throws IOException_;initializes,a,storage,location,for,new,savepoint,with,the,given,id,p,if,an,external,location,pointer,is,passed,the,savepoint,storage,location,will,be,initialized,at,the,location,of,that,pointer,if,the,external,location,pointer,is,null,the,default,savepoint,location,will,be,used,if,no,default,savepoint,location,is,configured,this,will,throw,an,exception,whether,a,default,savepoint,location,is,configured,can,be,checked,via,link,has,default,savepoint,location,param,checkpoint,id,the,id,logical,timestamp,of,the,savepoint,s,checkpoint,param,external,location,pointer,optionally,a,pointer,to,the,location,where,the,savepoint,should,be,stored,may,be,null,return,a,storage,location,for,the,data,and,metadata,of,the,savepoint,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,due,to,an,i,o,exception;checkpoint,storage,location,initialize,location,for,savepoint,long,checkpoint,id,nullable,string,external,location,pointer,throws,ioexception
CheckpointStorage -> CheckpointStorageLocation initializeLocationForSavepoint( 			long checkpointId, 			@Nullable String externalLocationPointer) throws IOException_;1515600846;Initializes a storage location for new savepoint with the given ID.__<p>If an external location pointer is passed, the savepoint storage location_will be initialized at the location of that pointer. If the external location pointer is null,_the default savepoint location will be used. If no default savepoint location is configured,_this will throw an exception. Whether a default savepoint location is configured can be_checked via {@link #hasDefaultSavepointLocation()}.__@param checkpointId The ID (logical timestamp) of the savepoint's checkpoint._@param externalLocationPointer Optionally, a pointer to the location where the savepoint should_be stored. May be null.__@return A storage location for the data and metadata of the savepoint.__@throws IOException Thrown if the storage location cannot be initialized due to an I/O exception.;CheckpointStorageLocation initializeLocationForSavepoint(_			long checkpointId,_			@Nullable String externalLocationPointer) throws IOException_;initializes,a,storage,location,for,new,savepoint,with,the,given,id,p,if,an,external,location,pointer,is,passed,the,savepoint,storage,location,will,be,initialized,at,the,location,of,that,pointer,if,the,external,location,pointer,is,null,the,default,savepoint,location,will,be,used,if,no,default,savepoint,location,is,configured,this,will,throw,an,exception,whether,a,default,savepoint,location,is,configured,can,be,checked,via,link,has,default,savepoint,location,param,checkpoint,id,the,id,logical,timestamp,of,the,savepoint,s,checkpoint,param,external,location,pointer,optionally,a,pointer,to,the,location,where,the,savepoint,should,be,stored,may,be,null,return,a,storage,location,for,the,data,and,metadata,of,the,savepoint,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,due,to,an,i,o,exception;checkpoint,storage,location,initialize,location,for,savepoint,long,checkpoint,id,nullable,string,external,location,pointer,throws,ioexception
CheckpointStorage -> CheckpointStorageLocation initializeLocationForSavepoint( 			long checkpointId, 			@Nullable String externalLocationPointer) throws IOException_;1517414098;Initializes a storage location for new savepoint with the given ID.__<p>If an external location pointer is passed, the savepoint storage location_will be initialized at the location of that pointer. If the external location pointer is null,_the default savepoint location will be used. If no default savepoint location is configured,_this will throw an exception. Whether a default savepoint location is configured can be_checked via {@link #hasDefaultSavepointLocation()}.__@param checkpointId The ID (logical timestamp) of the savepoint's checkpoint._@param externalLocationPointer Optionally, a pointer to the location where the savepoint should_be stored. May be null.__@return A storage location for the data and metadata of the savepoint.__@throws IOException Thrown if the storage location cannot be initialized due to an I/O exception.;CheckpointStorageLocation initializeLocationForSavepoint(_			long checkpointId,_			@Nullable String externalLocationPointer) throws IOException_;initializes,a,storage,location,for,new,savepoint,with,the,given,id,p,if,an,external,location,pointer,is,passed,the,savepoint,storage,location,will,be,initialized,at,the,location,of,that,pointer,if,the,external,location,pointer,is,null,the,default,savepoint,location,will,be,used,if,no,default,savepoint,location,is,configured,this,will,throw,an,exception,whether,a,default,savepoint,location,is,configured,can,be,checked,via,link,has,default,savepoint,location,param,checkpoint,id,the,id,logical,timestamp,of,the,savepoint,s,checkpoint,param,external,location,pointer,optionally,a,pointer,to,the,location,where,the,savepoint,should,be,stored,may,be,null,return,a,storage,location,for,the,data,and,metadata,of,the,savepoint,throws,ioexception,thrown,if,the,storage,location,cannot,be,initialized,due,to,an,i,o,exception;checkpoint,storage,location,initialize,location,for,savepoint,long,checkpoint,id,nullable,string,external,location,pointer,throws,ioexception
CheckpointStorage -> CheckpointStateOutputStream createTaskOwnedStateStream() throws IOException_;1515600846;Opens a stream to persist checkpoint state data that is owned strictly by tasks and_not attached to the life cycle of a specific checkpoint.__<p>This method should be used when the persisted data cannot be immediately dropped once_the checkpoint that created it is dropped. Examples are write-ahead-logs._For those, the state can only be dropped once the data has been moved to the target system,_which may sometimes take longer than one checkpoint (if the target system is temporarily unable_to keep up).__<p>The fact that the job manager does not own the life cycle of this type of state means also_that it is strictly the responsibility of the tasks to handle the cleanup of this data.__<p>Developer note: In the future, we may be able to make this a special case of "shared state",_where the task re-emits the shared state reference as long as it needs to hold onto the_persisted state data.__@return A checkpoint state stream to the location for state owned by tasks._@throws IOException Thrown, if the stream cannot be opened.;CheckpointStateOutputStream createTaskOwnedStateStream() throws IOException_;opens,a,stream,to,persist,checkpoint,state,data,that,is,owned,strictly,by,tasks,and,not,attached,to,the,life,cycle,of,a,specific,checkpoint,p,this,method,should,be,used,when,the,persisted,data,cannot,be,immediately,dropped,once,the,checkpoint,that,created,it,is,dropped,examples,are,write,ahead,logs,for,those,the,state,can,only,be,dropped,once,the,data,has,been,moved,to,the,target,system,which,may,sometimes,take,longer,than,one,checkpoint,if,the,target,system,is,temporarily,unable,to,keep,up,p,the,fact,that,the,job,manager,does,not,own,the,life,cycle,of,this,type,of,state,means,also,that,it,is,strictly,the,responsibility,of,the,tasks,to,handle,the,cleanup,of,this,data,p,developer,note,in,the,future,we,may,be,able,to,make,this,a,special,case,of,shared,state,where,the,task,re,emits,the,shared,state,reference,as,long,as,it,needs,to,hold,onto,the,persisted,state,data,return,a,checkpoint,state,stream,to,the,location,for,state,owned,by,tasks,throws,ioexception,thrown,if,the,stream,cannot,be,opened;checkpoint,state,output,stream,create,task,owned,state,stream,throws,ioexception
CheckpointStorage -> CheckpointStateOutputStream createTaskOwnedStateStream() throws IOException_;1517414098;Opens a stream to persist checkpoint state data that is owned strictly by tasks and_not attached to the life cycle of a specific checkpoint.__<p>This method should be used when the persisted data cannot be immediately dropped once_the checkpoint that created it is dropped. Examples are write-ahead-logs._For those, the state can only be dropped once the data has been moved to the target system,_which may sometimes take longer than one checkpoint (if the target system is temporarily unable_to keep up).__<p>The fact that the job manager does not own the life cycle of this type of state means also_that it is strictly the responsibility of the tasks to handle the cleanup of this data.__<p>Developer note: In the future, we may be able to make this a special case of "shared state",_where the task re-emits the shared state reference as long as it needs to hold onto the_persisted state data.__@return A checkpoint state stream to the location for state owned by tasks._@throws IOException Thrown, if the stream cannot be opened.;CheckpointStateOutputStream createTaskOwnedStateStream() throws IOException_;opens,a,stream,to,persist,checkpoint,state,data,that,is,owned,strictly,by,tasks,and,not,attached,to,the,life,cycle,of,a,specific,checkpoint,p,this,method,should,be,used,when,the,persisted,data,cannot,be,immediately,dropped,once,the,checkpoint,that,created,it,is,dropped,examples,are,write,ahead,logs,for,those,the,state,can,only,be,dropped,once,the,data,has,been,moved,to,the,target,system,which,may,sometimes,take,longer,than,one,checkpoint,if,the,target,system,is,temporarily,unable,to,keep,up,p,the,fact,that,the,job,manager,does,not,own,the,life,cycle,of,this,type,of,state,means,also,that,it,is,strictly,the,responsibility,of,the,tasks,to,handle,the,cleanup,of,this,data,p,developer,note,in,the,future,we,may,be,able,to,make,this,a,special,case,of,shared,state,where,the,task,re,emits,the,shared,state,reference,as,long,as,it,needs,to,hold,onto,the,persisted,state,data,return,a,checkpoint,state,stream,to,the,location,for,state,owned,by,tasks,throws,ioexception,thrown,if,the,stream,cannot,be,opened;checkpoint,state,output,stream,create,task,owned,state,stream,throws,ioexception
