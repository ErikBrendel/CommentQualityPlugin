# id;timestamp;commentText;codeText;commentWords;codeWords
OperatorStateCheckpointOutputStream -> @Override 	OperatorStateHandle closeAndGetHandle() throws IOException;1476972861;This method should not be public so as to not expose internals to user code.;@Override_	OperatorStateHandle closeAndGetHandle() throws IOException {_		StreamStateHandle streamStateHandle = delegate.closeAndGetHandle()___		if (null == streamStateHandle) {_			return null__		}__		if (partitionOffsets.isEmpty() && delegate.getPos() > initialPosition) {_			startNewPartition()__		}__		Map<String, long[]> offsetsMap = new HashMap<>(1)__		offsetsMap.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME, partitionOffsets.toArray())___		return new OperatorStateHandle(offsetsMap, streamStateHandle)__	};this,method,should,not,be,public,so,as,to,not,expose,internals,to,user,code;override,operator,state,handle,close,and,get,handle,throws,ioexception,stream,state,handle,stream,state,handle,delegate,close,and,get,handle,if,null,stream,state,handle,return,null,if,partition,offsets,is,empty,delegate,get,pos,initial,position,start,new,partition,map,string,long,offsets,map,new,hash,map,1,offsets,map,put,default,operator,state,backend,partition,offsets,to,array,return,new,operator,state,handle,offsets,map,stream,state,handle
OperatorStateCheckpointOutputStream -> @Override 	OperatorStateHandle closeAndGetHandle() throws IOException;1484339359;This method should not be public so as to not expose internals to user code.;@Override_	OperatorStateHandle closeAndGetHandle() throws IOException {_		StreamStateHandle streamStateHandle = delegate.closeAndGetHandle()___		if (null == streamStateHandle) {_			return null__		}__		if (partitionOffsets.isEmpty() && delegate.getPos() > initialPosition) {_			startNewPartition()__		}__		Map<String, OperatorStateHandle.StateMetaInfo> offsetsMap = new HashMap<>(1)___		OperatorStateHandle.StateMetaInfo metaInfo =_				new OperatorStateHandle.StateMetaInfo(_						partitionOffsets.toArray(),_						OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)___		offsetsMap.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME, metaInfo)___		return new OperatorStateHandle(offsetsMap, streamStateHandle)__	};this,method,should,not,be,public,so,as,to,not,expose,internals,to,user,code;override,operator,state,handle,close,and,get,handle,throws,ioexception,stream,state,handle,stream,state,handle,delegate,close,and,get,handle,if,null,stream,state,handle,return,null,if,partition,offsets,is,empty,delegate,get,pos,initial,position,start,new,partition,map,string,operator,state,handle,state,meta,info,offsets,map,new,hash,map,1,operator,state,handle,state,meta,info,meta,info,new,operator,state,handle,state,meta,info,partition,offsets,to,array,operator,state,handle,mode,offsets,map,put,default,operator,state,backend,meta,info,return,new,operator,state,handle,offsets,map,stream,state,handle
OperatorStateCheckpointOutputStream -> @Override 	OperatorStateHandle closeAndGetHandle() throws IOException;1519568061;This method should not be public so as to not expose internals to user code.;@Override_	OperatorStateHandle closeAndGetHandle() throws IOException {_		StreamStateHandle streamStateHandle = delegate.closeAndGetHandle()___		if (null == streamStateHandle) {_			return null__		}__		if (partitionOffsets.isEmpty() && delegate.getPos() > initialPosition) {_			startNewPartition()__		}__		Map<String, OperatorStateHandle.StateMetaInfo> offsetsMap = new HashMap<>(1)___		OperatorStateHandle.StateMetaInfo metaInfo =_				new OperatorStateHandle.StateMetaInfo(_						partitionOffsets.toArray(),_					OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)___		offsetsMap.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME, metaInfo)___		return new OperatorStreamStateHandle(offsetsMap, streamStateHandle)__	};this,method,should,not,be,public,so,as,to,not,expose,internals,to,user,code;override,operator,state,handle,close,and,get,handle,throws,ioexception,stream,state,handle,stream,state,handle,delegate,close,and,get,handle,if,null,stream,state,handle,return,null,if,partition,offsets,is,empty,delegate,get,pos,initial,position,start,new,partition,map,string,operator,state,handle,state,meta,info,offsets,map,new,hash,map,1,operator,state,handle,state,meta,info,meta,info,new,operator,state,handle,state,meta,info,partition,offsets,to,array,operator,state,handle,mode,offsets,map,put,default,operator,state,backend,meta,info,return,new,operator,stream,state,handle,offsets,map,stream,state,handle
OperatorStateCheckpointOutputStream -> public void startNewPartition() throws IOException;1476972861;User code can call this method to signal that it begins to write a new partition of operator state._Each previously written partition is considered final/immutable as soon as this method is called again.;public void startNewPartition() throws IOException {_		partitionOffsets.add(delegate.getPos())__	};user,code,can,call,this,method,to,signal,that,it,begins,to,write,a,new,partition,of,operator,state,each,previously,written,partition,is,considered,final,immutable,as,soon,as,this,method,is,called,again;public,void,start,new,partition,throws,ioexception,partition,offsets,add,delegate,get,pos
OperatorStateCheckpointOutputStream -> public void startNewPartition() throws IOException;1484339359;User code can call this method to signal that it begins to write a new partition of operator state._Each previously written partition is considered final/immutable as soon as this method is called again.;public void startNewPartition() throws IOException {_		partitionOffsets.add(delegate.getPos())__	};user,code,can,call,this,method,to,signal,that,it,begins,to,write,a,new,partition,of,operator,state,each,previously,written,partition,is,considered,final,immutable,as,soon,as,this,method,is,called,again;public,void,start,new,partition,throws,ioexception,partition,offsets,add,delegate,get,pos
OperatorStateCheckpointOutputStream -> public void startNewPartition() throws IOException;1519568061;User code can call this method to signal that it begins to write a new partition of operator state._Each previously written partition is considered final/immutable as soon as this method is called again.;public void startNewPartition() throws IOException {_		partitionOffsets.add(delegate.getPos())__	};user,code,can,call,this,method,to,signal,that,it,begins,to,write,a,new,partition,of,operator,state,each,previously,written,partition,is,considered,final,immutable,as,soon,as,this,method,is,called,again;public,void,start,new,partition,throws,ioexception,partition,offsets,add,delegate,get,pos
