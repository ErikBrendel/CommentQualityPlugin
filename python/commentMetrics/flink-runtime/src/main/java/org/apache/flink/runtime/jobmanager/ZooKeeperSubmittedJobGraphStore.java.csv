# id;timestamp;commentText;codeText;commentWords;codeWords
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1441121146;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1445247002;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1447670128;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1465394479;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1470734292;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1470909547;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1479246304;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1480433714;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1480437068;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1489680183;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1495025524;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1495546958;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1517504646;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1521668193;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1522137656;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1534750948;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1534756758;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1536761635;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1536767136;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1536767279;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1537179698;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1470909547;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1534750948;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1534756758;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1536767136;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1536767279;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1537179698;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1441121146;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1445247002;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1447670128;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1465394479;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1470734292;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1470909547;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1479246304;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1480433714;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1480437068;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1489680183;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1495025524;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1495546958;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1517504646;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1521668193;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1522137656;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1534750948;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1534756758;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1536761635;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1536767136;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1536767279;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1537179698;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1480437068;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1489680183;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1495025524;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1495546958;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1517504646;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1521668193;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1522137656;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1534750948;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1534756758;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1536761635;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1536767136;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1536767279;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1537179698;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1441121146;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1445247002;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1447670128;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1465394479;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1470734292;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1470909547;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1479246304;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1480433714;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1480437068;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1489680183;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1495025524;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1495546958;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1517504646;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1521668193;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1522137656;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1534750948;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1534756758;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1536761635;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1536767136;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1536767279;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1537179698;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1479246304;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1480433714;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1480437068;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1489680183;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1495025524;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1495546958;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1517504646;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1521668193;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1522137656;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1445247002;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1447670128;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1465394479;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1470734292;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
