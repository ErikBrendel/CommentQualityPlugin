# id;timestamp;commentText;codeText;commentWords;codeWords
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1445293011;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1445327854;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1447771086;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1465991918;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1472033364;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1472663401;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1479852016;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1480585463;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1481290978;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1493975167;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1495184252;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1495563868;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1519317157;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1522251199;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1522339662;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1536763178;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1536763193;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1536930104;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1536930104;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1537179698;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public static String getPathForJob(JobID jobId);1547028640;Returns the JobID as a String (with leading slash).;public static String getPathForJob(JobID jobId) {_		checkNotNull(jobId, "Job ID")__		return String.format("/%s", jobId)__	};returns,the,job,id,as,a,string,with,leading,slash;public,static,string,get,path,for,job,job,id,job,id,check,not,null,job,id,job,id,return,string,format,s,job,id
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1472663401;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1536763178;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1536763193;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1536930104;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1536930104;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1537179698;Submitted job graph store backed by ZooKeeper.__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1445293011;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1445327854;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1447771086;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1465991918;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1472033364;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1472663401;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1479852016;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1480585463;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1481290978;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1493975167;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1495184252;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1495563868;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1519317157;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1522251199;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1522339662;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1536763178;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1536763193;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1536930104;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1536930104;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1537179698;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> private void verifyIsRunning();1547028640;Verifies that the state is running.;private void verifyIsRunning() {_		checkState(isRunning, "Not running. Forgot to call start()?")__	};verifies,that,the,state,is,running;private,void,verify,is,running,check,state,is,running,not,running,forgot,to,call,start
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1481290978;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1493975167;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1495184252;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1495563868;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1519317157;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1522251199;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1522339662;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1536763178;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1536763193;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1536930104;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1536930104;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1537179698;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> public static JobID jobIdfromPath(final String path);1547028640;Returns the JobID from the given path in ZooKeeper.__@param path in ZooKeeper_@return JobID associated with the given path;public static JobID jobIdfromPath(final String path) {_		return JobID.fromHexString(path)__	};returns,the,job,id,from,the,given,path,in,zoo,keeper,param,path,in,zoo,keeper,return,job,id,associated,with,the,given,path;public,static,job,id,job,idfrom,path,final,string,path,return,job,id,from,hex,string,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1445293011;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1445327854;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1447771086;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1465991918;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1472033364;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1472663401;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1479852016;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1480585463;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1481290978;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1493975167;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1495184252;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1495563868;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1519317157;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1522251199;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1522339662;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1536763178;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1536763193;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1536930104;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1536930104;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1537179698;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> SubmittedJobGraphsPathCacheListener -> private JobID fromEvent(PathChildrenCacheEvent event);1547028640;Returns a JobID for the event's path.;private JobID fromEvent(PathChildrenCacheEvent event) {_			return JobID.fromHexString(ZKPaths.getNodeFromPath(event.getData().getPath()))__		};returns,a,job,id,for,the,event,s,path;private,job,id,from,event,path,children,cache,event,event,return,job,id,from,hex,string,zkpaths,get,node,from,path,event,get,data,get,path
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1479852016;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1480585463;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1481290978;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1493975167;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1495184252;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1495563868;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1519317157;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1522251199;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage, 			Executor executor) throws Exception;1522339662;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@param executor to give to the ZooKeeperStateHandleStore to run ZooKeeper callbacks_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage,_			Executor executor) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.zooKeeperFullBasePath = client.getNamespace() + currentJobsPath__		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage, executor)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,param,executor,to,give,to,the,zoo,keeper,state,handle,store,to,run,zoo,keeper,callbacks,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,retrievable,state,storage,helper,submitted,job,graph,state,storage,executor,executor,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,zoo,keeper,full,base,path,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,executor,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1445327854;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1447771086;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1465991918;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
ZooKeeperSubmittedJobGraphStore -> public ZooKeeperSubmittedJobGraphStore( 			CuratorFramework client, 			String currentJobsPath, 			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception;1472033364;Submitted job graph store backed by ZooKeeper__@param client ZooKeeper client_@param currentJobsPath ZooKeeper path for current job graphs_@param stateStorage State storage used to persist the submitted jobs_@throws Exception;public ZooKeeperSubmittedJobGraphStore(_			CuratorFramework client,_			String currentJobsPath,_			StateStorageHelper<SubmittedJobGraph> stateStorage) throws Exception {__		checkNotNull(currentJobsPath, "Current jobs path")__		checkNotNull(stateStorage, "State storage")___		_		_		this.client = checkNotNull(client, "Curator client")___		_		client.newNamespaceAwareEnsurePath(currentJobsPath)_				.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + currentJobsPath)___		this.jobGraphsInZooKeeper = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		this.pathCache = new PathChildrenCache(facade, "/", false)__		pathCache.getListenable().addListener(new SubmittedJobGraphsPathCacheListener())__	};submitted,job,graph,store,backed,by,zoo,keeper,param,client,zoo,keeper,client,param,current,jobs,path,zoo,keeper,path,for,current,job,graphs,param,state,storage,state,storage,used,to,persist,the,submitted,jobs,throws,exception;public,zoo,keeper,submitted,job,graph,store,curator,framework,client,string,current,jobs,path,state,storage,helper,submitted,job,graph,state,storage,throws,exception,check,not,null,current,jobs,path,current,jobs,path,check,not,null,state,storage,state,storage,this,client,check,not,null,client,curator,client,client,new,namespace,aware,ensure,path,current,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,current,jobs,path,this,job,graphs,in,zoo,keeper,new,zoo,keeper,state,handle,store,facade,state,storage,this,path,cache,new,path,children,cache,facade,false,path,cache,get,listenable,add,listener,new,submitted,job,graphs,path,cache,listener
