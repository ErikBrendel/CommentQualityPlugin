# id;timestamp;commentText;codeText;commentWords;codeWords
BlobInputStream -> BlobInputStream( 		final InputStream wrappedInputStream, final BlobKey blobKey, OutputStream wrappedOutputStream) throws IOException;1505901925;Constructs a new BLOB input stream.__@param wrappedInputStream_the underlying input stream to read from_@param blobKey_the expected BLOB key for content-addressable BLOBs, <code>null</code> for non-content-addressable BLOBs._@param wrappedOutputStream_the underlying output stream to write the result to__@throws IOException_throws if an I/O error occurs while reading the BLOB data from the BLOB server;BlobInputStream(_		final InputStream wrappedInputStream, final BlobKey blobKey, OutputStream wrappedOutputStream) throws IOException {_		this.wrappedInputStream = wrappedInputStream__		this.blobKey = blobKey__		this.wrappedOutputStream = wrappedOutputStream__		this.bytesToReceive = readLength(wrappedInputStream)__		if (this.bytesToReceive < 0) {_			throw new FileNotFoundException()__		}__		this.md = (blobKey != null) ? BlobUtils.createMessageDigest() : null__	};constructs,a,new,blob,input,stream,param,wrapped,input,stream,the,underlying,input,stream,to,read,from,param,blob,key,the,expected,blob,key,for,content,addressable,blobs,code,null,code,for,non,content,addressable,blobs,param,wrapped,output,stream,the,underlying,output,stream,to,write,the,result,to,throws,ioexception,throws,if,an,i,o,error,occurs,while,reading,the,blob,data,from,the,blob,server;blob,input,stream,final,input,stream,wrapped,input,stream,final,blob,key,blob,key,output,stream,wrapped,output,stream,throws,ioexception,this,wrapped,input,stream,wrapped,input,stream,this,blob,key,blob,key,this,wrapped,output,stream,wrapped,output,stream,this,bytes,to,receive,read,length,wrapped,input,stream,if,this,bytes,to,receive,0,throw,new,file,not,found,exception,this,md,blob,key,null,blob,utils,create,message,digest,null
BlobInputStream -> BlobInputStream( 		final InputStream wrappedInputStream, final BlobKey blobKey, OutputStream wrappedOutputStream) throws IOException;1513599733;Constructs a new BLOB input stream.__@param wrappedInputStream_the underlying input stream to read from_@param blobKey_the expected BLOB key for content-addressable BLOBs, <code>null</code> for non-content-addressable BLOBs._@param wrappedOutputStream_the underlying output stream to write the result to__@throws IOException_throws if an I/O error occurs while reading the BLOB data from the BLOB server;BlobInputStream(_		final InputStream wrappedInputStream, final BlobKey blobKey, OutputStream wrappedOutputStream) throws IOException {_		this.wrappedInputStream = wrappedInputStream__		this.blobKey = blobKey__		this.wrappedOutputStream = wrappedOutputStream__		this.bytesToReceive = readLength(wrappedInputStream)__		if (this.bytesToReceive < 0) {_			throw new FileNotFoundException()__		}__		this.md = (blobKey != null) ? BlobUtils.createMessageDigest() : null__	};constructs,a,new,blob,input,stream,param,wrapped,input,stream,the,underlying,input,stream,to,read,from,param,blob,key,the,expected,blob,key,for,content,addressable,blobs,code,null,code,for,non,content,addressable,blobs,param,wrapped,output,stream,the,underlying,output,stream,to,write,the,result,to,throws,ioexception,throws,if,an,i,o,error,occurs,while,reading,the,blob,data,from,the,blob,server;blob,input,stream,final,input,stream,wrapped,input,stream,final,blob,key,blob,key,output,stream,wrapped,output,stream,throws,ioexception,this,wrapped,input,stream,wrapped,input,stream,this,blob,key,blob,key,this,wrapped,output,stream,wrapped,output,stream,this,bytes,to,receive,read,length,wrapped,input,stream,if,this,bytes,to,receive,0,throw,new,file,not,found,exception,this,md,blob,key,null,blob,utils,create,message,digest,null
BlobInputStream -> BlobInputStream(final InputStream wrappedInputStream, final BlobKey blobKey, final byte[] buf) throws IOException;1411563658;Constructs a new BLOB input stream.__@param wrappedInputStream_the underlying input stream to read from_@param blobKey_the expected BLOB key for content-addressable BLOBs, <code>null</code> for non-content-addressable BLOBs._@param buf_auxiliary buffer to read the meta data from the BLOB server_@throws IOException_throws if an I/O error occurs while reading the BLOB data from the BLOB server;BlobInputStream(final InputStream wrappedInputStream, final BlobKey blobKey, final byte[] buf) throws IOException {__		this.wrappedInputStream = wrappedInputStream__		this.blobKey = blobKey__		this.bytesToReceive = BlobServer.readLength(buf, wrappedInputStream)__		if (this.bytesToReceive < 0) {_			throw new FileNotFoundException()__		}__		this.md = (blobKey != null) ? BlobUtils.createMessageDigest() : null__	};constructs,a,new,blob,input,stream,param,wrapped,input,stream,the,underlying,input,stream,to,read,from,param,blob,key,the,expected,blob,key,for,content,addressable,blobs,code,null,code,for,non,content,addressable,blobs,param,buf,auxiliary,buffer,to,read,the,meta,data,from,the,blob,server,throws,ioexception,throws,if,an,i,o,error,occurs,while,reading,the,blob,data,from,the,blob,server;blob,input,stream,final,input,stream,wrapped,input,stream,final,blob,key,blob,key,final,byte,buf,throws,ioexception,this,wrapped,input,stream,wrapped,input,stream,this,blob,key,blob,key,this,bytes,to,receive,blob,server,read,length,buf,wrapped,input,stream,if,this,bytes,to,receive,0,throw,new,file,not,found,exception,this,md,blob,key,null,blob,utils,create,message,digest,null
BlobInputStream -> BlobInputStream(final InputStream wrappedInputStream, final BlobKey blobKey, final byte[] buf) throws IOException;1423678101;Constructs a new BLOB input stream.__@param wrappedInputStream_the underlying input stream to read from_@param blobKey_the expected BLOB key for content-addressable BLOBs, <code>null</code> for non-content-addressable BLOBs._@param buf_auxiliary buffer to read the meta data from the BLOB server_@throws IOException_throws if an I/O error occurs while reading the BLOB data from the BLOB server;BlobInputStream(final InputStream wrappedInputStream, final BlobKey blobKey, final byte[] buf) throws IOException {_		this.wrappedInputStream = wrappedInputStream__		this.blobKey = blobKey__		this.bytesToReceive = BlobServer.readLength(buf, wrappedInputStream)__		if (this.bytesToReceive < 0) {_			throw new FileNotFoundException()__		}__		this.md = (blobKey != null) ? BlobUtils.createMessageDigest() : null__	};constructs,a,new,blob,input,stream,param,wrapped,input,stream,the,underlying,input,stream,to,read,from,param,blob,key,the,expected,blob,key,for,content,addressable,blobs,code,null,code,for,non,content,addressable,blobs,param,buf,auxiliary,buffer,to,read,the,meta,data,from,the,blob,server,throws,ioexception,throws,if,an,i,o,error,occurs,while,reading,the,blob,data,from,the,blob,server;blob,input,stream,final,input,stream,wrapped,input,stream,final,blob,key,blob,key,final,byte,buf,throws,ioexception,this,wrapped,input,stream,wrapped,input,stream,this,blob,key,blob,key,this,bytes,to,receive,blob,server,read,length,buf,wrapped,input,stream,if,this,bytes,to,receive,0,throw,new,file,not,found,exception,this,md,blob,key,null,blob,utils,create,message,digest,null
BlobInputStream -> private void throwEOFException() throws EOFException;1411563658;Convenience method to throw an {@link EOFException}.__@throws EOFException_thrown to indicate the underlying input stream did not provide as much data as expected;private void throwEOFException() throws EOFException {_		throw new EOFException(String.format("Expected to read %d more bytes from stream", this.bytesToReceive_			- this.bytesReceived))__	};convenience,method,to,throw,an,link,eofexception,throws,eofexception,thrown,to,indicate,the,underlying,input,stream,did,not,provide,as,much,data,as,expected;private,void,throw,eofexception,throws,eofexception,throw,new,eofexception,string,format,expected,to,read,d,more,bytes,from,stream,this,bytes,to,receive,this,bytes,received
BlobInputStream -> private void throwEOFException() throws EOFException;1423678101;Convenience method to throw an {@link EOFException}.__@throws EOFException_thrown to indicate the underlying input stream did not provide as much data as expected;private void throwEOFException() throws EOFException {_		throw new EOFException(String.format("Expected to read %d more bytes from stream", this.bytesToReceive_			- this.bytesReceived))__	};convenience,method,to,throw,an,link,eofexception,throws,eofexception,thrown,to,indicate,the,underlying,input,stream,did,not,provide,as,much,data,as,expected;private,void,throw,eofexception,throws,eofexception,throw,new,eofexception,string,format,expected,to,read,d,more,bytes,from,stream,this,bytes,to,receive,this,bytes,received
BlobInputStream -> private void throwEOFException() throws EOFException;1424258195;Convenience method to throw an {@link EOFException}.__@throws EOFException_thrown to indicate the underlying input stream did not provide as much data as expected;private void throwEOFException() throws EOFException {_		throw new EOFException(String.format("Expected to read %d more bytes from stream", this.bytesToReceive_			- this.bytesReceived))__	};convenience,method,to,throw,an,link,eofexception,throws,eofexception,thrown,to,indicate,the,underlying,input,stream,did,not,provide,as,much,data,as,expected;private,void,throw,eofexception,throws,eofexception,throw,new,eofexception,string,format,expected,to,read,d,more,bytes,from,stream,this,bytes,to,receive,this,bytes,received
BlobInputStream -> private void throwEOFException() throws EOFException;1505901925;Convenience method to throw an {@link EOFException}.__@throws EOFException_thrown to indicate the underlying input stream did not provide as much data as expected;private void throwEOFException() throws EOFException {_		throw new EOFException(String.format("Expected to read %d more bytes from stream", this.bytesToReceive_			- this.bytesReceived))__	};convenience,method,to,throw,an,link,eofexception,throws,eofexception,thrown,to,indicate,the,underlying,input,stream,did,not,provide,as,much,data,as,expected;private,void,throw,eofexception,throws,eofexception,throw,new,eofexception,string,format,expected,to,read,d,more,bytes,from,stream,this,bytes,to,receive,this,bytes,received
BlobInputStream -> private void throwEOFException() throws EOFException;1513599733;Convenience method to throw an {@link EOFException}.__@throws EOFException_thrown to indicate the underlying input stream did not provide as much data as expected;private void throwEOFException() throws EOFException {_		throw new EOFException(String.format("Expected to read %d more bytes from stream", this.bytesToReceive_			- this.bytesReceived))__	};convenience,method,to,throw,an,link,eofexception,throws,eofexception,thrown,to,indicate,the,underlying,input,stream,did,not,provide,as,much,data,as,expected;private,void,throw,eofexception,throws,eofexception,throw,new,eofexception,string,format,expected,to,read,d,more,bytes,from,stream,this,bytes,to,receive,this,bytes,received
