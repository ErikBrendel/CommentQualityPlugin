# id;timestamp;commentText;codeText;commentWords;codeWords
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(RemoteAddress remoteAddress) throws IOException;1412761231;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(RemoteAddress remoteAddress) throws IOException {_		final Object entry = clients.get(remoteAddress)___		final PartitionRequestClient client__		if (entry != null) {_			_			if (entry instanceof PartitionRequestClient) {_				client = (PartitionRequestClient) entry__			}_			else {_				ConnectingChannel future = (ConnectingChannel) entry__				client = future.waitForChannel()__			}_		}_		else {_			_			_			_			_			ConnectingChannel connectingChannel = new ConnectingChannel(remoteAddress, this)__			Object old = clients.putIfAbsent(remoteAddress, connectingChannel)___			if (old == null) {_				nettyClient.connect(remoteAddress.getAddress()).addListener(connectingChannel)___				client = connectingChannel.waitForChannel()___				Object previous = clients.put(remoteAddress, client)___				if (connectingChannel != previous) {_					throw new IOException("Race condition while establishing channel connection.")__				}_			}_			else if (old instanceof ConnectingChannel) {_				client = ((ConnectingChannel) old).waitForChannel()__			}_			else {_				client = (PartitionRequestClient) old__			}_		}__		_		_		if (client.incrementReferenceCounter()) {_			return client__		}_		else {_			_			destroyPartitionRequestClient(remoteAddress, client)___			return createPartitionRequestClient(remoteAddress)__		}_	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,remote,address,remote,address,throws,ioexception,final,object,entry,clients,get,remote,address,final,partition,request,client,client,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,else,connecting,channel,connecting,channel,new,connecting,channel,remote,address,this,object,old,clients,put,if,absent,remote,address,connecting,channel,if,old,null,netty,client,connect,remote,address,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,object,previous,clients,put,remote,address,client,if,connecting,channel,previous,throw,new,ioexception,race,condition,while,establishing,channel,connection,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,else,client,partition,request,client,old,if,client,increment,reference,counter,return,client,else,destroy,partition,request,client,remote,address,client,return,create,partition,request,client,remote,address
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(RemoteAddress remoteAddress) throws IOException;1424695745;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(RemoteAddress remoteAddress) throws IOException {_		Object entry__		PartitionRequestClient client = null___		while(client == null) {_			entry = clients.get(remoteAddress)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				} else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(remoteAddress, future, client)__				}_			} else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(remoteAddress, this)__				Object old = clients.putIfAbsent(remoteAddress, connectingChannel)___				if (old == null) {_					nettyClient.connect(remoteAddress.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(remoteAddress, connectingChannel, client)__				} else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(remoteAddress, old, client)__				} else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if(!client.incrementReferenceCounter()){_				destroyPartitionRequestClient(remoteAddress, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,remote,address,remote,address,throws,ioexception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,remote,address,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,remote,address,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,remote,address,this,object,old,clients,put,if,absent,remote,address,connecting,channel,if,old,null,netty,client,connect,remote,address,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,remote,address,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,remote,address,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,remote,address,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(RemoteAddress remoteAddress) throws IOException;1425322864;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(RemoteAddress remoteAddress) throws IOException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(remoteAddress)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(remoteAddress, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(remoteAddress, this)__				Object old = clients.putIfAbsent(remoteAddress, connectingChannel)___				if (old == null) {_					nettyClient.connect(remoteAddress.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(remoteAddress, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(remoteAddress, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(remoteAddress, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,remote,address,remote,address,throws,ioexception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,remote,address,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,remote,address,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,remote,address,this,object,old,clients,put,if,absent,remote,address,connecting,channel,if,old,null,netty,client,connect,remote,address,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,remote,address,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,remote,address,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,remote,address,client,client,null,return,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client);1412761231;Removes the client for the given {@link RemoteAddress}.;void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client) {_		clients.remove(remoteAddress, client)__	};removes,the,client,for,the,given,link,remote,address;void,destroy,partition,request,client,remote,address,remote,address,partition,request,client,client,clients,remove,remote,address,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client);1424695745;Removes the client for the given {@link RemoteAddress}.;void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client) {_		clients.remove(remoteAddress, client)__	};removes,the,client,for,the,given,link,remote,address;void,destroy,partition,request,client,remote,address,remote,address,partition,request,client,client,clients,remove,remote,address,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client);1425322864;Removes the client for the given {@link RemoteAddress}.;void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client) {_		clients.remove(remoteAddress, client)__	};removes,the,client,for,the,given,link,remote,address;void,destroy,partition,request,client,remote,address,remote,address,partition,request,client,client,clients,remove,remote,address,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client);1425323313;Removes the client for the given {@link RemoteAddress}.;void destroyPartitionRequestClient(RemoteAddress remoteAddress, PartitionRequestClient client) {_		clients.remove(remoteAddress, client)__	};removes,the,client,for,the,given,link,remote,address;void,destroy,partition,request,client,remote,address,remote,address,partition,request,client,client,clients,remove,remote,address,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1420560668;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1432127765;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1455130280;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1455534790;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1498566436;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1516169704;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1531147755;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException;1531236318;Atomically establishes a TCP connection to the given remote address and_creates a {@link PartitionRequestClient} instance for this connection.;PartitionRequestClient createPartitionRequestClient(ConnectionID connectionId) throws IOException, InterruptedException {_		Object entry__		PartitionRequestClient client = null___		while (client == null) {_			entry = clients.get(connectionId)___			if (entry != null) {_				_				if (entry instanceof PartitionRequestClient) {_					client = (PartitionRequestClient) entry__				}_				else {_					ConnectingChannel future = (ConnectingChannel) entry__					client = future.waitForChannel()___					clients.replace(connectionId, future, client)__				}_			}_			else {_				_				_				_				_				ConnectingChannel connectingChannel = new ConnectingChannel(connectionId, this)__				Object old = clients.putIfAbsent(connectionId, connectingChannel)___				if (old == null) {_					nettyClient.connect(connectionId.getAddress()).addListener(connectingChannel)___					client = connectingChannel.waitForChannel()___					clients.replace(connectionId, connectingChannel, client)__				}_				else if (old instanceof ConnectingChannel) {_					client = ((ConnectingChannel) old).waitForChannel()___					clients.replace(connectionId, old, client)__				}_				else {_					client = (PartitionRequestClient) old__				}_			}__			_			_			if (!client.incrementReferenceCounter()) {_				destroyPartitionRequestClient(connectionId, client)__				client = null__			}_		}__		return client__	};atomically,establishes,a,tcp,connection,to,the,given,remote,address,and,creates,a,link,partition,request,client,instance,for,this,connection;partition,request,client,create,partition,request,client,connection,id,connection,id,throws,ioexception,interrupted,exception,object,entry,partition,request,client,client,null,while,client,null,entry,clients,get,connection,id,if,entry,null,if,entry,instanceof,partition,request,client,client,partition,request,client,entry,else,connecting,channel,future,connecting,channel,entry,client,future,wait,for,channel,clients,replace,connection,id,future,client,else,connecting,channel,connecting,channel,new,connecting,channel,connection,id,this,object,old,clients,put,if,absent,connection,id,connecting,channel,if,old,null,netty,client,connect,connection,id,get,address,add,listener,connecting,channel,client,connecting,channel,wait,for,channel,clients,replace,connection,id,connecting,channel,client,else,if,old,instanceof,connecting,channel,client,connecting,channel,old,wait,for,channel,clients,replace,connection,id,old,client,else,client,partition,request,client,old,if,client,increment,reference,counter,destroy,partition,request,client,connection,id,client,client,null,return,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1420560668;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1432127765;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1455130280;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1455534790;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1498566436;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1516169704;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1531147755;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
PartitionRequestClientFactory -> void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client);1531236318;Removes the client for the given {@link ConnectionID}.;void destroyPartitionRequestClient(ConnectionID connectionId, PartitionRequestClient client) {_		clients.remove(connectionId, client)__	};removes,the,client,for,the,given,link,connection,id;void,destroy,partition,request,client,connection,id,connection,id,partition,request,client,client,clients,remove,connection,id,client
