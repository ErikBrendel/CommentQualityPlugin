# id;timestamp;commentText;codeText;commentWords;codeWords
TaskManagerLocation -> public InetAddress address();1472830377;Returns the network address the instance's task manager binds its sockets to.__@return the network address the instance's task manager binds its sockets to;public InetAddress address() {_		return inetAddress__	};returns,the,network,address,the,instance,s,task,manager,binds,its,sockets,to,return,the,network,address,the,instance,s,task,manager,binds,its,sockets,to;public,inet,address,address,return,inet,address
TaskManagerLocation -> public InetAddress address();1472830377;Returns the network address the instance's task manager binds its sockets to.__@return the network address the instance's task manager binds its sockets to;public InetAddress address() {_		return inetAddress__	};returns,the,network,address,the,instance,s,task,manager,binds,its,sockets,to,return,the,network,address,the,instance,s,task,manager,binds,its,sockets,to;public,inet,address,address,return,inet,address
TaskManagerLocation -> public InetAddress address();1486114103;Returns the network address the instance's task manager binds its sockets to.__@return the network address the instance's task manager binds its sockets to;public InetAddress address() {_		return inetAddress__	};returns,the,network,address,the,instance,s,task,manager,binds,its,sockets,to,return,the,network,address,the,instance,s,task,manager,binds,its,sockets,to;public,inet,address,address,return,inet,address
TaskManagerLocation -> public String addressString();1472830377;Gets the IP address where the TaskManager operates.__@return The IP address.;public String addressString() {_		return inetAddress.toString()__	};gets,the,ip,address,where,the,task,manager,operates,return,the,ip,address;public,string,address,string,return,inet,address,to,string
TaskManagerLocation -> public String addressString();1472830377;Gets the IP address where the TaskManager operates.__@return The IP address.;public String addressString() {_		return inetAddress.toString()__	};gets,the,ip,address,where,the,task,manager,operates,return,the,ip,address;public,string,address,string,return,inet,address,to,string
TaskManagerLocation -> public String addressString();1486114103;Gets the IP address where the TaskManager operates.__@return The IP address.;public String addressString() {_		return inetAddress.toString()__	};gets,the,ip,address,where,the,task,manager,operates,return,the,ip,address;public,string,address,string,return,inet,address,to,string
TaskManagerLocation -> public int dataPort();1472830377;Returns the port instance's task manager expects to receive transfer envelopes on.__@return the port instance's task manager expects to receive transfer envelopes on;public int dataPort() {_		return dataPort__	};returns,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on,return,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on;public,int,data,port,return,data,port
TaskManagerLocation -> public int dataPort();1472830377;Returns the port instance's task manager expects to receive transfer envelopes on.__@return the port instance's task manager expects to receive transfer envelopes on;public int dataPort() {_		return dataPort__	};returns,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on,return,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on;public,int,data,port,return,data,port
TaskManagerLocation -> public int dataPort();1486114103;Returns the port instance's task manager expects to receive transfer envelopes on.__@return the port instance's task manager expects to receive transfer envelopes on;public int dataPort() {_		return dataPort__	};returns,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on,return,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on;public,int,data,port,return,data,port
TaskManagerLocation -> public String getFQDNHostname();1472830377;Returns the fully-qualified domain name the TaskManager. If the name could not be_determined, the return value will be a textual representation of the TaskManager's IP address.__@return The fully-qualified domain name of the TaskManager.;public String getFQDNHostname() {_		return fqdnHostName__	};returns,the,fully,qualified,domain,name,the,task,manager,if,the,name,could,not,be,determined,the,return,value,will,be,a,textual,representation,of,the,task,manager,s,ip,address,return,the,fully,qualified,domain,name,of,the,task,manager;public,string,get,fqdnhostname,return,fqdn,host,name
TaskManagerLocation -> public String getFQDNHostname();1472830377;Returns the fully-qualified domain name the TaskManager. If the name could not be_determined, the return value will be a textual representation of the TaskManager's IP address.__@return The fully-qualified domain name of the TaskManager.;public String getFQDNHostname() {_		return fqdnHostName__	};returns,the,fully,qualified,domain,name,the,task,manager,if,the,name,could,not,be,determined,the,return,value,will,be,a,textual,representation,of,the,task,manager,s,ip,address,return,the,fully,qualified,domain,name,of,the,task,manager;public,string,get,fqdnhostname,return,fqdn,host,name
TaskManagerLocation -> public String getFQDNHostname();1486114103;Returns the fully-qualified domain name the TaskManager. If the name could not be_determined, the return value will be a textual representation of the TaskManager's IP address.__@return The fully-qualified domain name of the TaskManager.;public String getFQDNHostname() {_		return fqdnHostName__	};returns,the,fully,qualified,domain,name,the,task,manager,if,the,name,could,not,be,determined,the,return,value,will,be,a,textual,representation,of,the,task,manager,s,ip,address,return,the,fully,qualified,domain,name,of,the,task,manager;public,string,get,fqdnhostname,return,fqdn,host,name
TaskManagerLocation -> public String getHostname();1472830377;Gets the hostname of the TaskManager. The hostname derives from the fully qualified_domain name (FQDN, see {@link #getFQDNHostname()}):_<ul>_<li>If the FQDN is the textual IP address, then the hostname is also the IP address</li>_<li>If the FQDN has only one segment (such as "localhost", or "host17"), then this is_used as the hostname.</li>_<li>If the FQDN has multiple segments (such as "worker3.subgroup.company.net"), then the first_segment (here "worker3") will be used as the hostname.</li>_</ul>__@return The hostname of the TaskManager.;public String getHostname() {_		return hostName__	};gets,the,hostname,of,the,task,manager,the,hostname,derives,from,the,fully,qualified,domain,name,fqdn,see,link,get,fqdnhostname,ul,li,if,the,fqdn,is,the,textual,ip,address,then,the,hostname,is,also,the,ip,address,li,li,if,the,fqdn,has,only,one,segment,such,as,localhost,or,host17,then,this,is,used,as,the,hostname,li,li,if,the,fqdn,has,multiple,segments,such,as,worker3,subgroup,company,net,then,the,first,segment,here,worker3,will,be,used,as,the,hostname,li,ul,return,the,hostname,of,the,task,manager;public,string,get,hostname,return,host,name
TaskManagerLocation -> public String getHostname();1472830377;Gets the hostname of the TaskManager. The hostname derives from the fully qualified_domain name (FQDN, see {@link #getFQDNHostname()}):_<ul>_<li>If the FQDN is the textual IP address, then the hostname is also the IP address</li>_<li>If the FQDN has only one segment (such as "localhost", or "host17"), then this is_used as the hostname.</li>_<li>If the FQDN has multiple segments (such as "worker3.subgroup.company.net"), then the first_segment (here "worker3") will be used as the hostname.</li>_</ul>__@return The hostname of the TaskManager.;public String getHostname() {_		return hostName__	};gets,the,hostname,of,the,task,manager,the,hostname,derives,from,the,fully,qualified,domain,name,fqdn,see,link,get,fqdnhostname,ul,li,if,the,fqdn,is,the,textual,ip,address,then,the,hostname,is,also,the,ip,address,li,li,if,the,fqdn,has,only,one,segment,such,as,localhost,or,host17,then,this,is,used,as,the,hostname,li,li,if,the,fqdn,has,multiple,segments,such,as,worker3,subgroup,company,net,then,the,first,segment,here,worker3,will,be,used,as,the,hostname,li,ul,return,the,hostname,of,the,task,manager;public,string,get,hostname,return,host,name
TaskManagerLocation -> public String getHostname();1486114103;Gets the hostname of the TaskManager. The hostname derives from the fully qualified_domain name (FQDN, see {@link #getFQDNHostname()}):_<ul>_<li>If the FQDN is the textual IP address, then the hostname is also the IP address</li>_<li>If the FQDN has only one segment (such as "localhost", or "host17"), then this is_used as the hostname.</li>_<li>If the FQDN has multiple segments (such as "worker3.subgroup.company.net"), then the first_segment (here "worker3") will be used as the hostname.</li>_</ul>__@return The hostname of the TaskManager.;public String getHostname() {_		return hostName__	};gets,the,hostname,of,the,task,manager,the,hostname,derives,from,the,fully,qualified,domain,name,fqdn,see,link,get,fqdnhostname,ul,li,if,the,fqdn,is,the,textual,ip,address,then,the,hostname,is,also,the,ip,address,li,li,if,the,fqdn,has,only,one,segment,such,as,localhost,or,host17,then,this,is,used,as,the,hostname,li,li,if,the,fqdn,has,multiple,segments,such,as,worker3,subgroup,company,net,then,the,first,segment,here,worker3,will,be,used,as,the,hostname,li,ul,return,the,hostname,of,the,task,manager;public,string,get,hostname,return,host,name
TaskManagerLocation -> public ResourceID getResourceID();1472830377;Gets the ID of the resource in which the TaskManager is started. The format of this depends_on how the TaskManager is started:_<ul>_<li>If the TaskManager is started via YARN, this is the YARN container ID.</li>_<li>If the TaskManager is started via Mesos, this is the Mesos container ID.</li>_<li>If the TaskManager is started in standalone mode, or via a MiniCluster, this is a random ID.</li>_<li>Other deployment modes can set the resource ID in other ways.</li>_</ul>__@return The ID of the resource in which the TaskManager is started;public ResourceID getResourceID() {_		return resourceID__	};gets,the,id,of,the,resource,in,which,the,task,manager,is,started,the,format,of,this,depends,on,how,the,task,manager,is,started,ul,li,if,the,task,manager,is,started,via,yarn,this,is,the,yarn,container,id,li,li,if,the,task,manager,is,started,via,mesos,this,is,the,mesos,container,id,li,li,if,the,task,manager,is,started,in,standalone,mode,or,via,a,mini,cluster,this,is,a,random,id,li,li,other,deployment,modes,can,set,the,resource,id,in,other,ways,li,ul,return,the,id,of,the,resource,in,which,the,task,manager,is,started;public,resource,id,get,resource,id,return,resource,id
TaskManagerLocation -> public ResourceID getResourceID();1472830377;Gets the ID of the resource in which the TaskManager is started. The format of this depends_on how the TaskManager is started:_<ul>_<li>If the TaskManager is started via YARN, this is the YARN container ID.</li>_<li>If the TaskManager is started via Mesos, this is the Mesos container ID.</li>_<li>If the TaskManager is started in standalone mode, or via a MiniCluster, this is a random ID.</li>_<li>Other deployment modes can set the resource ID in other ways.</li>_</ul>__@return The ID of the resource in which the TaskManager is started;public ResourceID getResourceID() {_		return resourceID__	};gets,the,id,of,the,resource,in,which,the,task,manager,is,started,the,format,of,this,depends,on,how,the,task,manager,is,started,ul,li,if,the,task,manager,is,started,via,yarn,this,is,the,yarn,container,id,li,li,if,the,task,manager,is,started,via,mesos,this,is,the,mesos,container,id,li,li,if,the,task,manager,is,started,in,standalone,mode,or,via,a,mini,cluster,this,is,a,random,id,li,li,other,deployment,modes,can,set,the,resource,id,in,other,ways,li,ul,return,the,id,of,the,resource,in,which,the,task,manager,is,started;public,resource,id,get,resource,id,return,resource,id
TaskManagerLocation -> public ResourceID getResourceID();1486114103;Gets the ID of the resource in which the TaskManager is started. The format of this depends_on how the TaskManager is started:_<ul>_<li>If the TaskManager is started via YARN, this is the YARN container ID.</li>_<li>If the TaskManager is started via Mesos, this is the Mesos container ID.</li>_<li>If the TaskManager is started in standalone mode, or via a MiniCluster, this is a random ID.</li>_<li>Other deployment modes can set the resource ID in other ways.</li>_</ul>__@return The ID of the resource in which the TaskManager is started;public ResourceID getResourceID() {_		return resourceID__	};gets,the,id,of,the,resource,in,which,the,task,manager,is,started,the,format,of,this,depends,on,how,the,task,manager,is,started,ul,li,if,the,task,manager,is,started,via,yarn,this,is,the,yarn,container,id,li,li,if,the,task,manager,is,started,via,mesos,this,is,the,mesos,container,id,li,li,if,the,task,manager,is,started,in,standalone,mode,or,via,a,mini,cluster,this,is,a,random,id,li,li,other,deployment,modes,can,set,the,resource,id,in,other,ways,li,ul,return,the,id,of,the,resource,in,which,the,task,manager,is,started;public,resource,id,get,resource,id,return,resource,id
TaskManagerLocation -> public TaskManagerLocation(ResourceID resourceID, InetAddress inetAddress, int dataPort);1472830377;Constructs a new instance connection info object. The constructor will attempt to retrieve the instance's_host name and domain name through the operating system's lookup mechanisms.__@param inetAddress_the network address the instance's task manager binds its sockets to_@param dataPort_the port instance's task manager expects to receive transfer envelopes on;public TaskManagerLocation(ResourceID resourceID, InetAddress inetAddress, int dataPort) {_		_		checkArgument(dataPort > 0 || dataPort == -1, "dataPort must be > 0, or -1 (local)")___		this.resourceID = checkNotNull(resourceID)__		this.inetAddress = checkNotNull(inetAddress)__		this.dataPort = dataPort___		_		String fqdnHostName__		try {_			fqdnHostName = this.inetAddress.getCanonicalHostName()__		}_		catch (Throwable t) {_			LOG.warn("Unable to determine the canonical hostname. Input split assignment (such as " +_					"for HDFS files) may be non-local when the canonical hostname is missing.")__			LOG.debug("getCanonicalHostName() Exception:", t)__			fqdnHostName = this.inetAddress.getHostAddress()__		}_		this.fqdnHostName = fqdnHostName___		if (this.fqdnHostName.equals(this.inetAddress.getHostAddress())) {_			_			_			_			this.hostName = this.fqdnHostName__			LOG.warn("No hostname could be resolved for the IP address {}, using IP address as host name. "_					+ "Local input split assignment (such as for HDFS files) may be impacted.",_					this.inetAddress.getHostAddress())__		}_		else {_			this.hostName = NetUtils.getHostnameFromFQDN(this.fqdnHostName)__		}__		this.stringRepresentation = String.format(_				"TaskManager (%s) @ %s (dataPort=%d)", resourceID, fqdnHostName, dataPort)__	};constructs,a,new,instance,connection,info,object,the,constructor,will,attempt,to,retrieve,the,instance,s,host,name,and,domain,name,through,the,operating,system,s,lookup,mechanisms,param,inet,address,the,network,address,the,instance,s,task,manager,binds,its,sockets,to,param,data,port,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on;public,task,manager,location,resource,id,resource,id,inet,address,inet,address,int,data,port,check,argument,data,port,0,data,port,1,data,port,must,be,0,or,1,local,this,resource,id,check,not,null,resource,id,this,inet,address,check,not,null,inet,address,this,data,port,data,port,string,fqdn,host,name,try,fqdn,host,name,this,inet,address,get,canonical,host,name,catch,throwable,t,log,warn,unable,to,determine,the,canonical,hostname,input,split,assignment,such,as,for,hdfs,files,may,be,non,local,when,the,canonical,hostname,is,missing,log,debug,get,canonical,host,name,exception,t,fqdn,host,name,this,inet,address,get,host,address,this,fqdn,host,name,fqdn,host,name,if,this,fqdn,host,name,equals,this,inet,address,get,host,address,this,host,name,this,fqdn,host,name,log,warn,no,hostname,could,be,resolved,for,the,ip,address,using,ip,address,as,host,name,local,input,split,assignment,such,as,for,hdfs,files,may,be,impacted,this,inet,address,get,host,address,else,this,host,name,net,utils,get,hostname,from,fqdn,this,fqdn,host,name,this,string,representation,string,format,task,manager,s,s,data,port,d,resource,id,fqdn,host,name,data,port
TaskManagerLocation -> public TaskManagerLocation(ResourceID resourceID, InetAddress inetAddress, int dataPort);1472830377;Constructs a new instance connection info object. The constructor will attempt to retrieve the instance's_host name and domain name through the operating system's lookup mechanisms.__@param inetAddress_the network address the instance's task manager binds its sockets to_@param dataPort_the port instance's task manager expects to receive transfer envelopes on;public TaskManagerLocation(ResourceID resourceID, InetAddress inetAddress, int dataPort) {_		_		checkArgument(dataPort > 0 || dataPort == -1, "dataPort must be > 0, or -1 (local)")___		this.resourceID = checkNotNull(resourceID)__		this.inetAddress = checkNotNull(inetAddress)__		this.dataPort = dataPort___		_		String fqdnHostName__		try {_			fqdnHostName = this.inetAddress.getCanonicalHostName()__		}_		catch (Throwable t) {_			LOG.warn("Unable to determine the canonical hostname. Input split assignment (such as " +_					"for HDFS files) may be non-local when the canonical hostname is missing.")__			LOG.debug("getCanonicalHostName() Exception:", t)__			fqdnHostName = this.inetAddress.getHostAddress()__		}_		this.fqdnHostName = fqdnHostName___		if (this.fqdnHostName.equals(this.inetAddress.getHostAddress())) {_			_			_			_			this.hostName = this.fqdnHostName__			LOG.warn("No hostname could be resolved for the IP address {}, using IP address as host name. "_					+ "Local input split assignment (such as for HDFS files) may be impacted.",_					this.inetAddress.getHostAddress())__		}_		else {_			this.hostName = NetUtils.getHostnameFromFQDN(this.fqdnHostName)__		}__		this.stringRepresentation = String.format(_				"%s @ %s (dataPort=%d)", resourceID, fqdnHostName, dataPort)__	};constructs,a,new,instance,connection,info,object,the,constructor,will,attempt,to,retrieve,the,instance,s,host,name,and,domain,name,through,the,operating,system,s,lookup,mechanisms,param,inet,address,the,network,address,the,instance,s,task,manager,binds,its,sockets,to,param,data,port,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on;public,task,manager,location,resource,id,resource,id,inet,address,inet,address,int,data,port,check,argument,data,port,0,data,port,1,data,port,must,be,0,or,1,local,this,resource,id,check,not,null,resource,id,this,inet,address,check,not,null,inet,address,this,data,port,data,port,string,fqdn,host,name,try,fqdn,host,name,this,inet,address,get,canonical,host,name,catch,throwable,t,log,warn,unable,to,determine,the,canonical,hostname,input,split,assignment,such,as,for,hdfs,files,may,be,non,local,when,the,canonical,hostname,is,missing,log,debug,get,canonical,host,name,exception,t,fqdn,host,name,this,inet,address,get,host,address,this,fqdn,host,name,fqdn,host,name,if,this,fqdn,host,name,equals,this,inet,address,get,host,address,this,host,name,this,fqdn,host,name,log,warn,no,hostname,could,be,resolved,for,the,ip,address,using,ip,address,as,host,name,local,input,split,assignment,such,as,for,hdfs,files,may,be,impacted,this,inet,address,get,host,address,else,this,host,name,net,utils,get,hostname,from,fqdn,this,fqdn,host,name,this,string,representation,string,format,s,s,data,port,d,resource,id,fqdn,host,name,data,port
TaskManagerLocation -> public TaskManagerLocation(ResourceID resourceID, InetAddress inetAddress, int dataPort);1486114103;Constructs a new instance connection info object. The constructor will attempt to retrieve the instance's_host name and domain name through the operating system's lookup mechanisms.__@param inetAddress_the network address the instance's task manager binds its sockets to_@param dataPort_the port instance's task manager expects to receive transfer envelopes on;public TaskManagerLocation(ResourceID resourceID, InetAddress inetAddress, int dataPort) {_		_		checkArgument(dataPort > 0 || dataPort == -1, "dataPort must be > 0, or -1 (local)")___		this.resourceID = checkNotNull(resourceID)__		this.inetAddress = checkNotNull(inetAddress)__		this.dataPort = dataPort___		_		String fqdnHostName__		try {_			fqdnHostName = this.inetAddress.getCanonicalHostName()__		}_		catch (Throwable t) {_			LOG.warn("Unable to determine the canonical hostname. Input split assignment (such as " +_					"for HDFS files) may be non-local when the canonical hostname is missing.")__			LOG.debug("getCanonicalHostName() Exception:", t)__			fqdnHostName = this.inetAddress.getHostAddress()__		}_		this.fqdnHostName = fqdnHostName___		if (this.fqdnHostName.equals(this.inetAddress.getHostAddress())) {_			_			_			_			this.hostName = this.fqdnHostName__			LOG.warn("No hostname could be resolved for the IP address {}, using IP address as host name. "_					+ "Local input split assignment (such as for HDFS files) may be impacted.",_					this.inetAddress.getHostAddress())__		}_		else {_			this.hostName = NetUtils.getHostnameFromFQDN(this.fqdnHostName)__		}__		this.stringRepresentation = String.format(_				"%s @ %s (dataPort=%d)", resourceID, fqdnHostName, dataPort)__	};constructs,a,new,instance,connection,info,object,the,constructor,will,attempt,to,retrieve,the,instance,s,host,name,and,domain,name,through,the,operating,system,s,lookup,mechanisms,param,inet,address,the,network,address,the,instance,s,task,manager,binds,its,sockets,to,param,data,port,the,port,instance,s,task,manager,expects,to,receive,transfer,envelopes,on;public,task,manager,location,resource,id,resource,id,inet,address,inet,address,int,data,port,check,argument,data,port,0,data,port,1,data,port,must,be,0,or,1,local,this,resource,id,check,not,null,resource,id,this,inet,address,check,not,null,inet,address,this,data,port,data,port,string,fqdn,host,name,try,fqdn,host,name,this,inet,address,get,canonical,host,name,catch,throwable,t,log,warn,unable,to,determine,the,canonical,hostname,input,split,assignment,such,as,for,hdfs,files,may,be,non,local,when,the,canonical,hostname,is,missing,log,debug,get,canonical,host,name,exception,t,fqdn,host,name,this,inet,address,get,host,address,this,fqdn,host,name,fqdn,host,name,if,this,fqdn,host,name,equals,this,inet,address,get,host,address,this,host,name,this,fqdn,host,name,log,warn,no,hostname,could,be,resolved,for,the,ip,address,using,ip,address,as,host,name,local,input,split,assignment,such,as,for,hdfs,files,may,be,impacted,this,inet,address,get,host,address,else,this,host,name,net,utils,get,hostname,from,fqdn,this,fqdn,host,name,this,string,representation,string,format,s,s,data,port,d,resource,id,fqdn,host,name,data,port
