# id;timestamp;commentText;codeText;commentWords;codeWords
KvStateLocationRegistry -> public KvStateLocation getKvStateLocation(String registrationName);1464609815;Returns the {@link KvStateLocation} for the registered KvState instance_or <code>null</code> if no location information is available.__@param registrationName Name under which the KvState instance is registered._@return Location information or <code>null</code>.;public KvStateLocation getKvStateLocation(String registrationName) {_		return lookupTable.get(registrationName)__	};returns,the,link,kv,state,location,for,the,registered,kv,state,instance,or,code,null,code,if,no,location,information,is,available,param,registration,name,name,under,which,the,kv,state,instance,is,registered,return,location,information,or,code,null,code;public,kv,state,location,get,kv,state,location,string,registration,name,return,lookup,table,get,registration,name
KvStateLocationRegistry -> public KvStateLocation getKvStateLocation(String registrationName);1474382176;Returns the {@link KvStateLocation} for the registered KvState instance_or <code>null</code> if no location information is available.__@param registrationName Name under which the KvState instance is registered._@return Location information or <code>null</code>.;public KvStateLocation getKvStateLocation(String registrationName) {_		return lookupTable.get(registrationName)__	};returns,the,link,kv,state,location,for,the,registered,kv,state,instance,or,code,null,code,if,no,location,information,is,available,param,registration,name,name,under,which,the,kv,state,instance,is,registered,return,location,information,or,code,null,code;public,kv,state,location,get,kv,state,location,string,registration,name,return,lookup,table,get,registration,name
KvStateLocationRegistry -> public KvStateLocation getKvStateLocation(String registrationName);1484317029;Returns the {@link KvStateLocation} for the registered KvState instance_or <code>null</code> if no location information is available.__@param registrationName Name under which the KvState instance is registered._@return Location information or <code>null</code>.;public KvStateLocation getKvStateLocation(String registrationName) {_		return lookupTable.get(registrationName)__	};returns,the,link,kv,state,location,for,the,registered,kv,state,instance,or,code,null,code,if,no,location,information,is,available,param,registration,name,name,under,which,the,kv,state,instance,is,registered,return,location,information,or,code,null,code;public,kv,state,location,get,kv,state,location,string,registration,name,return,lookup,table,get,registration,name
KvStateLocationRegistry -> public KvStateLocation getKvStateLocation(String registrationName);1508840168;Returns the {@link KvStateLocation} for the registered KvState instance_or <code>null</code> if no location information is available.__@param registrationName Name under which the KvState instance is registered._@return Location information or <code>null</code>.;public KvStateLocation getKvStateLocation(String registrationName) {_		return lookupTable.get(registrationName)__	};returns,the,link,kv,state,location,for,the,registered,kv,state,instance,or,code,null,code,if,no,location,information,is,available,param,registration,name,name,under,which,the,kv,state,instance,is,registered,return,location,information,or,code,null,code;public,kv,state,location,get,kv,state,location,string,registration,name,return,lookup,table,get,registration,name
KvStateLocationRegistry -> public void notifyKvStateRegistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName, 			KvStateID kvStateId, 			KvStateServerAddress kvStateServerAddress);1474382176;Notifies the registry about a registered KvState instance.__@param jobVertexId JobVertexID the KvState instance belongs to_@param keyGroupRange Key group range the KvState instance belongs to_@param registrationName Name under which the KvState has been registered_@param kvStateId ID of the registered KvState instance_@param kvStateServerAddress Server address where to find the KvState instance__@throws IllegalArgumentException If JobVertexID does not belong to job_@throws IllegalArgumentException If state has been registered with same_name by another operator._@throws IndexOutOfBoundsException If key group index is out of bounds.;public void notifyKvStateRegistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName,_			KvStateID kvStateId,_			KvStateServerAddress kvStateServerAddress) {__		KvStateLocation location = lookupTable.get(registrationName)___		if (location == null) {_			_			ExecutionJobVertex vertex = jobVertices.get(jobVertexId)___			if (vertex != null) {_				int parallelism = vertex.getMaxParallelism()__				location = new KvStateLocation(jobId, jobVertexId, parallelism, registrationName)__				lookupTable.put(registrationName, location)__			} else {_				throw new IllegalArgumentException("Unknown JobVertexID " + jobVertexId)__			}_		}__		_		if (!location.getJobVertexId().equals(jobVertexId)) {_			IllegalStateException duplicate = new IllegalStateException(_					"Registration name clash. KvState with name '" + registrationName +_							"' has already been registered by another operator (" +_							location.getJobVertexId() + ").")___			ExecutionJobVertex vertex = jobVertices.get(jobVertexId)__			if (vertex != null) {_				vertex.fail(new SuppressRestartsException(duplicate))__			}__			throw duplicate__		}_		location.registerKvState(keyGroupRange, kvStateId, kvStateServerAddress)__	};notifies,the,registry,about,a,registered,kv,state,instance,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance,throws,illegal,argument,exception,if,job,vertex,id,does,not,belong,to,job,throws,illegal,argument,exception,if,state,has,been,registered,with,same,name,by,another,operator,throws,index,out,of,bounds,exception,if,key,group,index,is,out,of,bounds;public,void,notify,kv,state,registered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name,kv,state,id,kv,state,id,kv,state,server,address,kv,state,server,address,kv,state,location,location,lookup,table,get,registration,name,if,location,null,execution,job,vertex,vertex,job,vertices,get,job,vertex,id,if,vertex,null,int,parallelism,vertex,get,max,parallelism,location,new,kv,state,location,job,id,job,vertex,id,parallelism,registration,name,lookup,table,put,registration,name,location,else,throw,new,illegal,argument,exception,unknown,job,vertex,id,job,vertex,id,if,location,get,job,vertex,id,equals,job,vertex,id,illegal,state,exception,duplicate,new,illegal,state,exception,registration,name,clash,kv,state,with,name,registration,name,has,already,been,registered,by,another,operator,location,get,job,vertex,id,execution,job,vertex,vertex,job,vertices,get,job,vertex,id,if,vertex,null,vertex,fail,new,suppress,restarts,exception,duplicate,throw,duplicate,location,register,kv,state,key,group,range,kv,state,id,kv,state,server,address
KvStateLocationRegistry -> public void notifyKvStateRegistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName, 			KvStateID kvStateId, 			KvStateServerAddress kvStateServerAddress);1484317029;Notifies the registry about a registered KvState instance.__@param jobVertexId JobVertexID the KvState instance belongs to_@param keyGroupRange Key group range the KvState instance belongs to_@param registrationName Name under which the KvState has been registered_@param kvStateId ID of the registered KvState instance_@param kvStateServerAddress Server address where to find the KvState instance__@throws IllegalArgumentException If JobVertexID does not belong to job_@throws IllegalArgumentException If state has been registered with same_name by another operator._@throws IndexOutOfBoundsException If key group index is out of bounds.;public void notifyKvStateRegistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName,_			KvStateID kvStateId,_			KvStateServerAddress kvStateServerAddress) {__		KvStateLocation location = lookupTable.get(registrationName)___		if (location == null) {_			_			ExecutionJobVertex vertex = jobVertices.get(jobVertexId)___			if (vertex != null) {_				int parallelism = vertex.getMaxParallelism()__				location = new KvStateLocation(jobId, jobVertexId, parallelism, registrationName)__				lookupTable.put(registrationName, location)__			} else {_				throw new IllegalArgumentException("Unknown JobVertexID " + jobVertexId)__			}_		}__		_		if (!location.getJobVertexId().equals(jobVertexId)) {_			IllegalStateException duplicate = new IllegalStateException(_					"Registration name clash. KvState with name '" + registrationName +_							"' has already been registered by another operator (" +_							location.getJobVertexId() + ").")___			ExecutionJobVertex vertex = jobVertices.get(jobVertexId)__			if (vertex != null) {_				vertex.fail(new SuppressRestartsException(duplicate))__			}__			throw duplicate__		}_		location.registerKvState(keyGroupRange, kvStateId, kvStateServerAddress)__	};notifies,the,registry,about,a,registered,kv,state,instance,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,range,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,param,kv,state,id,id,of,the,registered,kv,state,instance,param,kv,state,server,address,server,address,where,to,find,the,kv,state,instance,throws,illegal,argument,exception,if,job,vertex,id,does,not,belong,to,job,throws,illegal,argument,exception,if,state,has,been,registered,with,same,name,by,another,operator,throws,index,out,of,bounds,exception,if,key,group,index,is,out,of,bounds;public,void,notify,kv,state,registered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name,kv,state,id,kv,state,id,kv,state,server,address,kv,state,server,address,kv,state,location,location,lookup,table,get,registration,name,if,location,null,execution,job,vertex,vertex,job,vertices,get,job,vertex,id,if,vertex,null,int,parallelism,vertex,get,max,parallelism,location,new,kv,state,location,job,id,job,vertex,id,parallelism,registration,name,lookup,table,put,registration,name,location,else,throw,new,illegal,argument,exception,unknown,job,vertex,id,job,vertex,id,if,location,get,job,vertex,id,equals,job,vertex,id,illegal,state,exception,duplicate,new,illegal,state,exception,registration,name,clash,kv,state,with,name,registration,name,has,already,been,registered,by,another,operator,location,get,job,vertex,id,execution,job,vertex,vertex,job,vertices,get,job,vertex,id,if,vertex,null,vertex,fail,new,suppress,restarts,exception,duplicate,throw,duplicate,location,register,kv,state,key,group,range,kv,state,id,kv,state,server,address
KvStateLocationRegistry -> public void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName);1474382176;Notifies the registry about an unregistered KvState instance.__@param jobVertexId JobVertexID the KvState instance belongs to_@param keyGroupRange Key group index the KvState instance belongs to_@param registrationName Name under which the KvState has been registered_@throws IllegalArgumentException If another operator registered the state instance_@throws IllegalArgumentException If the registration name is not known;public void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName) {__		KvStateLocation location = lookupTable.get(registrationName)___		if (location != null) {_			_			if (!location.getJobVertexId().equals(jobVertexId)) {_				throw new IllegalArgumentException("Another operator (" +_						location.getJobVertexId() + ") registered the KvState " +_						"under '" + registrationName + "'.")__			}__			location.unregisterKvState(keyGroupRange)___			if (location.getNumRegisteredKeyGroups() == 0) {_				lookupTable.remove(registrationName)__			}_		} else {_			throw new IllegalArgumentException("Unknown registration name '" +_					registrationName + "'. " + "Probably registration/unregistration race.")__		}_	};notifies,the,registry,about,an,unregistered,kv,state,instance,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,throws,illegal,argument,exception,if,another,operator,registered,the,state,instance,throws,illegal,argument,exception,if,the,registration,name,is,not,known;public,void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name,kv,state,location,location,lookup,table,get,registration,name,if,location,null,if,location,get,job,vertex,id,equals,job,vertex,id,throw,new,illegal,argument,exception,another,operator,location,get,job,vertex,id,registered,the,kv,state,under,registration,name,location,unregister,kv,state,key,group,range,if,location,get,num,registered,key,groups,0,lookup,table,remove,registration,name,else,throw,new,illegal,argument,exception,unknown,registration,name,registration,name,probably,registration,unregistration,race
KvStateLocationRegistry -> public void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName);1484317029;Notifies the registry about an unregistered KvState instance.__@param jobVertexId JobVertexID the KvState instance belongs to_@param keyGroupRange Key group index the KvState instance belongs to_@param registrationName Name under which the KvState has been registered_@throws IllegalArgumentException If another operator registered the state instance_@throws IllegalArgumentException If the registration name is not known;public void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName) {__		KvStateLocation location = lookupTable.get(registrationName)___		if (location != null) {_			_			if (!location.getJobVertexId().equals(jobVertexId)) {_				throw new IllegalArgumentException("Another operator (" +_						location.getJobVertexId() + ") registered the KvState " +_						"under '" + registrationName + "'.")__			}__			location.unregisterKvState(keyGroupRange)___			if (location.getNumRegisteredKeyGroups() == 0) {_				lookupTable.remove(registrationName)__			}_		} else {_			throw new IllegalArgumentException("Unknown registration name '" +_					registrationName + "'. " + "Probably registration/unregistration race.")__		}_	};notifies,the,registry,about,an,unregistered,kv,state,instance,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,throws,illegal,argument,exception,if,another,operator,registered,the,state,instance,throws,illegal,argument,exception,if,the,registration,name,is,not,known;public,void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name,kv,state,location,location,lookup,table,get,registration,name,if,location,null,if,location,get,job,vertex,id,equals,job,vertex,id,throw,new,illegal,argument,exception,another,operator,location,get,job,vertex,id,registered,the,kv,state,under,registration,name,location,unregister,kv,state,key,group,range,if,location,get,num,registered,key,groups,0,lookup,table,remove,registration,name,else,throw,new,illegal,argument,exception,unknown,registration,name,registration,name,probably,registration,unregistration,race
KvStateLocationRegistry -> public void notifyKvStateUnregistered( 			JobVertexID jobVertexId, 			KeyGroupRange keyGroupRange, 			String registrationName);1508840168;Notifies the registry about an unregistered KvState instance.__@param jobVertexId JobVertexID the KvState instance belongs to_@param keyGroupRange Key group index the KvState instance belongs to_@param registrationName Name under which the KvState has been registered_@throws IllegalArgumentException If another operator registered the state instance_@throws IllegalArgumentException If the registration name is not known;public void notifyKvStateUnregistered(_			JobVertexID jobVertexId,_			KeyGroupRange keyGroupRange,_			String registrationName) {__		KvStateLocation location = lookupTable.get(registrationName)___		if (location != null) {_			_			if (!location.getJobVertexId().equals(jobVertexId)) {_				throw new IllegalArgumentException("Another operator (" +_						location.getJobVertexId() + ") registered the KvState " +_						"under '" + registrationName + "'.")__			}__			location.unregisterKvState(keyGroupRange)___			if (location.getNumRegisteredKeyGroups() == 0) {_				lookupTable.remove(registrationName)__			}_		} else {_			throw new IllegalArgumentException("Unknown registration name '" +_					registrationName + "'. " + "Probably registration/unregistration race.")__		}_	};notifies,the,registry,about,an,unregistered,kv,state,instance,param,job,vertex,id,job,vertex,id,the,kv,state,instance,belongs,to,param,key,group,range,key,group,index,the,kv,state,instance,belongs,to,param,registration,name,name,under,which,the,kv,state,has,been,registered,throws,illegal,argument,exception,if,another,operator,registered,the,state,instance,throws,illegal,argument,exception,if,the,registration,name,is,not,known;public,void,notify,kv,state,unregistered,job,vertex,id,job,vertex,id,key,group,range,key,group,range,string,registration,name,kv,state,location,location,lookup,table,get,registration,name,if,location,null,if,location,get,job,vertex,id,equals,job,vertex,id,throw,new,illegal,argument,exception,another,operator,location,get,job,vertex,id,registered,the,kv,state,under,registration,name,location,unregister,kv,state,key,group,range,if,location,get,num,registered,key,groups,0,lookup,table,remove,registration,name,else,throw,new,illegal,argument,exception,unknown,registration,name,registration,name,probably,registration,unregistration,race
KvStateLocationRegistry -> public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices);1464609815;Creates the registry for the job.__@param jobId       JobID this coordinator belongs to._@param jobVertices Job vertices map of all vertices of this job.;public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices) {_		this.jobId = Preconditions.checkNotNull(jobId, "JobID")__		this.jobVertices = Preconditions.checkNotNull(jobVertices, "Job vertices")__	};creates,the,registry,for,the,job,param,job,id,job,id,this,coordinator,belongs,to,param,job,vertices,job,vertices,map,of,all,vertices,of,this,job;public,kv,state,location,registry,job,id,job,id,map,job,vertex,id,execution,job,vertex,job,vertices,this,job,id,preconditions,check,not,null,job,id,job,id,this,job,vertices,preconditions,check,not,null,job,vertices,job,vertices
KvStateLocationRegistry -> public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices);1474382176;Creates the registry for the job.__@param jobId       JobID this coordinator belongs to._@param jobVertices Job vertices map of all vertices of this job.;public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices) {_		this.jobId = Preconditions.checkNotNull(jobId, "JobID")__		this.jobVertices = Preconditions.checkNotNull(jobVertices, "Job vertices")__	};creates,the,registry,for,the,job,param,job,id,job,id,this,coordinator,belongs,to,param,job,vertices,job,vertices,map,of,all,vertices,of,this,job;public,kv,state,location,registry,job,id,job,id,map,job,vertex,id,execution,job,vertex,job,vertices,this,job,id,preconditions,check,not,null,job,id,job,id,this,job,vertices,preconditions,check,not,null,job,vertices,job,vertices
KvStateLocationRegistry -> public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices);1484317029;Creates the registry for the job.__@param jobId       JobID this coordinator belongs to._@param jobVertices Job vertices map of all vertices of this job.;public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices) {_		this.jobId = Preconditions.checkNotNull(jobId, "JobID")__		this.jobVertices = Preconditions.checkNotNull(jobVertices, "Job vertices")__	};creates,the,registry,for,the,job,param,job,id,job,id,this,coordinator,belongs,to,param,job,vertices,job,vertices,map,of,all,vertices,of,this,job;public,kv,state,location,registry,job,id,job,id,map,job,vertex,id,execution,job,vertex,job,vertices,this,job,id,preconditions,check,not,null,job,id,job,id,this,job,vertices,preconditions,check,not,null,job,vertices,job,vertices
KvStateLocationRegistry -> public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices);1508840168;Creates the registry for the job.__@param jobId       JobID this coordinator belongs to._@param jobVertices Job vertices map of all vertices of this job.;public KvStateLocationRegistry(JobID jobId, Map<JobVertexID, ExecutionJobVertex> jobVertices) {_		this.jobId = Preconditions.checkNotNull(jobId, "JobID")__		this.jobVertices = Preconditions.checkNotNull(jobVertices, "Job vertices")__	};creates,the,registry,for,the,job,param,job,id,job,id,this,coordinator,belongs,to,param,job,vertices,job,vertices,map,of,all,vertices,of,this,job;public,kv,state,location,registry,job,id,job,id,map,job,vertex,id,execution,job,vertex,job,vertices,this,job,id,preconditions,check,not,null,job,id,job,id,this,job,vertices,preconditions,check,not,null,job,vertices,job,vertices
