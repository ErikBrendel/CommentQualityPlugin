# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1469615350;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1476710581;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1484221316;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1496241592;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1497274585;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1508426573;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1511879707;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1515649444;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1525680266;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		if (logicalScopeString == null) {_			if (parent == null) {_				logicalScopeString = getGroupName(filter)__			} else {_				logicalScopeString = parent.getLogicalScope(filter, delimiter) + delimiter + getGroupName(filter)__			}_		}_		return logicalScopeString__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,if,logical,scope,string,null,if,parent,null,logical,scope,string,get,group,name,filter,else,logical,scope,string,parent,get,logical,scope,filter,delimiter,delimiter,get,group,name,filter,return,logical,scope,string
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1542283507;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		return getLogicalScope(filter, delimiter, -1)__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,return,get,logical,scope,filter,delimiter,1
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1546535628;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		return getLogicalScope(filter, delimiter, -1)__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,return,get,logical,scope,filter,delimiter,1
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter, char delimiter);1547021528;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter, char delimiter) {_		return getLogicalScope(filter, delimiter, -1)__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,char,delimiter,return,get,logical,scope,filter,delimiter,1
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1469615350;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1470398077;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1471599974;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1474366180;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1476710581;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1484221316;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1496241592;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1497274585;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1508426573;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1511879707;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1515649444;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1525680266;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1542283507;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1546535628;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter);1547021528;Returns the metric query service scope for this group.__@param filter character filter_@return query service scope;public QueryScopeInfo getQueryServiceMetricInfo(CharacterFilter filter) {_		if (queryServiceScopeInfo == null) {_			queryServiceScopeInfo = createQueryServiceMetricInfo(filter)__		}_		return queryServiceScopeInfo__	};returns,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;public,query,scope,info,get,query,service,metric,info,character,filter,filter,if,query,service,scope,info,null,query,service,scope,info,create,query,service,metric,info,filter,return,query,service,scope,info
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1469615350;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (filter != null) {_			scopeString = ScopeFormat.concat(filter, registry.getDelimiter(reporterIndex), scopeComponents)__			return scopeString + registry.getDelimiter(reporterIndex) + filter.filterCharacters(metricName)__		} else {_			scopeString = ScopeFormat.concat(registry.getDelimiter(reporterIndex), scopeComponents)__			return scopeString + registry.getDelimiter(reporterIndex) + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,reporter,index,scope,components,return,scope,string,registry,get,delimiter,reporter,index,filter,filter,characters,metric,name,else,scope,string,scope,format,concat,registry,get,delimiter,reporter,index,scope,components,return,scope,string,registry,get,delimiter,reporter,index,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1474366180;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (filter != null) {_			scopeString = ScopeFormat.concat(filter, registry.getDelimiter(reporterIndex), scopeComponents)__			return scopeString + registry.getDelimiter(reporterIndex) + filter.filterCharacters(metricName)__		} else {_			scopeString = ScopeFormat.concat(registry.getDelimiter(reporterIndex), scopeComponents)__			return scopeString + registry.getDelimiter(reporterIndex) + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,reporter,index,scope,components,return,scope,string,registry,get,delimiter,reporter,index,filter,filter,characters,metric,name,else,scope,string,scope,format,concat,registry,get,delimiter,reporter,index,scope,components,return,scope,string,registry,get,delimiter,reporter,index,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1476710581;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1484221316;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1496241592;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1497274585;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1508426573;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1511879707;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1515649444;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1525680266;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1542283507;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1546535628;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex);1547021528;Returns the fully qualified metric name using the configured delimiter for the reporter with the given index, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@param reporterIndex index of the reporter whose delimiter should be used_@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter, int reporterIndex) {_		if (scopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= scopeStrings.length)) {_			char delimiter = registry.getDelimiter()__			String newScopeString__			if (filter != null) {_				newScopeString = ScopeFormat.concat(filter, delimiter, scopeComponents)__				metricName = filter.filterCharacters(metricName)__			} else {_				newScopeString = ScopeFormat.concat(delimiter, scopeComponents)__			}_			return newScopeString + delimiter + metricName__		} else {_			char delimiter = registry.getDelimiter(reporterIndex)__			if (scopeStrings[reporterIndex] == null) {_				if (filter != null) {_					scopeStrings[reporterIndex] = ScopeFormat.concat(filter, delimiter, scopeComponents)__				} else {_					scopeStrings[reporterIndex] = ScopeFormat.concat(delimiter, scopeComponents)__				}_			}_			if (filter != null) {_				metricName = filter.filterCharacters(metricName)__			}_			return scopeStrings[reporterIndex] + delimiter + metricName__		}_	};returns,the,fully,qualified,metric,name,using,the,configured,delimiter,for,the,reporter,with,the,given,index,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,param,reporter,index,index,of,the,reporter,whose,delimiter,should,be,used,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,int,reporter,index,if,scope,strings,length,0,reporter,index,0,reporter,index,scope,strings,length,char,delimiter,registry,get,delimiter,string,new,scope,string,if,filter,null,new,scope,string,scope,format,concat,filter,delimiter,scope,components,metric,name,filter,filter,characters,metric,name,else,new,scope,string,scope,format,concat,delimiter,scope,components,return,new,scope,string,delimiter,metric,name,else,char,delimiter,registry,get,delimiter,reporter,index,if,scope,strings,reporter,index,null,if,filter,null,scope,strings,reporter,index,scope,format,concat,filter,delimiter,scope,components,else,scope,strings,reporter,index,scope,format,concat,delimiter,scope,components,if,filter,null,metric,name,filter,filter,characters,metric,name,return,scope,strings,reporter,index,delimiter,metric,name
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1469615350;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1470398077;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1471599974;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1474366180;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1476710581;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1484221316;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1496241592;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1497274585;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1508426573;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1511879707;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1515649444;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1525680266;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1542283507;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1546535628;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;1547021528;Creates the metric query service scope for this group.__@param filter character filter_@return query service scope;protected abstract QueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter)_;creates,the,metric,query,service,scope,for,this,group,param,filter,character,filter,return,query,service,scope;protected,abstract,query,scope,info,create,query,service,metric,info,character,filter,filter
AbstractMetricGroup -> public String[] getScopeComponents();1469183596;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1469611527;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1469615350;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1470398077;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1471244577;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1471599974;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1474366180;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1476710581;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1484221316;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1496241592;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1497274585;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1508426573;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1511879707;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1515649444;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1525680266;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1542283507;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1546535628;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String[] getScopeComponents();1547021528;Gets the scope as an array of the scope components, for example_{@code ["host-7", "taskmanager-2", "window_word_count", "my-mapper"]}.__@see #getMetricIdentifier(String);public String[] getScopeComponents() {_		return scopeComponents__	};gets,the,scope,as,an,array,of,the,scope,components,for,example,code,host,7,taskmanager,2,my,mapper,see,get,metric,identifier,string;public,string,get,scope,components,return,scope,components
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1469183596;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1469611527;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1469615350;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1470398077;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1471244577;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1471599974;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1474366180;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1476710581;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1484221316;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1496241592;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1497274585;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1508426573;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1511879707;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1515649444;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1525680266;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1542283507;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1546535628;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> public String getMetricIdentifier(String metricName);1547021528;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@return fully qualified metric name;public String getMetricIdentifier(String metricName) {_		return getMetricIdentifier(metricName, null)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,return,get,metric,identifier,metric,name,null
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1469615350;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1476710581;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1484221316;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1496241592;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1497274585;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1508426573;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1511879707;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1515649444;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1525680266;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1542283507;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1546535628;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected abstract String getGroupName(CharacterFilter filter)_;1547021528;Returns the name for this group, meaning what kind of entity it represents, for example "taskmanager".__@param filter character filter which is applied to the name_@return logical name for this group;protected abstract String getGroupName(CharacterFilter filter)_;returns,the,name,for,this,group,meaning,what,kind,of,entity,it,represents,for,example,taskmanager,param,filter,character,filter,which,is,applied,to,the,name,return,logical,name,for,this,group;protected,abstract,string,get,group,name,character,filter,filter
AbstractMetricGroup -> protected void putVariables(Map<String, String> variables);1511879707;Enters all variables specific to this {@link AbstractMetricGroup} and their associated values into the map.__@param variables map to enter variables and their values into;protected void putVariables(Map<String, String> variables) {_	};enters,all,variables,specific,to,this,link,abstract,metric,group,and,their,associated,values,into,the,map,param,variables,map,to,enter,variables,and,their,values,into;protected,void,put,variables,map,string,string,variables
AbstractMetricGroup -> protected void putVariables(Map<String, String> variables);1515649444;Enters all variables specific to this {@link AbstractMetricGroup} and their associated values into the map.__@param variables map to enter variables and their values into;protected void putVariables(Map<String, String> variables) {_	};enters,all,variables,specific,to,this,link,abstract,metric,group,and,their,associated,values,into,the,map,param,variables,map,to,enter,variables,and,their,values,into;protected,void,put,variables,map,string,string,variables
AbstractMetricGroup -> protected void putVariables(Map<String, String> variables);1525680266;Enters all variables specific to this {@link AbstractMetricGroup} and their associated values into the map.__@param variables map to enter variables and their values into;protected void putVariables(Map<String, String> variables) {_	};enters,all,variables,specific,to,this,link,abstract,metric,group,and,their,associated,values,into,the,map,param,variables,map,to,enter,variables,and,their,values,into;protected,void,put,variables,map,string,string,variables
AbstractMetricGroup -> protected void putVariables(Map<String, String> variables);1542283507;Enters all variables specific to this {@link AbstractMetricGroup} and their associated values into the map.__@param variables map to enter variables and their values into;protected void putVariables(Map<String, String> variables) {_	};enters,all,variables,specific,to,this,link,abstract,metric,group,and,their,associated,values,into,the,map,param,variables,map,to,enter,variables,and,their,values,into;protected,void,put,variables,map,string,string,variables
AbstractMetricGroup -> protected void putVariables(Map<String, String> variables);1546535628;Enters all variables specific to this {@link AbstractMetricGroup} and their associated values into the map.__@param variables map to enter variables and their values into;protected void putVariables(Map<String, String> variables) {_	};enters,all,variables,specific,to,this,link,abstract,metric,group,and,their,associated,values,into,the,map,param,variables,map,to,enter,variables,and,their,values,into;protected,void,put,variables,map,string,string,variables
AbstractMetricGroup -> protected void putVariables(Map<String, String> variables);1547021528;Enters all variables specific to this {@link AbstractMetricGroup} and their associated values into the map.__@param variables map to enter variables and their values into;protected void putVariables(Map<String, String> variables) {_	};enters,all,variables,specific,to,this,link,abstract,metric,group,and,their,associated,values,into,the,map,param,variables,map,to,enter,variables,and,their,values,into;protected,void,put,variables,map,string,string,variables
AbstractMetricGroup -> String getLogicalScope(CharacterFilter filter, char delimiter, int reporterIndex);1542283507;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@param delimiter delimiter to use for concatenating scope components_@param reporterIndex index of the reporter_@return logical scope;String getLogicalScope(CharacterFilter filter, char delimiter, int reporterIndex) {_		if (logicalScopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= logicalScopeStrings.length)) {_			return createLogicalScope(filter, delimiter)__		} else {_			if (logicalScopeStrings[reporterIndex] == null) {_				logicalScopeStrings[reporterIndex] = createLogicalScope(filter, delimiter)__			}_			return logicalScopeStrings[reporterIndex]__		}_	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,param,delimiter,delimiter,to,use,for,concatenating,scope,components,param,reporter,index,index,of,the,reporter,return,logical,scope;string,get,logical,scope,character,filter,filter,char,delimiter,int,reporter,index,if,logical,scope,strings,length,0,reporter,index,0,reporter,index,logical,scope,strings,length,return,create,logical,scope,filter,delimiter,else,if,logical,scope,strings,reporter,index,null,logical,scope,strings,reporter,index,create,logical,scope,filter,delimiter,return,logical,scope,strings,reporter,index
AbstractMetricGroup -> String getLogicalScope(CharacterFilter filter, char delimiter, int reporterIndex);1546535628;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@param delimiter delimiter to use for concatenating scope components_@param reporterIndex index of the reporter_@return logical scope;String getLogicalScope(CharacterFilter filter, char delimiter, int reporterIndex) {_		if (logicalScopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= logicalScopeStrings.length)) {_			return createLogicalScope(filter, delimiter)__		} else {_			if (logicalScopeStrings[reporterIndex] == null) {_				logicalScopeStrings[reporterIndex] = createLogicalScope(filter, delimiter)__			}_			return logicalScopeStrings[reporterIndex]__		}_	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,param,delimiter,delimiter,to,use,for,concatenating,scope,components,param,reporter,index,index,of,the,reporter,return,logical,scope;string,get,logical,scope,character,filter,filter,char,delimiter,int,reporter,index,if,logical,scope,strings,length,0,reporter,index,0,reporter,index,logical,scope,strings,length,return,create,logical,scope,filter,delimiter,else,if,logical,scope,strings,reporter,index,null,logical,scope,strings,reporter,index,create,logical,scope,filter,delimiter,return,logical,scope,strings,reporter,index
AbstractMetricGroup -> String getLogicalScope(CharacterFilter filter, char delimiter, int reporterIndex);1547021528;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@param delimiter delimiter to use for concatenating scope components_@param reporterIndex index of the reporter_@return logical scope;String getLogicalScope(CharacterFilter filter, char delimiter, int reporterIndex) {_		if (logicalScopeStrings.length == 0 || (reporterIndex < 0 || reporterIndex >= logicalScopeStrings.length)) {_			return createLogicalScope(filter, delimiter)__		} else {_			if (logicalScopeStrings[reporterIndex] == null) {_				logicalScopeStrings[reporterIndex] = createLogicalScope(filter, delimiter)__			}_			return logicalScopeStrings[reporterIndex]__		}_	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,param,delimiter,delimiter,to,use,for,concatenating,scope,components,param,reporter,index,index,of,the,reporter,return,logical,scope;string,get,logical,scope,character,filter,filter,char,delimiter,int,reporter,index,if,logical,scope,strings,length,0,reporter,index,0,reporter,index,logical,scope,strings,length,return,create,logical,scope,filter,delimiter,else,if,logical,scope,strings,reporter,index,null,logical,scope,strings,reporter,index,create,logical,scope,filter,delimiter,return,logical,scope,strings,reporter,index
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1469183596;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. (" + scopeString + ')')__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported. (" + scopeString + ')')__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,scope,string,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,scope,string
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1469611527;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. (" + scopeString + ')')__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported. (" + scopeString + ')')__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,scope,string,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,scope,string
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1469615350;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. (" + scopeString + ')')__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported. (" + scopeString + ')')__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,scope,string,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,scope,string
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1470398077;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. (" + scopeString + ')')__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported. (" + scopeString + ')')__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,scope,string,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,scope,string
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1471244577;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. (" + scopeString + ')')__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported. (" + scopeString + ')')__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,scope,string,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,scope,string
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1471599974;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. (" + scopeString + ')')__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported. (" + scopeString + ')')__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,scope,string,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,scope,string
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1474366180;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. (" + scopeString + ')')__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported. (" + scopeString + ')')__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,scope,string,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,scope,string
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1476710581;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1484221316;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)__					_					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1496241592;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1497274585;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1508426573;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1511879707;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1515649444;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1525680266;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1542283507;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1546535628;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> protected void addMetric(String name, Metric metric);1547021528;Adds the given metric to the group and registers it at the registry, if the group_is not yet closed, and if no metric with the same name has been registered before.__@param name the name to register the metric under_@param metric the metric to register;protected void addMetric(String name, Metric metric) {_		if (metric == null) {_			LOG.warn("Ignoring attempted registration of a metric due to being null for name {}.", name)__			return__		}_		_		synchronized (this) {_			if (!closed) {_				_				_				Metric prior = metrics.put(name, metric)___				_				if (prior == null) {_					__					if (groups.containsKey(name)) {_						_						_						LOG.warn("Name collision: Adding a metric with the same name as a metric subgroup: '" +_								name + "'. Metric might not get properly reported. " + Arrays.toString(scopeComponents))__					}__					registry.register(metric, name, this)__				}_				else {_					_					metrics.put(name, prior)___					_					_					LOG.warn("Name collision: Group already contains a Metric with the name '" +_							name + "'. Metric will not be reported." + Arrays.toString(scopeComponents))__				}_			}_		}_	};adds,the,given,metric,to,the,group,and,registers,it,at,the,registry,if,the,group,is,not,yet,closed,and,if,no,metric,with,the,same,name,has,been,registered,before,param,name,the,name,to,register,the,metric,under,param,metric,the,metric,to,register;protected,void,add,metric,string,name,metric,metric,if,metric,null,log,warn,ignoring,attempted,registration,of,a,metric,due,to,being,null,for,name,name,return,synchronized,this,if,closed,metric,prior,metrics,put,name,metric,if,prior,null,if,groups,contains,key,name,log,warn,name,collision,adding,a,metric,with,the,same,name,as,a,metric,subgroup,name,metric,might,not,get,properly,reported,arrays,to,string,scope,components,registry,register,metric,name,this,else,metrics,put,name,prior,log,warn,name,collision,group,already,contains,a,metric,with,the,name,name,metric,will,not,be,reported,arrays,to,string,scope,components
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1469183596;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		if (scopeString == null) {_			if (filter != null) {_				scopeString = ScopeFormat.concat(filter, registry.getDelimiter(), scopeComponents)__			} else {_				scopeString = ScopeFormat.concat(registry.getDelimiter(), scopeComponents)__			}_		}__		if (filter != null) {_			return scopeString + registry.getDelimiter() + filter.filterCharacters(metricName)__		} else {_			return scopeString + registry.getDelimiter() + metricName__		}_	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,if,scope,string,null,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,scope,components,else,scope,string,scope,format,concat,registry,get,delimiter,scope,components,if,filter,null,return,scope,string,registry,get,delimiter,filter,filter,characters,metric,name,else,return,scope,string,registry,get,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1469611527;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		if (scopeString == null) {_			if (filter != null) {_				scopeString = ScopeFormat.concat(filter, registry.getDelimiter(), scopeComponents)__			} else {_				scopeString = ScopeFormat.concat(registry.getDelimiter(), scopeComponents)__			}_		}__		if (filter != null) {_			return scopeString + registry.getDelimiter() + filter.filterCharacters(metricName)__		} else {_			return scopeString + registry.getDelimiter() + metricName__		}_	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,if,scope,string,null,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,scope,components,else,scope,string,scope,format,concat,registry,get,delimiter,scope,components,if,filter,null,return,scope,string,registry,get,delimiter,filter,filter,characters,metric,name,else,return,scope,string,registry,get,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1469615350;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		if (scopeString == null) {_			if (filter != null) {_				scopeString = ScopeFormat.concat(filter, registry.getDelimiter(), scopeComponents)__			} else {_				scopeString = ScopeFormat.concat(registry.getDelimiter(), scopeComponents)__			}_		}__		if (filter != null) {_			return scopeString + registry.getDelimiter() + filter.filterCharacters(metricName)__		} else {_			return scopeString + registry.getDelimiter() + metricName__		}_	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,if,scope,string,null,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,scope,components,else,scope,string,scope,format,concat,registry,get,delimiter,scope,components,if,filter,null,return,scope,string,registry,get,delimiter,filter,filter,characters,metric,name,else,return,scope,string,registry,get,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1470398077;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		if (scopeString == null) {_			if (filter != null) {_				scopeString = ScopeFormat.concat(filter, registry.getDelimiter(), scopeComponents)__			} else {_				scopeString = ScopeFormat.concat(registry.getDelimiter(), scopeComponents)__			}_		}__		if (filter != null) {_			return scopeString + registry.getDelimiter() + filter.filterCharacters(metricName)__		} else {_			return scopeString + registry.getDelimiter() + metricName__		}_	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,if,scope,string,null,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,scope,components,else,scope,string,scope,format,concat,registry,get,delimiter,scope,components,if,filter,null,return,scope,string,registry,get,delimiter,filter,filter,characters,metric,name,else,return,scope,string,registry,get,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1471244577;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		if (scopeString == null) {_			if (filter != null) {_				scopeString = ScopeFormat.concat(filter, registry.getDelimiter(), scopeComponents)__			} else {_				scopeString = ScopeFormat.concat(registry.getDelimiter(), scopeComponents)__			}_		}__		if (filter != null) {_			return scopeString + registry.getDelimiter() + filter.filterCharacters(metricName)__		} else {_			return scopeString + registry.getDelimiter() + metricName__		}_	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,if,scope,string,null,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,scope,components,else,scope,string,scope,format,concat,registry,get,delimiter,scope,components,if,filter,null,return,scope,string,registry,get,delimiter,filter,filter,characters,metric,name,else,return,scope,string,registry,get,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1471599974;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		if (scopeString == null) {_			if (filter != null) {_				scopeString = ScopeFormat.concat(filter, registry.getDelimiter(), scopeComponents)__			} else {_				scopeString = ScopeFormat.concat(registry.getDelimiter(), scopeComponents)__			}_		}__		if (filter != null) {_			return scopeString + registry.getDelimiter() + filter.filterCharacters(metricName)__		} else {_			return scopeString + registry.getDelimiter() + metricName__		}_	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,if,scope,string,null,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,scope,components,else,scope,string,scope,format,concat,registry,get,delimiter,scope,components,if,filter,null,return,scope,string,registry,get,delimiter,filter,filter,characters,metric,name,else,return,scope,string,registry,get,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1474366180;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		if (scopeString == null) {_			if (filter != null) {_				scopeString = ScopeFormat.concat(filter, registry.getDelimiter(), scopeComponents)__			} else {_				scopeString = ScopeFormat.concat(registry.getDelimiter(), scopeComponents)__			}_		}__		if (filter != null) {_			return scopeString + registry.getDelimiter() + filter.filterCharacters(metricName)__		} else {_			return scopeString + registry.getDelimiter() + metricName__		}_	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,if,scope,string,null,if,filter,null,scope,string,scope,format,concat,filter,registry,get,delimiter,scope,components,else,scope,string,scope,format,concat,registry,get,delimiter,scope,components,if,filter,null,return,scope,string,registry,get,delimiter,filter,filter,characters,metric,name,else,return,scope,string,registry,get,delimiter,metric,name
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1476710581;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1484221316;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1496241592;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1497274585;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1508426573;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1511879707;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1515649444;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1525680266;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1542283507;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1546535628;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getMetricIdentifier(String metricName, CharacterFilter filter);1547021528;Returns the fully qualified metric name, for example_{@code "host-7.taskmanager-2.window_word_count.my-mapper.metricName"}.__@param metricName metric name_@param filter character filter which is applied to the scope components if not null._@return fully qualified metric name;public String getMetricIdentifier(String metricName, CharacterFilter filter) {_		return getMetricIdentifier(metricName, filter, -1)__	};returns,the,fully,qualified,metric,name,for,example,code,host,7,taskmanager,2,my,mapper,metric,name,param,metric,name,metric,name,param,filter,character,filter,which,is,applied,to,the,scope,components,if,not,null,return,fully,qualified,metric,name;public,string,get,metric,identifier,string,metric,name,character,filter,filter,return,get,metric,identifier,metric,name,filter,1
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1469615350;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1476710581;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1484221316;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1496241592;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1497274585;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1508426573;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1511879707;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1515649444;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1525680266;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1542283507;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1546535628;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
AbstractMetricGroup -> public String getLogicalScope(CharacterFilter filter);1547021528;Returns the logical scope of this group, for example_{@code "taskmanager.job.task"}.__@param filter character filter which is applied to the scope components_@return logical scope;public String getLogicalScope(CharacterFilter filter) {_		return getLogicalScope(filter, registry.getDelimiter())__	};returns,the,logical,scope,of,this,group,for,example,code,taskmanager,job,task,param,filter,character,filter,which,is,applied,to,the,scope,components,return,logical,scope;public,string,get,logical,scope,character,filter,filter,return,get,logical,scope,filter,registry,get,delimiter
