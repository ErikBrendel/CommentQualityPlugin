# id;timestamp;commentText;codeText;commentWords;codeWords
KvStateServerTest -> @Test 	public void testSimpleRequest() throws Throwable;1509037054;Tests a simple successful query via a SocketChannel.;@Test_	public void testSimpleRequest() throws Throwable {_		KvStateServerImpl server = null__		Bootstrap bootstrap = null__		try {_			KvStateRegistry registry = new KvStateRegistry()__			KvStateRequestStats stats = new AtomicKvStateRequestStats()___			server = new KvStateServerImpl(_					InetAddress.getLocalHost(),_					Collections.singletonList(0).iterator(),_					1,_					1,_					registry,_					stats)__			server.start()___			InetSocketAddress serverAddress = server.getServerAddress()__			int numKeyGroups = 1__			AbstractStateBackend abstractBackend = new MemoryStateBackend()__			DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__			dummyEnv.setKvStateRegistry(registry)__			AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_					dummyEnv,_					new JobID(),_					"test_op",_					IntSerializer.INSTANCE,_					numKeyGroups,_					new KeyGroupRange(0, 0),_					registry.createTaskRegistry(new JobID(), new JobVertexID()))___			final KvStateServerHandlerTest.TestRegistryListener registryListener =_					new KvStateServerHandlerTest.TestRegistryListener()___			registry.registerListener(registryListener)___			ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__			desc.setQueryable("vanilla")___			ValueState<Integer> state = backend.getPartitionedState(_					VoidNamespace.INSTANCE,_					VoidNamespaceSerializer.INSTANCE,_					desc)___			_			int expectedValue = 712828289___			int key = 99812822__			backend.setCurrentKey(key)__			state.update(expectedValue)___			_			byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_					key,_					IntSerializer.INSTANCE,_					VoidNamespace.INSTANCE,_					VoidNamespaceSerializer.INSTANCE)___			_			final BlockingQueue<ByteBuf> responses = new LinkedBlockingQueue<>()__			bootstrap = createBootstrap(_					new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4),_					new ChannelInboundHandlerAdapter() {_						@Override_						public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {_							responses.add((ByteBuf) msg)__						}_					})___			Channel channel = bootstrap_					.connect(serverAddress.getAddress(), serverAddress.getPort())_					.sync().channel()___			long requestId = Integer.MAX_VALUE + 182828L___			assertTrue(registryListener.registrationName.equals("vanilla"))___			final KvStateInternalRequest request = new KvStateInternalRequest(_					registryListener.kvStateId,_					serializedKeyAndNamespace)___			ByteBuf serializeRequest = MessageSerializer.serializeRequest(_					channel.alloc(),_					requestId,_					request)___			channel.writeAndFlush(serializeRequest)___			ByteBuf buf = responses.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS)___			assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__			assertEquals(requestId, MessageSerializer.getRequestId(buf))__			KvStateResponse response = server.getSerializer().deserializeResponse(buf)___			int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__			assertEquals(expectedValue, actualValue)__		} finally {_			if (server != null) {_				server.shutdown()__			}__			if (bootstrap != null) {_				EventLoopGroup group = bootstrap.group()__				if (group != null) {_					group.shutdownGracefully()__				}_			}_		}_	};tests,a,simple,successful,query,via,a,socket,channel;test,public,void,test,simple,request,throws,throwable,kv,state,server,impl,server,null,bootstrap,bootstrap,null,try,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,registry,stats,server,start,inet,socket,address,server,address,server,get,server,address,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,new,job,id,new,job,vertex,id,final,kv,state,server,handler,test,test,registry,listener,registry,listener,new,kv,state,server,handler,test,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,final,blocking,queue,byte,buf,responses,new,linked,blocking,queue,bootstrap,create,bootstrap,new,length,field,based,frame,decoder,integer,0,4,0,4,new,channel,inbound,handler,adapter,override,public,void,channel,read,channel,handler,context,ctx,object,msg,throws,exception,responses,add,byte,buf,msg,channel,channel,bootstrap,connect,server,address,get,address,server,address,get,port,sync,channel,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,final,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,serialize,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,and,flush,serialize,request,byte,buf,buf,responses,poll,time,unit,milliseconds,assert,equals,message,type,message,serializer,deserialize,header,buf,assert,equals,request,id,message,serializer,get,request,id,buf,kv,state,response,response,server,get,serializer,deserialize,response,buf,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,finally,if,server,null,server,shutdown,if,bootstrap,null,event,loop,group,group,bootstrap,group,if,group,null,group,shutdown,gracefully
KvStateServerTest -> @Test 	public void testSimpleRequest() throws Throwable;1517914184;Tests a simple successful query via a SocketChannel.;@Test_	public void testSimpleRequest() throws Throwable {_		KvStateServerImpl server = null__		Bootstrap bootstrap = null__		try {_			KvStateRegistry registry = new KvStateRegistry()__			KvStateRequestStats stats = new AtomicKvStateRequestStats()___			server = new KvStateServerImpl(_					InetAddress.getLocalHost(),_					Collections.singletonList(0).iterator(),_					1,_					1,_					registry,_					stats)__			server.start()___			InetSocketAddress serverAddress = server.getServerAddress()__			int numKeyGroups = 1__			AbstractStateBackend abstractBackend = new MemoryStateBackend()__			DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__			dummyEnv.setKvStateRegistry(registry)__			final JobID jobId = new JobID()__			AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				jobId,_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(jobId, new JobVertexID()))___			final KvStateServerHandlerTest.TestRegistryListener registryListener =_					new KvStateServerHandlerTest.TestRegistryListener()___			registry.registerListener(jobId, registryListener)___			ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__			desc.setQueryable("vanilla")___			ValueState<Integer> state = backend.getPartitionedState(_					VoidNamespace.INSTANCE,_					VoidNamespaceSerializer.INSTANCE,_					desc)___			_			int expectedValue = 712828289___			int key = 99812822__			backend.setCurrentKey(key)__			state.update(expectedValue)___			_			byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_					key,_					IntSerializer.INSTANCE,_					VoidNamespace.INSTANCE,_					VoidNamespaceSerializer.INSTANCE)___			_			final BlockingQueue<ByteBuf> responses = new LinkedBlockingQueue<>()__			bootstrap = createBootstrap(_					new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4),_					new ChannelInboundHandlerAdapter() {_						@Override_						public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {_							responses.add((ByteBuf) msg)__						}_					})___			Channel channel = bootstrap_					.connect(serverAddress.getAddress(), serverAddress.getPort())_					.sync().channel()___			long requestId = Integer.MAX_VALUE + 182828L___			assertTrue(registryListener.registrationName.equals("vanilla"))___			final KvStateInternalRequest request = new KvStateInternalRequest(_					registryListener.kvStateId,_					serializedKeyAndNamespace)___			ByteBuf serializeRequest = MessageSerializer.serializeRequest(_					channel.alloc(),_					requestId,_					request)___			channel.writeAndFlush(serializeRequest)___			ByteBuf buf = responses.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS)___			assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__			assertEquals(requestId, MessageSerializer.getRequestId(buf))__			KvStateResponse response = server.getSerializer().deserializeResponse(buf)___			int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__			assertEquals(expectedValue, actualValue)__		} finally {_			if (server != null) {_				server.shutdown()__			}__			if (bootstrap != null) {_				EventLoopGroup group = bootstrap.group()__				if (group != null) {_					group.shutdownGracefully()__				}_			}_		}_	};tests,a,simple,successful,query,via,a,socket,channel;test,public,void,test,simple,request,throws,throwable,kv,state,server,impl,server,null,bootstrap,bootstrap,null,try,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,registry,stats,server,start,inet,socket,address,server,address,server,get,server,address,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,final,job,id,job,id,new,job,id,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,job,id,new,job,vertex,id,final,kv,state,server,handler,test,test,registry,listener,registry,listener,new,kv,state,server,handler,test,test,registry,listener,registry,register,listener,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,final,blocking,queue,byte,buf,responses,new,linked,blocking,queue,bootstrap,create,bootstrap,new,length,field,based,frame,decoder,integer,0,4,0,4,new,channel,inbound,handler,adapter,override,public,void,channel,read,channel,handler,context,ctx,object,msg,throws,exception,responses,add,byte,buf,msg,channel,channel,bootstrap,connect,server,address,get,address,server,address,get,port,sync,channel,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,final,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,serialize,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,and,flush,serialize,request,byte,buf,buf,responses,poll,time,unit,milliseconds,assert,equals,message,type,message,serializer,deserialize,header,buf,assert,equals,request,id,message,serializer,get,request,id,buf,kv,state,response,response,server,get,serializer,deserialize,response,buf,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,finally,if,server,null,server,shutdown,if,bootstrap,null,event,loop,group,group,bootstrap,group,if,group,null,group,shutdown,gracefully
KvStateServerTest -> @Test 	public void testSimpleRequest() throws Throwable;1519897473;Tests a simple successful query via a SocketChannel.;@Test_	public void testSimpleRequest() throws Throwable {_		KvStateServerImpl server = null__		Bootstrap bootstrap = null__		try {_			KvStateRegistry registry = new KvStateRegistry()__			KvStateRequestStats stats = new AtomicKvStateRequestStats()___			server = new KvStateServerImpl(_					InetAddress.getLocalHost(),_					Collections.singletonList(0).iterator(),_					1,_					1,_					registry,_					stats)__			server.start()___			InetSocketAddress serverAddress = server.getServerAddress()__			int numKeyGroups = 1__			AbstractStateBackend abstractBackend = new MemoryStateBackend()__			DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__			dummyEnv.setKvStateRegistry(registry)__			final JobID jobId = new JobID()__			AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				jobId,_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(jobId, new JobVertexID()))___			final KvStateServerHandlerTest.TestRegistryListener registryListener =_					new KvStateServerHandlerTest.TestRegistryListener()___			registry.registerListener(jobId, registryListener)___			ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__			desc.setQueryable("vanilla")___			ValueState<Integer> state = backend.getPartitionedState(_					VoidNamespace.INSTANCE,_					VoidNamespaceSerializer.INSTANCE,_					desc)___			_			int expectedValue = 712828289___			int key = 99812822__			backend.setCurrentKey(key)__			state.update(expectedValue)___			_			byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_					key,_					IntSerializer.INSTANCE,_					VoidNamespace.INSTANCE,_					VoidNamespaceSerializer.INSTANCE)___			_			final BlockingQueue<ByteBuf> responses = new LinkedBlockingQueue<>()__			bootstrap = createBootstrap(_					new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4),_					new ChannelInboundHandlerAdapter() {_						@Override_						public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {_							responses.add((ByteBuf) msg)__						}_					})___			Channel channel = bootstrap_					.connect(serverAddress.getAddress(), serverAddress.getPort())_					.sync().channel()___			long requestId = Integer.MAX_VALUE + 182828L___			assertTrue(registryListener.registrationName.equals("vanilla"))___			final KvStateInternalRequest request = new KvStateInternalRequest(_					registryListener.kvStateId,_					serializedKeyAndNamespace)___			ByteBuf serializeRequest = MessageSerializer.serializeRequest(_					channel.alloc(),_					requestId,_					request)___			channel.writeAndFlush(serializeRequest)___			ByteBuf buf = responses.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS)___			assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__			assertEquals(requestId, MessageSerializer.getRequestId(buf))__			KvStateResponse response = server.getSerializer().deserializeResponse(buf)___			int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__			assertEquals(expectedValue, actualValue)__		} finally {_			if (server != null) {_				server.shutdown()__			}__			if (bootstrap != null) {_				EventLoopGroup group = bootstrap.group()__				if (group != null) {_					_					group.shutdownGracefully(0, 10, TimeUnit.SECONDS)__				}_			}_		}_	};tests,a,simple,successful,query,via,a,socket,channel;test,public,void,test,simple,request,throws,throwable,kv,state,server,impl,server,null,bootstrap,bootstrap,null,try,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,registry,stats,server,start,inet,socket,address,server,address,server,get,server,address,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,final,job,id,job,id,new,job,id,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,job,id,new,job,vertex,id,final,kv,state,server,handler,test,test,registry,listener,registry,listener,new,kv,state,server,handler,test,test,registry,listener,registry,register,listener,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,final,blocking,queue,byte,buf,responses,new,linked,blocking,queue,bootstrap,create,bootstrap,new,length,field,based,frame,decoder,integer,0,4,0,4,new,channel,inbound,handler,adapter,override,public,void,channel,read,channel,handler,context,ctx,object,msg,throws,exception,responses,add,byte,buf,msg,channel,channel,bootstrap,connect,server,address,get,address,server,address,get,port,sync,channel,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,final,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,serialize,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,and,flush,serialize,request,byte,buf,buf,responses,poll,time,unit,milliseconds,assert,equals,message,type,message,serializer,deserialize,header,buf,assert,equals,request,id,message,serializer,get,request,id,buf,kv,state,response,response,server,get,serializer,deserialize,response,buf,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,finally,if,server,null,server,shutdown,if,bootstrap,null,event,loop,group,group,bootstrap,group,if,group,null,group,shutdown,gracefully,0,10,time,unit,seconds
KvStateServerTest -> private Bootstrap createBootstrap(final ChannelHandler... handlers);1509037054;Creates a client bootstrap.;private Bootstrap createBootstrap(final ChannelHandler... handlers) {_		return new Bootstrap().group(NIO_GROUP).channel(NioSocketChannel.class)_				.handler(new ChannelInitializer<SocketChannel>() {_					@Override_					protected void initChannel(SocketChannel ch) throws Exception {_						ch.pipeline().addLast(handlers)__					}_				})__	};creates,a,client,bootstrap;private,bootstrap,create,bootstrap,final,channel,handler,handlers,return,new,bootstrap,group,channel,nio,socket,channel,class,handler,new,channel,initializer,socket,channel,override,protected,void,init,channel,socket,channel,ch,throws,exception,ch,pipeline,add,last,handlers
KvStateServerTest -> private Bootstrap createBootstrap(final ChannelHandler... handlers);1517914184;Creates a client bootstrap.;private Bootstrap createBootstrap(final ChannelHandler... handlers) {_		return new Bootstrap().group(NIO_GROUP).channel(NioSocketChannel.class)_				.handler(new ChannelInitializer<SocketChannel>() {_					@Override_					protected void initChannel(SocketChannel ch) throws Exception {_						ch.pipeline().addLast(handlers)__					}_				})__	};creates,a,client,bootstrap;private,bootstrap,create,bootstrap,final,channel,handler,handlers,return,new,bootstrap,group,channel,nio,socket,channel,class,handler,new,channel,initializer,socket,channel,override,protected,void,init,channel,socket,channel,ch,throws,exception,ch,pipeline,add,last,handlers
KvStateServerTest -> private Bootstrap createBootstrap(final ChannelHandler... handlers);1519897473;Creates a client bootstrap.;private Bootstrap createBootstrap(final ChannelHandler... handlers) {_		return new Bootstrap().group(NIO_GROUP).channel(NioSocketChannel.class)_				.handler(new ChannelInitializer<SocketChannel>() {_					@Override_					protected void initChannel(SocketChannel ch) throws Exception {_						ch.pipeline().addLast(handlers)__					}_				})__	};creates,a,client,bootstrap;private,bootstrap,create,bootstrap,final,channel,handler,handlers,return,new,bootstrap,group,channel,nio,socket,channel,class,handler,new,channel,initializer,socket,channel,override,protected,void,init,channel,socket,channel,ch,throws,exception,ch,pipeline,add,last,handlers
