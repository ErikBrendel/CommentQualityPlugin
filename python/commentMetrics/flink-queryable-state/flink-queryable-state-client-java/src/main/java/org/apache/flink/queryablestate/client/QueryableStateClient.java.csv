# id;timestamp;commentText;codeText;commentWords;codeWords
QueryableStateClient -> public ExecutionConfig getExecutionConfig();1509037054;Gets the {@link ExecutionConfig}.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,link,execution,config;public,execution,config,get,execution,config,return,execution,config
QueryableStateClient -> public ExecutionConfig getExecutionConfig();1510911968;Gets the {@link ExecutionConfig}.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,link,execution,config;public,execution,config,get,execution,config,return,execution,config
QueryableStateClient -> public ExecutionConfig getExecutionConfig();1510928926;Gets the {@link ExecutionConfig}.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,link,execution,config;public,execution,config,get,execution,config,return,execution,config
QueryableStateClient -> public ExecutionConfig getExecutionConfig();1512567196;Gets the {@link ExecutionConfig}.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,link,execution,config;public,execution,config,get,execution,config,return,execution,config
QueryableStateClient -> public ExecutionConfig getExecutionConfig();1518635591;Gets the {@link ExecutionConfig}.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,link,execution,config;public,execution,config,get,execution,config,return,execution,config
QueryableStateClient -> public ExecutionConfig getExecutionConfig();1529325710;Gets the {@link ExecutionConfig}.;public ExecutionConfig getExecutionConfig() {_		return executionConfig__	};gets,the,link,execution,config;public,execution,config,get,execution,config,return,execution,config
QueryableStateClient -> public void shutdown();1509037054;Shuts down the client.;public void shutdown() {_		client.shutdown()__	};shuts,down,the,client;public,void,shutdown,client,shutdown
QueryableStateClient -> public void shutdown();1510911968;Shuts down the client.;public void shutdown() {_		client.shutdown()__	};shuts,down,the,client;public,void,shutdown,client,shutdown
QueryableStateClient -> public void shutdown();1510928926;Shuts down the client.;public void shutdown() {_		client.shutdown()__	};shuts,down,the,client;public,void,shutdown,client,shutdown
QueryableStateClient -> public CompletableFuture<?> shutdownAndHandle();1512567196;Shuts down the client and returns a {@link CompletableFuture} that_will be completed when the shutdown process is completed.__<p>If an exception is thrown for any reason, then the returned future_will be completed exceptionally with that exception.__@return A {@link CompletableFuture} for further handling of the_shutdown result.;public CompletableFuture<?> shutdownAndHandle() {_		return client.shutdown()__	};shuts,down,the,client,and,returns,a,link,completable,future,that,will,be,completed,when,the,shutdown,process,is,completed,p,if,an,exception,is,thrown,for,any,reason,then,the,returned,future,will,be,completed,exceptionally,with,that,exception,return,a,link,completable,future,for,further,handling,of,the,shutdown,result;public,completable,future,shutdown,and,handle,return,client,shutdown
QueryableStateClient -> public CompletableFuture<?> shutdownAndHandle();1518635591;Shuts down the client and returns a {@link CompletableFuture} that_will be completed when the shutdown process is completed.__<p>If an exception is thrown for any reason, then the returned future_will be completed exceptionally with that exception.__@return A {@link CompletableFuture} for further handling of the_shutdown result.;public CompletableFuture<?> shutdownAndHandle() {_		return client.shutdown()__	};shuts,down,the,client,and,returns,a,link,completable,future,that,will,be,completed,when,the,shutdown,process,is,completed,p,if,an,exception,is,thrown,for,any,reason,then,the,returned,future,will,be,completed,exceptionally,with,that,exception,return,a,link,completable,future,for,further,handling,of,the,shutdown,result;public,completable,future,shutdown,and,handle,return,client,shutdown
QueryableStateClient -> public CompletableFuture<?> shutdownAndHandle();1529325710;Shuts down the client and returns a {@link CompletableFuture} that_will be completed when the shutdown process is completed.__<p>If an exception is thrown for any reason, then the returned future_will be completed exceptionally with that exception.__@return A {@link CompletableFuture} for further handling of the_shutdown result.;public CompletableFuture<?> shutdownAndHandle() {_		return client.shutdown()__	};shuts,down,the,client,and,returns,a,link,completable,future,that,will,be,completed,when,the,shutdown,process,is,completed,p,if,an,exception,is,thrown,for,any,reason,then,the,returned,future,will,be,completed,exceptionally,with,that,exception,return,a,link,completable,future,for,further,handling,of,the,shutdown,result;public,completable,future,shutdown,and,handle,return,client,shutdown
QueryableStateClient -> public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException;1509037054;Create the Queryable State Client._@param remoteHostname the hostname of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException {_		this(InetAddress.getByName(Preconditions.checkNotNull(remoteHostname)), remotePort)__	};create,the,queryable,state,client,param,remote,hostname,the,hostname,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,string,remote,hostname,final,int,remote,port,throws,unknown,host,exception,this,inet,address,get,by,name,preconditions,check,not,null,remote,hostname,remote,port
QueryableStateClient -> public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException;1510911968;Create the Queryable State Client._@param remoteHostname the hostname of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException {_		this(InetAddress.getByName(Preconditions.checkNotNull(remoteHostname)), remotePort)__	};create,the,queryable,state,client,param,remote,hostname,the,hostname,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,string,remote,hostname,final,int,remote,port,throws,unknown,host,exception,this,inet,address,get,by,name,preconditions,check,not,null,remote,hostname,remote,port
QueryableStateClient -> public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException;1510928926;Create the Queryable State Client._@param remoteHostname the hostname of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException {_		this(InetAddress.getByName(Preconditions.checkNotNull(remoteHostname)), remotePort)__	};create,the,queryable,state,client,param,remote,hostname,the,hostname,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,string,remote,hostname,final,int,remote,port,throws,unknown,host,exception,this,inet,address,get,by,name,preconditions,check,not,null,remote,hostname,remote,port
QueryableStateClient -> public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException;1512567196;Create the Queryable State Client._@param remoteHostname the hostname of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException {_		this(InetAddress.getByName(Preconditions.checkNotNull(remoteHostname)), remotePort)__	};create,the,queryable,state,client,param,remote,hostname,the,hostname,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,string,remote,hostname,final,int,remote,port,throws,unknown,host,exception,this,inet,address,get,by,name,preconditions,check,not,null,remote,hostname,remote,port
QueryableStateClient -> public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException;1518635591;Create the Queryable State Client._@param remoteHostname the hostname of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException {_		this(InetAddress.getByName(Preconditions.checkNotNull(remoteHostname)), remotePort)__	};create,the,queryable,state,client,param,remote,hostname,the,hostname,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,string,remote,hostname,final,int,remote,port,throws,unknown,host,exception,this,inet,address,get,by,name,preconditions,check,not,null,remote,hostname,remote,port
QueryableStateClient -> public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException;1529325710;Create the Queryable State Client._@param remoteHostname the hostname of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final String remoteHostname, final int remotePort) throws UnknownHostException {_		this(InetAddress.getByName(Preconditions.checkNotNull(remoteHostname)), remotePort)__	};create,the,queryable,state,client,param,remote,hostname,the,hostname,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,string,remote,hostname,final,int,remote,port,throws,unknown,host,exception,this,inet,address,get,by,name,preconditions,check,not,null,remote,hostname,remote,port
QueryableStateClient -> public ExecutionConfig setExecutionConfig(ExecutionConfig config);1509037054;Replaces the existing {@link ExecutionConfig} (possibly {@code null}), with the provided one._@param config The new {@code configuration}._@return The old configuration, or {@code null} if none was specified.;public ExecutionConfig setExecutionConfig(ExecutionConfig config) {_		ExecutionConfig prev = executionConfig__		this.executionConfig = config__		return prev__	};replaces,the,existing,link,execution,config,possibly,code,null,with,the,provided,one,param,config,the,new,code,configuration,return,the,old,configuration,or,code,null,if,none,was,specified;public,execution,config,set,execution,config,execution,config,config,execution,config,prev,execution,config,this,execution,config,config,return,prev
QueryableStateClient -> public ExecutionConfig setExecutionConfig(ExecutionConfig config);1510911968;Replaces the existing {@link ExecutionConfig} (possibly {@code null}), with the provided one._@param config The new {@code configuration}._@return The old configuration, or {@code null} if none was specified.;public ExecutionConfig setExecutionConfig(ExecutionConfig config) {_		ExecutionConfig prev = executionConfig__		this.executionConfig = config__		return prev__	};replaces,the,existing,link,execution,config,possibly,code,null,with,the,provided,one,param,config,the,new,code,configuration,return,the,old,configuration,or,code,null,if,none,was,specified;public,execution,config,set,execution,config,execution,config,config,execution,config,prev,execution,config,this,execution,config,config,return,prev
QueryableStateClient -> public ExecutionConfig setExecutionConfig(ExecutionConfig config);1510928926;Replaces the existing {@link ExecutionConfig} (possibly {@code null}), with the provided one._@param config The new {@code configuration}._@return The old configuration, or {@code null} if none was specified.;public ExecutionConfig setExecutionConfig(ExecutionConfig config) {_		ExecutionConfig prev = executionConfig__		this.executionConfig = config__		return prev__	};replaces,the,existing,link,execution,config,possibly,code,null,with,the,provided,one,param,config,the,new,code,configuration,return,the,old,configuration,or,code,null,if,none,was,specified;public,execution,config,set,execution,config,execution,config,config,execution,config,prev,execution,config,this,execution,config,config,return,prev
QueryableStateClient -> public ExecutionConfig setExecutionConfig(ExecutionConfig config);1512567196;Replaces the existing {@link ExecutionConfig} (possibly {@code null}), with the provided one._@param config The new {@code configuration}._@return The old configuration, or {@code null} if none was specified.;public ExecutionConfig setExecutionConfig(ExecutionConfig config) {_		ExecutionConfig prev = executionConfig__		this.executionConfig = config__		return prev__	};replaces,the,existing,link,execution,config,possibly,code,null,with,the,provided,one,param,config,the,new,code,configuration,return,the,old,configuration,or,code,null,if,none,was,specified;public,execution,config,set,execution,config,execution,config,config,execution,config,prev,execution,config,this,execution,config,config,return,prev
QueryableStateClient -> public ExecutionConfig setExecutionConfig(ExecutionConfig config);1518635591;Replaces the existing {@link ExecutionConfig} (possibly {@code null}), with the provided one._@param config The new {@code configuration}._@return The old configuration, or {@code null} if none was specified.;public ExecutionConfig setExecutionConfig(ExecutionConfig config) {_		ExecutionConfig prev = executionConfig__		this.executionConfig = config__		return prev__	};replaces,the,existing,link,execution,config,possibly,code,null,with,the,provided,one,param,config,the,new,code,configuration,return,the,old,configuration,or,code,null,if,none,was,specified;public,execution,config,set,execution,config,execution,config,config,execution,config,prev,execution,config,this,execution,config,config,return,prev
QueryableStateClient -> public ExecutionConfig setExecutionConfig(ExecutionConfig config);1529325710;Replaces the existing {@link ExecutionConfig} (possibly {@code null}), with the provided one._@param config The new {@code configuration}._@return The old configuration, or {@code null} if none was specified.;public ExecutionConfig setExecutionConfig(ExecutionConfig config) {_		ExecutionConfig prev = executionConfig__		this.executionConfig = config__		return prev__	};replaces,the,existing,link,execution,config,possibly,code,null,with,the,provided,one,param,config,the,new,code,configuration,return,the,old,configuration,or,code,null,if,none,was,specified;public,execution,config,set,execution,config,execution,config,config,execution,config,prev,execution,config,this,execution,config,config,return,prev
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeInformation<K> keyTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1509037054;Returns a future holding the request result.	 *_@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeInfo				The {@link TypeInformation} of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeInformation<K> keyTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		return getKvState(jobId, queryableStateName, key, VoidNamespace.INSTANCE,_				keyTypeInfo, VoidNamespaceTypeInfo.INSTANCE, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,info,the,link,type,information,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,information,k,key,type,info,final,state,descriptor,s,v,state,descriptor,return,get,kv,state,job,id,queryable,state,name,key,void,namespace,instance,key,type,info,void,namespace,type,info,instance,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeInformation<K> keyTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1510911968;Returns a future holding the request result.	 *_@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeInfo				The {@link TypeInformation} of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeInformation<K> keyTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		return getKvState(jobId, queryableStateName, key, VoidNamespace.INSTANCE,_				keyTypeInfo, VoidNamespaceTypeInfo.INSTANCE, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,info,the,link,type,information,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,information,k,key,type,info,final,state,descriptor,s,v,state,descriptor,return,get,kv,state,job,id,queryable,state,name,key,void,namespace,instance,key,type,info,void,namespace,type,info,instance,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeInformation<K> keyTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1510928926;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeInfo				The {@link TypeInformation} of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeInformation<K> keyTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		return getKvState(jobId, queryableStateName, key, VoidNamespace.INSTANCE,_				keyTypeInfo, VoidNamespaceTypeInfo.INSTANCE, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,info,the,link,type,information,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,information,k,key,type,info,final,state,descriptor,s,v,state,descriptor,return,get,kv,state,job,id,queryable,state,name,key,void,namespace,instance,key,type,info,void,namespace,type,info,instance,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeInformation<K> keyTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1512567196;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeInfo				The {@link TypeInformation} of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeInformation<K> keyTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		return getKvState(jobId, queryableStateName, key, VoidNamespace.INSTANCE,_				keyTypeInfo, VoidNamespaceTypeInfo.INSTANCE, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,info,the,link,type,information,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,information,k,key,type,info,final,state,descriptor,s,v,state,descriptor,return,get,kv,state,job,id,queryable,state,name,key,void,namespace,instance,key,type,info,void,namespace,type,info,instance,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeInformation<K> keyTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1518635591;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeInfo				The {@link TypeInformation} of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeInformation<K> keyTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		return getKvState(jobId, queryableStateName, key, VoidNamespace.INSTANCE,_				keyTypeInfo, VoidNamespaceTypeInfo.INSTANCE, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,info,the,link,type,information,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,information,k,key,type,info,final,state,descriptor,s,v,state,descriptor,return,get,kv,state,job,id,queryable,state,name,key,void,namespace,instance,key,type,info,void,namespace,type,info,instance,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeInformation<K> keyTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1529325710;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeInfo				The {@link TypeInformation} of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeInformation<K> keyTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		return getKvState(jobId, queryableStateName, key, VoidNamespace.INSTANCE,_				keyTypeInfo, VoidNamespaceTypeInfo.INSTANCE, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,info,the,link,type,information,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,information,k,key,type,info,final,state,descriptor,s,v,state,descriptor,return,get,kv,state,job,id,queryable,state,name,key,void,namespace,instance,key,type,info,void,namespace,type,info,instance,state,descriptor
QueryableStateClient -> public QueryableStateClient(final InetAddress remoteAddress, final int remotePort);1509037054;Create the Queryable State Client._@param remoteAddress the {@link InetAddress address} of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final InetAddress remoteAddress, final int remotePort) {_		Preconditions.checkArgument(remotePort >= 0 && remotePort <= 65536,_				"Remote Port " + remotePort + " is out of valid port range (0-65536).")___		this.remoteAddress = new InetSocketAddress(remoteAddress, remotePort)___		final MessageSerializer<KvStateRequest, KvStateResponse> messageSerializer =_				new MessageSerializer<>(_						new KvStateRequest.KvStateRequestDeserializer(),_						new KvStateResponse.KvStateResponseDeserializer())___		this.client = new Client<>(_				"Queryable State Client",_				1,_				messageSerializer,_				new DisabledKvStateRequestStats())__	};create,the,queryable,state,client,param,remote,address,the,link,inet,address,address,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,inet,address,remote,address,final,int,remote,port,preconditions,check,argument,remote,port,0,remote,port,65536,remote,port,remote,port,is,out,of,valid,port,range,0,65536,this,remote,address,new,inet,socket,address,remote,address,remote,port,final,message,serializer,kv,state,request,kv,state,response,message,serializer,new,message,serializer,new,kv,state,request,kv,state,request,deserializer,new,kv,state,response,kv,state,response,deserializer,this,client,new,client,queryable,state,client,1,message,serializer,new,disabled,kv,state,request,stats
QueryableStateClient -> public QueryableStateClient(final InetAddress remoteAddress, final int remotePort);1510911968;Create the Queryable State Client._@param remoteAddress the {@link InetAddress address} of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final InetAddress remoteAddress, final int remotePort) {_		Preconditions.checkArgument(remotePort >= 0 && remotePort <= 65536,_				"Remote Port " + remotePort + " is out of valid port range (0-65536).")___		this.remoteAddress = new InetSocketAddress(remoteAddress, remotePort)___		final MessageSerializer<KvStateRequest, KvStateResponse> messageSerializer =_				new MessageSerializer<>(_						new KvStateRequest.KvStateRequestDeserializer(),_						new KvStateResponse.KvStateResponseDeserializer())___		this.client = new Client<>(_				"Queryable State Client",_				1,_				messageSerializer,_				new DisabledKvStateRequestStats())__	};create,the,queryable,state,client,param,remote,address,the,link,inet,address,address,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,inet,address,remote,address,final,int,remote,port,preconditions,check,argument,remote,port,0,remote,port,65536,remote,port,remote,port,is,out,of,valid,port,range,0,65536,this,remote,address,new,inet,socket,address,remote,address,remote,port,final,message,serializer,kv,state,request,kv,state,response,message,serializer,new,message,serializer,new,kv,state,request,kv,state,request,deserializer,new,kv,state,response,kv,state,response,deserializer,this,client,new,client,queryable,state,client,1,message,serializer,new,disabled,kv,state,request,stats
QueryableStateClient -> public QueryableStateClient(final InetAddress remoteAddress, final int remotePort);1510928926;Create the Queryable State Client._@param remoteAddress the {@link InetAddress address} of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final InetAddress remoteAddress, final int remotePort) {_		Preconditions.checkArgument(remotePort >= 0 && remotePort <= 65536,_				"Remote Port " + remotePort + " is out of valid port range (0-65536).")___		this.remoteAddress = new InetSocketAddress(remoteAddress, remotePort)___		final MessageSerializer<KvStateRequest, KvStateResponse> messageSerializer =_				new MessageSerializer<>(_						new KvStateRequest.KvStateRequestDeserializer(),_						new KvStateResponse.KvStateResponseDeserializer())___		this.client = new Client<>(_				"Queryable State Client",_				1,_				messageSerializer,_				new DisabledKvStateRequestStats())__	};create,the,queryable,state,client,param,remote,address,the,link,inet,address,address,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,inet,address,remote,address,final,int,remote,port,preconditions,check,argument,remote,port,0,remote,port,65536,remote,port,remote,port,is,out,of,valid,port,range,0,65536,this,remote,address,new,inet,socket,address,remote,address,remote,port,final,message,serializer,kv,state,request,kv,state,response,message,serializer,new,message,serializer,new,kv,state,request,kv,state,request,deserializer,new,kv,state,response,kv,state,response,deserializer,this,client,new,client,queryable,state,client,1,message,serializer,new,disabled,kv,state,request,stats
QueryableStateClient -> public QueryableStateClient(final InetAddress remoteAddress, final int remotePort);1512567196;Create the Queryable State Client._@param remoteAddress the {@link InetAddress address} of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final InetAddress remoteAddress, final int remotePort) {_		Preconditions.checkArgument(remotePort >= 0 && remotePort <= 65536,_				"Remote Port " + remotePort + " is out of valid port range (0-65536).")___		this.remoteAddress = new InetSocketAddress(remoteAddress, remotePort)___		final MessageSerializer<KvStateRequest, KvStateResponse> messageSerializer =_				new MessageSerializer<>(_						new KvStateRequest.KvStateRequestDeserializer(),_						new KvStateResponse.KvStateResponseDeserializer())___		this.client = new Client<>(_				"Queryable State Client",_				1,_				messageSerializer,_				new DisabledKvStateRequestStats())__	};create,the,queryable,state,client,param,remote,address,the,link,inet,address,address,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,inet,address,remote,address,final,int,remote,port,preconditions,check,argument,remote,port,0,remote,port,65536,remote,port,remote,port,is,out,of,valid,port,range,0,65536,this,remote,address,new,inet,socket,address,remote,address,remote,port,final,message,serializer,kv,state,request,kv,state,response,message,serializer,new,message,serializer,new,kv,state,request,kv,state,request,deserializer,new,kv,state,response,kv,state,response,deserializer,this,client,new,client,queryable,state,client,1,message,serializer,new,disabled,kv,state,request,stats
QueryableStateClient -> public QueryableStateClient(final InetAddress remoteAddress, final int remotePort);1518635591;Create the Queryable State Client._@param remoteAddress the {@link InetAddress address} of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final InetAddress remoteAddress, final int remotePort) {_		Preconditions.checkArgument(remotePort >= 0 && remotePort <= 65536,_				"Remote Port " + remotePort + " is out of valid port range (0-65536).")___		this.remoteAddress = new InetSocketAddress(remoteAddress, remotePort)___		final MessageSerializer<KvStateRequest, KvStateResponse> messageSerializer =_				new MessageSerializer<>(_						new KvStateRequest.KvStateRequestDeserializer(),_						new KvStateResponse.KvStateResponseDeserializer())___		this.client = new Client<>(_				"Queryable State Client",_				1,_				messageSerializer,_				new DisabledKvStateRequestStats())__	};create,the,queryable,state,client,param,remote,address,the,link,inet,address,address,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,inet,address,remote,address,final,int,remote,port,preconditions,check,argument,remote,port,0,remote,port,65536,remote,port,remote,port,is,out,of,valid,port,range,0,65536,this,remote,address,new,inet,socket,address,remote,address,remote,port,final,message,serializer,kv,state,request,kv,state,response,message,serializer,new,message,serializer,new,kv,state,request,kv,state,request,deserializer,new,kv,state,response,kv,state,response,deserializer,this,client,new,client,queryable,state,client,1,message,serializer,new,disabled,kv,state,request,stats
QueryableStateClient -> public QueryableStateClient(final InetAddress remoteAddress, final int remotePort);1529325710;Create the Queryable State Client._@param remoteAddress the {@link InetAddress address} of the {@code Client Proxy} to connect to._@param remotePort the port of the proxy to connect to.;public QueryableStateClient(final InetAddress remoteAddress, final int remotePort) {_		Preconditions.checkArgument(remotePort >= 0 && remotePort <= 65536,_				"Remote Port " + remotePort + " is out of valid port range (0-65536).")___		this.remoteAddress = new InetSocketAddress(remoteAddress, remotePort)___		final MessageSerializer<KvStateRequest, KvStateResponse> messageSerializer =_				new MessageSerializer<>(_						new KvStateRequest.KvStateRequestDeserializer(),_						new KvStateResponse.KvStateResponseDeserializer())___		this.client = new Client<>(_				"Queryable State Client",_				1,_				messageSerializer,_				new DisabledKvStateRequestStats())__	};create,the,queryable,state,client,param,remote,address,the,link,inet,address,address,of,the,code,client,proxy,to,connect,to,param,remote,port,the,port,of,the,proxy,to,connect,to;public,queryable,state,client,final,inet,address,remote,address,final,int,remote,port,preconditions,check,argument,remote,port,0,remote,port,65536,remote,port,remote,port,is,out,of,valid,port,range,0,65536,this,remote,address,new,inet,socket,address,remote,address,remote,port,final,message,serializer,kv,state,request,kv,state,response,message,serializer,new,message,serializer,new,kv,state,request,kv,state,request,deserializer,new,kv,state,response,kv,state,response,deserializer,this,client,new,client,queryable,state,client,1,message,serializer,new,disabled,kv,state,request,stats
QueryableStateClient -> private CompletableFuture<KvStateResponse> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final int keyHashCode, 			final byte[] serializedKeyAndNamespace);1509037054;Returns a future holding the serialized request result.__@param jobId                     JobID of the job the queryable state_belongs to_@param queryableStateName        Name under which the state is queryable_@param keyHashCode               Integer hash code of the key (result of_a call to {@link Object#hashCode()}_@param serializedKeyAndNamespace Serialized key and namespace to query_KvState instance with_@return Future holding the serialized result;private CompletableFuture<KvStateResponse> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final int keyHashCode,_			final byte[] serializedKeyAndNamespace) {_		LOG.info("Sending State Request to {}.", remoteAddress)__		try {_			KvStateRequest request = new KvStateRequest(jobId, queryableStateName, keyHashCode, serializedKeyAndNamespace)__			return client.sendRequest(remoteAddress, request)__		} catch (Exception e) {_			LOG.error("Unable to send KVStateRequest: ", e)__			return FutureUtils.getFailedFuture(e)__		}_	};returns,a,future,holding,the,serialized,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,hash,code,integer,hash,code,of,the,key,result,of,a,call,to,link,object,hash,code,param,serialized,key,and,namespace,serialized,key,and,namespace,to,query,kv,state,instance,with,return,future,holding,the,serialized,result;private,completable,future,kv,state,response,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,int,key,hash,code,final,byte,serialized,key,and,namespace,log,info,sending,state,request,to,remote,address,try,kv,state,request,request,new,kv,state,request,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,return,client,send,request,remote,address,request,catch,exception,e,log,error,unable,to,send,kvstate,request,e,return,future,utils,get,failed,future,e
QueryableStateClient -> private CompletableFuture<KvStateResponse> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final int keyHashCode, 			final byte[] serializedKeyAndNamespace);1510911968;Returns a future holding the serialized request result.__@param jobId                     JobID of the job the queryable state_belongs to_@param queryableStateName        Name under which the state is queryable_@param keyHashCode               Integer hash code of the key (result of_a call to {@link Object#hashCode()}_@param serializedKeyAndNamespace Serialized key and namespace to query_KvState instance with_@return Future holding the serialized result;private CompletableFuture<KvStateResponse> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final int keyHashCode,_			final byte[] serializedKeyAndNamespace) {_		LOG.info("Sending State Request to {}.", remoteAddress)__		try {_			KvStateRequest request = new KvStateRequest(jobId, queryableStateName, keyHashCode, serializedKeyAndNamespace)__			return client.sendRequest(remoteAddress, request)__		} catch (Exception e) {_			LOG.error("Unable to send KVStateRequest: ", e)__			return FutureUtils.getFailedFuture(e)__		}_	};returns,a,future,holding,the,serialized,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,hash,code,integer,hash,code,of,the,key,result,of,a,call,to,link,object,hash,code,param,serialized,key,and,namespace,serialized,key,and,namespace,to,query,kv,state,instance,with,return,future,holding,the,serialized,result;private,completable,future,kv,state,response,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,int,key,hash,code,final,byte,serialized,key,and,namespace,log,info,sending,state,request,to,remote,address,try,kv,state,request,request,new,kv,state,request,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,return,client,send,request,remote,address,request,catch,exception,e,log,error,unable,to,send,kvstate,request,e,return,future,utils,get,failed,future,e
QueryableStateClient -> private CompletableFuture<KvStateResponse> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final int keyHashCode, 			final byte[] serializedKeyAndNamespace);1510928926;Returns a future holding the serialized request result.__@param jobId                     JobID of the job the queryable state_belongs to_@param queryableStateName        Name under which the state is queryable_@param keyHashCode               Integer hash code of the key (result of_a call to {@link Object#hashCode()}_@param serializedKeyAndNamespace Serialized key and namespace to query_KvState instance with_@return Future holding the serialized result;private CompletableFuture<KvStateResponse> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final int keyHashCode,_			final byte[] serializedKeyAndNamespace) {_		LOG.info("Sending State Request to {}.", remoteAddress)__		try {_			KvStateRequest request = new KvStateRequest(jobId, queryableStateName, keyHashCode, serializedKeyAndNamespace)__			return client.sendRequest(remoteAddress, request)__		} catch (Exception e) {_			LOG.error("Unable to send KVStateRequest: ", e)__			return FutureUtils.getFailedFuture(e)__		}_	};returns,a,future,holding,the,serialized,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,hash,code,integer,hash,code,of,the,key,result,of,a,call,to,link,object,hash,code,param,serialized,key,and,namespace,serialized,key,and,namespace,to,query,kv,state,instance,with,return,future,holding,the,serialized,result;private,completable,future,kv,state,response,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,int,key,hash,code,final,byte,serialized,key,and,namespace,log,info,sending,state,request,to,remote,address,try,kv,state,request,request,new,kv,state,request,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,return,client,send,request,remote,address,request,catch,exception,e,log,error,unable,to,send,kvstate,request,e,return,future,utils,get,failed,future,e
QueryableStateClient -> private CompletableFuture<KvStateResponse> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final int keyHashCode, 			final byte[] serializedKeyAndNamespace);1512567196;Returns a future holding the serialized request result.__@param jobId                     JobID of the job the queryable state_belongs to_@param queryableStateName        Name under which the state is queryable_@param keyHashCode               Integer hash code of the key (result of_a call to {@link Object#hashCode()}_@param serializedKeyAndNamespace Serialized key and namespace to query_KvState instance with_@return Future holding the serialized result;private CompletableFuture<KvStateResponse> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final int keyHashCode,_			final byte[] serializedKeyAndNamespace) {_		LOG.info("Sending State Request to {}.", remoteAddress)__		try {_			KvStateRequest request = new KvStateRequest(jobId, queryableStateName, keyHashCode, serializedKeyAndNamespace)__			return client.sendRequest(remoteAddress, request)__		} catch (Exception e) {_			LOG.error("Unable to send KVStateRequest: ", e)__			return FutureUtils.getFailedFuture(e)__		}_	};returns,a,future,holding,the,serialized,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,hash,code,integer,hash,code,of,the,key,result,of,a,call,to,link,object,hash,code,param,serialized,key,and,namespace,serialized,key,and,namespace,to,query,kv,state,instance,with,return,future,holding,the,serialized,result;private,completable,future,kv,state,response,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,int,key,hash,code,final,byte,serialized,key,and,namespace,log,info,sending,state,request,to,remote,address,try,kv,state,request,request,new,kv,state,request,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,return,client,send,request,remote,address,request,catch,exception,e,log,error,unable,to,send,kvstate,request,e,return,future,utils,get,failed,future,e
QueryableStateClient -> private CompletableFuture<KvStateResponse> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final int keyHashCode, 			final byte[] serializedKeyAndNamespace);1518635591;Returns a future holding the serialized request result.__@param jobId                     JobID of the job the queryable state_belongs to_@param queryableStateName        Name under which the state is queryable_@param keyHashCode               Integer hash code of the key (result of_a call to {@link Object#hashCode()}_@param serializedKeyAndNamespace Serialized key and namespace to query_KvState instance with_@return Future holding the serialized result;private CompletableFuture<KvStateResponse> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final int keyHashCode,_			final byte[] serializedKeyAndNamespace) {_		LOG.debug("Sending State Request to {}.", remoteAddress)__		try {_			KvStateRequest request = new KvStateRequest(jobId, queryableStateName, keyHashCode, serializedKeyAndNamespace)__			return client.sendRequest(remoteAddress, request)__		} catch (Exception e) {_			LOG.error("Unable to send KVStateRequest: ", e)__			return FutureUtils.getFailedFuture(e)__		}_	};returns,a,future,holding,the,serialized,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,hash,code,integer,hash,code,of,the,key,result,of,a,call,to,link,object,hash,code,param,serialized,key,and,namespace,serialized,key,and,namespace,to,query,kv,state,instance,with,return,future,holding,the,serialized,result;private,completable,future,kv,state,response,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,int,key,hash,code,final,byte,serialized,key,and,namespace,log,debug,sending,state,request,to,remote,address,try,kv,state,request,request,new,kv,state,request,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,return,client,send,request,remote,address,request,catch,exception,e,log,error,unable,to,send,kvstate,request,e,return,future,utils,get,failed,future,e
QueryableStateClient -> private CompletableFuture<KvStateResponse> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final int keyHashCode, 			final byte[] serializedKeyAndNamespace);1529325710;Returns a future holding the serialized request result.__@param jobId                     JobID of the job the queryable state_belongs to_@param queryableStateName        Name under which the state is queryable_@param keyHashCode               Integer hash code of the key (result of_a call to {@link Object#hashCode()}_@param serializedKeyAndNamespace Serialized key and namespace to query_KvState instance with_@return Future holding the serialized result;private CompletableFuture<KvStateResponse> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final int keyHashCode,_			final byte[] serializedKeyAndNamespace) {_		LOG.debug("Sending State Request to {}.", remoteAddress)__		try {_			KvStateRequest request = new KvStateRequest(jobId, queryableStateName, keyHashCode, serializedKeyAndNamespace)__			return client.sendRequest(remoteAddress, request)__		} catch (Exception e) {_			LOG.error("Unable to send KVStateRequest: ", e)__			return FutureUtils.getFailedFuture(e)__		}_	};returns,a,future,holding,the,serialized,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,hash,code,integer,hash,code,of,the,key,result,of,a,call,to,link,object,hash,code,param,serialized,key,and,namespace,serialized,key,and,namespace,to,query,kv,state,instance,with,return,future,holding,the,serialized,result;private,completable,future,kv,state,response,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,int,key,hash,code,final,byte,serialized,key,and,namespace,log,debug,sending,state,request,to,remote,address,try,kv,state,request,request,new,kv,state,request,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,return,client,send,request,remote,address,request,catch,exception,e,log,error,unable,to,send,kvstate,request,e,return,future,utils,get,failed,future,e
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeHint<K> keyTypeHint, 			final StateDescriptor<S, V> stateDescriptor);1509037054;Returns a future holding the request result.	 *_@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeHint				A {@link TypeHint} used to extract the type of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeHint<K> keyTypeHint,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(keyTypeHint)___		TypeInformation<K> keyTypeInfo = keyTypeHint.getTypeInfo()__		return getKvState(jobId, queryableStateName, key, keyTypeInfo, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,hint,a,link,type,hint,used,to,extract,the,type,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,hint,k,key,type,hint,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,key,type,hint,type,information,k,key,type,info,key,type,hint,get,type,info,return,get,kv,state,job,id,queryable,state,name,key,key,type,info,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeHint<K> keyTypeHint, 			final StateDescriptor<S, V> stateDescriptor);1510911968;Returns a future holding the request result.	 *_@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeHint				A {@link TypeHint} used to extract the type of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeHint<K> keyTypeHint,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(keyTypeHint)___		TypeInformation<K> keyTypeInfo = keyTypeHint.getTypeInfo()__		return getKvState(jobId, queryableStateName, key, keyTypeInfo, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,hint,a,link,type,hint,used,to,extract,the,type,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,hint,k,key,type,hint,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,key,type,hint,type,information,k,key,type,info,key,type,hint,get,type,info,return,get,kv,state,job,id,queryable,state,name,key,key,type,info,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeHint<K> keyTypeHint, 			final StateDescriptor<S, V> stateDescriptor);1510928926;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeHint				A {@link TypeHint} used to extract the type of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeHint<K> keyTypeHint,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(keyTypeHint)___		TypeInformation<K> keyTypeInfo = keyTypeHint.getTypeInfo()__		return getKvState(jobId, queryableStateName, key, keyTypeInfo, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,hint,a,link,type,hint,used,to,extract,the,type,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,hint,k,key,type,hint,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,key,type,hint,type,information,k,key,type,info,key,type,hint,get,type,info,return,get,kv,state,job,id,queryable,state,name,key,key,type,info,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeHint<K> keyTypeHint, 			final StateDescriptor<S, V> stateDescriptor);1512567196;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeHint				A {@link TypeHint} used to extract the type of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeHint<K> keyTypeHint,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(keyTypeHint)___		TypeInformation<K> keyTypeInfo = keyTypeHint.getTypeInfo()__		return getKvState(jobId, queryableStateName, key, keyTypeInfo, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,hint,a,link,type,hint,used,to,extract,the,type,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,hint,k,key,type,hint,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,key,type,hint,type,information,k,key,type,info,key,type,hint,get,type,info,return,get,kv,state,job,id,queryable,state,name,key,key,type,info,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeHint<K> keyTypeHint, 			final StateDescriptor<S, V> stateDescriptor);1518635591;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeHint				A {@link TypeHint} used to extract the type of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeHint<K> keyTypeHint,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(keyTypeHint)___		TypeInformation<K> keyTypeInfo = keyTypeHint.getTypeInfo()__		return getKvState(jobId, queryableStateName, key, keyTypeInfo, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,hint,a,link,type,hint,used,to,extract,the,type,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,hint,k,key,type,hint,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,key,type,hint,type,information,k,key,type,info,key,type,hint,get,type,info,return,get,kv,state,job,id,queryable,state,name,key,key,type,info,state,descriptor
QueryableStateClient -> @PublicEvolving 	public <K, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final TypeHint<K> keyTypeHint, 			final StateDescriptor<S, V> stateDescriptor);1529325710;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key we are interested in._@param keyTypeHint				A {@link TypeHint} used to extract the type of the key._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;@PublicEvolving_	public <K, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final TypeHint<K> keyTypeHint,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(keyTypeHint)___		TypeInformation<K> keyTypeInfo = keyTypeHint.getTypeInfo()__		return getKvState(jobId, queryableStateName, key, keyTypeInfo, stateDescriptor)__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,we,are,interested,in,param,key,type,hint,a,link,type,hint,used,to,extract,the,type,of,the,key,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;public,evolving,public,k,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,type,hint,k,key,type,hint,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,key,type,hint,type,information,k,key,type,info,key,type,hint,get,type,info,return,get,kv,state,job,id,queryable,state,name,key,key,type,info,state,descriptor
QueryableStateClient -> private <K, N, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final N namespace, 			final TypeInformation<K> keyTypeInfo, 			final TypeInformation<N> namespaceTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1510911968;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key that the state we request is associated with._@param namespace					The namespace of the state._@param keyTypeInfo				The {@link TypeInformation} of the keys._@param namespaceTypeInfo			The {@link TypeInformation} of the namespace._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;private <K, N, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final N namespace,_			final TypeInformation<K> keyTypeInfo,_			final TypeInformation<N> namespaceTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(jobId)__		Preconditions.checkNotNull(queryableStateName)__		Preconditions.checkNotNull(key)__		Preconditions.checkNotNull(namespace)___		Preconditions.checkNotNull(keyTypeInfo)__		Preconditions.checkNotNull(namespaceTypeInfo)__		Preconditions.checkNotNull(stateDescriptor)___		TypeSerializer<K> keySerializer = keyTypeInfo.createSerializer(executionConfig)__		TypeSerializer<N> namespaceSerializer = namespaceTypeInfo.createSerializer(executionConfig)___		stateDescriptor.initializeSerializerUnlessSet(executionConfig)___		final byte[] serializedKeyAndNamespace__		try {_			serializedKeyAndNamespace = KvStateSerializer_					.serializeKeyAndNamespace(key, keySerializer, namespace, namespaceSerializer)__		} catch (IOException e) {_			return FutureUtils.getFailedFuture(e)__		}__		return getKvState(jobId, queryableStateName, key.hashCode(), serializedKeyAndNamespace).thenApply(_				stateResponse -> {_					try {_						return stateDescriptor.bind(new ImmutableStateBinder(stateResponse.getContent()))__					} catch (Exception e) {_						throw new FlinkRuntimeException(e)__					}_				})__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,that,the,state,we,request,is,associated,with,param,namespace,the,namespace,of,the,state,param,key,type,info,the,link,type,information,of,the,keys,param,namespace,type,info,the,link,type,information,of,the,namespace,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;private,k,n,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,n,namespace,final,type,information,k,key,type,info,final,type,information,n,namespace,type,info,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,job,id,preconditions,check,not,null,queryable,state,name,preconditions,check,not,null,key,preconditions,check,not,null,namespace,preconditions,check,not,null,key,type,info,preconditions,check,not,null,namespace,type,info,preconditions,check,not,null,state,descriptor,type,serializer,k,key,serializer,key,type,info,create,serializer,execution,config,type,serializer,n,namespace,serializer,namespace,type,info,create,serializer,execution,config,state,descriptor,initialize,serializer,unless,set,execution,config,final,byte,serialized,key,and,namespace,try,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,key,serializer,namespace,namespace,serializer,catch,ioexception,e,return,future,utils,get,failed,future,e,return,get,kv,state,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,then,apply,state,response,try,return,state,descriptor,bind,new,immutable,state,binder,state,response,get,content,catch,exception,e,throw,new,flink,runtime,exception,e
QueryableStateClient -> private <K, N, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final N namespace, 			final TypeInformation<K> keyTypeInfo, 			final TypeInformation<N> namespaceTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1510928926;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key that the state we request is associated with._@param namespace					The namespace of the state._@param keyTypeInfo				The {@link TypeInformation} of the keys._@param namespaceTypeInfo			The {@link TypeInformation} of the namespace._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;private <K, N, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final N namespace,_			final TypeInformation<K> keyTypeInfo,_			final TypeInformation<N> namespaceTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(jobId)__		Preconditions.checkNotNull(queryableStateName)__		Preconditions.checkNotNull(key)__		Preconditions.checkNotNull(namespace)___		Preconditions.checkNotNull(keyTypeInfo)__		Preconditions.checkNotNull(namespaceTypeInfo)__		Preconditions.checkNotNull(stateDescriptor)___		TypeSerializer<K> keySerializer = keyTypeInfo.createSerializer(executionConfig)__		TypeSerializer<N> namespaceSerializer = namespaceTypeInfo.createSerializer(executionConfig)___		stateDescriptor.initializeSerializerUnlessSet(executionConfig)___		final byte[] serializedKeyAndNamespace__		try {_			serializedKeyAndNamespace = KvStateSerializer_					.serializeKeyAndNamespace(key, keySerializer, namespace, namespaceSerializer)__		} catch (IOException e) {_			return FutureUtils.getFailedFuture(e)__		}__		return getKvState(jobId, queryableStateName, key.hashCode(), serializedKeyAndNamespace).thenApply(_				stateResponse -> {_					try {_						return stateDescriptor.bind(new ImmutableStateBinder(stateResponse.getContent()))__					} catch (Exception e) {_						throw new FlinkRuntimeException(e)__					}_				})__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,that,the,state,we,request,is,associated,with,param,namespace,the,namespace,of,the,state,param,key,type,info,the,link,type,information,of,the,keys,param,namespace,type,info,the,link,type,information,of,the,namespace,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;private,k,n,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,n,namespace,final,type,information,k,key,type,info,final,type,information,n,namespace,type,info,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,job,id,preconditions,check,not,null,queryable,state,name,preconditions,check,not,null,key,preconditions,check,not,null,namespace,preconditions,check,not,null,key,type,info,preconditions,check,not,null,namespace,type,info,preconditions,check,not,null,state,descriptor,type,serializer,k,key,serializer,key,type,info,create,serializer,execution,config,type,serializer,n,namespace,serializer,namespace,type,info,create,serializer,execution,config,state,descriptor,initialize,serializer,unless,set,execution,config,final,byte,serialized,key,and,namespace,try,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,key,serializer,namespace,namespace,serializer,catch,ioexception,e,return,future,utils,get,failed,future,e,return,get,kv,state,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,then,apply,state,response,try,return,state,descriptor,bind,new,immutable,state,binder,state,response,get,content,catch,exception,e,throw,new,flink,runtime,exception,e
QueryableStateClient -> private <K, N, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final N namespace, 			final TypeInformation<K> keyTypeInfo, 			final TypeInformation<N> namespaceTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1512567196;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key that the state we request is associated with._@param namespace					The namespace of the state._@param keyTypeInfo				The {@link TypeInformation} of the keys._@param namespaceTypeInfo			The {@link TypeInformation} of the namespace._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;private <K, N, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final N namespace,_			final TypeInformation<K> keyTypeInfo,_			final TypeInformation<N> namespaceTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(jobId)__		Preconditions.checkNotNull(queryableStateName)__		Preconditions.checkNotNull(key)__		Preconditions.checkNotNull(namespace)___		Preconditions.checkNotNull(keyTypeInfo)__		Preconditions.checkNotNull(namespaceTypeInfo)__		Preconditions.checkNotNull(stateDescriptor)___		TypeSerializer<K> keySerializer = keyTypeInfo.createSerializer(executionConfig)__		TypeSerializer<N> namespaceSerializer = namespaceTypeInfo.createSerializer(executionConfig)___		stateDescriptor.initializeSerializerUnlessSet(executionConfig)___		final byte[] serializedKeyAndNamespace__		try {_			serializedKeyAndNamespace = KvStateSerializer_					.serializeKeyAndNamespace(key, keySerializer, namespace, namespaceSerializer)__		} catch (IOException e) {_			return FutureUtils.getFailedFuture(e)__		}__		return getKvState(jobId, queryableStateName, key.hashCode(), serializedKeyAndNamespace).thenApply(_				stateResponse -> {_					try {_						return stateDescriptor.bind(new ImmutableStateBinder(stateResponse.getContent()))__					} catch (Exception e) {_						throw new FlinkRuntimeException(e)__					}_				})__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,that,the,state,we,request,is,associated,with,param,namespace,the,namespace,of,the,state,param,key,type,info,the,link,type,information,of,the,keys,param,namespace,type,info,the,link,type,information,of,the,namespace,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;private,k,n,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,n,namespace,final,type,information,k,key,type,info,final,type,information,n,namespace,type,info,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,job,id,preconditions,check,not,null,queryable,state,name,preconditions,check,not,null,key,preconditions,check,not,null,namespace,preconditions,check,not,null,key,type,info,preconditions,check,not,null,namespace,type,info,preconditions,check,not,null,state,descriptor,type,serializer,k,key,serializer,key,type,info,create,serializer,execution,config,type,serializer,n,namespace,serializer,namespace,type,info,create,serializer,execution,config,state,descriptor,initialize,serializer,unless,set,execution,config,final,byte,serialized,key,and,namespace,try,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,key,serializer,namespace,namespace,serializer,catch,ioexception,e,return,future,utils,get,failed,future,e,return,get,kv,state,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,then,apply,state,response,try,return,state,descriptor,bind,new,immutable,state,binder,state,response,get,content,catch,exception,e,throw,new,flink,runtime,exception,e
QueryableStateClient -> private <K, N, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final N namespace, 			final TypeInformation<K> keyTypeInfo, 			final TypeInformation<N> namespaceTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1518635591;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key that the state we request is associated with._@param namespace					The namespace of the state._@param keyTypeInfo				The {@link TypeInformation} of the keys._@param namespaceTypeInfo			The {@link TypeInformation} of the namespace._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;private <K, N, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final N namespace,_			final TypeInformation<K> keyTypeInfo,_			final TypeInformation<N> namespaceTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(jobId)__		Preconditions.checkNotNull(queryableStateName)__		Preconditions.checkNotNull(key)__		Preconditions.checkNotNull(namespace)___		Preconditions.checkNotNull(keyTypeInfo)__		Preconditions.checkNotNull(namespaceTypeInfo)__		Preconditions.checkNotNull(stateDescriptor)___		TypeSerializer<K> keySerializer = keyTypeInfo.createSerializer(executionConfig)__		TypeSerializer<N> namespaceSerializer = namespaceTypeInfo.createSerializer(executionConfig)___		stateDescriptor.initializeSerializerUnlessSet(executionConfig)___		final byte[] serializedKeyAndNamespace__		try {_			serializedKeyAndNamespace = KvStateSerializer_					.serializeKeyAndNamespace(key, keySerializer, namespace, namespaceSerializer)__		} catch (IOException e) {_			return FutureUtils.getFailedFuture(e)__		}__		return getKvState(jobId, queryableStateName, key.hashCode(), serializedKeyAndNamespace).thenApply(_				stateResponse -> {_					try {_						return stateDescriptor.bind(new ImmutableStateBinder(stateResponse.getContent()))__					} catch (Exception e) {_						throw new FlinkRuntimeException(e)__					}_				})__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,that,the,state,we,request,is,associated,with,param,namespace,the,namespace,of,the,state,param,key,type,info,the,link,type,information,of,the,keys,param,namespace,type,info,the,link,type,information,of,the,namespace,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;private,k,n,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,n,namespace,final,type,information,k,key,type,info,final,type,information,n,namespace,type,info,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,job,id,preconditions,check,not,null,queryable,state,name,preconditions,check,not,null,key,preconditions,check,not,null,namespace,preconditions,check,not,null,key,type,info,preconditions,check,not,null,namespace,type,info,preconditions,check,not,null,state,descriptor,type,serializer,k,key,serializer,key,type,info,create,serializer,execution,config,type,serializer,n,namespace,serializer,namespace,type,info,create,serializer,execution,config,state,descriptor,initialize,serializer,unless,set,execution,config,final,byte,serialized,key,and,namespace,try,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,key,serializer,namespace,namespace,serializer,catch,ioexception,e,return,future,utils,get,failed,future,e,return,get,kv,state,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,then,apply,state,response,try,return,state,descriptor,bind,new,immutable,state,binder,state,response,get,content,catch,exception,e,throw,new,flink,runtime,exception,e
QueryableStateClient -> private <K, N, S extends State, V> CompletableFuture<S> getKvState( 			final JobID jobId, 			final String queryableStateName, 			final K key, 			final N namespace, 			final TypeInformation<K> keyTypeInfo, 			final TypeInformation<N> namespaceTypeInfo, 			final StateDescriptor<S, V> stateDescriptor);1529325710;Returns a future holding the request result._@param jobId                     JobID of the job the queryable state belongs to._@param queryableStateName        Name under which the state is queryable._@param key			            The key that the state we request is associated with._@param namespace					The namespace of the state._@param keyTypeInfo				The {@link TypeInformation} of the keys._@param namespaceTypeInfo			The {@link TypeInformation} of the namespace._@param stateDescriptor			The {@link StateDescriptor} of the state we want to query._@return Future holding the immutable {@link State} object containing the result.;private <K, N, S extends State, V> CompletableFuture<S> getKvState(_			final JobID jobId,_			final String queryableStateName,_			final K key,_			final N namespace,_			final TypeInformation<K> keyTypeInfo,_			final TypeInformation<N> namespaceTypeInfo,_			final StateDescriptor<S, V> stateDescriptor) {__		Preconditions.checkNotNull(jobId)__		Preconditions.checkNotNull(queryableStateName)__		Preconditions.checkNotNull(key)__		Preconditions.checkNotNull(namespace)___		Preconditions.checkNotNull(keyTypeInfo)__		Preconditions.checkNotNull(namespaceTypeInfo)__		Preconditions.checkNotNull(stateDescriptor)___		TypeSerializer<K> keySerializer = keyTypeInfo.createSerializer(executionConfig)__		TypeSerializer<N> namespaceSerializer = namespaceTypeInfo.createSerializer(executionConfig)___		stateDescriptor.initializeSerializerUnlessSet(executionConfig)___		final byte[] serializedKeyAndNamespace__		try {_			serializedKeyAndNamespace = KvStateSerializer_					.serializeKeyAndNamespace(key, keySerializer, namespace, namespaceSerializer)__		} catch (IOException e) {_			return FutureUtils.getFailedFuture(e)__		}__		return getKvState(jobId, queryableStateName, key.hashCode(), serializedKeyAndNamespace)_			.thenApply(stateResponse -> createState(stateResponse, stateDescriptor))__	};returns,a,future,holding,the,request,result,param,job,id,job,id,of,the,job,the,queryable,state,belongs,to,param,queryable,state,name,name,under,which,the,state,is,queryable,param,key,the,key,that,the,state,we,request,is,associated,with,param,namespace,the,namespace,of,the,state,param,key,type,info,the,link,type,information,of,the,keys,param,namespace,type,info,the,link,type,information,of,the,namespace,param,state,descriptor,the,link,state,descriptor,of,the,state,we,want,to,query,return,future,holding,the,immutable,link,state,object,containing,the,result;private,k,n,s,extends,state,v,completable,future,s,get,kv,state,final,job,id,job,id,final,string,queryable,state,name,final,k,key,final,n,namespace,final,type,information,k,key,type,info,final,type,information,n,namespace,type,info,final,state,descriptor,s,v,state,descriptor,preconditions,check,not,null,job,id,preconditions,check,not,null,queryable,state,name,preconditions,check,not,null,key,preconditions,check,not,null,namespace,preconditions,check,not,null,key,type,info,preconditions,check,not,null,namespace,type,info,preconditions,check,not,null,state,descriptor,type,serializer,k,key,serializer,key,type,info,create,serializer,execution,config,type,serializer,n,namespace,serializer,namespace,type,info,create,serializer,execution,config,state,descriptor,initialize,serializer,unless,set,execution,config,final,byte,serialized,key,and,namespace,try,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,key,serializer,namespace,namespace,serializer,catch,ioexception,e,return,future,utils,get,failed,future,e,return,get,kv,state,job,id,queryable,state,name,key,hash,code,serialized,key,and,namespace,then,apply,state,response,create,state,state,response,state,descriptor
QueryableStateClient -> public void shutdownAndWait();1512567196;Shuts down the client and waits until shutdown is completed.__<p>If an exception is thrown, a warning is logged containing_the exception message.;public void shutdownAndWait() {_		try {_			client.shutdown().get()__			LOG.info("The Queryable State Client was shutdown successfully.")__		} catch (Exception e) {_			LOG.warn("The Queryable State Client shutdown failed: ", e)__		}_	};shuts,down,the,client,and,waits,until,shutdown,is,completed,p,if,an,exception,is,thrown,a,warning,is,logged,containing,the,exception,message;public,void,shutdown,and,wait,try,client,shutdown,get,log,info,the,queryable,state,client,was,shutdown,successfully,catch,exception,e,log,warn,the,queryable,state,client,shutdown,failed,e
QueryableStateClient -> public void shutdownAndWait();1518635591;Shuts down the client and waits until shutdown is completed.__<p>If an exception is thrown, a warning is logged containing_the exception message.;public void shutdownAndWait() {_		try {_			client.shutdown().get()__			LOG.info("The Queryable State Client was shutdown successfully.")__		} catch (Exception e) {_			LOG.warn("The Queryable State Client shutdown failed: ", e)__		}_	};shuts,down,the,client,and,waits,until,shutdown,is,completed,p,if,an,exception,is,thrown,a,warning,is,logged,containing,the,exception,message;public,void,shutdown,and,wait,try,client,shutdown,get,log,info,the,queryable,state,client,was,shutdown,successfully,catch,exception,e,log,warn,the,queryable,state,client,shutdown,failed,e
QueryableStateClient -> public void shutdownAndWait();1529325710;Shuts down the client and waits until shutdown is completed.__<p>If an exception is thrown, a warning is logged containing_the exception message.;public void shutdownAndWait() {_		try {_			client.shutdown().get()__			LOG.info("The Queryable State Client was shutdown successfully.")__		} catch (Exception e) {_			LOG.warn("The Queryable State Client shutdown failed: ", e)__		}_	};shuts,down,the,client,and,waits,until,shutdown,is,completed,p,if,an,exception,is,thrown,a,warning,is,logged,containing,the,exception,message;public,void,shutdown,and,wait,try,client,shutdown,get,log,info,the,queryable,state,client,was,shutdown,successfully,catch,exception,e,log,warn,the,queryable,state,client,shutdown,failed,e
