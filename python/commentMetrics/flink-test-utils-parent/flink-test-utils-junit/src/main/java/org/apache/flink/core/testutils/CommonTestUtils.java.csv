# id;timestamp;commentText;codeText;commentWords;codeWords
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1467726586;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1474308053;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1480980565;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1480980597;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1486740511;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1494499551;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1495441965;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1495790937;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1501495929;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static String createTempFile(String contents) throws IOException;1532591535;Creates a temporary file that contains the given string._The file is written with the platform's default encoding.__<p>The temp file is automatically deleted on JVM exit.__@param contents The contents to be written to the file._@return The temp file URI.;public static String createTempFile(String contents) throws IOException {_		File f = File.createTempFile("flink_test_", ".tmp")__		f.deleteOnExit()___		try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {_			out.write(contents)__		}_		return f.toURI().toString()__	};creates,a,temporary,file,that,contains,the,given,string,the,file,is,written,with,the,platform,s,default,encoding,p,the,temp,file,is,automatically,deleted,on,jvm,exit,param,contents,the,contents,to,be,written,to,the,file,return,the,temp,file,uri;public,static,string,create,temp,file,string,contents,throws,ioexception,file,f,file,create,temp,file,tmp,f,delete,on,exit,try,buffered,writer,out,new,buffered,writer,new,file,writer,f,out,write,contents,return,f,to,uri,to,string
CommonTestUtils -> public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader);1494499551;Creates a new class that is not part of the classpath that the current JVM uses._The class is ad-hoc defined and attached to the given ClassLoader.__@param targetClassLoader The class loader to attach the class to_@return The newly defined class;public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader) {_		final byte[] classData = {-54, -2, -70, -66, 0, 0, 0, 51, 0, 65, 10, 0, 15, 0, 43, 7, 0, 44,_				10, 0, 2, 0, 43, 10, 0, 2, 0, 45, 9, 0, 7, 0, 46, 10, 0, 15, 0, 47, 7, 0, 48, 7, 0,_				49, 10, 0, 8, 0, 43, 8, 0, 50, 10, 0, 8, 0, 51, 10, 0, 8, 0, 52, 10, 0, 8, 0, 53, 10,_				0, 8, 0, 54, 7, 0, 55, 7, 0, 56, 1, 0, 16, 115, 101, 114, 105, 97, 108, 86, 101, 114,_				115, 105, 111, 110, 85, 73, 68, 1, 0, 1, 74, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110,_				116, 86, 97, 108, 117, 101, 5, -1, -1, -1, -1, -1, -1, -1, -3, 1, 0, 6, 114, 97, 110,_				100, 111, 109, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67,_				111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108,_				101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98,_				108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 35, 76, 111, 114, 103, 47, 97, 112, 97, 99,_				104, 101, 47, 102, 108, 105, 110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108,_				105, 122, 97, 98, 108, 101, 59, 1, 0, 6, 101, 113, 117, 97, 108, 115, 1, 0, 21, 40, 76,_				106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0,_				1, 111, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99,_				116, 59, 1, 0, 4, 116, 104, 97, 116, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97,_				98, 108, 101, 7, 0, 48, 1, 0, 8, 104, 97, 115, 104, 67, 111, 100, 101, 1, 0, 3, 40, 41,_				73, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97,_				47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114,_				99, 101, 70, 105, 108, 101, 1, 0, 21, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105,_				122, 97, 98, 108, 101, 46, 106, 97, 118, 97, 12, 0, 23, 0, 24, 1, 0, 16, 106, 97, 118, 97,_				47, 117, 116, 105, 108, 47, 82, 97, 110, 100, 111, 109, 12, 0, 57, 0, 58, 12, 0, 22, 0, 18,_				12, 0, 59, 0, 60, 1, 0, 33, 111, 114, 103, 47, 97, 112, 97, 99, 104, 101, 47, 102, 108, 105,_				110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122, 97, 98, 108, 101, 1,_				0, 23, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117,_				105, 108, 100, 101, 114, 1, 0, 24, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122,_				97, 98, 108, 101, 123, 114, 97, 110, 100, 111, 109, 61, 12, 0, 61, 0, 62, 12, 0, 61, 0, 63,_				12, 0, 61, 0, 64, 12, 0, 39, 0, 40, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,_				79, 98, 106, 101, 99, 116, 1, 0, 20, 106, 97, 118, 97, 47, 105, 111, 47, 83, 101, 114, 105,_				97, 108, 105, 122, 97, 98, 108, 101, 1, 0, 8, 110, 101, 120, 116, 76, 111, 110, 103, 1, 0,_				3, 40, 41, 74, 1, 0, 8, 103, 101, 116, 67, 108, 97, 115, 115, 1, 0, 19, 40, 41, 76, 106, 97,_				118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 6, 97, 112, 112, 101,_				110, 100, 1, 0, 45, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105,_				110, 103, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 1, 0, 28, 40, 74, 41, 76, 106, 97, 118, 97, 47,_				108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 1,_				0, 28, 40, 67, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 0, 33, 0, 7, 0, 15, 0, 1, 0, 16, 0, 2, 0, 26, 0,_				17, 0, 18, 0, 1, 0, 19, 0, 0, 0, 2, 0, 20, 0, 18, 0, 22, 0, 18, 0, 0, 0, 4, 0, 1, 0, 23, 0,_				24, 0, 1, 0, 25, 0, 0, 0, 69, 0, 3, 0, 1, 0, 0, 0, 19, 42, -73, 0, 1, 42, -69, 0, 2, 89, -73,_				0, 3, -74, 0, 4, -75, 0, 5, -79, 0, 0, 0, 2, 0, 26, 0, 0, 0, 14, 0, 3, 0, 0, 0, 30, 0, 4, 0,_				31, 0, 18, 0, 32, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 19, 0, 28, 0, 29, 0, 0, 0, 1, 0, 30, 0,_				31, 0, 1, 0, 25, 0, 0, 0, -116, 0, 4, 0, 3, 0, 0, 0, 47, 42, 43, -90, 0, 5, 4, -84, 43, -58,_				0, 14, 42, -74, 0, 6, 43, -74, 0, 6, -91, 0, 5, 3, -84, 43, -64, 0, 7, 77, 42, -76, 0, 5, 44,_				-76, 0, 5, -108, -102, 0, 7, 4, -89, 0, 4, 3, -84, 0, 0, 0, 3, 0, 26, 0, 0, 0, 18, 0, 4, 0, 0,_				0, 36, 0, 7, 0, 37, 0, 24, 0, 39, 0, 29, 0, 40, 0, 27, 0, 0, 0, 32, 0, 3, 0, 0, 0, 47, 0, 28,_				0, 29, 0, 0, 0, 0, 0, 47, 0, 32, 0, 33, 0, 1, 0, 29, 0, 18, 0, 34, 0, 29, 0, 2, 0, 35, 0, 0,_				0, 13, 0, 5, 7, 14, 1, -4, 0, 20, 7, 0, 36, 64, 1, 0, 1, 0, 37, 0, 38, 0, 1, 0, 25, 0, 0, 0,_				56, 0, 5, 0, 1, 0, 0, 0, 14, 42, -76, 0, 5, 42, -76, 0, 5, 16, 32, 125, -125, -120, -84, 0, 0,_				0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 46, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 14, 0, 28, 0,_				29, 0, 0, 0, 1, 0, 39, 0, 40, 0, 1, 0, 25, 0, 0, 0, 70, 0, 3, 0, 1, 0, 0, 0, 28, -69, 0, 8,_				89, -73, 0, 9, 18, 10, -74, 0, 11, 42, -76, 0, 5, -74, 0, 12, 16, 125, -74, 0, 13, -74, 0, 14,_				-80, 0, 0, 0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 51, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 28,_				0, 28, 0, 29, 0, 0, 0, 1, 0, 41, 0, 0, 0, 2, 0, 42,}___		try {_			_			Class<?> clazz = getUnsafe().defineClass(_					"org.apache.flink.TestSerializable",_					classData, 0, classData.length,_					targetClassLoader,_					new ProtectionDomain(new CodeSource(null, (Certificate[]) null), new Permissions()))___			return clazz.asSubclass(Serializable.class)__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,the,class,is,ad,hoc,defined,and,attached,to,the,given,class,loader,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,newly,defined,class;public,static,class,extends,serializable,create,class,not,in,class,path,class,loader,target,class,loader,final,byte,class,data,54,2,70,66,0,0,0,51,0,65,10,0,15,0,43,7,0,44,10,0,2,0,43,10,0,2,0,45,9,0,7,0,46,10,0,15,0,47,7,0,48,7,0,49,10,0,8,0,43,8,0,50,10,0,8,0,51,10,0,8,0,52,10,0,8,0,53,10,0,8,0,54,7,0,55,7,0,56,1,0,16,115,101,114,105,97,108,86,101,114,115,105,111,110,85,73,68,1,0,1,74,1,0,13,67,111,110,115,116,97,110,116,86,97,108,117,101,5,1,1,1,1,1,1,1,3,1,0,6,114,97,110,100,111,109,1,0,6,60,105,110,105,116,62,1,0,3,40,41,86,1,0,4,67,111,100,101,1,0,15,76,105,110,101,78,117,109,98,101,114,84,97,98,108,101,1,0,18,76,111,99,97,108,86,97,114,105,97,98,108,101,84,97,98,108,101,1,0,4,116,104,105,115,1,0,35,76,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,59,1,0,6,101,113,117,97,108,115,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,41,90,1,0,1,111,1,0,18,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,1,0,4,116,104,97,116,1,0,13,83,116,97,99,107,77,97,112,84,97,98,108,101,7,0,48,1,0,8,104,97,115,104,67,111,100,101,1,0,3,40,41,73,1,0,8,116,111,83,116,114,105,110,103,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,10,83,111,117,114,99,101,70,105,108,101,1,0,21,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,46,106,97,118,97,12,0,23,0,24,1,0,16,106,97,118,97,47,117,116,105,108,47,82,97,110,100,111,109,12,0,57,0,58,12,0,22,0,18,12,0,59,0,60,1,0,33,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,1,0,23,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,1,0,24,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,123,114,97,110,100,111,109,61,12,0,61,0,62,12,0,61,0,63,12,0,61,0,64,12,0,39,0,40,1,0,16,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,1,0,20,106,97,118,97,47,105,111,47,83,101,114,105,97,108,105,122,97,98,108,101,1,0,8,110,101,120,116,76,111,110,103,1,0,3,40,41,74,1,0,8,103,101,116,67,108,97,115,115,1,0,19,40,41,76,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,59,1,0,6,97,112,112,101,110,100,1,0,45,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,74,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,67,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,0,33,0,7,0,15,0,1,0,16,0,2,0,26,0,17,0,18,0,1,0,19,0,0,0,2,0,20,0,18,0,22,0,18,0,0,0,4,0,1,0,23,0,24,0,1,0,25,0,0,0,69,0,3,0,1,0,0,0,19,42,73,0,1,42,69,0,2,89,73,0,3,74,0,4,75,0,5,79,0,0,0,2,0,26,0,0,0,14,0,3,0,0,0,30,0,4,0,31,0,18,0,32,0,27,0,0,0,12,0,1,0,0,0,19,0,28,0,29,0,0,0,1,0,30,0,31,0,1,0,25,0,0,0,116,0,4,0,3,0,0,0,47,42,43,90,0,5,4,84,43,58,0,14,42,74,0,6,43,74,0,6,91,0,5,3,84,43,64,0,7,77,42,76,0,5,44,76,0,5,108,102,0,7,4,89,0,4,3,84,0,0,0,3,0,26,0,0,0,18,0,4,0,0,0,36,0,7,0,37,0,24,0,39,0,29,0,40,0,27,0,0,0,32,0,3,0,0,0,47,0,28,0,29,0,0,0,0,0,47,0,32,0,33,0,1,0,29,0,18,0,34,0,29,0,2,0,35,0,0,0,13,0,5,7,14,1,4,0,20,7,0,36,64,1,0,1,0,37,0,38,0,1,0,25,0,0,0,56,0,5,0,1,0,0,0,14,42,76,0,5,42,76,0,5,16,32,125,125,120,84,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,46,0,27,0,0,0,12,0,1,0,0,0,14,0,28,0,29,0,0,0,1,0,39,0,40,0,1,0,25,0,0,0,70,0,3,0,1,0,0,0,28,69,0,8,89,73,0,9,18,10,74,0,11,42,76,0,5,74,0,12,16,125,74,0,13,74,0,14,80,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,51,0,27,0,0,0,12,0,1,0,0,0,28,0,28,0,29,0,0,0,1,0,41,0,0,0,2,0,42,try,class,clazz,get,unsafe,define,class,org,apache,flink,test,serializable,class,data,0,class,data,length,target,class,loader,new,protection,domain,new,code,source,null,certificate,null,new,permissions,return,clazz,as,subclass,serializable,class,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader);1495441965;Creates a new class that is not part of the classpath that the current JVM uses._The class is ad-hoc defined and attached to the given ClassLoader.__@param targetClassLoader The class loader to attach the class to_@return The newly defined class;public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader) {_		final byte[] classData = {-54, -2, -70, -66, 0, 0, 0, 51, 0, 65, 10, 0, 15, 0, 43, 7, 0, 44,_				10, 0, 2, 0, 43, 10, 0, 2, 0, 45, 9, 0, 7, 0, 46, 10, 0, 15, 0, 47, 7, 0, 48, 7, 0,_				49, 10, 0, 8, 0, 43, 8, 0, 50, 10, 0, 8, 0, 51, 10, 0, 8, 0, 52, 10, 0, 8, 0, 53, 10,_				0, 8, 0, 54, 7, 0, 55, 7, 0, 56, 1, 0, 16, 115, 101, 114, 105, 97, 108, 86, 101, 114,_				115, 105, 111, 110, 85, 73, 68, 1, 0, 1, 74, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110,_				116, 86, 97, 108, 117, 101, 5, -1, -1, -1, -1, -1, -1, -1, -3, 1, 0, 6, 114, 97, 110,_				100, 111, 109, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67,_				111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108,_				101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98,_				108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 35, 76, 111, 114, 103, 47, 97, 112, 97, 99,_				104, 101, 47, 102, 108, 105, 110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108,_				105, 122, 97, 98, 108, 101, 59, 1, 0, 6, 101, 113, 117, 97, 108, 115, 1, 0, 21, 40, 76,_				106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0,_				1, 111, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99,_				116, 59, 1, 0, 4, 116, 104, 97, 116, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97,_				98, 108, 101, 7, 0, 48, 1, 0, 8, 104, 97, 115, 104, 67, 111, 100, 101, 1, 0, 3, 40, 41,_				73, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97,_				47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114,_				99, 101, 70, 105, 108, 101, 1, 0, 21, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105,_				122, 97, 98, 108, 101, 46, 106, 97, 118, 97, 12, 0, 23, 0, 24, 1, 0, 16, 106, 97, 118, 97,_				47, 117, 116, 105, 108, 47, 82, 97, 110, 100, 111, 109, 12, 0, 57, 0, 58, 12, 0, 22, 0, 18,_				12, 0, 59, 0, 60, 1, 0, 33, 111, 114, 103, 47, 97, 112, 97, 99, 104, 101, 47, 102, 108, 105,_				110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122, 97, 98, 108, 101, 1,_				0, 23, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117,_				105, 108, 100, 101, 114, 1, 0, 24, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122,_				97, 98, 108, 101, 123, 114, 97, 110, 100, 111, 109, 61, 12, 0, 61, 0, 62, 12, 0, 61, 0, 63,_				12, 0, 61, 0, 64, 12, 0, 39, 0, 40, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,_				79, 98, 106, 101, 99, 116, 1, 0, 20, 106, 97, 118, 97, 47, 105, 111, 47, 83, 101, 114, 105,_				97, 108, 105, 122, 97, 98, 108, 101, 1, 0, 8, 110, 101, 120, 116, 76, 111, 110, 103, 1, 0,_				3, 40, 41, 74, 1, 0, 8, 103, 101, 116, 67, 108, 97, 115, 115, 1, 0, 19, 40, 41, 76, 106, 97,_				118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 6, 97, 112, 112, 101,_				110, 100, 1, 0, 45, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105,_				110, 103, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 1, 0, 28, 40, 74, 41, 76, 106, 97, 118, 97, 47,_				108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 1,_				0, 28, 40, 67, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 0, 33, 0, 7, 0, 15, 0, 1, 0, 16, 0, 2, 0, 26, 0,_				17, 0, 18, 0, 1, 0, 19, 0, 0, 0, 2, 0, 20, 0, 18, 0, 22, 0, 18, 0, 0, 0, 4, 0, 1, 0, 23, 0,_				24, 0, 1, 0, 25, 0, 0, 0, 69, 0, 3, 0, 1, 0, 0, 0, 19, 42, -73, 0, 1, 42, -69, 0, 2, 89, -73,_				0, 3, -74, 0, 4, -75, 0, 5, -79, 0, 0, 0, 2, 0, 26, 0, 0, 0, 14, 0, 3, 0, 0, 0, 30, 0, 4, 0,_				31, 0, 18, 0, 32, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 19, 0, 28, 0, 29, 0, 0, 0, 1, 0, 30, 0,_				31, 0, 1, 0, 25, 0, 0, 0, -116, 0, 4, 0, 3, 0, 0, 0, 47, 42, 43, -90, 0, 5, 4, -84, 43, -58,_				0, 14, 42, -74, 0, 6, 43, -74, 0, 6, -91, 0, 5, 3, -84, 43, -64, 0, 7, 77, 42, -76, 0, 5, 44,_				-76, 0, 5, -108, -102, 0, 7, 4, -89, 0, 4, 3, -84, 0, 0, 0, 3, 0, 26, 0, 0, 0, 18, 0, 4, 0, 0,_				0, 36, 0, 7, 0, 37, 0, 24, 0, 39, 0, 29, 0, 40, 0, 27, 0, 0, 0, 32, 0, 3, 0, 0, 0, 47, 0, 28,_				0, 29, 0, 0, 0, 0, 0, 47, 0, 32, 0, 33, 0, 1, 0, 29, 0, 18, 0, 34, 0, 29, 0, 2, 0, 35, 0, 0,_				0, 13, 0, 5, 7, 14, 1, -4, 0, 20, 7, 0, 36, 64, 1, 0, 1, 0, 37, 0, 38, 0, 1, 0, 25, 0, 0, 0,_				56, 0, 5, 0, 1, 0, 0, 0, 14, 42, -76, 0, 5, 42, -76, 0, 5, 16, 32, 125, -125, -120, -84, 0, 0,_				0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 46, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 14, 0, 28, 0,_				29, 0, 0, 0, 1, 0, 39, 0, 40, 0, 1, 0, 25, 0, 0, 0, 70, 0, 3, 0, 1, 0, 0, 0, 28, -69, 0, 8,_				89, -73, 0, 9, 18, 10, -74, 0, 11, 42, -76, 0, 5, -74, 0, 12, 16, 125, -74, 0, 13, -74, 0, 14,_				-80, 0, 0, 0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 51, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 28,_				0, 28, 0, 29, 0, 0, 0, 1, 0, 41, 0, 0, 0, 2, 0, 42,}___		try {_			_			Class<?> clazz = getUnsafe().defineClass(_					"org.apache.flink.TestSerializable",_					classData, 0, classData.length,_					targetClassLoader,_					new ProtectionDomain(new CodeSource(null, (Certificate[]) null), new Permissions()))___			return clazz.asSubclass(Serializable.class)__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,the,class,is,ad,hoc,defined,and,attached,to,the,given,class,loader,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,newly,defined,class;public,static,class,extends,serializable,create,class,not,in,class,path,class,loader,target,class,loader,final,byte,class,data,54,2,70,66,0,0,0,51,0,65,10,0,15,0,43,7,0,44,10,0,2,0,43,10,0,2,0,45,9,0,7,0,46,10,0,15,0,47,7,0,48,7,0,49,10,0,8,0,43,8,0,50,10,0,8,0,51,10,0,8,0,52,10,0,8,0,53,10,0,8,0,54,7,0,55,7,0,56,1,0,16,115,101,114,105,97,108,86,101,114,115,105,111,110,85,73,68,1,0,1,74,1,0,13,67,111,110,115,116,97,110,116,86,97,108,117,101,5,1,1,1,1,1,1,1,3,1,0,6,114,97,110,100,111,109,1,0,6,60,105,110,105,116,62,1,0,3,40,41,86,1,0,4,67,111,100,101,1,0,15,76,105,110,101,78,117,109,98,101,114,84,97,98,108,101,1,0,18,76,111,99,97,108,86,97,114,105,97,98,108,101,84,97,98,108,101,1,0,4,116,104,105,115,1,0,35,76,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,59,1,0,6,101,113,117,97,108,115,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,41,90,1,0,1,111,1,0,18,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,1,0,4,116,104,97,116,1,0,13,83,116,97,99,107,77,97,112,84,97,98,108,101,7,0,48,1,0,8,104,97,115,104,67,111,100,101,1,0,3,40,41,73,1,0,8,116,111,83,116,114,105,110,103,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,10,83,111,117,114,99,101,70,105,108,101,1,0,21,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,46,106,97,118,97,12,0,23,0,24,1,0,16,106,97,118,97,47,117,116,105,108,47,82,97,110,100,111,109,12,0,57,0,58,12,0,22,0,18,12,0,59,0,60,1,0,33,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,1,0,23,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,1,0,24,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,123,114,97,110,100,111,109,61,12,0,61,0,62,12,0,61,0,63,12,0,61,0,64,12,0,39,0,40,1,0,16,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,1,0,20,106,97,118,97,47,105,111,47,83,101,114,105,97,108,105,122,97,98,108,101,1,0,8,110,101,120,116,76,111,110,103,1,0,3,40,41,74,1,0,8,103,101,116,67,108,97,115,115,1,0,19,40,41,76,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,59,1,0,6,97,112,112,101,110,100,1,0,45,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,74,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,67,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,0,33,0,7,0,15,0,1,0,16,0,2,0,26,0,17,0,18,0,1,0,19,0,0,0,2,0,20,0,18,0,22,0,18,0,0,0,4,0,1,0,23,0,24,0,1,0,25,0,0,0,69,0,3,0,1,0,0,0,19,42,73,0,1,42,69,0,2,89,73,0,3,74,0,4,75,0,5,79,0,0,0,2,0,26,0,0,0,14,0,3,0,0,0,30,0,4,0,31,0,18,0,32,0,27,0,0,0,12,0,1,0,0,0,19,0,28,0,29,0,0,0,1,0,30,0,31,0,1,0,25,0,0,0,116,0,4,0,3,0,0,0,47,42,43,90,0,5,4,84,43,58,0,14,42,74,0,6,43,74,0,6,91,0,5,3,84,43,64,0,7,77,42,76,0,5,44,76,0,5,108,102,0,7,4,89,0,4,3,84,0,0,0,3,0,26,0,0,0,18,0,4,0,0,0,36,0,7,0,37,0,24,0,39,0,29,0,40,0,27,0,0,0,32,0,3,0,0,0,47,0,28,0,29,0,0,0,0,0,47,0,32,0,33,0,1,0,29,0,18,0,34,0,29,0,2,0,35,0,0,0,13,0,5,7,14,1,4,0,20,7,0,36,64,1,0,1,0,37,0,38,0,1,0,25,0,0,0,56,0,5,0,1,0,0,0,14,42,76,0,5,42,76,0,5,16,32,125,125,120,84,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,46,0,27,0,0,0,12,0,1,0,0,0,14,0,28,0,29,0,0,0,1,0,39,0,40,0,1,0,25,0,0,0,70,0,3,0,1,0,0,0,28,69,0,8,89,73,0,9,18,10,74,0,11,42,76,0,5,74,0,12,16,125,74,0,13,74,0,14,80,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,51,0,27,0,0,0,12,0,1,0,0,0,28,0,28,0,29,0,0,0,1,0,41,0,0,0,2,0,42,try,class,clazz,get,unsafe,define,class,org,apache,flink,test,serializable,class,data,0,class,data,length,target,class,loader,new,protection,domain,new,code,source,null,certificate,null,new,permissions,return,clazz,as,subclass,serializable,class,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader);1495790937;Creates a new class that is not part of the classpath that the current JVM uses._The class is ad-hoc defined and attached to the given ClassLoader.__@param targetClassLoader The class loader to attach the class to_@return The newly defined class;public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader) {_		final byte[] classData = {-54, -2, -70, -66, 0, 0, 0, 51, 0, 65, 10, 0, 15, 0, 43, 7, 0, 44,_				10, 0, 2, 0, 43, 10, 0, 2, 0, 45, 9, 0, 7, 0, 46, 10, 0, 15, 0, 47, 7, 0, 48, 7, 0,_				49, 10, 0, 8, 0, 43, 8, 0, 50, 10, 0, 8, 0, 51, 10, 0, 8, 0, 52, 10, 0, 8, 0, 53, 10,_				0, 8, 0, 54, 7, 0, 55, 7, 0, 56, 1, 0, 16, 115, 101, 114, 105, 97, 108, 86, 101, 114,_				115, 105, 111, 110, 85, 73, 68, 1, 0, 1, 74, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110,_				116, 86, 97, 108, 117, 101, 5, -1, -1, -1, -1, -1, -1, -1, -3, 1, 0, 6, 114, 97, 110,_				100, 111, 109, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67,_				111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108,_				101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98,_				108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 35, 76, 111, 114, 103, 47, 97, 112, 97, 99,_				104, 101, 47, 102, 108, 105, 110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108,_				105, 122, 97, 98, 108, 101, 59, 1, 0, 6, 101, 113, 117, 97, 108, 115, 1, 0, 21, 40, 76,_				106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0,_				1, 111, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99,_				116, 59, 1, 0, 4, 116, 104, 97, 116, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97,_				98, 108, 101, 7, 0, 48, 1, 0, 8, 104, 97, 115, 104, 67, 111, 100, 101, 1, 0, 3, 40, 41,_				73, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97,_				47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114,_				99, 101, 70, 105, 108, 101, 1, 0, 21, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105,_				122, 97, 98, 108, 101, 46, 106, 97, 118, 97, 12, 0, 23, 0, 24, 1, 0, 16, 106, 97, 118, 97,_				47, 117, 116, 105, 108, 47, 82, 97, 110, 100, 111, 109, 12, 0, 57, 0, 58, 12, 0, 22, 0, 18,_				12, 0, 59, 0, 60, 1, 0, 33, 111, 114, 103, 47, 97, 112, 97, 99, 104, 101, 47, 102, 108, 105,_				110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122, 97, 98, 108, 101, 1,_				0, 23, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117,_				105, 108, 100, 101, 114, 1, 0, 24, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122,_				97, 98, 108, 101, 123, 114, 97, 110, 100, 111, 109, 61, 12, 0, 61, 0, 62, 12, 0, 61, 0, 63,_				12, 0, 61, 0, 64, 12, 0, 39, 0, 40, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,_				79, 98, 106, 101, 99, 116, 1, 0, 20, 106, 97, 118, 97, 47, 105, 111, 47, 83, 101, 114, 105,_				97, 108, 105, 122, 97, 98, 108, 101, 1, 0, 8, 110, 101, 120, 116, 76, 111, 110, 103, 1, 0,_				3, 40, 41, 74, 1, 0, 8, 103, 101, 116, 67, 108, 97, 115, 115, 1, 0, 19, 40, 41, 76, 106, 97,_				118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 6, 97, 112, 112, 101,_				110, 100, 1, 0, 45, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105,_				110, 103, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 1, 0, 28, 40, 74, 41, 76, 106, 97, 118, 97, 47,_				108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 1,_				0, 28, 40, 67, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 0, 33, 0, 7, 0, 15, 0, 1, 0, 16, 0, 2, 0, 26, 0,_				17, 0, 18, 0, 1, 0, 19, 0, 0, 0, 2, 0, 20, 0, 18, 0, 22, 0, 18, 0, 0, 0, 4, 0, 1, 0, 23, 0,_				24, 0, 1, 0, 25, 0, 0, 0, 69, 0, 3, 0, 1, 0, 0, 0, 19, 42, -73, 0, 1, 42, -69, 0, 2, 89, -73,_				0, 3, -74, 0, 4, -75, 0, 5, -79, 0, 0, 0, 2, 0, 26, 0, 0, 0, 14, 0, 3, 0, 0, 0, 30, 0, 4, 0,_				31, 0, 18, 0, 32, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 19, 0, 28, 0, 29, 0, 0, 0, 1, 0, 30, 0,_				31, 0, 1, 0, 25, 0, 0, 0, -116, 0, 4, 0, 3, 0, 0, 0, 47, 42, 43, -90, 0, 5, 4, -84, 43, -58,_				0, 14, 42, -74, 0, 6, 43, -74, 0, 6, -91, 0, 5, 3, -84, 43, -64, 0, 7, 77, 42, -76, 0, 5, 44,_				-76, 0, 5, -108, -102, 0, 7, 4, -89, 0, 4, 3, -84, 0, 0, 0, 3, 0, 26, 0, 0, 0, 18, 0, 4, 0, 0,_				0, 36, 0, 7, 0, 37, 0, 24, 0, 39, 0, 29, 0, 40, 0, 27, 0, 0, 0, 32, 0, 3, 0, 0, 0, 47, 0, 28,_				0, 29, 0, 0, 0, 0, 0, 47, 0, 32, 0, 33, 0, 1, 0, 29, 0, 18, 0, 34, 0, 29, 0, 2, 0, 35, 0, 0,_				0, 13, 0, 5, 7, 14, 1, -4, 0, 20, 7, 0, 36, 64, 1, 0, 1, 0, 37, 0, 38, 0, 1, 0, 25, 0, 0, 0,_				56, 0, 5, 0, 1, 0, 0, 0, 14, 42, -76, 0, 5, 42, -76, 0, 5, 16, 32, 125, -125, -120, -84, 0, 0,_				0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 46, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 14, 0, 28, 0,_				29, 0, 0, 0, 1, 0, 39, 0, 40, 0, 1, 0, 25, 0, 0, 0, 70, 0, 3, 0, 1, 0, 0, 0, 28, -69, 0, 8,_				89, -73, 0, 9, 18, 10, -74, 0, 11, 42, -76, 0, 5, -74, 0, 12, 16, 125, -74, 0, 13, -74, 0, 14,_				-80, 0, 0, 0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 51, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 28,_				0, 28, 0, 29, 0, 0, 0, 1, 0, 41, 0, 0, 0, 2, 0, 42}___		try {_			_			Class<?> clazz = getUnsafe().defineClass(_					"org.apache.flink.TestSerializable",_					classData, 0, classData.length,_					targetClassLoader,_					new ProtectionDomain(new CodeSource(null, (Certificate[]) null), new Permissions()))___			return clazz.asSubclass(Serializable.class)__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,the,class,is,ad,hoc,defined,and,attached,to,the,given,class,loader,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,newly,defined,class;public,static,class,extends,serializable,create,class,not,in,class,path,class,loader,target,class,loader,final,byte,class,data,54,2,70,66,0,0,0,51,0,65,10,0,15,0,43,7,0,44,10,0,2,0,43,10,0,2,0,45,9,0,7,0,46,10,0,15,0,47,7,0,48,7,0,49,10,0,8,0,43,8,0,50,10,0,8,0,51,10,0,8,0,52,10,0,8,0,53,10,0,8,0,54,7,0,55,7,0,56,1,0,16,115,101,114,105,97,108,86,101,114,115,105,111,110,85,73,68,1,0,1,74,1,0,13,67,111,110,115,116,97,110,116,86,97,108,117,101,5,1,1,1,1,1,1,1,3,1,0,6,114,97,110,100,111,109,1,0,6,60,105,110,105,116,62,1,0,3,40,41,86,1,0,4,67,111,100,101,1,0,15,76,105,110,101,78,117,109,98,101,114,84,97,98,108,101,1,0,18,76,111,99,97,108,86,97,114,105,97,98,108,101,84,97,98,108,101,1,0,4,116,104,105,115,1,0,35,76,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,59,1,0,6,101,113,117,97,108,115,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,41,90,1,0,1,111,1,0,18,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,1,0,4,116,104,97,116,1,0,13,83,116,97,99,107,77,97,112,84,97,98,108,101,7,0,48,1,0,8,104,97,115,104,67,111,100,101,1,0,3,40,41,73,1,0,8,116,111,83,116,114,105,110,103,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,10,83,111,117,114,99,101,70,105,108,101,1,0,21,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,46,106,97,118,97,12,0,23,0,24,1,0,16,106,97,118,97,47,117,116,105,108,47,82,97,110,100,111,109,12,0,57,0,58,12,0,22,0,18,12,0,59,0,60,1,0,33,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,1,0,23,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,1,0,24,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,123,114,97,110,100,111,109,61,12,0,61,0,62,12,0,61,0,63,12,0,61,0,64,12,0,39,0,40,1,0,16,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,1,0,20,106,97,118,97,47,105,111,47,83,101,114,105,97,108,105,122,97,98,108,101,1,0,8,110,101,120,116,76,111,110,103,1,0,3,40,41,74,1,0,8,103,101,116,67,108,97,115,115,1,0,19,40,41,76,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,59,1,0,6,97,112,112,101,110,100,1,0,45,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,74,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,67,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,0,33,0,7,0,15,0,1,0,16,0,2,0,26,0,17,0,18,0,1,0,19,0,0,0,2,0,20,0,18,0,22,0,18,0,0,0,4,0,1,0,23,0,24,0,1,0,25,0,0,0,69,0,3,0,1,0,0,0,19,42,73,0,1,42,69,0,2,89,73,0,3,74,0,4,75,0,5,79,0,0,0,2,0,26,0,0,0,14,0,3,0,0,0,30,0,4,0,31,0,18,0,32,0,27,0,0,0,12,0,1,0,0,0,19,0,28,0,29,0,0,0,1,0,30,0,31,0,1,0,25,0,0,0,116,0,4,0,3,0,0,0,47,42,43,90,0,5,4,84,43,58,0,14,42,74,0,6,43,74,0,6,91,0,5,3,84,43,64,0,7,77,42,76,0,5,44,76,0,5,108,102,0,7,4,89,0,4,3,84,0,0,0,3,0,26,0,0,0,18,0,4,0,0,0,36,0,7,0,37,0,24,0,39,0,29,0,40,0,27,0,0,0,32,0,3,0,0,0,47,0,28,0,29,0,0,0,0,0,47,0,32,0,33,0,1,0,29,0,18,0,34,0,29,0,2,0,35,0,0,0,13,0,5,7,14,1,4,0,20,7,0,36,64,1,0,1,0,37,0,38,0,1,0,25,0,0,0,56,0,5,0,1,0,0,0,14,42,76,0,5,42,76,0,5,16,32,125,125,120,84,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,46,0,27,0,0,0,12,0,1,0,0,0,14,0,28,0,29,0,0,0,1,0,39,0,40,0,1,0,25,0,0,0,70,0,3,0,1,0,0,0,28,69,0,8,89,73,0,9,18,10,74,0,11,42,76,0,5,74,0,12,16,125,74,0,13,74,0,14,80,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,51,0,27,0,0,0,12,0,1,0,0,0,28,0,28,0,29,0,0,0,1,0,41,0,0,0,2,0,42,try,class,clazz,get,unsafe,define,class,org,apache,flink,test,serializable,class,data,0,class,data,length,target,class,loader,new,protection,domain,new,code,source,null,certificate,null,new,permissions,return,clazz,as,subclass,serializable,class,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader);1501495929;Creates a new class that is not part of the classpath that the current JVM uses._The class is ad-hoc defined and attached to the given ClassLoader.__@param targetClassLoader The class loader to attach the class to_@return The newly defined class;public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader) {_		final byte[] classData = {-54, -2, -70, -66, 0, 0, 0, 51, 0, 65, 10, 0, 15, 0, 43, 7, 0, 44,_				10, 0, 2, 0, 43, 10, 0, 2, 0, 45, 9, 0, 7, 0, 46, 10, 0, 15, 0, 47, 7, 0, 48, 7, 0,_				49, 10, 0, 8, 0, 43, 8, 0, 50, 10, 0, 8, 0, 51, 10, 0, 8, 0, 52, 10, 0, 8, 0, 53, 10,_				0, 8, 0, 54, 7, 0, 55, 7, 0, 56, 1, 0, 16, 115, 101, 114, 105, 97, 108, 86, 101, 114,_				115, 105, 111, 110, 85, 73, 68, 1, 0, 1, 74, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110,_				116, 86, 97, 108, 117, 101, 5, -1, -1, -1, -1, -1, -1, -1, -3, 1, 0, 6, 114, 97, 110,_				100, 111, 109, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67,_				111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108,_				101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98,_				108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 35, 76, 111, 114, 103, 47, 97, 112, 97, 99,_				104, 101, 47, 102, 108, 105, 110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108,_				105, 122, 97, 98, 108, 101, 59, 1, 0, 6, 101, 113, 117, 97, 108, 115, 1, 0, 21, 40, 76,_				106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0,_				1, 111, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99,_				116, 59, 1, 0, 4, 116, 104, 97, 116, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97,_				98, 108, 101, 7, 0, 48, 1, 0, 8, 104, 97, 115, 104, 67, 111, 100, 101, 1, 0, 3, 40, 41,_				73, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97,_				47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114,_				99, 101, 70, 105, 108, 101, 1, 0, 21, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105,_				122, 97, 98, 108, 101, 46, 106, 97, 118, 97, 12, 0, 23, 0, 24, 1, 0, 16, 106, 97, 118, 97,_				47, 117, 116, 105, 108, 47, 82, 97, 110, 100, 111, 109, 12, 0, 57, 0, 58, 12, 0, 22, 0, 18,_				12, 0, 59, 0, 60, 1, 0, 33, 111, 114, 103, 47, 97, 112, 97, 99, 104, 101, 47, 102, 108, 105,_				110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122, 97, 98, 108, 101, 1,_				0, 23, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117,_				105, 108, 100, 101, 114, 1, 0, 24, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122,_				97, 98, 108, 101, 123, 114, 97, 110, 100, 111, 109, 61, 12, 0, 61, 0, 62, 12, 0, 61, 0, 63,_				12, 0, 61, 0, 64, 12, 0, 39, 0, 40, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,_				79, 98, 106, 101, 99, 116, 1, 0, 20, 106, 97, 118, 97, 47, 105, 111, 47, 83, 101, 114, 105,_				97, 108, 105, 122, 97, 98, 108, 101, 1, 0, 8, 110, 101, 120, 116, 76, 111, 110, 103, 1, 0,_				3, 40, 41, 74, 1, 0, 8, 103, 101, 116, 67, 108, 97, 115, 115, 1, 0, 19, 40, 41, 76, 106, 97,_				118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 6, 97, 112, 112, 101,_				110, 100, 1, 0, 45, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105,_				110, 103, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 1, 0, 28, 40, 74, 41, 76, 106, 97, 118, 97, 47,_				108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 1,_				0, 28, 40, 67, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 0, 33, 0, 7, 0, 15, 0, 1, 0, 16, 0, 2, 0, 26, 0,_				17, 0, 18, 0, 1, 0, 19, 0, 0, 0, 2, 0, 20, 0, 18, 0, 22, 0, 18, 0, 0, 0, 4, 0, 1, 0, 23, 0,_				24, 0, 1, 0, 25, 0, 0, 0, 69, 0, 3, 0, 1, 0, 0, 0, 19, 42, -73, 0, 1, 42, -69, 0, 2, 89, -73,_				0, 3, -74, 0, 4, -75, 0, 5, -79, 0, 0, 0, 2, 0, 26, 0, 0, 0, 14, 0, 3, 0, 0, 0, 30, 0, 4, 0,_				31, 0, 18, 0, 32, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 19, 0, 28, 0, 29, 0, 0, 0, 1, 0, 30, 0,_				31, 0, 1, 0, 25, 0, 0, 0, -116, 0, 4, 0, 3, 0, 0, 0, 47, 42, 43, -90, 0, 5, 4, -84, 43, -58,_				0, 14, 42, -74, 0, 6, 43, -74, 0, 6, -91, 0, 5, 3, -84, 43, -64, 0, 7, 77, 42, -76, 0, 5, 44,_				-76, 0, 5, -108, -102, 0, 7, 4, -89, 0, 4, 3, -84, 0, 0, 0, 3, 0, 26, 0, 0, 0, 18, 0, 4, 0, 0,_				0, 36, 0, 7, 0, 37, 0, 24, 0, 39, 0, 29, 0, 40, 0, 27, 0, 0, 0, 32, 0, 3, 0, 0, 0, 47, 0, 28,_				0, 29, 0, 0, 0, 0, 0, 47, 0, 32, 0, 33, 0, 1, 0, 29, 0, 18, 0, 34, 0, 29, 0, 2, 0, 35, 0, 0,_				0, 13, 0, 5, 7, 14, 1, -4, 0, 20, 7, 0, 36, 64, 1, 0, 1, 0, 37, 0, 38, 0, 1, 0, 25, 0, 0, 0,_				56, 0, 5, 0, 1, 0, 0, 0, 14, 42, -76, 0, 5, 42, -76, 0, 5, 16, 32, 125, -125, -120, -84, 0, 0,_				0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 46, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 14, 0, 28, 0,_				29, 0, 0, 0, 1, 0, 39, 0, 40, 0, 1, 0, 25, 0, 0, 0, 70, 0, 3, 0, 1, 0, 0, 0, 28, -69, 0, 8,_				89, -73, 0, 9, 18, 10, -74, 0, 11, 42, -76, 0, 5, -74, 0, 12, 16, 125, -74, 0, 13, -74, 0, 14,_				-80, 0, 0, 0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 51, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 28,_				0, 28, 0, 29, 0, 0, 0, 1, 0, 41, 0, 0, 0, 2, 0, 42}___		try {_			_			Class<?> clazz = getUnsafe().defineClass(_					"org.apache.flink.TestSerializable",_					classData, 0, classData.length,_					targetClassLoader,_					new ProtectionDomain(new CodeSource(null, (Certificate[]) null), new Permissions()))___			return clazz.asSubclass(Serializable.class)__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,the,class,is,ad,hoc,defined,and,attached,to,the,given,class,loader,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,newly,defined,class;public,static,class,extends,serializable,create,class,not,in,class,path,class,loader,target,class,loader,final,byte,class,data,54,2,70,66,0,0,0,51,0,65,10,0,15,0,43,7,0,44,10,0,2,0,43,10,0,2,0,45,9,0,7,0,46,10,0,15,0,47,7,0,48,7,0,49,10,0,8,0,43,8,0,50,10,0,8,0,51,10,0,8,0,52,10,0,8,0,53,10,0,8,0,54,7,0,55,7,0,56,1,0,16,115,101,114,105,97,108,86,101,114,115,105,111,110,85,73,68,1,0,1,74,1,0,13,67,111,110,115,116,97,110,116,86,97,108,117,101,5,1,1,1,1,1,1,1,3,1,0,6,114,97,110,100,111,109,1,0,6,60,105,110,105,116,62,1,0,3,40,41,86,1,0,4,67,111,100,101,1,0,15,76,105,110,101,78,117,109,98,101,114,84,97,98,108,101,1,0,18,76,111,99,97,108,86,97,114,105,97,98,108,101,84,97,98,108,101,1,0,4,116,104,105,115,1,0,35,76,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,59,1,0,6,101,113,117,97,108,115,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,41,90,1,0,1,111,1,0,18,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,1,0,4,116,104,97,116,1,0,13,83,116,97,99,107,77,97,112,84,97,98,108,101,7,0,48,1,0,8,104,97,115,104,67,111,100,101,1,0,3,40,41,73,1,0,8,116,111,83,116,114,105,110,103,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,10,83,111,117,114,99,101,70,105,108,101,1,0,21,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,46,106,97,118,97,12,0,23,0,24,1,0,16,106,97,118,97,47,117,116,105,108,47,82,97,110,100,111,109,12,0,57,0,58,12,0,22,0,18,12,0,59,0,60,1,0,33,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,1,0,23,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,1,0,24,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,123,114,97,110,100,111,109,61,12,0,61,0,62,12,0,61,0,63,12,0,61,0,64,12,0,39,0,40,1,0,16,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,1,0,20,106,97,118,97,47,105,111,47,83,101,114,105,97,108,105,122,97,98,108,101,1,0,8,110,101,120,116,76,111,110,103,1,0,3,40,41,74,1,0,8,103,101,116,67,108,97,115,115,1,0,19,40,41,76,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,59,1,0,6,97,112,112,101,110,100,1,0,45,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,74,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,67,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,0,33,0,7,0,15,0,1,0,16,0,2,0,26,0,17,0,18,0,1,0,19,0,0,0,2,0,20,0,18,0,22,0,18,0,0,0,4,0,1,0,23,0,24,0,1,0,25,0,0,0,69,0,3,0,1,0,0,0,19,42,73,0,1,42,69,0,2,89,73,0,3,74,0,4,75,0,5,79,0,0,0,2,0,26,0,0,0,14,0,3,0,0,0,30,0,4,0,31,0,18,0,32,0,27,0,0,0,12,0,1,0,0,0,19,0,28,0,29,0,0,0,1,0,30,0,31,0,1,0,25,0,0,0,116,0,4,0,3,0,0,0,47,42,43,90,0,5,4,84,43,58,0,14,42,74,0,6,43,74,0,6,91,0,5,3,84,43,64,0,7,77,42,76,0,5,44,76,0,5,108,102,0,7,4,89,0,4,3,84,0,0,0,3,0,26,0,0,0,18,0,4,0,0,0,36,0,7,0,37,0,24,0,39,0,29,0,40,0,27,0,0,0,32,0,3,0,0,0,47,0,28,0,29,0,0,0,0,0,47,0,32,0,33,0,1,0,29,0,18,0,34,0,29,0,2,0,35,0,0,0,13,0,5,7,14,1,4,0,20,7,0,36,64,1,0,1,0,37,0,38,0,1,0,25,0,0,0,56,0,5,0,1,0,0,0,14,42,76,0,5,42,76,0,5,16,32,125,125,120,84,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,46,0,27,0,0,0,12,0,1,0,0,0,14,0,28,0,29,0,0,0,1,0,39,0,40,0,1,0,25,0,0,0,70,0,3,0,1,0,0,0,28,69,0,8,89,73,0,9,18,10,74,0,11,42,76,0,5,74,0,12,16,125,74,0,13,74,0,14,80,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,51,0,27,0,0,0,12,0,1,0,0,0,28,0,28,0,29,0,0,0,1,0,41,0,0,0,2,0,42,try,class,clazz,get,unsafe,define,class,org,apache,flink,test,serializable,class,data,0,class,data,length,target,class,loader,new,protection,domain,new,code,source,null,certificate,null,new,permissions,return,clazz,as,subclass,serializable,class,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader);1532591535;Creates a new class that is not part of the classpath that the current JVM uses._The class is ad-hoc defined and attached to the given ClassLoader.__@param targetClassLoader The class loader to attach the class to_@return The newly defined class;public static Class<? extends Serializable> createClassNotInClassPath(ClassLoader targetClassLoader) {_		final byte[] classData = {-54, -2, -70, -66, 0, 0, 0, 51, 0, 65, 10, 0, 15, 0, 43, 7, 0, 44,_				10, 0, 2, 0, 43, 10, 0, 2, 0, 45, 9, 0, 7, 0, 46, 10, 0, 15, 0, 47, 7, 0, 48, 7, 0,_				49, 10, 0, 8, 0, 43, 8, 0, 50, 10, 0, 8, 0, 51, 10, 0, 8, 0, 52, 10, 0, 8, 0, 53, 10,_				0, 8, 0, 54, 7, 0, 55, 7, 0, 56, 1, 0, 16, 115, 101, 114, 105, 97, 108, 86, 101, 114,_				115, 105, 111, 110, 85, 73, 68, 1, 0, 1, 74, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110,_				116, 86, 97, 108, 117, 101, 5, -1, -1, -1, -1, -1, -1, -1, -3, 1, 0, 6, 114, 97, 110,_				100, 111, 109, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67,_				111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108,_				101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98,_				108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 35, 76, 111, 114, 103, 47, 97, 112, 97, 99,_				104, 101, 47, 102, 108, 105, 110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108,_				105, 122, 97, 98, 108, 101, 59, 1, 0, 6, 101, 113, 117, 97, 108, 115, 1, 0, 21, 40, 76,_				106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0,_				1, 111, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99,_				116, 59, 1, 0, 4, 116, 104, 97, 116, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97,_				98, 108, 101, 7, 0, 48, 1, 0, 8, 104, 97, 115, 104, 67, 111, 100, 101, 1, 0, 3, 40, 41,_				73, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97,_				47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114,_				99, 101, 70, 105, 108, 101, 1, 0, 21, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105,_				122, 97, 98, 108, 101, 46, 106, 97, 118, 97, 12, 0, 23, 0, 24, 1, 0, 16, 106, 97, 118, 97,_				47, 117, 116, 105, 108, 47, 82, 97, 110, 100, 111, 109, 12, 0, 57, 0, 58, 12, 0, 22, 0, 18,_				12, 0, 59, 0, 60, 1, 0, 33, 111, 114, 103, 47, 97, 112, 97, 99, 104, 101, 47, 102, 108, 105,_				110, 107, 47, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122, 97, 98, 108, 101, 1,_				0, 23, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117,_				105, 108, 100, 101, 114, 1, 0, 24, 84, 101, 115, 116, 83, 101, 114, 105, 97, 108, 105, 122,_				97, 98, 108, 101, 123, 114, 97, 110, 100, 111, 109, 61, 12, 0, 61, 0, 62, 12, 0, 61, 0, 63,_				12, 0, 61, 0, 64, 12, 0, 39, 0, 40, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,_				79, 98, 106, 101, 99, 116, 1, 0, 20, 106, 97, 118, 97, 47, 105, 111, 47, 83, 101, 114, 105,_				97, 108, 105, 122, 97, 98, 108, 101, 1, 0, 8, 110, 101, 120, 116, 76, 111, 110, 103, 1, 0,_				3, 40, 41, 74, 1, 0, 8, 103, 101, 116, 67, 108, 97, 115, 115, 1, 0, 19, 40, 41, 76, 106, 97,_				118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 6, 97, 112, 112, 101,_				110, 100, 1, 0, 45, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105,_				110, 103, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 1, 0, 28, 40, 74, 41, 76, 106, 97, 118, 97, 47,_				108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 1,_				0, 28, 40, 67, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110,_				103, 66, 117, 105, 108, 100, 101, 114, 59, 0, 33, 0, 7, 0, 15, 0, 1, 0, 16, 0, 2, 0, 26, 0,_				17, 0, 18, 0, 1, 0, 19, 0, 0, 0, 2, 0, 20, 0, 18, 0, 22, 0, 18, 0, 0, 0, 4, 0, 1, 0, 23, 0,_				24, 0, 1, 0, 25, 0, 0, 0, 69, 0, 3, 0, 1, 0, 0, 0, 19, 42, -73, 0, 1, 42, -69, 0, 2, 89, -73,_				0, 3, -74, 0, 4, -75, 0, 5, -79, 0, 0, 0, 2, 0, 26, 0, 0, 0, 14, 0, 3, 0, 0, 0, 30, 0, 4, 0,_				31, 0, 18, 0, 32, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 19, 0, 28, 0, 29, 0, 0, 0, 1, 0, 30, 0,_				31, 0, 1, 0, 25, 0, 0, 0, -116, 0, 4, 0, 3, 0, 0, 0, 47, 42, 43, -90, 0, 5, 4, -84, 43, -58,_				0, 14, 42, -74, 0, 6, 43, -74, 0, 6, -91, 0, 5, 3, -84, 43, -64, 0, 7, 77, 42, -76, 0, 5, 44,_				-76, 0, 5, -108, -102, 0, 7, 4, -89, 0, 4, 3, -84, 0, 0, 0, 3, 0, 26, 0, 0, 0, 18, 0, 4, 0, 0,_				0, 36, 0, 7, 0, 37, 0, 24, 0, 39, 0, 29, 0, 40, 0, 27, 0, 0, 0, 32, 0, 3, 0, 0, 0, 47, 0, 28,_				0, 29, 0, 0, 0, 0, 0, 47, 0, 32, 0, 33, 0, 1, 0, 29, 0, 18, 0, 34, 0, 29, 0, 2, 0, 35, 0, 0,_				0, 13, 0, 5, 7, 14, 1, -4, 0, 20, 7, 0, 36, 64, 1, 0, 1, 0, 37, 0, 38, 0, 1, 0, 25, 0, 0, 0,_				56, 0, 5, 0, 1, 0, 0, 0, 14, 42, -76, 0, 5, 42, -76, 0, 5, 16, 32, 125, -125, -120, -84, 0, 0,_				0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 46, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 14, 0, 28, 0,_				29, 0, 0, 0, 1, 0, 39, 0, 40, 0, 1, 0, 25, 0, 0, 0, 70, 0, 3, 0, 1, 0, 0, 0, 28, -69, 0, 8,_				89, -73, 0, 9, 18, 10, -74, 0, 11, 42, -76, 0, 5, -74, 0, 12, 16, 125, -74, 0, 13, -74, 0, 14,_				-80, 0, 0, 0, 2, 0, 26, 0, 0, 0, 6, 0, 1, 0, 0, 0, 51, 0, 27, 0, 0, 0, 12, 0, 1, 0, 0, 0, 28,_				0, 28, 0, 29, 0, 0, 0, 1, 0, 41, 0, 0, 0, 2, 0, 42}___		try {_			_			Class<?> clazz = getUnsafe().defineClass(_					"org.apache.flink.TestSerializable",_					classData, 0, classData.length,_					targetClassLoader,_					new ProtectionDomain(new CodeSource(null, (Certificate[]) null), new Permissions()))___			return clazz.asSubclass(Serializable.class)__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,the,class,is,ad,hoc,defined,and,attached,to,the,given,class,loader,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,newly,defined,class;public,static,class,extends,serializable,create,class,not,in,class,path,class,loader,target,class,loader,final,byte,class,data,54,2,70,66,0,0,0,51,0,65,10,0,15,0,43,7,0,44,10,0,2,0,43,10,0,2,0,45,9,0,7,0,46,10,0,15,0,47,7,0,48,7,0,49,10,0,8,0,43,8,0,50,10,0,8,0,51,10,0,8,0,52,10,0,8,0,53,10,0,8,0,54,7,0,55,7,0,56,1,0,16,115,101,114,105,97,108,86,101,114,115,105,111,110,85,73,68,1,0,1,74,1,0,13,67,111,110,115,116,97,110,116,86,97,108,117,101,5,1,1,1,1,1,1,1,3,1,0,6,114,97,110,100,111,109,1,0,6,60,105,110,105,116,62,1,0,3,40,41,86,1,0,4,67,111,100,101,1,0,15,76,105,110,101,78,117,109,98,101,114,84,97,98,108,101,1,0,18,76,111,99,97,108,86,97,114,105,97,98,108,101,84,97,98,108,101,1,0,4,116,104,105,115,1,0,35,76,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,59,1,0,6,101,113,117,97,108,115,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,41,90,1,0,1,111,1,0,18,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,1,0,4,116,104,97,116,1,0,13,83,116,97,99,107,77,97,112,84,97,98,108,101,7,0,48,1,0,8,104,97,115,104,67,111,100,101,1,0,3,40,41,73,1,0,8,116,111,83,116,114,105,110,103,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,10,83,111,117,114,99,101,70,105,108,101,1,0,21,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,46,106,97,118,97,12,0,23,0,24,1,0,16,106,97,118,97,47,117,116,105,108,47,82,97,110,100,111,109,12,0,57,0,58,12,0,22,0,18,12,0,59,0,60,1,0,33,111,114,103,47,97,112,97,99,104,101,47,102,108,105,110,107,47,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,1,0,23,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,1,0,24,84,101,115,116,83,101,114,105,97,108,105,122,97,98,108,101,123,114,97,110,100,111,109,61,12,0,61,0,62,12,0,61,0,63,12,0,61,0,64,12,0,39,0,40,1,0,16,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,1,0,20,106,97,118,97,47,105,111,47,83,101,114,105,97,108,105,122,97,98,108,101,1,0,8,110,101,120,116,76,111,110,103,1,0,3,40,41,74,1,0,8,103,101,116,67,108,97,115,115,1,0,19,40,41,76,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,59,1,0,6,97,112,112,101,110,100,1,0,45,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,74,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,28,40,67,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,0,33,0,7,0,15,0,1,0,16,0,2,0,26,0,17,0,18,0,1,0,19,0,0,0,2,0,20,0,18,0,22,0,18,0,0,0,4,0,1,0,23,0,24,0,1,0,25,0,0,0,69,0,3,0,1,0,0,0,19,42,73,0,1,42,69,0,2,89,73,0,3,74,0,4,75,0,5,79,0,0,0,2,0,26,0,0,0,14,0,3,0,0,0,30,0,4,0,31,0,18,0,32,0,27,0,0,0,12,0,1,0,0,0,19,0,28,0,29,0,0,0,1,0,30,0,31,0,1,0,25,0,0,0,116,0,4,0,3,0,0,0,47,42,43,90,0,5,4,84,43,58,0,14,42,74,0,6,43,74,0,6,91,0,5,3,84,43,64,0,7,77,42,76,0,5,44,76,0,5,108,102,0,7,4,89,0,4,3,84,0,0,0,3,0,26,0,0,0,18,0,4,0,0,0,36,0,7,0,37,0,24,0,39,0,29,0,40,0,27,0,0,0,32,0,3,0,0,0,47,0,28,0,29,0,0,0,0,0,47,0,32,0,33,0,1,0,29,0,18,0,34,0,29,0,2,0,35,0,0,0,13,0,5,7,14,1,4,0,20,7,0,36,64,1,0,1,0,37,0,38,0,1,0,25,0,0,0,56,0,5,0,1,0,0,0,14,42,76,0,5,42,76,0,5,16,32,125,125,120,84,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,46,0,27,0,0,0,12,0,1,0,0,0,14,0,28,0,29,0,0,0,1,0,39,0,40,0,1,0,25,0,0,0,70,0,3,0,1,0,0,0,28,69,0,8,89,73,0,9,18,10,74,0,11,42,76,0,5,74,0,12,16,125,74,0,13,74,0,14,80,0,0,0,2,0,26,0,0,0,6,0,1,0,0,0,51,0,27,0,0,0,12,0,1,0,0,0,28,0,28,0,29,0,0,0,1,0,41,0,0,0,2,0,42,try,class,clazz,get,unsafe,define,class,org,apache,flink,test,serializable,class,data,0,class,data,length,target,class,loader,new,protection,domain,new,code,source,null,certificate,null,new,permissions,return,clazz,as,subclass,serializable,class,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static void blockForeverNonInterruptibly();1486740511;Permanently blocks the current thread. The thread cannot be woken_up via {@link Thread#interrupt()}.;public static void blockForeverNonInterruptibly() {_		final Object lock = new Object()__		_		while (true) {_			try {_				_				synchronized (lock) {_					lock.wait()__				}_			} catch (InterruptedException ignored) {}_		}_	};permanently,blocks,the,current,thread,the,thread,cannot,be,woken,up,via,link,thread,interrupt;public,static,void,block,forever,non,interruptibly,final,object,lock,new,object,while,true,try,synchronized,lock,lock,wait,catch,interrupted,exception,ignored
CommonTestUtils -> public static void blockForeverNonInterruptibly();1494499551;Permanently blocks the current thread. The thread cannot be woken_up via {@link Thread#interrupt()}.;public static void blockForeverNonInterruptibly() {_		final Object lock = new Object()__		_		while (true) {_			try {_				_				synchronized (lock) {_					lock.wait()__				}_			} catch (InterruptedException ignored) {}_		}_	};permanently,blocks,the,current,thread,the,thread,cannot,be,woken,up,via,link,thread,interrupt;public,static,void,block,forever,non,interruptibly,final,object,lock,new,object,while,true,try,synchronized,lock,lock,wait,catch,interrupted,exception,ignored
CommonTestUtils -> public static void blockForeverNonInterruptibly();1495441965;Permanently blocks the current thread. The thread cannot be woken_up via {@link Thread#interrupt()}.;public static void blockForeverNonInterruptibly() {_		final Object lock = new Object()__		_		while (true) {_			try {_				_				synchronized (lock) {_					lock.wait()__				}_			} catch (InterruptedException ignored) {}_		}_	};permanently,blocks,the,current,thread,the,thread,cannot,be,woken,up,via,link,thread,interrupt;public,static,void,block,forever,non,interruptibly,final,object,lock,new,object,while,true,try,synchronized,lock,lock,wait,catch,interrupted,exception,ignored
CommonTestUtils -> public static void blockForeverNonInterruptibly();1495790937;Permanently blocks the current thread. The thread cannot be woken_up via {@link Thread#interrupt()}.;public static void blockForeverNonInterruptibly() {_		final Object lock = new Object()__		_		while (true) {_			try {_				_				synchronized (lock) {_					lock.wait()__				}_			} catch (InterruptedException ignored) {}_		}_	};permanently,blocks,the,current,thread,the,thread,cannot,be,woken,up,via,link,thread,interrupt;public,static,void,block,forever,non,interruptibly,final,object,lock,new,object,while,true,try,synchronized,lock,lock,wait,catch,interrupted,exception,ignored
CommonTestUtils -> public static void blockForeverNonInterruptibly();1501495929;Permanently blocks the current thread. The thread cannot be woken_up via {@link Thread#interrupt()}.;public static void blockForeverNonInterruptibly() {_		final Object lock = new Object()__		_		while (true) {_			try {_				_				synchronized (lock) {_					lock.wait()__				}_			} catch (InterruptedException ignored) {}_		}_	};permanently,blocks,the,current,thread,the,thread,cannot,be,woken,up,via,link,thread,interrupt;public,static,void,block,forever,non,interruptibly,final,object,lock,new,object,while,true,try,synchronized,lock,lock,wait,catch,interrupted,exception,ignored
CommonTestUtils -> public static void blockForeverNonInterruptibly();1532591535;Permanently blocks the current thread. The thread cannot be woken_up via {@link Thread#interrupt()}.;public static void blockForeverNonInterruptibly() {_		final Object lock = new Object()__		_		while (true) {_			try {_				_				synchronized (lock) {_					lock.wait()__				}_			} catch (InterruptedException ignored) {}_		}_	};permanently,blocks,the,current,thread,the,thread,cannot,be,woken,up,via,link,thread,interrupt;public,static,void,block,forever,non,interruptibly,final,object,lock,new,object,while,true,try,synchronized,lock,lock,wait,catch,interrupted,exception,ignored
CommonTestUtils -> public static void assumeJava8();1474308053;Checks whether this code runs in a Java 8 (Java 1.8) JVM. If not, this throws a_{@link AssumptionViolatedException}, which causes JUnit to skip the test that_called this method.;public static void assumeJava8() {_		try {_			String javaVersionString = System.getProperty("java.runtime.version").substring(0, 3)__			float javaVersion = Float.parseFloat(javaVersionString)__			Assume.assumeTrue(javaVersion >= 1.8f)__		}_		catch (AssumptionViolatedException e) {_			System.out.println("Skipping CassandraConnectorITCase, because the JDK is < Java 8+")__			throw e__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Cannot determine Java version: " + e.getMessage())__		}_	};checks,whether,this,code,runs,in,a,java,8,java,1,8,jvm,if,not,this,throws,a,link,assumption,violated,exception,which,causes,junit,to,skip,the,test,that,called,this,method;public,static,void,assume,java8,try,string,java,version,string,system,get,property,java,runtime,version,substring,0,3,float,java,version,float,parse,float,java,version,string,assume,assume,true,java,version,1,8f,catch,assumption,violated,exception,e,system,out,println,skipping,cassandra,connector,itcase,because,the,jdk,is,java,8,throw,e,catch,exception,e,e,print,stack,trace,fail,cannot,determine,java,version,e,get,message
CommonTestUtils -> public static void assumeJava8();1480980565;Checks whether this code runs in a Java 8 (Java 1.8) JVM. If not, this throws a_{@link AssumptionViolatedException}, which causes JUnit to skip the test that_called this method.;public static void assumeJava8() {_		try {_			String javaVersionString = System.getProperty("java.runtime.version").substring(0, 3)__			float javaVersion = Float.parseFloat(javaVersionString)__			Assume.assumeTrue(javaVersion >= 1.8f)__		}_		catch (AssumptionViolatedException e) {_			System.out.println("Skipping CassandraConnectorITCase, because the JDK is < Java 8+")__			throw e__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Cannot determine Java version: " + e.getMessage())__		}_	};checks,whether,this,code,runs,in,a,java,8,java,1,8,jvm,if,not,this,throws,a,link,assumption,violated,exception,which,causes,junit,to,skip,the,test,that,called,this,method;public,static,void,assume,java8,try,string,java,version,string,system,get,property,java,runtime,version,substring,0,3,float,java,version,float,parse,float,java,version,string,assume,assume,true,java,version,1,8f,catch,assumption,violated,exception,e,system,out,println,skipping,cassandra,connector,itcase,because,the,jdk,is,java,8,throw,e,catch,exception,e,e,print,stack,trace,fail,cannot,determine,java,version,e,get,message
CommonTestUtils -> public static void assumeJava8();1480980597;Checks whether this code runs in a Java 8 (Java 1.8) JVM. If not, this throws a_{@link AssumptionViolatedException}, which causes JUnit to skip the test that_called this method.;public static void assumeJava8() {_		try {_			String javaVersionString = System.getProperty("java.runtime.version").substring(0, 3)__			float javaVersion = Float.parseFloat(javaVersionString)__			Assume.assumeTrue(javaVersion >= 1.8f)__		}_		catch (AssumptionViolatedException e) {_			System.out.println("Skipping CassandraConnectorITCase, because the JDK is < Java 8+")__			throw e__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Cannot determine Java version: " + e.getMessage())__		}_	};checks,whether,this,code,runs,in,a,java,8,java,1,8,jvm,if,not,this,throws,a,link,assumption,violated,exception,which,causes,junit,to,skip,the,test,that,called,this,method;public,static,void,assume,java8,try,string,java,version,string,system,get,property,java,runtime,version,substring,0,3,float,java,version,float,parse,float,java,version,string,assume,assume,true,java,version,1,8f,catch,assumption,violated,exception,e,system,out,println,skipping,cassandra,connector,itcase,because,the,jdk,is,java,8,throw,e,catch,exception,e,e,print,stack,trace,fail,cannot,determine,java,version,e,get,message
CommonTestUtils -> public static void assumeJava8();1486740511;Checks whether this code runs in a Java 8 (Java 1.8) JVM. If not, this throws a_{@link AssumptionViolatedException}, which causes JUnit to skip the test that_called this method.;public static void assumeJava8() {_		try {_			String javaVersionString = System.getProperty("java.runtime.version").substring(0, 3)__			float javaVersion = Float.parseFloat(javaVersionString)__			Assume.assumeTrue(javaVersion >= 1.8f)__		}_		catch (AssumptionViolatedException e) {_			System.out.println("Skipping CassandraConnectorITCase, because the JDK is < Java 8+")__			throw e__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Cannot determine Java version: " + e.getMessage())__		}_	};checks,whether,this,code,runs,in,a,java,8,java,1,8,jvm,if,not,this,throws,a,link,assumption,violated,exception,which,causes,junit,to,skip,the,test,that,called,this,method;public,static,void,assume,java8,try,string,java,version,string,system,get,property,java,runtime,version,substring,0,3,float,java,version,float,parse,float,java,version,string,assume,assume,true,java,version,1,8f,catch,assumption,violated,exception,e,system,out,println,skipping,cassandra,connector,itcase,because,the,jdk,is,java,8,throw,e,catch,exception,e,e,print,stack,trace,fail,cannot,determine,java,version,e,get,message
CommonTestUtils -> public static void assumeJava8();1494499551;Checks whether this code runs in a Java 8 (Java 1.8) JVM. If not, this throws a_{@link AssumptionViolatedException}, which causes JUnit to skip the test that_called this method.;public static void assumeJava8() {_		try {_			String javaVersionString = System.getProperty("java.runtime.version").substring(0, 3)__			float javaVersion = Float.parseFloat(javaVersionString)__			Assume.assumeTrue(javaVersion >= 1.8f)__		}_		catch (AssumptionViolatedException e) {_			System.out.println("Skipping CassandraConnectorITCase, because the JDK is < Java 8+")__			throw e__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Cannot determine Java version: " + e.getMessage())__		}_	};checks,whether,this,code,runs,in,a,java,8,java,1,8,jvm,if,not,this,throws,a,link,assumption,violated,exception,which,causes,junit,to,skip,the,test,that,called,this,method;public,static,void,assume,java8,try,string,java,version,string,system,get,property,java,runtime,version,substring,0,3,float,java,version,float,parse,float,java,version,string,assume,assume,true,java,version,1,8f,catch,assumption,violated,exception,e,system,out,println,skipping,cassandra,connector,itcase,because,the,jdk,is,java,8,throw,e,catch,exception,e,e,print,stack,trace,fail,cannot,determine,java,version,e,get,message
CommonTestUtils -> public static void assumeJava8();1495441965;Checks whether this code runs in a Java 8 (Java 1.8) JVM. If not, this throws a_{@link AssumptionViolatedException}, which causes JUnit to skip the test that_called this method.;public static void assumeJava8() {_		try {_			String javaVersionString = System.getProperty("java.runtime.version").substring(0, 3)__			float javaVersion = Float.parseFloat(javaVersionString)__			Assume.assumeTrue(javaVersion >= 1.8f)__		}_		catch (AssumptionViolatedException e) {_			System.out.println("Skipping CassandraConnectorITCase, because the JDK is < Java 8+")__			throw e__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Cannot determine Java version: " + e.getMessage())__		}_	};checks,whether,this,code,runs,in,a,java,8,java,1,8,jvm,if,not,this,throws,a,link,assumption,violated,exception,which,causes,junit,to,skip,the,test,that,called,this,method;public,static,void,assume,java8,try,string,java,version,string,system,get,property,java,runtime,version,substring,0,3,float,java,version,float,parse,float,java,version,string,assume,assume,true,java,version,1,8f,catch,assumption,violated,exception,e,system,out,println,skipping,cassandra,connector,itcase,because,the,jdk,is,java,8,throw,e,catch,exception,e,e,print,stack,trace,fail,cannot,determine,java,version,e,get,message
CommonTestUtils -> public static void assumeJava8();1495790937;Checks whether this code runs in a Java 8 (Java 1.8) JVM. If not, this throws a_{@link AssumptionViolatedException}, which causes JUnit to skip the test that_called this method.;public static void assumeJava8() {_		try {_			String javaVersionString = System.getProperty("java.runtime.version").substring(0, 3)__			float javaVersion = Float.parseFloat(javaVersionString)__			Assume.assumeTrue(javaVersion >= 1.8f)__		}_		catch (AssumptionViolatedException e) {_			System.out.println("Skipping CassandraConnectorITCase, because the JDK is < Java 8+")__			throw e__		}_		catch (Exception e) {_			e.printStackTrace()__			fail("Cannot determine Java version: " + e.getMessage())__		}_	};checks,whether,this,code,runs,in,a,java,8,java,1,8,jvm,if,not,this,throws,a,link,assumption,violated,exception,which,causes,junit,to,skip,the,test,that,called,this,method;public,static,void,assume,java8,try,string,java,version,string,system,get,property,java,runtime,version,substring,0,3,float,java,version,float,parse,float,java,version,string,assume,assume,true,java,version,1,8f,catch,assumption,violated,exception,e,system,out,println,skipping,cassandra,connector,itcase,because,the,jdk,is,java,8,throw,e,catch,exception,e,e,print,stack,trace,fail,cannot,determine,java,version,e,get,message
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1467726586;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1474308053;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1480980565;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1480980597;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1486740511;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1494499551;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1495441965;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1495790937;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1501495929;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException;1532591535;Creates a copy of an object via Java Serialization.__@param original The original object._@return The copied object.;public static <T extends java.io.Serializable> T createCopySerializable(T original) throws IOException {_		if (original == null) {_			throw new IllegalArgumentException()__		}__		ByteArrayOutputStream baos = new ByteArrayOutputStream()__		ObjectOutputStream oos = new ObjectOutputStream(baos)__		oos.writeObject(original)__		oos.close()__		baos.close()___		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())___		try (ObjectInputStream ois = new ObjectInputStream(bais)) {_			@SuppressWarnings("unchecked")_			T copy = (T) ois.readObject()__			return copy__		}_		catch (ClassNotFoundException e) {_			throw new IOException(e)__		}_	};creates,a,copy,of,an,object,via,java,serialization,param,original,the,original,object,return,the,copied,object;public,static,t,extends,java,io,serializable,t,create,copy,serializable,t,original,throws,ioexception,if,original,null,throw,new,illegal,argument,exception,byte,array,output,stream,baos,new,byte,array,output,stream,object,output,stream,oos,new,object,output,stream,baos,oos,write,object,original,oos,close,baos,close,byte,array,input,stream,bais,new,byte,array,input,stream,baos,to,byte,array,try,object,input,stream,ois,new,object,input,stream,bais,suppress,warnings,unchecked,t,copy,t,ois,read,object,return,copy,catch,class,not,found,exception,e,throw,new,ioexception,e
CommonTestUtils -> public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader);1494499551;Creates a new class that is not part of the classpath that the current JVM uses, and_instantiates it.__<p>This method uses {@link #createClassNotInClassPath(ClassLoader)} to define the new class.__@param targetClassLoader The class loader to attach the class to_@return The object instantiated from the newly defined class.;public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader) {_		try {_			Class<? extends Serializable> clazz = createClassNotInClassPath(targetClassLoader)__			return clazz.newInstance()__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,and,instantiates,it,p,this,method,uses,link,create,class,not,in,class,path,class,loader,to,define,the,new,class,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,object,instantiated,from,the,newly,defined,class;public,static,serializable,create,object,for,class,not,in,class,path,class,loader,target,class,loader,try,class,extends,serializable,clazz,create,class,not,in,class,path,target,class,loader,return,clazz,new,instance,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader);1495441965;Creates a new class that is not part of the classpath that the current JVM uses, and_instantiates it.__<p>This method uses {@link #createClassNotInClassPath(ClassLoader)} to define the new class.__@param targetClassLoader The class loader to attach the class to_@return The object instantiated from the newly defined class.;public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader) {_		try {_			Class<? extends Serializable> clazz = createClassNotInClassPath(targetClassLoader)__			return clazz.newInstance()__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,and,instantiates,it,p,this,method,uses,link,create,class,not,in,class,path,class,loader,to,define,the,new,class,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,object,instantiated,from,the,newly,defined,class;public,static,serializable,create,object,for,class,not,in,class,path,class,loader,target,class,loader,try,class,extends,serializable,clazz,create,class,not,in,class,path,target,class,loader,return,clazz,new,instance,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader);1495790937;Creates a new class that is not part of the classpath that the current JVM uses, and_instantiates it.__<p>This method uses {@link #createClassNotInClassPath(ClassLoader)} to define the new class.__@param targetClassLoader The class loader to attach the class to_@return The object instantiated from the newly defined class.;public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader) {_		try {_			Class<? extends Serializable> clazz = createClassNotInClassPath(targetClassLoader)__			return clazz.newInstance()__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,and,instantiates,it,p,this,method,uses,link,create,class,not,in,class,path,class,loader,to,define,the,new,class,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,object,instantiated,from,the,newly,defined,class;public,static,serializable,create,object,for,class,not,in,class,path,class,loader,target,class,loader,try,class,extends,serializable,clazz,create,class,not,in,class,path,target,class,loader,return,clazz,new,instance,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader);1501495929;Creates a new class that is not part of the classpath that the current JVM uses, and_instantiates it.__<p>This method uses {@link #createClassNotInClassPath(ClassLoader)} to define the new class.__@param targetClassLoader The class loader to attach the class to_@return The object instantiated from the newly defined class.;public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader) {_		try {_			Class<? extends Serializable> clazz = createClassNotInClassPath(targetClassLoader)__			return clazz.newInstance()__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,and,instantiates,it,p,this,method,uses,link,create,class,not,in,class,path,class,loader,to,define,the,new,class,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,object,instantiated,from,the,newly,defined,class;public,static,serializable,create,object,for,class,not,in,class,path,class,loader,target,class,loader,try,class,extends,serializable,clazz,create,class,not,in,class,path,target,class,loader,return,clazz,new,instance,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader);1532591535;Creates a new class that is not part of the classpath that the current JVM uses, and_instantiates it.__<p>This method uses {@link #createClassNotInClassPath(ClassLoader)} to define the new class.__@param targetClassLoader The class loader to attach the class to_@return The object instantiated from the newly defined class.;public static Serializable createObjectForClassNotInClassPath(ClassLoader targetClassLoader) {_		try {_			Class<? extends Serializable> clazz = createClassNotInClassPath(targetClassLoader)__			return clazz.newInstance()__		}_		catch (Exception e) {_			throw new AssertionError("test setup broken", e)__		}_	};creates,a,new,class,that,is,not,part,of,the,classpath,that,the,current,jvm,uses,and,instantiates,it,p,this,method,uses,link,create,class,not,in,class,path,class,loader,to,define,the,new,class,param,target,class,loader,the,class,loader,to,attach,the,class,to,return,the,object,instantiated,from,the,newly,defined,class;public,static,serializable,create,object,for,class,not,in,class,path,class,loader,target,class,loader,try,class,extends,serializable,clazz,create,class,not,in,class,path,target,class,loader,return,clazz,new,instance,catch,exception,e,throw,new,assertion,error,test,setup,broken,e
CommonTestUtils -> public static String getTempDir();1467726586;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1474308053;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1480980565;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1480980597;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1486740511;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1494499551;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1495441965;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1495790937;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static String getTempDir();1501495929;Reads the path to the directory for temporary files from the configuration and returns it.__@return the path to the directory for temporary files;public static String getTempDir() {_		return System.getProperty("java.io.tmpdir")__	};reads,the,path,to,the,directory,for,temporary,files,from,the,configuration,and,returns,it,return,the,path,to,the,directory,for,temporary,files;public,static,string,get,temp,dir,return,system,get,property,java,io,tmpdir
CommonTestUtils -> public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause);1495441965;Checks whether the given throwable contains the given cause as a cause. The cause is not checked_on equality but on type equality.__@param throwable Throwable to check for the cause_@param cause Cause to look for_@return True if the given Throwable contains the given cause (type equality)_ otherwise false;public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause) {_		Throwable current = throwable___		while (current != null) {_			if (cause.isAssignableFrom(current.getClass())) {_				return true__			}__			current = current.getCause()__		}__		return false__	};checks,whether,the,given,throwable,contains,the,given,cause,as,a,cause,the,cause,is,not,checked,on,equality,but,on,type,equality,param,throwable,throwable,to,check,for,the,cause,param,cause,cause,to,look,for,return,true,if,the,given,throwable,contains,the,given,cause,type,equality,otherwise,false;public,static,boolean,contains,cause,throwable,throwable,class,extends,throwable,cause,throwable,current,throwable,while,current,null,if,cause,is,assignable,from,current,get,class,return,true,current,current,get,cause,return,false
CommonTestUtils -> public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause);1495790937;Checks whether the given throwable contains the given cause as a cause. The cause is not checked_on equality but on type equality.__@param throwable Throwable to check for the cause_@param cause Cause to look for_@return True if the given Throwable contains the given cause (type equality)_ otherwise false;public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause) {_		Throwable current = throwable___		while (current != null) {_			if (cause.isAssignableFrom(current.getClass())) {_				return true__			}__			current = current.getCause()__		}__		return false__	};checks,whether,the,given,throwable,contains,the,given,cause,as,a,cause,the,cause,is,not,checked,on,equality,but,on,type,equality,param,throwable,throwable,to,check,for,the,cause,param,cause,cause,to,look,for,return,true,if,the,given,throwable,contains,the,given,cause,type,equality,otherwise,false;public,static,boolean,contains,cause,throwable,throwable,class,extends,throwable,cause,throwable,current,throwable,while,current,null,if,cause,is,assignable,from,current,get,class,return,true,current,current,get,cause,return,false
CommonTestUtils -> public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause);1501495929;Checks whether the given throwable contains the given cause as a cause. The cause is not checked_on equality but on type equality.__@param throwable Throwable to check for the cause_@param cause Cause to look for_@return True if the given Throwable contains the given cause (type equality)_ otherwise false;public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause) {_		Throwable current = throwable___		while (current != null) {_			if (cause.isAssignableFrom(current.getClass())) {_				return true__			}__			current = current.getCause()__		}__		return false__	};checks,whether,the,given,throwable,contains,the,given,cause,as,a,cause,the,cause,is,not,checked,on,equality,but,on,type,equality,param,throwable,throwable,to,check,for,the,cause,param,cause,cause,to,look,for,return,true,if,the,given,throwable,contains,the,given,cause,type,equality,otherwise,false;public,static,boolean,contains,cause,throwable,throwable,class,extends,throwable,cause,throwable,current,throwable,while,current,null,if,cause,is,assignable,from,current,get,class,return,true,current,current,get,cause,return,false
CommonTestUtils -> public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause);1532591535;Checks whether the given throwable contains the given cause as a cause. The cause is not checked_on equality but on type equality.__@param throwable Throwable to check for the cause_@param cause Cause to look for_@return True if the given Throwable contains the given cause (type equality)_ otherwise false;public static boolean containsCause(Throwable throwable, Class<? extends Throwable> cause) {_		Throwable current = throwable___		while (current != null) {_			if (cause.isAssignableFrom(current.getClass())) {_				return true__			}__			current = current.getCause()__		}__		return false__	};checks,whether,the,given,throwable,contains,the,given,cause,as,a,cause,the,cause,is,not,checked,on,equality,but,on,type,equality,param,throwable,throwable,to,check,for,the,cause,param,cause,cause,to,look,for,return,true,if,the,given,throwable,contains,the,given,cause,type,equality,otherwise,false;public,static,boolean,contains,cause,throwable,throwable,class,extends,throwable,cause,throwable,current,throwable,while,current,null,if,cause,is,assignable,from,current,get,class,return,true,current,current,get,cause,return,false
